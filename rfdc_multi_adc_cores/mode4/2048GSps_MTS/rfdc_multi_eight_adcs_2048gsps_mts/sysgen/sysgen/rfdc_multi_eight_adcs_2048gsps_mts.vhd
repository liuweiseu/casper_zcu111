-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/edge_detect
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x41 is
  port (
    in_x0 : in std_logic_vector( 1-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    out_x0 : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x41;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x41 is 
  signal delay_q_net : std_logic_vector( 1-1 downto 0 );
  signal inverter_op_net : std_logic_vector( 1-1 downto 0 );
  signal slice_rst_cntrl_y_net : std_logic_vector( 1-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal edge_op_y_net : std_logic_vector( 1-1 downto 0 );
begin
  out_x0 <= edge_op_y_net;
  slice_rst_cntrl_y_net <= in_x0;
  clk_net <= clk_1;
  ce_net <= ce_1;
  delay : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 1
  )
  port map (
    en => '1',
    rst => '1',
    d => slice_rst_cntrl_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay_q_net
  );
  inverter : entity xil_defaultlib.sysgen_inverter_6233897471 
  port map (
    clr => '0',
    ip => slice_rst_cntrl_y_net,
    clk => clk_net,
    ce => ce_net,
    op => inverter_op_net
  );
  edge_op : entity xil_defaultlib.sysgen_logical_0f1aa1e2d7 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => inverter_op_net,
    d1 => delay_q_net,
    y => edge_op_y_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/gpio_led
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_gpio_led is
  port (
    gpio_out : in std_logic_vector( 1-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    rfdc_multi_eight_adcs_2048gsps_mts_gpio_led_gateway : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_gpio_led;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_gpio_led is 
  signal slice_msb_y_net : std_logic_vector( 1-1 downto 0 );
  signal convert_dout_net : std_logic_vector( 1-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
begin
  slice_msb_y_net <= gpio_out;
  rfdc_multi_eight_adcs_2048gsps_mts_gpio_led_gateway <= convert_dout_net;
  clk_net <= clk_1;
  ce_net <= ce_1;
  convert : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 1,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 1,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 1,
    latency => 1,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => slice_msb_y_net,
    clk => clk_net,
    ce => ce_net,
    dout => convert_dout_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/gpio_led1
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_gpio_led1 is
  port (
    gpio_out : in std_logic_vector( 1-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    rfdc_multi_eight_adcs_2048gsps_mts_gpio_led1_gateway : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_gpio_led1;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_gpio_led1 is 
  signal slice_led_cntrl_y_net : std_logic_vector( 1-1 downto 0 );
  signal convert_dout_net : std_logic_vector( 1-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
begin
  slice_led_cntrl_y_net <= gpio_out;
  rfdc_multi_eight_adcs_2048gsps_mts_gpio_led1_gateway <= convert_dout_net;
  clk_net <= clk_1;
  ce_net <= ce_1;
  convert : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 1,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 1,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 1,
    latency => 1,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => slice_led_cntrl_y_net,
    clk => clk_net,
    ce => ce_net,
    dout => convert_dout_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/led_cntrl
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_led_cntrl is
  port (
    rfdc_multi_eight_adcs_2048gsps_mts_led_cntrl_user_data_out : in std_logic_vector( 32-1 downto 0 );
    in_led_cntrl : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_led_cntrl;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_led_cntrl is 
  signal slice_led_cntrl_y_net : std_logic_vector( 1-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_led_cntrl_user_data_out_net : std_logic_vector( 32-1 downto 0 );
  signal io_delay_q_net : std_logic_vector( 32-1 downto 0 );
begin
  in_led_cntrl <= slice_led_cntrl_y_net;
  rfdc_multi_eight_adcs_2048gsps_mts_led_cntrl_user_data_out_net <= rfdc_multi_eight_adcs_2048gsps_mts_led_cntrl_user_data_out;
  io_delay : entity xil_defaultlib.sysgen_delay_34e314c510 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d => rfdc_multi_eight_adcs_2048gsps_mts_led_cntrl_user_data_out_net,
    q => io_delay_q_net
  );
  slice_led_cntrl : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 0,
    new_msb => 0,
    x_width => 32,
    y_width => 1
  )
  port map (
    x => io_delay_q_net,
    y => slice_led_cntrl_y_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/reg_cntrl
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_reg_cntrl is
  port (
    rfdc_multi_eight_adcs_2048gsps_mts_reg_cntrl_user_data_out : in std_logic_vector( 32-1 downto 0 );
    in_rst_cntrl : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_reg_cntrl;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_reg_cntrl is 
  signal slice_rst_cntrl_y_net : std_logic_vector( 1-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_reg_cntrl_user_data_out_net : std_logic_vector( 32-1 downto 0 );
  signal io_delay_q_net : std_logic_vector( 32-1 downto 0 );
begin
  in_rst_cntrl <= slice_rst_cntrl_y_net;
  rfdc_multi_eight_adcs_2048gsps_mts_reg_cntrl_user_data_out_net <= rfdc_multi_eight_adcs_2048gsps_mts_reg_cntrl_user_data_out;
  io_delay : entity xil_defaultlib.sysgen_delay_34e314c510 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d => rfdc_multi_eight_adcs_2048gsps_mts_reg_cntrl_user_data_out_net,
    q => io_delay_q_net
  );
  slice_rst_cntrl : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 0,
    new_msb => 0,
    x_width => 32,
    y_width => 1
  )
  port map (
    x => io_delay_q_net,
    y => slice_rst_cntrl_y_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/rfdc_V0_4
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4 is
  port (
    rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc0_dout : in std_logic_vector( 128-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc0_sync : in std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc1_dout : in std_logic_vector( 128-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc1_sync : in std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc2_dout : in std_logic_vector( 128-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc2_sync : in std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc3_dout : in std_logic_vector( 128-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc3_sync : in std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc4_dout : in std_logic_vector( 128-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc4_sync : in std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc5_dout : in std_logic_vector( 128-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc5_sync : in std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc6_dout : in std_logic_vector( 128-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc6_sync : in std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc7_dout : in std_logic_vector( 128-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc7_sync : in std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4 is 
  signal rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc0_dout_net : std_logic_vector( 128-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc0_sync_net : std_logic_vector( 1-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc1_dout_net : std_logic_vector( 128-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc1_sync_net : std_logic_vector( 1-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc2_dout_net : std_logic_vector( 128-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc2_sync_net : std_logic_vector( 1-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc3_dout_net : std_logic_vector( 128-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc3_sync_net : std_logic_vector( 1-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc4_dout_net : std_logic_vector( 128-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc4_sync_net : std_logic_vector( 1-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc5_dout_net : std_logic_vector( 128-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc5_sync_net : std_logic_vector( 1-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc6_dout_net : std_logic_vector( 128-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc6_sync_net : std_logic_vector( 1-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc7_dout_net : std_logic_vector( 128-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc7_sync_net : std_logic_vector( 1-1 downto 0 );
begin
  rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc0_dout_net <= rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc0_dout;
  rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc0_sync_net <= rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc0_sync;
  rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc1_dout_net <= rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc1_dout;
  rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc1_sync_net <= rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc1_sync;
  rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc2_dout_net <= rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc2_dout;
  rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc2_sync_net <= rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc2_sync;
  rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc3_dout_net <= rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc3_dout;
  rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc3_sync_net <= rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc3_sync;
  rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc4_dout_net <= rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc4_dout;
  rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc4_sync_net <= rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc4_sync;
  rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc5_dout_net <= rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc5_dout;
  rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc5_sync_net <= rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc5_sync;
  rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc6_dout_net <= rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc6_dout;
  rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc6_sync_net <= rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc6_sync;
  rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc7_dout_net <= rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc7_dout;
  rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc7_sync_net <= rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc7_sync;
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot0_01/buscreate
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_buscreate_x20 is
  port (
    in1 : in std_logic_vector( 16-1 downto 0 );
    in2 : in std_logic_vector( 16-1 downto 0 );
    bus_out : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_buscreate_x20;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_buscreate_x20 is 
  signal concatenate_y_net : std_logic_vector( 32-1 downto 0 );
  signal assert_d0_dout_net : std_logic_vector( 16-1 downto 0 );
  signal assert_d1_dout_net : std_logic_vector( 16-1 downto 0 );
  signal reinterpret1_output_port_net : std_logic_vector( 16-1 downto 0 );
  signal reinterpret2_output_port_net : std_logic_vector( 16-1 downto 0 );
begin
  bus_out <= concatenate_y_net;
  assert_d0_dout_net <= in1;
  assert_d1_dout_net <= in2;
  concatenate : entity xil_defaultlib.sysgen_concat_37649e01d1 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    in0 => reinterpret1_output_port_net,
    in1 => reinterpret2_output_port_net,
    y => concatenate_y_net
  );
  reinterpret1 : entity xil_defaultlib.sysgen_reinterpret_03c8cdbbc1 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => assert_d0_dout_net,
    output_port => reinterpret1_output_port_net
  );
  reinterpret2 : entity xil_defaultlib.sysgen_reinterpret_03c8cdbbc1 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => assert_d1_dout_net,
    output_port => reinterpret2_output_port_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot0_01/ss/add_gen/edge_detect
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x42 is
  port (
    in_x0 : in std_logic_vector( 1-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    out_x0 : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x42;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x42 is 
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal edge_op_y_net : std_logic_vector( 1-1 downto 0 );
  signal slice3_y_net : std_logic_vector( 1-1 downto 0 );
  signal delay_q_net : std_logic_vector( 1-1 downto 0 );
  signal inverter_op_net : std_logic_vector( 1-1 downto 0 );
begin
  out_x0 <= edge_op_y_net;
  slice3_y_net <= in_x0;
  clk_net <= clk_1;
  ce_net <= ce_1;
  delay : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 1
  )
  port map (
    en => '1',
    rst => '1',
    d => slice3_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay_q_net
  );
  inverter : entity xil_defaultlib.sysgen_inverter_6233897471 
  port map (
    clr => '0',
    ip => slice3_y_net,
    clk => clk_net,
    ce => ce_net,
    op => inverter_op_net
  );
  edge_op : entity xil_defaultlib.sysgen_logical_9cc14fefba 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => inverter_op_net,
    d1 => delay_q_net,
    y => edge_op_y_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot0_01/ss/add_gen
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_add_gen_x20 is
  port (
    din : in std_logic_vector( 32-1 downto 0 );
    we : in std_logic_vector( 1-1 downto 0 );
    go : in std_logic_vector( 1-1 downto 0 );
    cont : in std_logic_vector( 1-1 downto 0 );
    init : in std_logic_vector( 1-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    add : out std_logic_vector( 10-1 downto 0 );
    dout : out std_logic_vector( 32-1 downto 0 );
    we_o : out std_logic_vector( 1-1 downto 0 );
    status : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_add_gen_x20;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_add_gen_x20 is 
  signal slice2_y_net : std_logic_vector( 10-1 downto 0 );
  signal delay6_q_net : std_logic_vector( 32-1 downto 0 );
  signal logical6_y_net : std_logic_vector( 1-1 downto 0 );
  signal concat_y_net : std_logic_vector( 32-1 downto 0 );
  signal data_choice_y_net : std_logic_vector( 32-1 downto 0 );
  signal we_choice_y_net : std_logic_vector( 1-1 downto 0 );
  signal register6_q_net : std_logic_vector( 1-1 downto 0 );
  signal never_op_net : std_logic_vector( 1-1 downto 0 );
  signal edge_op_y_net : std_logic_vector( 1-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal edge_op_y_net_x0 : std_logic_vector( 1-1 downto 0 );
  signal slice3_y_net : std_logic_vector( 1-1 downto 0 );
  signal shift_op_net : std_logic_vector( 19-1 downto 0 );
  signal inverter_op_net : std_logic_vector( 1-1 downto 0 );
  signal delay1_q_net : std_logic_vector( 12-1 downto 0 );
  signal convert_dout_net : std_logic_vector( 19-1 downto 0 );
  signal register5_q_net : std_logic_vector( 1-1 downto 0 );
  signal delay_q_net : std_logic_vector( 1-1 downto 0 );
  signal delay4_q_net : std_logic_vector( 1-1 downto 0 );
  signal slice1_y_net : std_logic_vector( 12-1 downto 0 );
  signal delay3_q_net : std_logic_vector( 1-1 downto 0 );
  signal inverter1_op_net : std_logic_vector( 1-1 downto 0 );
  signal logical1_y_net : std_logic_vector( 1-1 downto 0 );
  signal logical4_y_net : std_logic_vector( 1-1 downto 0 );
  signal add_gen_op_net : std_logic_vector( 13-1 downto 0 );
begin
  add <= slice2_y_net;
  dout <= delay6_q_net;
  we_o <= logical6_y_net;
  status <= concat_y_net;
  data_choice_y_net <= din;
  we_choice_y_net <= we;
  register6_q_net <= go;
  never_op_net <= cont;
  edge_op_y_net <= init;
  clk_net <= clk_1;
  ce_net <= ce_1;
  edge_detect : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x42 
  port map (
    in_x0 => slice3_y_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    out_x0 => edge_op_y_net_x0
  );
  concat : entity xil_defaultlib.sysgen_concat_fc8edfac0e 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    in0 => shift_op_net,
    in1 => inverter_op_net,
    in2 => delay1_q_net,
    y => concat_y_net
  );
  convert : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 1,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 19,
    latency => 0,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => register5_q_net,
    clk => clk_net,
    ce => ce_net,
    dout => convert_dout_net
  );
  delay : entity xil_defaultlib.sysgen_delay_e0740ee3f9 
  port map (
    clr => '0',
    d => delay4_q_net,
    clk => clk_net,
    ce => ce_net,
    q => delay_q_net
  );
  delay1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 12
  )
  port map (
    en => '1',
    rst => '1',
    d => slice1_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay1_q_net
  );
  delay3 : entity xil_defaultlib.sysgen_delay_e0740ee3f9 
  port map (
    clr => '0',
    d => never_op_net,
    clk => clk_net,
    ce => ce_net,
    q => delay3_q_net
  );
  delay4 : entity xil_defaultlib.sysgen_delay_e0740ee3f9 
  port map (
    clr => '0',
    d => edge_op_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay4_q_net
  );
  delay6 : entity xil_defaultlib.sysgen_delay_5ec362a23c 
  port map (
    clr => '0',
    d => data_choice_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay6_q_net
  );
  inverter : entity xil_defaultlib.sysgen_inverter_918b6bc6d0 
  port map (
    clr => '0',
    ip => register5_q_net,
    clk => clk_net,
    ce => ce_net,
    op => inverter_op_net
  );
  inverter1 : entity xil_defaultlib.sysgen_inverter_6233897471 
  port map (
    clr => '0',
    ip => edge_op_y_net_x0,
    clk => clk_net,
    ce => ce_net,
    op => inverter1_op_net
  );
  logical1 : entity xil_defaultlib.sysgen_logical_2486129911 
  port map (
    clr => '0',
    d0 => we_choice_y_net,
    d1 => register6_q_net,
    clk => clk_net,
    ce => ce_net,
    y => logical1_y_net
  );
  logical4 : entity xil_defaultlib.sysgen_logical_d7dc12cf31 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => delay3_q_net,
    d1 => inverter1_op_net,
    y => logical4_y_net
  );
  logical6 : entity xil_defaultlib.sysgen_logical_c05fefc67b 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => register5_q_net,
    d1 => logical4_y_net,
    d2 => logical1_y_net,
    y => logical6_y_net
  );
  register5 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlregister 
  generic map (
    d_width => 1,
    init_value => b"1"
  )
  port map (
    d => delay3_q_net,
    rst => delay_q_net,
    en => edge_op_y_net_x0,
    clk => clk_net,
    ce => ce_net,
    q => register5_q_net
  );
  shift : entity xil_defaultlib.sysgen_shift_5af4fe0a99 
  port map (
    clr => '0',
    ip => convert_dout_net,
    clk => clk_net,
    ce => ce_net,
    op => shift_op_net
  );
  add_gen : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlcounter_free 
  generic map (
    core_name0 => "rfdc_multi_eight_adcs_2048gsps_mts_c_counter_binary_v12_0_i1",
    op_arith => xlUnsigned,
    op_width => 13
  )
  port map (
    clr => '0',
    rst => delay4_q_net,
    en => logical6_y_net,
    clk => clk_net,
    ce => ce_net,
    op => add_gen_op_net
  );
  slice1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 0,
    new_msb => 11,
    x_width => 13,
    y_width => 12
  )
  port map (
    x => add_gen_op_net,
    y => slice1_y_net
  );
  slice2 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 2,
    new_msb => 11,
    x_width => 13,
    y_width => 10
  )
  port map (
    x => add_gen_op_net,
    y => slice2_y_net
  );
  slice3 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 12,
    new_msb => 12,
    x_width => 13,
    y_width => 1
  )
  port map (
    x => add_gen_op_net,
    y => slice3_y_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot0_01/ss/basic_ctrl/dram_munge
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_dram_munge_x20 is
  port (
    din : in std_logic_vector( 32-1 downto 0 );
    we : in std_logic_vector( 1-1 downto 0 );
    init : in std_logic_vector( 1-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    dout : out std_logic_vector( 32-1 downto 0 );
    we_o : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_dram_munge_x20;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_dram_munge_x20 is 
  signal mux1_y_net_x0 : std_logic_vector( 1-1 downto 0 );
  signal edge_op_y_net : std_logic_vector( 1-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal data_choice_y_net : std_logic_vector( 32-1 downto 0 );
  signal we_choice_y_net : std_logic_vector( 1-1 downto 0 );
  signal cast_dout_net : std_logic_vector( 32-1 downto 0 );
  signal concat_y_net : std_logic_vector( 80-1 downto 0 );
  signal constant_op_net : std_logic_vector( 8-1 downto 0 );
  signal register_q_net : std_logic_vector( 32-1 downto 0 );
  signal register1_q_net : std_logic_vector( 32-1 downto 0 );
  signal concat1_y_net : std_logic_vector( 80-1 downto 0 );
  signal register2_q_net : std_logic_vector( 32-1 downto 0 );
  signal register3_q_net : std_logic_vector( 32-1 downto 0 );
  signal delay_q_net : std_logic_vector( 1-1 downto 0 );
  signal logical_y_net : std_logic_vector( 1-1 downto 0 );
  signal delay1_q_net : std_logic_vector( 1-1 downto 0 );
  signal logical1_y_net : std_logic_vector( 1-1 downto 0 );
  signal relational3_op_net : std_logic_vector( 1-1 downto 0 );
  signal mux1_y_net : std_logic_vector( 80-1 downto 0 );
  signal dout_count_op_net : std_logic_vector( 1-1 downto 0 );
  signal relational_op_net : std_logic_vector( 1-1 downto 0 );
  signal relational1_op_net : std_logic_vector( 1-1 downto 0 );
  signal relational2_op_net : std_logic_vector( 1-1 downto 0 );
  signal input_count_op_net : std_logic_vector( 2-1 downto 0 );
  signal con0_op_net : std_logic_vector( 2-1 downto 0 );
  signal con1_op_net : std_logic_vector( 2-1 downto 0 );
  signal con2_op_net : std_logic_vector( 2-1 downto 0 );
  signal con3_op_net : std_logic_vector( 2-1 downto 0 );
  signal dram_op_net : std_logic_vector( 1-1 downto 0 );
begin
  dout <= data_choice_y_net;
  we_o <= we_choice_y_net;
  cast_dout_net <= din;
  mux1_y_net_x0 <= we;
  edge_op_y_net <= init;
  clk_net <= clk_1;
  ce_net <= ce_1;
  concat : entity xil_defaultlib.sysgen_concat_e7487baac7 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    in0 => constant_op_net,
    in1 => register_q_net,
    in2 => constant_op_net,
    in3 => register1_q_net,
    y => concat_y_net
  );
  concat1 : entity xil_defaultlib.sysgen_concat_e7487baac7 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    in0 => constant_op_net,
    in1 => register2_q_net,
    in2 => constant_op_net,
    in3 => register3_q_net,
    y => concat1_y_net
  );
  constant_x0 : entity xil_defaultlib.sysgen_constant_869e31f04d 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => constant_op_net
  );
  delay : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 1
  )
  port map (
    en => '1',
    rst => '1',
    d => logical_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay_q_net
  );
  delay1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 1
  )
  port map (
    en => '1',
    rst => '1',
    d => logical1_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay1_q_net
  );
  logical : entity xil_defaultlib.sysgen_logical_2486129911 
  port map (
    clr => '0',
    d0 => relational3_op_net,
    d1 => mux1_y_net_x0,
    clk => clk_net,
    ce => ce_net,
    y => logical_y_net
  );
  logical1 : entity xil_defaultlib.sysgen_logical_d7dc12cf31 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => logical_y_net,
    d1 => delay_q_net,
    y => logical1_y_net
  );
  mux1 : entity xil_defaultlib.sysgen_mux_71ee2b1026 
  port map (
    clr => '0',
    sel => dout_count_op_net,
    d0 => concat_y_net,
    d1 => concat1_y_net,
    clk => clk_net,
    ce => ce_net,
    y => mux1_y_net
  );
  register_x0 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlregister 
  generic map (
    d_width => 32,
    init_value => b"00000000000000000000000000000000"
  )
  port map (
    rst => "0",
    d => cast_dout_net,
    en => relational_op_net,
    clk => clk_net,
    ce => ce_net,
    q => register_q_net
  );
  register1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlregister 
  generic map (
    d_width => 32,
    init_value => b"00000000000000000000000000000000"
  )
  port map (
    rst => "0",
    d => cast_dout_net,
    en => relational1_op_net,
    clk => clk_net,
    ce => ce_net,
    q => register1_q_net
  );
  register2 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlregister 
  generic map (
    d_width => 32,
    init_value => b"00000000000000000000000000000000"
  )
  port map (
    rst => "0",
    d => cast_dout_net,
    en => relational2_op_net,
    clk => clk_net,
    ce => ce_net,
    q => register2_q_net
  );
  register3 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlregister 
  generic map (
    d_width => 32,
    init_value => b"00000000000000000000000000000000"
  )
  port map (
    rst => "0",
    d => cast_dout_net,
    en => relational3_op_net,
    clk => clk_net,
    ce => ce_net,
    q => register3_q_net
  );
  relational : entity xil_defaultlib.sysgen_relational_e5d6b5eaca 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    a => input_count_op_net,
    b => con0_op_net,
    op => relational_op_net
  );
  relational1 : entity xil_defaultlib.sysgen_relational_e5d6b5eaca 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    a => input_count_op_net,
    b => con1_op_net,
    op => relational1_op_net
  );
  relational2 : entity xil_defaultlib.sysgen_relational_e5d6b5eaca 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    a => input_count_op_net,
    b => con2_op_net,
    op => relational2_op_net
  );
  relational3 : entity xil_defaultlib.sysgen_relational_e5d6b5eaca 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    a => input_count_op_net,
    b => con3_op_net,
    op => relational3_op_net
  );
  con0 : entity xil_defaultlib.sysgen_constant_b58c3a1535 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => con0_op_net
  );
  con1 : entity xil_defaultlib.sysgen_constant_d3f27a6354 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => con1_op_net
  );
  con2 : entity xil_defaultlib.sysgen_constant_2fa4689d4e 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => con2_op_net
  );
  con3 : entity xil_defaultlib.sysgen_constant_31bab66ba6 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => con3_op_net
  );
  data_choice : entity xil_defaultlib.sysgen_mux_d624c1af44 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    sel => dram_op_net,
    d0 => cast_dout_net,
    d1 => mux1_y_net,
    y => data_choice_y_net
  );
  dout_count : entity xil_defaultlib.sysgen_counter_a9c1c293c2 
  port map (
    clr => '0',
    rst => edge_op_y_net,
    en => logical1_y_net,
    clk => clk_net,
    ce => ce_net,
    op => dout_count_op_net
  );
  dram : entity xil_defaultlib.sysgen_constant_a7b8778750 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => dram_op_net
  );
  input_count : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlcounter_free 
  generic map (
    core_name0 => "rfdc_multi_eight_adcs_2048gsps_mts_c_counter_binary_v12_0_i2",
    op_arith => xlUnsigned,
    op_width => 2
  )
  port map (
    clr => '0',
    rst => edge_op_y_net,
    en => mux1_y_net_x0,
    clk => clk_net,
    ce => ce_net,
    op => input_count_op_net
  );
  we_choice : entity xil_defaultlib.sysgen_mux_4874190f11 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    sel => dram_op_net,
    d0 => mux1_y_net_x0,
    d1 => delay1_q_net,
    y => we_choice_y_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot0_01/ss/basic_ctrl/edge_detect
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x43 is
  port (
    in_x0 : in std_logic_vector( 1-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    out_x0 : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x43;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x43 is 
  signal edge_op_y_net : std_logic_vector( 1-1 downto 0 );
  signal delay1_q_net : std_logic_vector( 1-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal delay_q_net : std_logic_vector( 1-1 downto 0 );
  signal inverter_op_net : std_logic_vector( 1-1 downto 0 );
begin
  out_x0 <= edge_op_y_net;
  delay1_q_net <= in_x0;
  clk_net <= clk_1;
  ce_net <= ce_1;
  delay : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 1
  )
  port map (
    en => '1',
    rst => '1',
    d => delay1_q_net,
    clk => clk_net,
    ce => ce_net,
    q => delay_q_net
  );
  inverter : entity xil_defaultlib.sysgen_inverter_6233897471 
  port map (
    clr => '0',
    ip => delay1_q_net,
    clk => clk_net,
    ce => ce_net,
    op => inverter_op_net
  );
  edge_op : entity xil_defaultlib.sysgen_logical_0f1aa1e2d7 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => inverter_op_net,
    d1 => delay_q_net,
    y => edge_op_y_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot0_01/ss/basic_ctrl
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_basic_ctrl_x20 is
  port (
    din : in std_logic_vector( 32-1 downto 0 );
    we : in std_logic_vector( 1-1 downto 0 );
    trig : in std_logic_vector( 1-1 downto 0 );
    ctrl : in std_logic_vector( 32-1 downto 0 );
    stopi : in std_logic_vector( 1-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    dout : out std_logic_vector( 32-1 downto 0 );
    we_o : out std_logic_vector( 1-1 downto 0 );
    go : out std_logic_vector( 1-1 downto 0 );
    init : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_basic_ctrl_x20;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_basic_ctrl_x20 is 
  signal enable_y_net : std_logic_vector( 1-1 downto 0 );
  signal delay2_q_net : std_logic_vector( 1-1 downto 0 );
  signal trig_src_y_net : std_logic_vector( 1-1 downto 0 );
  signal data_choice_y_net : std_logic_vector( 32-1 downto 0 );
  signal we_choice_y_net : std_logic_vector( 1-1 downto 0 );
  signal register6_q_net : std_logic_vector( 1-1 downto 0 );
  signal edge_op_y_net_x0 : std_logic_vector( 1-1 downto 0 );
  signal cast_dout_net : std_logic_vector( 32-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc0_sync_net : std_logic_vector( 1-1 downto 0 );
  signal edge_op_y_net : std_logic_vector( 1-1 downto 0 );
  signal concatenate_y_net : std_logic_vector( 32-1 downto 0 );
  signal never_op_net : std_logic_vector( 1-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal mux1_y_net : std_logic_vector( 1-1 downto 0 );
  signal delay1_q_net : std_logic_vector( 1-1 downto 0 );
  signal constant_op_net : std_logic_vector( 1-1 downto 0 );
  signal constant1_op_net : std_logic_vector( 1-1 downto 0 );
  signal constant2_op_net : std_logic_vector( 1-1 downto 0 );
  signal delay3_q_net : std_logic_vector( 1-1 downto 0 );
  signal valid_src_y_net : std_logic_vector( 1-1 downto 0 );
  signal inverter_op_net : std_logic_vector( 1-1 downto 0 );
  signal logical_y_net : std_logic_vector( 1-1 downto 0 );
  signal mux2_y_net : std_logic_vector( 1-1 downto 0 );
  signal register1_q_net : std_logic_vector( 1-1 downto 0 );
begin
  dout <= data_choice_y_net;
  we_o <= we_choice_y_net;
  go <= register6_q_net;
  init <= edge_op_y_net_x0;
  cast_dout_net <= din;
  rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc0_sync_net <= we;
  edge_op_y_net <= trig;
  concatenate_y_net <= ctrl;
  never_op_net <= stopi;
  clk_net <= clk_1;
  ce_net <= ce_1;
  dram_munge : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_dram_munge_x20 
  port map (
    din => cast_dout_net,
    we => mux1_y_net,
    init => edge_op_y_net_x0,
    clk_1 => clk_net,
    ce_1 => ce_net,
    dout => data_choice_y_net,
    we_o => we_choice_y_net
  );
  edge_detect : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x43 
  port map (
    in_x0 => delay1_q_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    out_x0 => edge_op_y_net_x0
  );
  constant_x0 : entity xil_defaultlib.sysgen_constant_c95a0b5efb 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => constant_op_net
  );
  constant1 : entity xil_defaultlib.sysgen_constant_c95a0b5efb 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => constant1_op_net
  );
  constant2 : entity xil_defaultlib.sysgen_constant_c95a0b5efb 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => constant2_op_net
  );
  delay1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 1
  )
  port map (
    en => '1',
    rst => '1',
    d => enable_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay1_q_net
  );
  delay2 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 1
  )
  port map (
    en => '1',
    rst => '1',
    d => trig_src_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay2_q_net
  );
  delay3 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 1
  )
  port map (
    en => '1',
    rst => '1',
    d => valid_src_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay3_q_net
  );
  inverter : entity xil_defaultlib.sysgen_inverter_6233897471 
  port map (
    clr => '0',
    ip => edge_op_y_net_x0,
    clk => clk_net,
    ce => ce_net,
    op => inverter_op_net
  );
  logical : entity xil_defaultlib.sysgen_logical_d26e5cda59 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => mux2_y_net,
    d1 => inverter_op_net,
    y => logical_y_net
  );
  mux1 : entity xil_defaultlib.sysgen_mux_4874190f11 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    sel => delay3_q_net,
    d0 => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc0_sync_net,
    d1 => constant2_op_net,
    y => mux1_y_net
  );
  mux2 : entity xil_defaultlib.sysgen_mux_4874190f11 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    sel => delay2_q_net,
    d0 => edge_op_y_net,
    d1 => constant1_op_net,
    y => mux2_y_net
  );
  register1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlregister 
  generic map (
    d_width => 1,
    init_value => b"0"
  )
  port map (
    d => constant_op_net,
    rst => logical_y_net,
    en => edge_op_y_net_x0,
    clk => clk_net,
    ce => ce_net,
    q => register1_q_net
  );
  register6 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlregister 
  generic map (
    d_width => 1,
    init_value => b"0"
  )
  port map (
    d => mux2_y_net,
    rst => edge_op_y_net_x0,
    en => register1_q_net,
    clk => clk_net,
    ce => ce_net,
    q => register6_q_net
  );
  enable : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 0,
    new_msb => 0,
    x_width => 32,
    y_width => 1
  )
  port map (
    x => concatenate_y_net,
    y => enable_y_net
  );
  trig_src : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 1,
    new_msb => 1,
    x_width => 32,
    y_width => 1
  )
  port map (
    x => concatenate_y_net,
    y => trig_src_y_net
  );
  valid_src : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 2,
    new_msb => 2,
    x_width => 32,
    y_width => 1
  )
  port map (
    x => concatenate_y_net,
    y => valid_src_y_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot0_01/ss/bram/calc_add
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_calc_add_x19 is
  port (
    in_x0 : in std_logic_vector( 10-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    out_x0 : out std_logic_vector( 10-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_calc_add_x19;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_calc_add_x19 is 
  signal mux_y_net : std_logic_vector( 10-1 downto 0 );
  signal add_del_q_net : std_logic_vector( 10-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal add_sub_s_net : std_logic_vector( 1-1 downto 0 );
  signal const_op_net : std_logic_vector( 1-1 downto 0 );
  signal lsw_y_net : std_logic_vector( 1-1 downto 0 );
  signal concat_y_net : std_logic_vector( 10-1 downto 0 );
  signal msw_y_net : std_logic_vector( 9-1 downto 0 );
  signal convert_addr_dout_net : std_logic_vector( 10-1 downto 0 );
  signal manipulate_op_net : std_logic_vector( 1-1 downto 0 );
begin
  out_x0 <= mux_y_net;
  add_del_q_net <= in_x0;
  clk_net <= clk_1;
  ce_net <= ce_1;
  add_sub : entity xil_defaultlib.sysgen_addsub_fd3b6c715c 
  port map (
    clr => '0',
    a => const_op_net,
    b => lsw_y_net,
    clk => clk_net,
    ce => ce_net,
    s => add_sub_s_net
  );
  concat : entity xil_defaultlib.sysgen_concat_f4b90dfa16 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    in0 => msw_y_net,
    in1 => add_sub_s_net,
    y => concat_y_net
  );
  const : entity xil_defaultlib.sysgen_constant_a7b8778750 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => const_op_net
  );
  convert_addr : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 10,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 10,
    latency => 0,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => add_del_q_net,
    clk => clk_net,
    ce => ce_net,
    dout => convert_addr_dout_net
  );
  lsw : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 0,
    new_msb => 0,
    x_width => 10,
    y_width => 1
  )
  port map (
    x => convert_addr_dout_net,
    y => lsw_y_net
  );
  manipulate : entity xil_defaultlib.sysgen_constant_a7b8778750 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => manipulate_op_net
  );
  msw : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 1,
    new_msb => 9,
    x_width => 10,
    y_width => 9
  )
  port map (
    x => convert_addr_dout_net,
    y => msw_y_net
  );
  mux : entity xil_defaultlib.sysgen_mux_4417594854 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    sel => manipulate_op_net,
    d0 => convert_addr_dout_net,
    d1 => concat_y_net,
    y => mux_y_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot0_01/ss/bram/munge_in
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_munge_in_x20 is
  port (
    din : in std_logic_vector( 32-1 downto 0 );
    dout : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_munge_in_x20;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_munge_in_x20 is 
  signal reinterpret_out_output_port_net : std_logic_vector( 32-1 downto 0 );
  signal dat_del_q_net : std_logic_vector( 32-1 downto 0 );
begin
  dout <= reinterpret_out_output_port_net;
  dat_del_q_net <= din;
  reinterpret_out : entity xil_defaultlib.sysgen_reinterpret_52bb84f12b 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => dat_del_q_net,
    output_port => reinterpret_out_output_port_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot0_01/ss/bram
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_bram_x19 is
  port (
    addr : in std_logic_vector( 10-1 downto 0 );
    data_in : in std_logic_vector( 32-1 downto 0 );
    we : in std_logic_vector( 1-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_01_ss_bram_addr : out std_logic_vector( 10-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_01_ss_bram_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_01_ss_bram_we : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_bram_x19;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_bram_x19 is 
  signal add_del_q_net : std_logic_vector( 10-1 downto 0 );
  signal dat_del_q_net : std_logic_vector( 32-1 downto 0 );
  signal we_del_q_net : std_logic_vector( 1-1 downto 0 );
  signal convert_addr_dout_net : std_logic_vector( 10-1 downto 0 );
  signal convert_din1_dout_net : std_logic_vector( 32-1 downto 0 );
  signal convert_we_dout_net : std_logic_vector( 1-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal mux_y_net : std_logic_vector( 10-1 downto 0 );
  signal reinterpret_out_output_port_net : std_logic_vector( 32-1 downto 0 );
begin
  add_del_q_net <= addr;
  dat_del_q_net <= data_in;
  we_del_q_net <= we;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_01_ss_bram_addr <= convert_addr_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_01_ss_bram_data_in <= convert_din1_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_01_ss_bram_we <= convert_we_dout_net;
  clk_net <= clk_1;
  ce_net <= ce_1;
  calc_add : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_calc_add_x19 
  port map (
    in_x0 => add_del_q_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    out_x0 => mux_y_net
  );
  munge_in : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_munge_in_x20 
  port map (
    din => dat_del_q_net,
    dout => reinterpret_out_output_port_net
  );
  convert_addr : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 10,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 10,
    latency => 0,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => mux_y_net,
    clk => clk_net,
    ce => ce_net,
    dout => convert_addr_dout_net
  );
  convert_din1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 32,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 32,
    latency => 0,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => reinterpret_out_output_port_net,
    clk => clk_net,
    ce => ce_net,
    dout => convert_din1_dout_net
  );
  convert_we : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 1,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 1,
    latency => 0,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => we_del_q_net,
    clk => clk_net,
    ce => ce_net,
    dout => convert_we_dout_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot0_01/ss/ctrl
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_ctrl_x19 is
  port (
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_01_ss_ctrl_user_data_out : in std_logic_vector( 32-1 downto 0 );
    in_reg : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_ctrl_x19;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_ctrl_x19 is 
  signal reint1_output_port_net : std_logic_vector( 32-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_01_ss_ctrl_user_data_out_net : std_logic_vector( 32-1 downto 0 );
  signal io_delay_q_net : std_logic_vector( 32-1 downto 0 );
  signal slice_reg_y_net : std_logic_vector( 32-1 downto 0 );
begin
  in_reg <= reint1_output_port_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_01_ss_ctrl_user_data_out_net <= rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_01_ss_ctrl_user_data_out;
  io_delay : entity xil_defaultlib.sysgen_delay_34e314c510 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d => rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_01_ss_ctrl_user_data_out_net,
    q => io_delay_q_net
  );
  slice_reg : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 0,
    new_msb => 31,
    x_width => 32,
    y_width => 32
  )
  port map (
    x => io_delay_q_net,
    y => slice_reg_y_net
  );
  reint1 : entity xil_defaultlib.sysgen_reinterpret_52bb84f12b 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => slice_reg_y_net,
    output_port => reint1_output_port_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot0_01/ss/ctrl_combine
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_ctrl_combine_x19 is
  port (
    in1 : in std_logic_vector( 28-1 downto 0 );
    in2 : in std_logic_vector( 1-1 downto 0 );
    in3 : in std_logic_vector( 2-1 downto 0 );
    in4 : in std_logic_vector( 1-1 downto 0 );
    bus_out : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_ctrl_combine_x19;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_ctrl_combine_x19 is 
  signal concatenate_y_net : std_logic_vector( 32-1 downto 0 );
  signal reinterpret4_output_port_net_x0 : std_logic_vector( 28-1 downto 0 );
  signal circ_or_y_net : std_logic_vector( 1-1 downto 0 );
  signal reinterpret2_output_port_net : std_logic_vector( 2-1 downto 0 );
  signal arm_or_y_net : std_logic_vector( 1-1 downto 0 );
  signal reinterpret1_output_port_net : std_logic_vector( 28-1 downto 0 );
  signal reinterpret2_output_port_net_x0 : std_logic_vector( 1-1 downto 0 );
  signal reinterpret3_output_port_net : std_logic_vector( 2-1 downto 0 );
  signal reinterpret4_output_port_net : std_logic_vector( 1-1 downto 0 );
begin
  bus_out <= concatenate_y_net;
  reinterpret4_output_port_net_x0 <= in1;
  circ_or_y_net <= in2;
  reinterpret2_output_port_net <= in3;
  arm_or_y_net <= in4;
  concatenate : entity xil_defaultlib.sysgen_concat_8611e618a5 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    in0 => reinterpret1_output_port_net,
    in1 => reinterpret2_output_port_net_x0,
    in2 => reinterpret3_output_port_net,
    in3 => reinterpret4_output_port_net,
    y => concatenate_y_net
  );
  reinterpret1 : entity xil_defaultlib.sysgen_reinterpret_f7e0b72e82 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => reinterpret4_output_port_net_x0,
    output_port => reinterpret1_output_port_net
  );
  reinterpret2 : entity xil_defaultlib.sysgen_reinterpret_317b92931a 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => circ_or_y_net,
    output_port => reinterpret2_output_port_net_x0
  );
  reinterpret3 : entity xil_defaultlib.sysgen_reinterpret_5dc9f217bd 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => reinterpret2_output_port_net,
    output_port => reinterpret3_output_port_net
  );
  reinterpret4 : entity xil_defaultlib.sysgen_reinterpret_317b92931a 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => arm_or_y_net,
    output_port => reinterpret4_output_port_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot0_01/ss/ctrl_split
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_ctrl_split_x19 is
  port (
    bus_in : in std_logic_vector( 32-1 downto 0 );
    msb_out4 : out std_logic_vector( 28-1 downto 0 );
    out3 : out std_logic_vector( 1-1 downto 0 );
    out2 : out std_logic_vector( 2-1 downto 0 );
    lsb_out1 : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_ctrl_split_x19;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_ctrl_split_x19 is 
  signal reinterpret4_output_port_net : std_logic_vector( 28-1 downto 0 );
  signal slice3_y_net : std_logic_vector( 1-1 downto 0 );
  signal reinterpret2_output_port_net : std_logic_vector( 2-1 downto 0 );
  signal slice1_y_net : std_logic_vector( 1-1 downto 0 );
  signal reint1_output_port_net : std_logic_vector( 32-1 downto 0 );
  signal slice2_y_net : std_logic_vector( 2-1 downto 0 );
  signal slice4_y_net : std_logic_vector( 28-1 downto 0 );
begin
  msb_out4 <= reinterpret4_output_port_net;
  out3 <= slice3_y_net;
  out2 <= reinterpret2_output_port_net;
  lsb_out1 <= slice1_y_net;
  reint1_output_port_net <= bus_in;
  reinterpret2 : entity xil_defaultlib.sysgen_reinterpret_5dc9f217bd 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => slice2_y_net,
    output_port => reinterpret2_output_port_net
  );
  reinterpret4 : entity xil_defaultlib.sysgen_reinterpret_f7e0b72e82 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => slice4_y_net,
    output_port => reinterpret4_output_port_net
  );
  slice1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 0,
    new_msb => 0,
    x_width => 32,
    y_width => 1
  )
  port map (
    x => reint1_output_port_net,
    y => slice1_y_net
  );
  slice2 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 1,
    new_msb => 2,
    x_width => 32,
    y_width => 2
  )
  port map (
    x => reint1_output_port_net,
    y => slice2_y_net
  );
  slice3 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 3,
    new_msb => 3,
    x_width => 32,
    y_width => 1
  )
  port map (
    x => reint1_output_port_net,
    y => slice3_y_net
  );
  slice4 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 4,
    new_msb => 31,
    x_width => 32,
    y_width => 28
  )
  port map (
    x => reint1_output_port_net,
    y => slice4_y_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot0_01/ss/status
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_status_x19 is
  port (
    out_reg : in std_logic_vector( 32-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_01_ss_status_user_data_in : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_status_x19;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_status_x19 is 
  signal concat_y_net : std_logic_vector( 32-1 downto 0 );
  signal cast_gw_dout_net : std_logic_vector( 32-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal io_delay_q_net : std_logic_vector( 32-1 downto 0 );
  signal reint1_output_port_net : std_logic_vector( 32-1 downto 0 );
  signal assert_reg_dout_net : std_logic_vector( 32-1 downto 0 );
begin
  concat_y_net <= out_reg;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_01_ss_status_user_data_in <= cast_gw_dout_net;
  clk_net <= clk_1;
  ce_net <= ce_1;
  io_delay : entity xil_defaultlib.sysgen_delay_34e314c510 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d => reint1_output_port_net,
    q => io_delay_q_net
  );
  cast_gw : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 32,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 32,
    latency => 1,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => io_delay_q_net,
    clk => clk_net,
    ce => ce_net,
    dout => cast_gw_dout_net
  );
  assert_reg : entity xil_defaultlib.xlpassthrough 
  generic map (
    din_width => 32,
    dout_width => 32
  )
  port map (
    din => concat_y_net,
    dout => assert_reg_dout_net
  );
  reint1 : entity xil_defaultlib.sysgen_reinterpret_52bb84f12b 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => assert_reg_dout_net,
    output_port => reint1_output_port_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot0_01/ss
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_ss_x20 is
  port (
    din : in std_logic_vector( 32-1 downto 0 );
    we : in std_logic_vector( 1-1 downto 0 );
    trig : in std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_01_ss_ctrl_user_data_out : in std_logic_vector( 32-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    arm_out : out std_logic_vector( 1-1 downto 0 );
    goto_116627366_we1 : out std_logic_vector( 1-1 downto 0 );
    goto_116627366_we4 : out std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_01_ss_bram_addr : out std_logic_vector( 10-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_01_ss_bram_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_01_ss_bram_we : out std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_01_ss_status_user_data_in : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_ss_x20;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_ss_x20 is 
  signal arm_or_y_net : std_logic_vector( 1-1 downto 0 );
  signal concatenate_y_net : std_logic_vector( 32-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc0_sync_net : std_logic_vector( 1-1 downto 0 );
  signal edge_op_y_net_x0 : std_logic_vector( 1-1 downto 0 );
  signal we_choice_y_net : std_logic_vector( 1-1 downto 0 );
  signal logical6_y_net : std_logic_vector( 1-1 downto 0 );
  signal convert_addr_dout_net : std_logic_vector( 10-1 downto 0 );
  signal convert_din1_dout_net : std_logic_vector( 32-1 downto 0 );
  signal convert_we_dout_net : std_logic_vector( 1-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_01_ss_ctrl_user_data_out_net : std_logic_vector( 32-1 downto 0 );
  signal cast_gw_dout_net : std_logic_vector( 32-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal slice2_y_net : std_logic_vector( 10-1 downto 0 );
  signal delay6_q_net : std_logic_vector( 32-1 downto 0 );
  signal concat_y_net : std_logic_vector( 32-1 downto 0 );
  signal data_choice_y_net : std_logic_vector( 32-1 downto 0 );
  signal register6_q_net : std_logic_vector( 1-1 downto 0 );
  signal never_op_net : std_logic_vector( 1-1 downto 0 );
  signal edge_op_y_net_x1 : std_logic_vector( 1-1 downto 0 );
  signal cast_dout_net : std_logic_vector( 32-1 downto 0 );
  signal concatenate_y_net_x0 : std_logic_vector( 32-1 downto 0 );
  signal add_del_q_net : std_logic_vector( 10-1 downto 0 );
  signal dat_del_q_net : std_logic_vector( 32-1 downto 0 );
  signal we_del_q_net : std_logic_vector( 1-1 downto 0 );
  signal reint1_output_port_net : std_logic_vector( 32-1 downto 0 );
  signal reinterpret4_output_port_net : std_logic_vector( 28-1 downto 0 );
  signal circ_or_y_net : std_logic_vector( 1-1 downto 0 );
  signal reinterpret2_output_port_net : std_logic_vector( 2-1 downto 0 );
  signal slice3_y_net : std_logic_vector( 1-1 downto 0 );
  signal slice1_y_net : std_logic_vector( 1-1 downto 0 );
  signal arm_op_net : std_logic_vector( 1-1 downto 0 );
  signal ri_output_port_net : std_logic_vector( 32-1 downto 0 );
  signal circ_op_net : std_logic_vector( 1-1 downto 0 );
begin
  arm_out <= arm_or_y_net;
  concatenate_y_net <= din;
  rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc0_sync_net <= we;
  edge_op_y_net_x0 <= trig;
  goto_116627366_we1 <= we_choice_y_net;
  goto_116627366_we4 <= logical6_y_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_01_ss_bram_addr <= convert_addr_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_01_ss_bram_data_in <= convert_din1_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_01_ss_bram_we <= convert_we_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_01_ss_ctrl_user_data_out_net <= rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_01_ss_ctrl_user_data_out;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_01_ss_status_user_data_in <= cast_gw_dout_net;
  clk_net <= clk_1;
  ce_net <= ce_1;
  add_gen : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_add_gen_x20 
  port map (
    din => data_choice_y_net,
    we => we_choice_y_net,
    go => register6_q_net,
    cont => never_op_net,
    init => edge_op_y_net_x1,
    clk_1 => clk_net,
    ce_1 => ce_net,
    add => slice2_y_net,
    dout => delay6_q_net,
    we_o => logical6_y_net,
    status => concat_y_net
  );
  basic_ctrl : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_basic_ctrl_x20 
  port map (
    din => cast_dout_net,
    we => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc0_sync_net,
    trig => edge_op_y_net_x0,
    ctrl => concatenate_y_net_x0,
    stopi => never_op_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    dout => data_choice_y_net,
    we_o => we_choice_y_net,
    go => register6_q_net,
    init => edge_op_y_net_x1
  );
  bram : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_bram_x19 
  port map (
    addr => add_del_q_net,
    data_in => dat_del_q_net,
    we => we_del_q_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_01_ss_bram_addr => convert_addr_dout_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_01_ss_bram_data_in => convert_din1_dout_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_01_ss_bram_we => convert_we_dout_net
  );
  ctrl : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_ctrl_x19 
  port map (
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_01_ss_ctrl_user_data_out => rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_01_ss_ctrl_user_data_out_net,
    in_reg => reint1_output_port_net
  );
  ctrl_combine : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_ctrl_combine_x19 
  port map (
    in1 => reinterpret4_output_port_net,
    in2 => circ_or_y_net,
    in3 => reinterpret2_output_port_net,
    in4 => arm_or_y_net,
    bus_out => concatenate_y_net_x0
  );
  ctrl_split : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_ctrl_split_x19 
  port map (
    bus_in => reint1_output_port_net,
    msb_out4 => reinterpret4_output_port_net,
    out3 => slice3_y_net,
    out2 => reinterpret2_output_port_net,
    lsb_out1 => slice1_y_net
  );
  status : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_status_x19 
  port map (
    out_reg => concat_y_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_01_ss_status_user_data_in => cast_gw_dout_net
  );
  add_del : entity xil_defaultlib.sysgen_delay_4e9264ffdf 
  port map (
    clr => '0',
    d => slice2_y_net,
    clk => clk_net,
    ce => ce_net,
    q => add_del_q_net
  );
  arm : entity xil_defaultlib.sysgen_constant_a7b8778750 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => arm_op_net
  );
  arm_or : entity xil_defaultlib.sysgen_logical_d7dc12cf31 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => slice1_y_net,
    d1 => arm_op_net,
    y => arm_or_y_net
  );
  cast : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 32,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 32,
    latency => 0,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => ri_output_port_net,
    clk => clk_net,
    ce => ce_net,
    dout => cast_dout_net
  );
  circ : entity xil_defaultlib.sysgen_constant_a7b8778750 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => circ_op_net
  );
  circ_or : entity xil_defaultlib.sysgen_logical_d7dc12cf31 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => slice3_y_net,
    d1 => circ_op_net,
    y => circ_or_y_net
  );
  dat_del : entity xil_defaultlib.sysgen_delay_5ec362a23c 
  port map (
    clr => '0',
    d => delay6_q_net,
    clk => clk_net,
    ce => ce_net,
    q => dat_del_q_net
  );
  never : entity xil_defaultlib.sysgen_constant_a7b8778750 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => never_op_net
  );
  ri : entity xil_defaultlib.sysgen_reinterpret_52bb84f12b 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => concatenate_y_net,
    output_port => ri_output_port_net
  );
  we_del : entity xil_defaultlib.sysgen_delay_e0740ee3f9 
  port map (
    clr => '0',
    d => logical6_y_net,
    clk => clk_net,
    ce => ce_net,
    q => we_del_q_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot0_01
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_01 is
  port (
    in_d0 : in std_logic_vector( 16-1 downto 0 );
    in_d1 : in std_logic_vector( 16-1 downto 0 );
    we : in std_logic_vector( 1-1 downto 0 );
    trig : in std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_01_ss_ctrl_user_data_out : in std_logic_vector( 32-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    arm_out : out std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_01_ss_bram_addr : out std_logic_vector( 10-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_01_ss_bram_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_01_ss_bram_we : out std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_01_ss_status_user_data_in : out std_logic_vector( 32-1 downto 0 );
    goto_116627366_we1 : out std_logic_vector( 1-1 downto 0 );
    goto_116627366_we4 : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_01;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_01 is 
  signal arm_or_y_net : std_logic_vector( 1-1 downto 0 );
  signal slice_y_net : std_logic_vector( 16-1 downto 0 );
  signal slice7_y_net : std_logic_vector( 16-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc0_sync_net : std_logic_vector( 1-1 downto 0 );
  signal edge_op_y_net : std_logic_vector( 1-1 downto 0 );
  signal convert_addr_dout_net : std_logic_vector( 10-1 downto 0 );
  signal convert_din1_dout_net : std_logic_vector( 32-1 downto 0 );
  signal convert_we_dout_net : std_logic_vector( 1-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_01_ss_ctrl_user_data_out_net : std_logic_vector( 32-1 downto 0 );
  signal cast_gw_dout_net : std_logic_vector( 32-1 downto 0 );
  signal we_choice_y_net : std_logic_vector( 1-1 downto 0 );
  signal logical6_y_net : std_logic_vector( 1-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal concatenate_y_net : std_logic_vector( 32-1 downto 0 );
  signal assert_d0_dout_net : std_logic_vector( 16-1 downto 0 );
  signal assert_d1_dout_net : std_logic_vector( 16-1 downto 0 );
begin
  arm_out <= arm_or_y_net;
  slice_y_net <= in_d0;
  slice7_y_net <= in_d1;
  rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc0_sync_net <= we;
  edge_op_y_net <= trig;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_01_ss_bram_addr <= convert_addr_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_01_ss_bram_data_in <= convert_din1_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_01_ss_bram_we <= convert_we_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_01_ss_ctrl_user_data_out_net <= rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_01_ss_ctrl_user_data_out;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_01_ss_status_user_data_in <= cast_gw_dout_net;
  goto_116627366_we1 <= we_choice_y_net;
  goto_116627366_we4 <= logical6_y_net;
  clk_net <= clk_1;
  ce_net <= ce_1;
  buscreate : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_buscreate_x20 
  port map (
    in1 => assert_d0_dout_net,
    in2 => assert_d1_dout_net,
    bus_out => concatenate_y_net
  );
  ss : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_ss_x20 
  port map (
    din => concatenate_y_net,
    we => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc0_sync_net,
    trig => edge_op_y_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_01_ss_ctrl_user_data_out => rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_01_ss_ctrl_user_data_out_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    arm_out => arm_or_y_net,
    goto_116627366_we1 => we_choice_y_net,
    goto_116627366_we4 => logical6_y_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_01_ss_bram_addr => convert_addr_dout_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_01_ss_bram_data_in => convert_din1_dout_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_01_ss_bram_we => convert_we_dout_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_01_ss_status_user_data_in => cast_gw_dout_net
  );
  assert_d0 : entity xil_defaultlib.xlpassthrough 
  generic map (
    din_width => 16,
    dout_width => 16
  )
  port map (
    din => slice_y_net,
    dout => assert_d0_dout_net
  );
  assert_d1 : entity xil_defaultlib.xlpassthrough 
  generic map (
    din_width => 16,
    dout_width => 16
  )
  port map (
    din => slice7_y_net,
    dout => assert_d1_dout_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot0_23/buscreate
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_buscreate_x19 is
  port (
    in1 : in std_logic_vector( 16-1 downto 0 );
    in2 : in std_logic_vector( 16-1 downto 0 );
    bus_out : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_buscreate_x19;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_buscreate_x19 is 
  signal concatenate_y_net : std_logic_vector( 32-1 downto 0 );
  signal assert_d0_dout_net : std_logic_vector( 16-1 downto 0 );
  signal assert_d1_dout_net : std_logic_vector( 16-1 downto 0 );
  signal reinterpret1_output_port_net : std_logic_vector( 16-1 downto 0 );
  signal reinterpret2_output_port_net : std_logic_vector( 16-1 downto 0 );
begin
  bus_out <= concatenate_y_net;
  assert_d0_dout_net <= in1;
  assert_d1_dout_net <= in2;
  concatenate : entity xil_defaultlib.sysgen_concat_37649e01d1 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    in0 => reinterpret1_output_port_net,
    in1 => reinterpret2_output_port_net,
    y => concatenate_y_net
  );
  reinterpret1 : entity xil_defaultlib.sysgen_reinterpret_03c8cdbbc1 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => assert_d0_dout_net,
    output_port => reinterpret1_output_port_net
  );
  reinterpret2 : entity xil_defaultlib.sysgen_reinterpret_03c8cdbbc1 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => assert_d1_dout_net,
    output_port => reinterpret2_output_port_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot0_23/ss/add_gen/edge_detect
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x39 is
  port (
    in_x0 : in std_logic_vector( 1-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    out_x0 : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x39;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x39 is 
  signal edge_op_y_net : std_logic_vector( 1-1 downto 0 );
  signal slice3_y_net : std_logic_vector( 1-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal delay_q_net : std_logic_vector( 1-1 downto 0 );
  signal inverter_op_net : std_logic_vector( 1-1 downto 0 );
begin
  out_x0 <= edge_op_y_net;
  slice3_y_net <= in_x0;
  clk_net <= clk_1;
  ce_net <= ce_1;
  delay : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 1
  )
  port map (
    en => '1',
    rst => '1',
    d => slice3_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay_q_net
  );
  inverter : entity xil_defaultlib.sysgen_inverter_6233897471 
  port map (
    clr => '0',
    ip => slice3_y_net,
    clk => clk_net,
    ce => ce_net,
    op => inverter_op_net
  );
  edge_op : entity xil_defaultlib.sysgen_logical_9cc14fefba 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => inverter_op_net,
    d1 => delay_q_net,
    y => edge_op_y_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot0_23/ss/add_gen
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_add_gen_x19 is
  port (
    din : in std_logic_vector( 32-1 downto 0 );
    we : in std_logic_vector( 1-1 downto 0 );
    go : in std_logic_vector( 1-1 downto 0 );
    cont : in std_logic_vector( 1-1 downto 0 );
    init : in std_logic_vector( 1-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    add : out std_logic_vector( 10-1 downto 0 );
    dout : out std_logic_vector( 32-1 downto 0 );
    we_o : out std_logic_vector( 1-1 downto 0 );
    status : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_add_gen_x19;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_add_gen_x19 is 
  signal slice1_y_net : std_logic_vector( 12-1 downto 0 );
  signal delay3_q_net : std_logic_vector( 1-1 downto 0 );
  signal slice2_y_net : std_logic_vector( 10-1 downto 0 );
  signal delay6_q_net : std_logic_vector( 32-1 downto 0 );
  signal logical6_y_net : std_logic_vector( 1-1 downto 0 );
  signal concat_y_net : std_logic_vector( 32-1 downto 0 );
  signal data_choice_y_net : std_logic_vector( 32-1 downto 0 );
  signal we_choice_y_net : std_logic_vector( 1-1 downto 0 );
  signal register6_q_net : std_logic_vector( 1-1 downto 0 );
  signal never_op_net : std_logic_vector( 1-1 downto 0 );
  signal edge_op_y_net : std_logic_vector( 1-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal edge_op_y_net_x0 : std_logic_vector( 1-1 downto 0 );
  signal slice3_y_net : std_logic_vector( 1-1 downto 0 );
  signal shift_op_net : std_logic_vector( 19-1 downto 0 );
  signal inverter_op_net : std_logic_vector( 1-1 downto 0 );
  signal delay1_q_net : std_logic_vector( 12-1 downto 0 );
  signal convert_dout_net : std_logic_vector( 19-1 downto 0 );
  signal register5_q_net : std_logic_vector( 1-1 downto 0 );
  signal delay_q_net : std_logic_vector( 1-1 downto 0 );
  signal delay4_q_net : std_logic_vector( 1-1 downto 0 );
  signal inverter1_op_net : std_logic_vector( 1-1 downto 0 );
  signal logical1_y_net : std_logic_vector( 1-1 downto 0 );
  signal logical4_y_net : std_logic_vector( 1-1 downto 0 );
  signal add_gen_op_net : std_logic_vector( 13-1 downto 0 );
begin
  add <= slice2_y_net;
  dout <= delay6_q_net;
  we_o <= logical6_y_net;
  status <= concat_y_net;
  data_choice_y_net <= din;
  we_choice_y_net <= we;
  register6_q_net <= go;
  never_op_net <= cont;
  edge_op_y_net <= init;
  clk_net <= clk_1;
  ce_net <= ce_1;
  edge_detect : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x39 
  port map (
    in_x0 => slice3_y_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    out_x0 => edge_op_y_net_x0
  );
  concat : entity xil_defaultlib.sysgen_concat_fc8edfac0e 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    in0 => shift_op_net,
    in1 => inverter_op_net,
    in2 => delay1_q_net,
    y => concat_y_net
  );
  convert : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 1,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 19,
    latency => 0,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => register5_q_net,
    clk => clk_net,
    ce => ce_net,
    dout => convert_dout_net
  );
  delay : entity xil_defaultlib.sysgen_delay_e0740ee3f9 
  port map (
    clr => '0',
    d => delay4_q_net,
    clk => clk_net,
    ce => ce_net,
    q => delay_q_net
  );
  delay1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 12
  )
  port map (
    en => '1',
    rst => '1',
    d => slice1_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay1_q_net
  );
  delay3 : entity xil_defaultlib.sysgen_delay_e0740ee3f9 
  port map (
    clr => '0',
    d => never_op_net,
    clk => clk_net,
    ce => ce_net,
    q => delay3_q_net
  );
  delay4 : entity xil_defaultlib.sysgen_delay_e0740ee3f9 
  port map (
    clr => '0',
    d => edge_op_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay4_q_net
  );
  delay6 : entity xil_defaultlib.sysgen_delay_5ec362a23c 
  port map (
    clr => '0',
    d => data_choice_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay6_q_net
  );
  inverter : entity xil_defaultlib.sysgen_inverter_918b6bc6d0 
  port map (
    clr => '0',
    ip => register5_q_net,
    clk => clk_net,
    ce => ce_net,
    op => inverter_op_net
  );
  inverter1 : entity xil_defaultlib.sysgen_inverter_6233897471 
  port map (
    clr => '0',
    ip => edge_op_y_net_x0,
    clk => clk_net,
    ce => ce_net,
    op => inverter1_op_net
  );
  logical1 : entity xil_defaultlib.sysgen_logical_2486129911 
  port map (
    clr => '0',
    d0 => we_choice_y_net,
    d1 => register6_q_net,
    clk => clk_net,
    ce => ce_net,
    y => logical1_y_net
  );
  logical4 : entity xil_defaultlib.sysgen_logical_d7dc12cf31 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => delay3_q_net,
    d1 => inverter1_op_net,
    y => logical4_y_net
  );
  logical6 : entity xil_defaultlib.sysgen_logical_c05fefc67b 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => register5_q_net,
    d1 => logical4_y_net,
    d2 => logical1_y_net,
    y => logical6_y_net
  );
  register5 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlregister 
  generic map (
    d_width => 1,
    init_value => b"1"
  )
  port map (
    d => delay3_q_net,
    rst => delay_q_net,
    en => edge_op_y_net_x0,
    clk => clk_net,
    ce => ce_net,
    q => register5_q_net
  );
  shift : entity xil_defaultlib.sysgen_shift_5af4fe0a99 
  port map (
    clr => '0',
    ip => convert_dout_net,
    clk => clk_net,
    ce => ce_net,
    op => shift_op_net
  );
  add_gen : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlcounter_free 
  generic map (
    core_name0 => "rfdc_multi_eight_adcs_2048gsps_mts_c_counter_binary_v12_0_i1",
    op_arith => xlUnsigned,
    op_width => 13
  )
  port map (
    clr => '0',
    rst => delay4_q_net,
    en => logical6_y_net,
    clk => clk_net,
    ce => ce_net,
    op => add_gen_op_net
  );
  slice1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 0,
    new_msb => 11,
    x_width => 13,
    y_width => 12
  )
  port map (
    x => add_gen_op_net,
    y => slice1_y_net
  );
  slice2 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 2,
    new_msb => 11,
    x_width => 13,
    y_width => 10
  )
  port map (
    x => add_gen_op_net,
    y => slice2_y_net
  );
  slice3 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 12,
    new_msb => 12,
    x_width => 13,
    y_width => 1
  )
  port map (
    x => add_gen_op_net,
    y => slice3_y_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot0_23/ss/basic_ctrl/dram_munge
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_dram_munge_x19 is
  port (
    din : in std_logic_vector( 32-1 downto 0 );
    we : in std_logic_vector( 1-1 downto 0 );
    init : in std_logic_vector( 1-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    dout : out std_logic_vector( 32-1 downto 0 );
    we_o : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_dram_munge_x19;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_dram_munge_x19 is 
  signal delay1_q_net : std_logic_vector( 1-1 downto 0 );
  signal logical1_y_net : std_logic_vector( 1-1 downto 0 );
  signal relational3_op_net : std_logic_vector( 1-1 downto 0 );
  signal mux1_y_net : std_logic_vector( 80-1 downto 0 );
  signal dout_count_op_net : std_logic_vector( 1-1 downto 0 );
  signal relational_op_net : std_logic_vector( 1-1 downto 0 );
  signal relational1_op_net : std_logic_vector( 1-1 downto 0 );
  signal data_choice_y_net : std_logic_vector( 32-1 downto 0 );
  signal we_choice_y_net : std_logic_vector( 1-1 downto 0 );
  signal cast_dout_net : std_logic_vector( 32-1 downto 0 );
  signal mux1_y_net_x0 : std_logic_vector( 1-1 downto 0 );
  signal edge_op_y_net : std_logic_vector( 1-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal concat_y_net : std_logic_vector( 80-1 downto 0 );
  signal constant_op_net : std_logic_vector( 8-1 downto 0 );
  signal register_q_net : std_logic_vector( 32-1 downto 0 );
  signal register1_q_net : std_logic_vector( 32-1 downto 0 );
  signal concat1_y_net : std_logic_vector( 80-1 downto 0 );
  signal register2_q_net : std_logic_vector( 32-1 downto 0 );
  signal register3_q_net : std_logic_vector( 32-1 downto 0 );
  signal delay_q_net : std_logic_vector( 1-1 downto 0 );
  signal logical_y_net : std_logic_vector( 1-1 downto 0 );
  signal relational2_op_net : std_logic_vector( 1-1 downto 0 );
  signal input_count_op_net : std_logic_vector( 2-1 downto 0 );
  signal con0_op_net : std_logic_vector( 2-1 downto 0 );
  signal con1_op_net : std_logic_vector( 2-1 downto 0 );
  signal con2_op_net : std_logic_vector( 2-1 downto 0 );
  signal con3_op_net : std_logic_vector( 2-1 downto 0 );
  signal dram_op_net : std_logic_vector( 1-1 downto 0 );
begin
  dout <= data_choice_y_net;
  we_o <= we_choice_y_net;
  cast_dout_net <= din;
  mux1_y_net_x0 <= we;
  edge_op_y_net <= init;
  clk_net <= clk_1;
  ce_net <= ce_1;
  concat : entity xil_defaultlib.sysgen_concat_e7487baac7 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    in0 => constant_op_net,
    in1 => register_q_net,
    in2 => constant_op_net,
    in3 => register1_q_net,
    y => concat_y_net
  );
  concat1 : entity xil_defaultlib.sysgen_concat_e7487baac7 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    in0 => constant_op_net,
    in1 => register2_q_net,
    in2 => constant_op_net,
    in3 => register3_q_net,
    y => concat1_y_net
  );
  constant_x0 : entity xil_defaultlib.sysgen_constant_869e31f04d 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => constant_op_net
  );
  delay : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 1
  )
  port map (
    en => '1',
    rst => '1',
    d => logical_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay_q_net
  );
  delay1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 1
  )
  port map (
    en => '1',
    rst => '1',
    d => logical1_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay1_q_net
  );
  logical : entity xil_defaultlib.sysgen_logical_2486129911 
  port map (
    clr => '0',
    d0 => relational3_op_net,
    d1 => mux1_y_net_x0,
    clk => clk_net,
    ce => ce_net,
    y => logical_y_net
  );
  logical1 : entity xil_defaultlib.sysgen_logical_d7dc12cf31 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => logical_y_net,
    d1 => delay_q_net,
    y => logical1_y_net
  );
  mux1 : entity xil_defaultlib.sysgen_mux_71ee2b1026 
  port map (
    clr => '0',
    sel => dout_count_op_net,
    d0 => concat_y_net,
    d1 => concat1_y_net,
    clk => clk_net,
    ce => ce_net,
    y => mux1_y_net
  );
  register_x0 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlregister 
  generic map (
    d_width => 32,
    init_value => b"00000000000000000000000000000000"
  )
  port map (
    rst => "0",
    d => cast_dout_net,
    en => relational_op_net,
    clk => clk_net,
    ce => ce_net,
    q => register_q_net
  );
  register1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlregister 
  generic map (
    d_width => 32,
    init_value => b"00000000000000000000000000000000"
  )
  port map (
    rst => "0",
    d => cast_dout_net,
    en => relational1_op_net,
    clk => clk_net,
    ce => ce_net,
    q => register1_q_net
  );
  register2 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlregister 
  generic map (
    d_width => 32,
    init_value => b"00000000000000000000000000000000"
  )
  port map (
    rst => "0",
    d => cast_dout_net,
    en => relational2_op_net,
    clk => clk_net,
    ce => ce_net,
    q => register2_q_net
  );
  register3 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlregister 
  generic map (
    d_width => 32,
    init_value => b"00000000000000000000000000000000"
  )
  port map (
    rst => "0",
    d => cast_dout_net,
    en => relational3_op_net,
    clk => clk_net,
    ce => ce_net,
    q => register3_q_net
  );
  relational : entity xil_defaultlib.sysgen_relational_e5d6b5eaca 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    a => input_count_op_net,
    b => con0_op_net,
    op => relational_op_net
  );
  relational1 : entity xil_defaultlib.sysgen_relational_e5d6b5eaca 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    a => input_count_op_net,
    b => con1_op_net,
    op => relational1_op_net
  );
  relational2 : entity xil_defaultlib.sysgen_relational_e5d6b5eaca 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    a => input_count_op_net,
    b => con2_op_net,
    op => relational2_op_net
  );
  relational3 : entity xil_defaultlib.sysgen_relational_e5d6b5eaca 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    a => input_count_op_net,
    b => con3_op_net,
    op => relational3_op_net
  );
  con0 : entity xil_defaultlib.sysgen_constant_b58c3a1535 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => con0_op_net
  );
  con1 : entity xil_defaultlib.sysgen_constant_d3f27a6354 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => con1_op_net
  );
  con2 : entity xil_defaultlib.sysgen_constant_2fa4689d4e 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => con2_op_net
  );
  con3 : entity xil_defaultlib.sysgen_constant_31bab66ba6 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => con3_op_net
  );
  data_choice : entity xil_defaultlib.sysgen_mux_d624c1af44 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    sel => dram_op_net,
    d0 => cast_dout_net,
    d1 => mux1_y_net,
    y => data_choice_y_net
  );
  dout_count : entity xil_defaultlib.sysgen_counter_a9c1c293c2 
  port map (
    clr => '0',
    rst => edge_op_y_net,
    en => logical1_y_net,
    clk => clk_net,
    ce => ce_net,
    op => dout_count_op_net
  );
  dram : entity xil_defaultlib.sysgen_constant_a7b8778750 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => dram_op_net
  );
  input_count : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlcounter_free 
  generic map (
    core_name0 => "rfdc_multi_eight_adcs_2048gsps_mts_c_counter_binary_v12_0_i2",
    op_arith => xlUnsigned,
    op_width => 2
  )
  port map (
    clr => '0',
    rst => edge_op_y_net,
    en => mux1_y_net_x0,
    clk => clk_net,
    ce => ce_net,
    op => input_count_op_net
  );
  we_choice : entity xil_defaultlib.sysgen_mux_4874190f11 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    sel => dram_op_net,
    d0 => mux1_y_net_x0,
    d1 => delay1_q_net,
    y => we_choice_y_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot0_23/ss/basic_ctrl/edge_detect
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x40 is
  port (
    in_x0 : in std_logic_vector( 1-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    out_x0 : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x40;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x40 is 
  signal edge_op_y_net : std_logic_vector( 1-1 downto 0 );
  signal delay1_q_net : std_logic_vector( 1-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal delay_q_net : std_logic_vector( 1-1 downto 0 );
  signal inverter_op_net : std_logic_vector( 1-1 downto 0 );
begin
  out_x0 <= edge_op_y_net;
  delay1_q_net <= in_x0;
  clk_net <= clk_1;
  ce_net <= ce_1;
  delay : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 1
  )
  port map (
    en => '1',
    rst => '1',
    d => delay1_q_net,
    clk => clk_net,
    ce => ce_net,
    q => delay_q_net
  );
  inverter : entity xil_defaultlib.sysgen_inverter_6233897471 
  port map (
    clr => '0',
    ip => delay1_q_net,
    clk => clk_net,
    ce => ce_net,
    op => inverter_op_net
  );
  edge_op : entity xil_defaultlib.sysgen_logical_0f1aa1e2d7 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => inverter_op_net,
    d1 => delay_q_net,
    y => edge_op_y_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot0_23/ss/basic_ctrl
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_basic_ctrl_x19 is
  port (
    din : in std_logic_vector( 32-1 downto 0 );
    we : in std_logic_vector( 1-1 downto 0 );
    trig : in std_logic_vector( 1-1 downto 0 );
    ctrl : in std_logic_vector( 32-1 downto 0 );
    stopi : in std_logic_vector( 1-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    dout : out std_logic_vector( 32-1 downto 0 );
    we_o : out std_logic_vector( 1-1 downto 0 );
    go : out std_logic_vector( 1-1 downto 0 );
    init : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_basic_ctrl_x19;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_basic_ctrl_x19 is 
  signal data_choice_y_net : std_logic_vector( 32-1 downto 0 );
  signal we_choice_y_net : std_logic_vector( 1-1 downto 0 );
  signal register6_q_net : std_logic_vector( 1-1 downto 0 );
  signal edge_op_y_net_x0 : std_logic_vector( 1-1 downto 0 );
  signal cast_dout_net : std_logic_vector( 32-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc0_sync_net : std_logic_vector( 1-1 downto 0 );
  signal edge_op_y_net : std_logic_vector( 1-1 downto 0 );
  signal concatenate_y_net : std_logic_vector( 32-1 downto 0 );
  signal never_op_net : std_logic_vector( 1-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal mux1_y_net : std_logic_vector( 1-1 downto 0 );
  signal delay1_q_net : std_logic_vector( 1-1 downto 0 );
  signal constant_op_net : std_logic_vector( 1-1 downto 0 );
  signal constant1_op_net : std_logic_vector( 1-1 downto 0 );
  signal constant2_op_net : std_logic_vector( 1-1 downto 0 );
  signal enable_y_net : std_logic_vector( 1-1 downto 0 );
  signal delay2_q_net : std_logic_vector( 1-1 downto 0 );
  signal trig_src_y_net : std_logic_vector( 1-1 downto 0 );
  signal delay3_q_net : std_logic_vector( 1-1 downto 0 );
  signal valid_src_y_net : std_logic_vector( 1-1 downto 0 );
  signal inverter_op_net : std_logic_vector( 1-1 downto 0 );
  signal logical_y_net : std_logic_vector( 1-1 downto 0 );
  signal mux2_y_net : std_logic_vector( 1-1 downto 0 );
  signal register1_q_net : std_logic_vector( 1-1 downto 0 );
begin
  dout <= data_choice_y_net;
  we_o <= we_choice_y_net;
  go <= register6_q_net;
  init <= edge_op_y_net_x0;
  cast_dout_net <= din;
  rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc0_sync_net <= we;
  edge_op_y_net <= trig;
  concatenate_y_net <= ctrl;
  never_op_net <= stopi;
  clk_net <= clk_1;
  ce_net <= ce_1;
  dram_munge : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_dram_munge_x19 
  port map (
    din => cast_dout_net,
    we => mux1_y_net,
    init => edge_op_y_net_x0,
    clk_1 => clk_net,
    ce_1 => ce_net,
    dout => data_choice_y_net,
    we_o => we_choice_y_net
  );
  edge_detect : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x40 
  port map (
    in_x0 => delay1_q_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    out_x0 => edge_op_y_net_x0
  );
  constant_x0 : entity xil_defaultlib.sysgen_constant_c95a0b5efb 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => constant_op_net
  );
  constant1 : entity xil_defaultlib.sysgen_constant_c95a0b5efb 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => constant1_op_net
  );
  constant2 : entity xil_defaultlib.sysgen_constant_c95a0b5efb 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => constant2_op_net
  );
  delay1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 1
  )
  port map (
    en => '1',
    rst => '1',
    d => enable_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay1_q_net
  );
  delay2 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 1
  )
  port map (
    en => '1',
    rst => '1',
    d => trig_src_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay2_q_net
  );
  delay3 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 1
  )
  port map (
    en => '1',
    rst => '1',
    d => valid_src_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay3_q_net
  );
  inverter : entity xil_defaultlib.sysgen_inverter_6233897471 
  port map (
    clr => '0',
    ip => edge_op_y_net_x0,
    clk => clk_net,
    ce => ce_net,
    op => inverter_op_net
  );
  logical : entity xil_defaultlib.sysgen_logical_d26e5cda59 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => mux2_y_net,
    d1 => inverter_op_net,
    y => logical_y_net
  );
  mux1 : entity xil_defaultlib.sysgen_mux_4874190f11 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    sel => delay3_q_net,
    d0 => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc0_sync_net,
    d1 => constant2_op_net,
    y => mux1_y_net
  );
  mux2 : entity xil_defaultlib.sysgen_mux_4874190f11 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    sel => delay2_q_net,
    d0 => edge_op_y_net,
    d1 => constant1_op_net,
    y => mux2_y_net
  );
  register1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlregister 
  generic map (
    d_width => 1,
    init_value => b"0"
  )
  port map (
    d => constant_op_net,
    rst => logical_y_net,
    en => edge_op_y_net_x0,
    clk => clk_net,
    ce => ce_net,
    q => register1_q_net
  );
  register6 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlregister 
  generic map (
    d_width => 1,
    init_value => b"0"
  )
  port map (
    d => mux2_y_net,
    rst => edge_op_y_net_x0,
    en => register1_q_net,
    clk => clk_net,
    ce => ce_net,
    q => register6_q_net
  );
  enable : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 0,
    new_msb => 0,
    x_width => 32,
    y_width => 1
  )
  port map (
    x => concatenate_y_net,
    y => enable_y_net
  );
  trig_src : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 1,
    new_msb => 1,
    x_width => 32,
    y_width => 1
  )
  port map (
    x => concatenate_y_net,
    y => trig_src_y_net
  );
  valid_src : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 2,
    new_msb => 2,
    x_width => 32,
    y_width => 1
  )
  port map (
    x => concatenate_y_net,
    y => valid_src_y_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot0_23/ss/bram/calc_add
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_calc_add_x20 is
  port (
    in_x0 : in std_logic_vector( 10-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    out_x0 : out std_logic_vector( 10-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_calc_add_x20;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_calc_add_x20 is 
  signal mux_y_net : std_logic_vector( 10-1 downto 0 );
  signal add_del_q_net : std_logic_vector( 10-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal add_sub_s_net : std_logic_vector( 1-1 downto 0 );
  signal const_op_net : std_logic_vector( 1-1 downto 0 );
  signal lsw_y_net : std_logic_vector( 1-1 downto 0 );
  signal concat_y_net : std_logic_vector( 10-1 downto 0 );
  signal msw_y_net : std_logic_vector( 9-1 downto 0 );
  signal convert_addr_dout_net : std_logic_vector( 10-1 downto 0 );
  signal manipulate_op_net : std_logic_vector( 1-1 downto 0 );
begin
  out_x0 <= mux_y_net;
  add_del_q_net <= in_x0;
  clk_net <= clk_1;
  ce_net <= ce_1;
  add_sub : entity xil_defaultlib.sysgen_addsub_fd3b6c715c 
  port map (
    clr => '0',
    a => const_op_net,
    b => lsw_y_net,
    clk => clk_net,
    ce => ce_net,
    s => add_sub_s_net
  );
  concat : entity xil_defaultlib.sysgen_concat_f4b90dfa16 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    in0 => msw_y_net,
    in1 => add_sub_s_net,
    y => concat_y_net
  );
  const : entity xil_defaultlib.sysgen_constant_a7b8778750 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => const_op_net
  );
  convert_addr : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 10,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 10,
    latency => 0,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => add_del_q_net,
    clk => clk_net,
    ce => ce_net,
    dout => convert_addr_dout_net
  );
  lsw : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 0,
    new_msb => 0,
    x_width => 10,
    y_width => 1
  )
  port map (
    x => convert_addr_dout_net,
    y => lsw_y_net
  );
  manipulate : entity xil_defaultlib.sysgen_constant_a7b8778750 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => manipulate_op_net
  );
  msw : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 1,
    new_msb => 9,
    x_width => 10,
    y_width => 9
  )
  port map (
    x => convert_addr_dout_net,
    y => msw_y_net
  );
  mux : entity xil_defaultlib.sysgen_mux_4417594854 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    sel => manipulate_op_net,
    d0 => convert_addr_dout_net,
    d1 => concat_y_net,
    y => mux_y_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot0_23/ss/bram/munge_in
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_munge_in_x22 is
  port (
    din : in std_logic_vector( 32-1 downto 0 );
    dout : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_munge_in_x22;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_munge_in_x22 is 
  signal reinterpret_out_output_port_net : std_logic_vector( 32-1 downto 0 );
  signal dat_del_q_net : std_logic_vector( 32-1 downto 0 );
begin
  dout <= reinterpret_out_output_port_net;
  dat_del_q_net <= din;
  reinterpret_out : entity xil_defaultlib.sysgen_reinterpret_52bb84f12b 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => dat_del_q_net,
    output_port => reinterpret_out_output_port_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot0_23/ss/bram
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_bram_x20 is
  port (
    addr : in std_logic_vector( 10-1 downto 0 );
    data_in : in std_logic_vector( 32-1 downto 0 );
    we : in std_logic_vector( 1-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_23_ss_bram_addr : out std_logic_vector( 10-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_23_ss_bram_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_23_ss_bram_we : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_bram_x20;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_bram_x20 is 
  signal add_del_q_net : std_logic_vector( 10-1 downto 0 );
  signal dat_del_q_net : std_logic_vector( 32-1 downto 0 );
  signal we_del_q_net : std_logic_vector( 1-1 downto 0 );
  signal convert_addr_dout_net : std_logic_vector( 10-1 downto 0 );
  signal convert_din1_dout_net : std_logic_vector( 32-1 downto 0 );
  signal convert_we_dout_net : std_logic_vector( 1-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal mux_y_net : std_logic_vector( 10-1 downto 0 );
  signal reinterpret_out_output_port_net : std_logic_vector( 32-1 downto 0 );
begin
  add_del_q_net <= addr;
  dat_del_q_net <= data_in;
  we_del_q_net <= we;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_23_ss_bram_addr <= convert_addr_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_23_ss_bram_data_in <= convert_din1_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_23_ss_bram_we <= convert_we_dout_net;
  clk_net <= clk_1;
  ce_net <= ce_1;
  calc_add : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_calc_add_x20 
  port map (
    in_x0 => add_del_q_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    out_x0 => mux_y_net
  );
  munge_in : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_munge_in_x22 
  port map (
    din => dat_del_q_net,
    dout => reinterpret_out_output_port_net
  );
  convert_addr : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 10,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 10,
    latency => 0,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => mux_y_net,
    clk => clk_net,
    ce => ce_net,
    dout => convert_addr_dout_net
  );
  convert_din1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 32,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 32,
    latency => 0,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => reinterpret_out_output_port_net,
    clk => clk_net,
    ce => ce_net,
    dout => convert_din1_dout_net
  );
  convert_we : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 1,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 1,
    latency => 0,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => we_del_q_net,
    clk => clk_net,
    ce => ce_net,
    dout => convert_we_dout_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot0_23/ss/ctrl
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_ctrl_x21 is
  port (
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_23_ss_ctrl_user_data_out : in std_logic_vector( 32-1 downto 0 );
    in_reg : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_ctrl_x21;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_ctrl_x21 is 
  signal reint1_output_port_net : std_logic_vector( 32-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_23_ss_ctrl_user_data_out_net : std_logic_vector( 32-1 downto 0 );
  signal io_delay_q_net : std_logic_vector( 32-1 downto 0 );
  signal slice_reg_y_net : std_logic_vector( 32-1 downto 0 );
begin
  in_reg <= reint1_output_port_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_23_ss_ctrl_user_data_out_net <= rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_23_ss_ctrl_user_data_out;
  io_delay : entity xil_defaultlib.sysgen_delay_34e314c510 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d => rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_23_ss_ctrl_user_data_out_net,
    q => io_delay_q_net
  );
  slice_reg : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 0,
    new_msb => 31,
    x_width => 32,
    y_width => 32
  )
  port map (
    x => io_delay_q_net,
    y => slice_reg_y_net
  );
  reint1 : entity xil_defaultlib.sysgen_reinterpret_52bb84f12b 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => slice_reg_y_net,
    output_port => reint1_output_port_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot0_23/ss/ctrl_combine
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_ctrl_combine_x21 is
  port (
    in1 : in std_logic_vector( 28-1 downto 0 );
    in2 : in std_logic_vector( 1-1 downto 0 );
    in3 : in std_logic_vector( 2-1 downto 0 );
    in4 : in std_logic_vector( 1-1 downto 0 );
    bus_out : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_ctrl_combine_x21;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_ctrl_combine_x21 is 
  signal concatenate_y_net : std_logic_vector( 32-1 downto 0 );
  signal reinterpret4_output_port_net_x0 : std_logic_vector( 28-1 downto 0 );
  signal circ_or_y_net : std_logic_vector( 1-1 downto 0 );
  signal reinterpret2_output_port_net : std_logic_vector( 2-1 downto 0 );
  signal arm_or_y_net : std_logic_vector( 1-1 downto 0 );
  signal reinterpret1_output_port_net : std_logic_vector( 28-1 downto 0 );
  signal reinterpret2_output_port_net_x0 : std_logic_vector( 1-1 downto 0 );
  signal reinterpret3_output_port_net : std_logic_vector( 2-1 downto 0 );
  signal reinterpret4_output_port_net : std_logic_vector( 1-1 downto 0 );
begin
  bus_out <= concatenate_y_net;
  reinterpret4_output_port_net_x0 <= in1;
  circ_or_y_net <= in2;
  reinterpret2_output_port_net <= in3;
  arm_or_y_net <= in4;
  concatenate : entity xil_defaultlib.sysgen_concat_8611e618a5 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    in0 => reinterpret1_output_port_net,
    in1 => reinterpret2_output_port_net_x0,
    in2 => reinterpret3_output_port_net,
    in3 => reinterpret4_output_port_net,
    y => concatenate_y_net
  );
  reinterpret1 : entity xil_defaultlib.sysgen_reinterpret_f7e0b72e82 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => reinterpret4_output_port_net_x0,
    output_port => reinterpret1_output_port_net
  );
  reinterpret2 : entity xil_defaultlib.sysgen_reinterpret_317b92931a 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => circ_or_y_net,
    output_port => reinterpret2_output_port_net_x0
  );
  reinterpret3 : entity xil_defaultlib.sysgen_reinterpret_5dc9f217bd 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => reinterpret2_output_port_net,
    output_port => reinterpret3_output_port_net
  );
  reinterpret4 : entity xil_defaultlib.sysgen_reinterpret_317b92931a 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => arm_or_y_net,
    output_port => reinterpret4_output_port_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot0_23/ss/ctrl_split
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_ctrl_split_x21 is
  port (
    bus_in : in std_logic_vector( 32-1 downto 0 );
    msb_out4 : out std_logic_vector( 28-1 downto 0 );
    out3 : out std_logic_vector( 1-1 downto 0 );
    out2 : out std_logic_vector( 2-1 downto 0 );
    lsb_out1 : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_ctrl_split_x21;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_ctrl_split_x21 is 
  signal reinterpret4_output_port_net : std_logic_vector( 28-1 downto 0 );
  signal slice3_y_net : std_logic_vector( 1-1 downto 0 );
  signal reinterpret2_output_port_net : std_logic_vector( 2-1 downto 0 );
  signal slice1_y_net : std_logic_vector( 1-1 downto 0 );
  signal reint1_output_port_net : std_logic_vector( 32-1 downto 0 );
  signal slice2_y_net : std_logic_vector( 2-1 downto 0 );
  signal slice4_y_net : std_logic_vector( 28-1 downto 0 );
begin
  msb_out4 <= reinterpret4_output_port_net;
  out3 <= slice3_y_net;
  out2 <= reinterpret2_output_port_net;
  lsb_out1 <= slice1_y_net;
  reint1_output_port_net <= bus_in;
  reinterpret2 : entity xil_defaultlib.sysgen_reinterpret_5dc9f217bd 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => slice2_y_net,
    output_port => reinterpret2_output_port_net
  );
  reinterpret4 : entity xil_defaultlib.sysgen_reinterpret_f7e0b72e82 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => slice4_y_net,
    output_port => reinterpret4_output_port_net
  );
  slice1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 0,
    new_msb => 0,
    x_width => 32,
    y_width => 1
  )
  port map (
    x => reint1_output_port_net,
    y => slice1_y_net
  );
  slice2 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 1,
    new_msb => 2,
    x_width => 32,
    y_width => 2
  )
  port map (
    x => reint1_output_port_net,
    y => slice2_y_net
  );
  slice3 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 3,
    new_msb => 3,
    x_width => 32,
    y_width => 1
  )
  port map (
    x => reint1_output_port_net,
    y => slice3_y_net
  );
  slice4 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 4,
    new_msb => 31,
    x_width => 32,
    y_width => 28
  )
  port map (
    x => reint1_output_port_net,
    y => slice4_y_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot0_23/ss/status
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_status_x21 is
  port (
    out_reg : in std_logic_vector( 32-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_23_ss_status_user_data_in : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_status_x21;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_status_x21 is 
  signal concat_y_net : std_logic_vector( 32-1 downto 0 );
  signal cast_gw_dout_net : std_logic_vector( 32-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal io_delay_q_net : std_logic_vector( 32-1 downto 0 );
  signal reint1_output_port_net : std_logic_vector( 32-1 downto 0 );
  signal assert_reg_dout_net : std_logic_vector( 32-1 downto 0 );
begin
  concat_y_net <= out_reg;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_23_ss_status_user_data_in <= cast_gw_dout_net;
  clk_net <= clk_1;
  ce_net <= ce_1;
  io_delay : entity xil_defaultlib.sysgen_delay_34e314c510 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d => reint1_output_port_net,
    q => io_delay_q_net
  );
  cast_gw : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 32,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 32,
    latency => 1,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => io_delay_q_net,
    clk => clk_net,
    ce => ce_net,
    dout => cast_gw_dout_net
  );
  assert_reg : entity xil_defaultlib.xlpassthrough 
  generic map (
    din_width => 32,
    dout_width => 32
  )
  port map (
    din => concat_y_net,
    dout => assert_reg_dout_net
  );
  reint1 : entity xil_defaultlib.sysgen_reinterpret_52bb84f12b 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => assert_reg_dout_net,
    output_port => reint1_output_port_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot0_23/ss
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_ss_x19 is
  port (
    din : in std_logic_vector( 32-1 downto 0 );
    we : in std_logic_vector( 1-1 downto 0 );
    trig : in std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_23_ss_ctrl_user_data_out : in std_logic_vector( 32-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    arm_out : out std_logic_vector( 1-1 downto 0 );
    goto_118533990_we1 : out std_logic_vector( 1-1 downto 0 );
    goto_118533990_we4 : out std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_23_ss_bram_addr : out std_logic_vector( 10-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_23_ss_bram_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_23_ss_bram_we : out std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_23_ss_status_user_data_in : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_ss_x19;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_ss_x19 is 
  signal arm_or_y_net : std_logic_vector( 1-1 downto 0 );
  signal concatenate_y_net : std_logic_vector( 32-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc0_sync_net : std_logic_vector( 1-1 downto 0 );
  signal edge_op_y_net_x0 : std_logic_vector( 1-1 downto 0 );
  signal we_choice_y_net : std_logic_vector( 1-1 downto 0 );
  signal logical6_y_net : std_logic_vector( 1-1 downto 0 );
  signal convert_addr_dout_net : std_logic_vector( 10-1 downto 0 );
  signal convert_din1_dout_net : std_logic_vector( 32-1 downto 0 );
  signal convert_we_dout_net : std_logic_vector( 1-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_23_ss_ctrl_user_data_out_net : std_logic_vector( 32-1 downto 0 );
  signal cast_gw_dout_net : std_logic_vector( 32-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal slice2_y_net : std_logic_vector( 10-1 downto 0 );
  signal delay6_q_net : std_logic_vector( 32-1 downto 0 );
  signal concat_y_net : std_logic_vector( 32-1 downto 0 );
  signal data_choice_y_net : std_logic_vector( 32-1 downto 0 );
  signal register6_q_net : std_logic_vector( 1-1 downto 0 );
  signal never_op_net : std_logic_vector( 1-1 downto 0 );
  signal edge_op_y_net_x1 : std_logic_vector( 1-1 downto 0 );
  signal cast_dout_net : std_logic_vector( 32-1 downto 0 );
  signal concatenate_y_net_x0 : std_logic_vector( 32-1 downto 0 );
  signal add_del_q_net : std_logic_vector( 10-1 downto 0 );
  signal dat_del_q_net : std_logic_vector( 32-1 downto 0 );
  signal we_del_q_net : std_logic_vector( 1-1 downto 0 );
  signal reint1_output_port_net : std_logic_vector( 32-1 downto 0 );
  signal reinterpret4_output_port_net : std_logic_vector( 28-1 downto 0 );
  signal circ_or_y_net : std_logic_vector( 1-1 downto 0 );
  signal reinterpret2_output_port_net : std_logic_vector( 2-1 downto 0 );
  signal slice3_y_net : std_logic_vector( 1-1 downto 0 );
  signal slice1_y_net : std_logic_vector( 1-1 downto 0 );
  signal arm_op_net : std_logic_vector( 1-1 downto 0 );
  signal ri_output_port_net : std_logic_vector( 32-1 downto 0 );
  signal circ_op_net : std_logic_vector( 1-1 downto 0 );
begin
  arm_out <= arm_or_y_net;
  concatenate_y_net <= din;
  rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc0_sync_net <= we;
  edge_op_y_net_x0 <= trig;
  goto_118533990_we1 <= we_choice_y_net;
  goto_118533990_we4 <= logical6_y_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_23_ss_bram_addr <= convert_addr_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_23_ss_bram_data_in <= convert_din1_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_23_ss_bram_we <= convert_we_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_23_ss_ctrl_user_data_out_net <= rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_23_ss_ctrl_user_data_out;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_23_ss_status_user_data_in <= cast_gw_dout_net;
  clk_net <= clk_1;
  ce_net <= ce_1;
  add_gen : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_add_gen_x19 
  port map (
    din => data_choice_y_net,
    we => we_choice_y_net,
    go => register6_q_net,
    cont => never_op_net,
    init => edge_op_y_net_x1,
    clk_1 => clk_net,
    ce_1 => ce_net,
    add => slice2_y_net,
    dout => delay6_q_net,
    we_o => logical6_y_net,
    status => concat_y_net
  );
  basic_ctrl : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_basic_ctrl_x19 
  port map (
    din => cast_dout_net,
    we => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc0_sync_net,
    trig => edge_op_y_net_x0,
    ctrl => concatenate_y_net_x0,
    stopi => never_op_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    dout => data_choice_y_net,
    we_o => we_choice_y_net,
    go => register6_q_net,
    init => edge_op_y_net_x1
  );
  bram : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_bram_x20 
  port map (
    addr => add_del_q_net,
    data_in => dat_del_q_net,
    we => we_del_q_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_23_ss_bram_addr => convert_addr_dout_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_23_ss_bram_data_in => convert_din1_dout_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_23_ss_bram_we => convert_we_dout_net
  );
  ctrl : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_ctrl_x21 
  port map (
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_23_ss_ctrl_user_data_out => rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_23_ss_ctrl_user_data_out_net,
    in_reg => reint1_output_port_net
  );
  ctrl_combine : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_ctrl_combine_x21 
  port map (
    in1 => reinterpret4_output_port_net,
    in2 => circ_or_y_net,
    in3 => reinterpret2_output_port_net,
    in4 => arm_or_y_net,
    bus_out => concatenate_y_net_x0
  );
  ctrl_split : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_ctrl_split_x21 
  port map (
    bus_in => reint1_output_port_net,
    msb_out4 => reinterpret4_output_port_net,
    out3 => slice3_y_net,
    out2 => reinterpret2_output_port_net,
    lsb_out1 => slice1_y_net
  );
  status : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_status_x21 
  port map (
    out_reg => concat_y_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_23_ss_status_user_data_in => cast_gw_dout_net
  );
  add_del : entity xil_defaultlib.sysgen_delay_4e9264ffdf 
  port map (
    clr => '0',
    d => slice2_y_net,
    clk => clk_net,
    ce => ce_net,
    q => add_del_q_net
  );
  arm : entity xil_defaultlib.sysgen_constant_a7b8778750 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => arm_op_net
  );
  arm_or : entity xil_defaultlib.sysgen_logical_d7dc12cf31 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => slice1_y_net,
    d1 => arm_op_net,
    y => arm_or_y_net
  );
  cast : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 32,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 32,
    latency => 0,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => ri_output_port_net,
    clk => clk_net,
    ce => ce_net,
    dout => cast_dout_net
  );
  circ : entity xil_defaultlib.sysgen_constant_a7b8778750 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => circ_op_net
  );
  circ_or : entity xil_defaultlib.sysgen_logical_d7dc12cf31 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => slice3_y_net,
    d1 => circ_op_net,
    y => circ_or_y_net
  );
  dat_del : entity xil_defaultlib.sysgen_delay_5ec362a23c 
  port map (
    clr => '0',
    d => delay6_q_net,
    clk => clk_net,
    ce => ce_net,
    q => dat_del_q_net
  );
  never : entity xil_defaultlib.sysgen_constant_a7b8778750 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => never_op_net
  );
  ri : entity xil_defaultlib.sysgen_reinterpret_52bb84f12b 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => concatenate_y_net,
    output_port => ri_output_port_net
  );
  we_del : entity xil_defaultlib.sysgen_delay_e0740ee3f9 
  port map (
    clr => '0',
    d => logical6_y_net,
    clk => clk_net,
    ce => ce_net,
    q => we_del_q_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot0_23
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_23 is
  port (
    in_d0 : in std_logic_vector( 16-1 downto 0 );
    in_d1 : in std_logic_vector( 16-1 downto 0 );
    we : in std_logic_vector( 1-1 downto 0 );
    trig : in std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_23_ss_ctrl_user_data_out : in std_logic_vector( 32-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    arm_out : out std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_23_ss_bram_addr : out std_logic_vector( 10-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_23_ss_bram_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_23_ss_bram_we : out std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_23_ss_status_user_data_in : out std_logic_vector( 32-1 downto 0 );
    goto_118533990_we1 : out std_logic_vector( 1-1 downto 0 );
    goto_118533990_we4 : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_23;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_23 is 
  signal arm_or_y_net : std_logic_vector( 1-1 downto 0 );
  signal slice1_y_net : std_logic_vector( 16-1 downto 0 );
  signal slice6_y_net : std_logic_vector( 16-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc0_sync_net : std_logic_vector( 1-1 downto 0 );
  signal edge_op_y_net : std_logic_vector( 1-1 downto 0 );
  signal convert_addr_dout_net : std_logic_vector( 10-1 downto 0 );
  signal convert_din1_dout_net : std_logic_vector( 32-1 downto 0 );
  signal convert_we_dout_net : std_logic_vector( 1-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_23_ss_ctrl_user_data_out_net : std_logic_vector( 32-1 downto 0 );
  signal cast_gw_dout_net : std_logic_vector( 32-1 downto 0 );
  signal we_choice_y_net : std_logic_vector( 1-1 downto 0 );
  signal logical6_y_net : std_logic_vector( 1-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal concatenate_y_net : std_logic_vector( 32-1 downto 0 );
  signal assert_d0_dout_net : std_logic_vector( 16-1 downto 0 );
  signal assert_d1_dout_net : std_logic_vector( 16-1 downto 0 );
begin
  arm_out <= arm_or_y_net;
  slice1_y_net <= in_d0;
  slice6_y_net <= in_d1;
  rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc0_sync_net <= we;
  edge_op_y_net <= trig;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_23_ss_bram_addr <= convert_addr_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_23_ss_bram_data_in <= convert_din1_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_23_ss_bram_we <= convert_we_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_23_ss_ctrl_user_data_out_net <= rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_23_ss_ctrl_user_data_out;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_23_ss_status_user_data_in <= cast_gw_dout_net;
  goto_118533990_we1 <= we_choice_y_net;
  goto_118533990_we4 <= logical6_y_net;
  clk_net <= clk_1;
  ce_net <= ce_1;
  buscreate : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_buscreate_x19 
  port map (
    in1 => assert_d0_dout_net,
    in2 => assert_d1_dout_net,
    bus_out => concatenate_y_net
  );
  ss : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_ss_x19 
  port map (
    din => concatenate_y_net,
    we => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc0_sync_net,
    trig => edge_op_y_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_23_ss_ctrl_user_data_out => rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_23_ss_ctrl_user_data_out_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    arm_out => arm_or_y_net,
    goto_118533990_we1 => we_choice_y_net,
    goto_118533990_we4 => logical6_y_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_23_ss_bram_addr => convert_addr_dout_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_23_ss_bram_data_in => convert_din1_dout_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_23_ss_bram_we => convert_we_dout_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_23_ss_status_user_data_in => cast_gw_dout_net
  );
  assert_d0 : entity xil_defaultlib.xlpassthrough 
  generic map (
    din_width => 16,
    dout_width => 16
  )
  port map (
    din => slice1_y_net,
    dout => assert_d0_dout_net
  );
  assert_d1 : entity xil_defaultlib.xlpassthrough 
  generic map (
    din_width => 16,
    dout_width => 16
  )
  port map (
    din => slice6_y_net,
    dout => assert_d1_dout_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot0_45/buscreate
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_buscreate_x22 is
  port (
    in1 : in std_logic_vector( 16-1 downto 0 );
    in2 : in std_logic_vector( 16-1 downto 0 );
    bus_out : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_buscreate_x22;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_buscreate_x22 is 
  signal concatenate_y_net : std_logic_vector( 32-1 downto 0 );
  signal assert_d0_dout_net : std_logic_vector( 16-1 downto 0 );
  signal assert_d1_dout_net : std_logic_vector( 16-1 downto 0 );
  signal reinterpret1_output_port_net : std_logic_vector( 16-1 downto 0 );
  signal reinterpret2_output_port_net : std_logic_vector( 16-1 downto 0 );
begin
  bus_out <= concatenate_y_net;
  assert_d0_dout_net <= in1;
  assert_d1_dout_net <= in2;
  concatenate : entity xil_defaultlib.sysgen_concat_37649e01d1 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    in0 => reinterpret1_output_port_net,
    in1 => reinterpret2_output_port_net,
    y => concatenate_y_net
  );
  reinterpret1 : entity xil_defaultlib.sysgen_reinterpret_03c8cdbbc1 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => assert_d0_dout_net,
    output_port => reinterpret1_output_port_net
  );
  reinterpret2 : entity xil_defaultlib.sysgen_reinterpret_03c8cdbbc1 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => assert_d1_dout_net,
    output_port => reinterpret2_output_port_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot0_45/ss/add_gen/edge_detect
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x46 is
  port (
    in_x0 : in std_logic_vector( 1-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    out_x0 : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x46;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x46 is 
  signal edge_op_y_net : std_logic_vector( 1-1 downto 0 );
  signal slice3_y_net : std_logic_vector( 1-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal delay_q_net : std_logic_vector( 1-1 downto 0 );
  signal inverter_op_net : std_logic_vector( 1-1 downto 0 );
begin
  out_x0 <= edge_op_y_net;
  slice3_y_net <= in_x0;
  clk_net <= clk_1;
  ce_net <= ce_1;
  delay : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 1
  )
  port map (
    en => '1',
    rst => '1',
    d => slice3_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay_q_net
  );
  inverter : entity xil_defaultlib.sysgen_inverter_6233897471 
  port map (
    clr => '0',
    ip => slice3_y_net,
    clk => clk_net,
    ce => ce_net,
    op => inverter_op_net
  );
  edge_op : entity xil_defaultlib.sysgen_logical_9cc14fefba 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => inverter_op_net,
    d1 => delay_q_net,
    y => edge_op_y_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot0_45/ss/add_gen
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_add_gen_x22 is
  port (
    din : in std_logic_vector( 32-1 downto 0 );
    we : in std_logic_vector( 1-1 downto 0 );
    go : in std_logic_vector( 1-1 downto 0 );
    cont : in std_logic_vector( 1-1 downto 0 );
    init : in std_logic_vector( 1-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    add : out std_logic_vector( 10-1 downto 0 );
    dout : out std_logic_vector( 32-1 downto 0 );
    we_o : out std_logic_vector( 1-1 downto 0 );
    status : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_add_gen_x22;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_add_gen_x22 is 
  signal slice2_y_net : std_logic_vector( 10-1 downto 0 );
  signal delay6_q_net : std_logic_vector( 32-1 downto 0 );
  signal logical6_y_net : std_logic_vector( 1-1 downto 0 );
  signal concat_y_net : std_logic_vector( 32-1 downto 0 );
  signal data_choice_y_net : std_logic_vector( 32-1 downto 0 );
  signal we_choice_y_net : std_logic_vector( 1-1 downto 0 );
  signal register6_q_net : std_logic_vector( 1-1 downto 0 );
  signal never_op_net : std_logic_vector( 1-1 downto 0 );
  signal edge_op_y_net : std_logic_vector( 1-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal edge_op_y_net_x0 : std_logic_vector( 1-1 downto 0 );
  signal slice3_y_net : std_logic_vector( 1-1 downto 0 );
  signal shift_op_net : std_logic_vector( 19-1 downto 0 );
  signal inverter_op_net : std_logic_vector( 1-1 downto 0 );
  signal delay1_q_net : std_logic_vector( 12-1 downto 0 );
  signal convert_dout_net : std_logic_vector( 19-1 downto 0 );
  signal register5_q_net : std_logic_vector( 1-1 downto 0 );
  signal delay_q_net : std_logic_vector( 1-1 downto 0 );
  signal delay4_q_net : std_logic_vector( 1-1 downto 0 );
  signal slice1_y_net : std_logic_vector( 12-1 downto 0 );
  signal delay3_q_net : std_logic_vector( 1-1 downto 0 );
  signal inverter1_op_net : std_logic_vector( 1-1 downto 0 );
  signal logical1_y_net : std_logic_vector( 1-1 downto 0 );
  signal logical4_y_net : std_logic_vector( 1-1 downto 0 );
  signal add_gen_op_net : std_logic_vector( 13-1 downto 0 );
begin
  add <= slice2_y_net;
  dout <= delay6_q_net;
  we_o <= logical6_y_net;
  status <= concat_y_net;
  data_choice_y_net <= din;
  we_choice_y_net <= we;
  register6_q_net <= go;
  never_op_net <= cont;
  edge_op_y_net <= init;
  clk_net <= clk_1;
  ce_net <= ce_1;
  edge_detect : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x46 
  port map (
    in_x0 => slice3_y_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    out_x0 => edge_op_y_net_x0
  );
  concat : entity xil_defaultlib.sysgen_concat_fc8edfac0e 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    in0 => shift_op_net,
    in1 => inverter_op_net,
    in2 => delay1_q_net,
    y => concat_y_net
  );
  convert : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 1,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 19,
    latency => 0,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => register5_q_net,
    clk => clk_net,
    ce => ce_net,
    dout => convert_dout_net
  );
  delay : entity xil_defaultlib.sysgen_delay_e0740ee3f9 
  port map (
    clr => '0',
    d => delay4_q_net,
    clk => clk_net,
    ce => ce_net,
    q => delay_q_net
  );
  delay1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 12
  )
  port map (
    en => '1',
    rst => '1',
    d => slice1_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay1_q_net
  );
  delay3 : entity xil_defaultlib.sysgen_delay_e0740ee3f9 
  port map (
    clr => '0',
    d => never_op_net,
    clk => clk_net,
    ce => ce_net,
    q => delay3_q_net
  );
  delay4 : entity xil_defaultlib.sysgen_delay_e0740ee3f9 
  port map (
    clr => '0',
    d => edge_op_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay4_q_net
  );
  delay6 : entity xil_defaultlib.sysgen_delay_5ec362a23c 
  port map (
    clr => '0',
    d => data_choice_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay6_q_net
  );
  inverter : entity xil_defaultlib.sysgen_inverter_918b6bc6d0 
  port map (
    clr => '0',
    ip => register5_q_net,
    clk => clk_net,
    ce => ce_net,
    op => inverter_op_net
  );
  inverter1 : entity xil_defaultlib.sysgen_inverter_6233897471 
  port map (
    clr => '0',
    ip => edge_op_y_net_x0,
    clk => clk_net,
    ce => ce_net,
    op => inverter1_op_net
  );
  logical1 : entity xil_defaultlib.sysgen_logical_2486129911 
  port map (
    clr => '0',
    d0 => we_choice_y_net,
    d1 => register6_q_net,
    clk => clk_net,
    ce => ce_net,
    y => logical1_y_net
  );
  logical4 : entity xil_defaultlib.sysgen_logical_d7dc12cf31 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => delay3_q_net,
    d1 => inverter1_op_net,
    y => logical4_y_net
  );
  logical6 : entity xil_defaultlib.sysgen_logical_c05fefc67b 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => register5_q_net,
    d1 => logical4_y_net,
    d2 => logical1_y_net,
    y => logical6_y_net
  );
  register5 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlregister 
  generic map (
    d_width => 1,
    init_value => b"1"
  )
  port map (
    d => delay3_q_net,
    rst => delay_q_net,
    en => edge_op_y_net_x0,
    clk => clk_net,
    ce => ce_net,
    q => register5_q_net
  );
  shift : entity xil_defaultlib.sysgen_shift_5af4fe0a99 
  port map (
    clr => '0',
    ip => convert_dout_net,
    clk => clk_net,
    ce => ce_net,
    op => shift_op_net
  );
  add_gen : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlcounter_free 
  generic map (
    core_name0 => "rfdc_multi_eight_adcs_2048gsps_mts_c_counter_binary_v12_0_i1",
    op_arith => xlUnsigned,
    op_width => 13
  )
  port map (
    clr => '0',
    rst => delay4_q_net,
    en => logical6_y_net,
    clk => clk_net,
    ce => ce_net,
    op => add_gen_op_net
  );
  slice1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 0,
    new_msb => 11,
    x_width => 13,
    y_width => 12
  )
  port map (
    x => add_gen_op_net,
    y => slice1_y_net
  );
  slice2 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 2,
    new_msb => 11,
    x_width => 13,
    y_width => 10
  )
  port map (
    x => add_gen_op_net,
    y => slice2_y_net
  );
  slice3 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 12,
    new_msb => 12,
    x_width => 13,
    y_width => 1
  )
  port map (
    x => add_gen_op_net,
    y => slice3_y_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot0_45/ss/basic_ctrl/dram_munge
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_dram_munge_x22 is
  port (
    din : in std_logic_vector( 32-1 downto 0 );
    we : in std_logic_vector( 1-1 downto 0 );
    init : in std_logic_vector( 1-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    dout : out std_logic_vector( 32-1 downto 0 );
    we_o : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_dram_munge_x22;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_dram_munge_x22 is 
  signal con2_op_net : std_logic_vector( 2-1 downto 0 );
  signal con3_op_net : std_logic_vector( 2-1 downto 0 );
  signal dram_op_net : std_logic_vector( 1-1 downto 0 );
  signal data_choice_y_net : std_logic_vector( 32-1 downto 0 );
  signal we_choice_y_net : std_logic_vector( 1-1 downto 0 );
  signal cast_dout_net : std_logic_vector( 32-1 downto 0 );
  signal mux1_y_net_x0 : std_logic_vector( 1-1 downto 0 );
  signal edge_op_y_net : std_logic_vector( 1-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal concat_y_net : std_logic_vector( 80-1 downto 0 );
  signal constant_op_net : std_logic_vector( 8-1 downto 0 );
  signal register_q_net : std_logic_vector( 32-1 downto 0 );
  signal register1_q_net : std_logic_vector( 32-1 downto 0 );
  signal concat1_y_net : std_logic_vector( 80-1 downto 0 );
  signal register2_q_net : std_logic_vector( 32-1 downto 0 );
  signal register3_q_net : std_logic_vector( 32-1 downto 0 );
  signal delay_q_net : std_logic_vector( 1-1 downto 0 );
  signal logical_y_net : std_logic_vector( 1-1 downto 0 );
  signal delay1_q_net : std_logic_vector( 1-1 downto 0 );
  signal logical1_y_net : std_logic_vector( 1-1 downto 0 );
  signal relational3_op_net : std_logic_vector( 1-1 downto 0 );
  signal mux1_y_net : std_logic_vector( 80-1 downto 0 );
  signal dout_count_op_net : std_logic_vector( 1-1 downto 0 );
  signal relational_op_net : std_logic_vector( 1-1 downto 0 );
  signal relational1_op_net : std_logic_vector( 1-1 downto 0 );
  signal relational2_op_net : std_logic_vector( 1-1 downto 0 );
  signal input_count_op_net : std_logic_vector( 2-1 downto 0 );
  signal con0_op_net : std_logic_vector( 2-1 downto 0 );
  signal con1_op_net : std_logic_vector( 2-1 downto 0 );
begin
  dout <= data_choice_y_net;
  we_o <= we_choice_y_net;
  cast_dout_net <= din;
  mux1_y_net_x0 <= we;
  edge_op_y_net <= init;
  clk_net <= clk_1;
  ce_net <= ce_1;
  concat : entity xil_defaultlib.sysgen_concat_e7487baac7 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    in0 => constant_op_net,
    in1 => register_q_net,
    in2 => constant_op_net,
    in3 => register1_q_net,
    y => concat_y_net
  );
  concat1 : entity xil_defaultlib.sysgen_concat_e7487baac7 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    in0 => constant_op_net,
    in1 => register2_q_net,
    in2 => constant_op_net,
    in3 => register3_q_net,
    y => concat1_y_net
  );
  constant_x0 : entity xil_defaultlib.sysgen_constant_869e31f04d 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => constant_op_net
  );
  delay : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 1
  )
  port map (
    en => '1',
    rst => '1',
    d => logical_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay_q_net
  );
  delay1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 1
  )
  port map (
    en => '1',
    rst => '1',
    d => logical1_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay1_q_net
  );
  logical : entity xil_defaultlib.sysgen_logical_2486129911 
  port map (
    clr => '0',
    d0 => relational3_op_net,
    d1 => mux1_y_net_x0,
    clk => clk_net,
    ce => ce_net,
    y => logical_y_net
  );
  logical1 : entity xil_defaultlib.sysgen_logical_d7dc12cf31 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => logical_y_net,
    d1 => delay_q_net,
    y => logical1_y_net
  );
  mux1 : entity xil_defaultlib.sysgen_mux_71ee2b1026 
  port map (
    clr => '0',
    sel => dout_count_op_net,
    d0 => concat_y_net,
    d1 => concat1_y_net,
    clk => clk_net,
    ce => ce_net,
    y => mux1_y_net
  );
  register_x0 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlregister 
  generic map (
    d_width => 32,
    init_value => b"00000000000000000000000000000000"
  )
  port map (
    rst => "0",
    d => cast_dout_net,
    en => relational_op_net,
    clk => clk_net,
    ce => ce_net,
    q => register_q_net
  );
  register1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlregister 
  generic map (
    d_width => 32,
    init_value => b"00000000000000000000000000000000"
  )
  port map (
    rst => "0",
    d => cast_dout_net,
    en => relational1_op_net,
    clk => clk_net,
    ce => ce_net,
    q => register1_q_net
  );
  register2 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlregister 
  generic map (
    d_width => 32,
    init_value => b"00000000000000000000000000000000"
  )
  port map (
    rst => "0",
    d => cast_dout_net,
    en => relational2_op_net,
    clk => clk_net,
    ce => ce_net,
    q => register2_q_net
  );
  register3 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlregister 
  generic map (
    d_width => 32,
    init_value => b"00000000000000000000000000000000"
  )
  port map (
    rst => "0",
    d => cast_dout_net,
    en => relational3_op_net,
    clk => clk_net,
    ce => ce_net,
    q => register3_q_net
  );
  relational : entity xil_defaultlib.sysgen_relational_e5d6b5eaca 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    a => input_count_op_net,
    b => con0_op_net,
    op => relational_op_net
  );
  relational1 : entity xil_defaultlib.sysgen_relational_e5d6b5eaca 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    a => input_count_op_net,
    b => con1_op_net,
    op => relational1_op_net
  );
  relational2 : entity xil_defaultlib.sysgen_relational_e5d6b5eaca 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    a => input_count_op_net,
    b => con2_op_net,
    op => relational2_op_net
  );
  relational3 : entity xil_defaultlib.sysgen_relational_e5d6b5eaca 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    a => input_count_op_net,
    b => con3_op_net,
    op => relational3_op_net
  );
  con0 : entity xil_defaultlib.sysgen_constant_b58c3a1535 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => con0_op_net
  );
  con1 : entity xil_defaultlib.sysgen_constant_d3f27a6354 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => con1_op_net
  );
  con2 : entity xil_defaultlib.sysgen_constant_2fa4689d4e 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => con2_op_net
  );
  con3 : entity xil_defaultlib.sysgen_constant_31bab66ba6 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => con3_op_net
  );
  data_choice : entity xil_defaultlib.sysgen_mux_d624c1af44 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    sel => dram_op_net,
    d0 => cast_dout_net,
    d1 => mux1_y_net,
    y => data_choice_y_net
  );
  dout_count : entity xil_defaultlib.sysgen_counter_a9c1c293c2 
  port map (
    clr => '0',
    rst => edge_op_y_net,
    en => logical1_y_net,
    clk => clk_net,
    ce => ce_net,
    op => dout_count_op_net
  );
  dram : entity xil_defaultlib.sysgen_constant_a7b8778750 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => dram_op_net
  );
  input_count : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlcounter_free 
  generic map (
    core_name0 => "rfdc_multi_eight_adcs_2048gsps_mts_c_counter_binary_v12_0_i2",
    op_arith => xlUnsigned,
    op_width => 2
  )
  port map (
    clr => '0',
    rst => edge_op_y_net,
    en => mux1_y_net_x0,
    clk => clk_net,
    ce => ce_net,
    op => input_count_op_net
  );
  we_choice : entity xil_defaultlib.sysgen_mux_4874190f11 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    sel => dram_op_net,
    d0 => mux1_y_net_x0,
    d1 => delay1_q_net,
    y => we_choice_y_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot0_45/ss/basic_ctrl/edge_detect
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x47 is
  port (
    in_x0 : in std_logic_vector( 1-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    out_x0 : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x47;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x47 is 
  signal edge_op_y_net : std_logic_vector( 1-1 downto 0 );
  signal delay1_q_net : std_logic_vector( 1-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal delay_q_net : std_logic_vector( 1-1 downto 0 );
  signal inverter_op_net : std_logic_vector( 1-1 downto 0 );
begin
  out_x0 <= edge_op_y_net;
  delay1_q_net <= in_x0;
  clk_net <= clk_1;
  ce_net <= ce_1;
  delay : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 1
  )
  port map (
    en => '1',
    rst => '1',
    d => delay1_q_net,
    clk => clk_net,
    ce => ce_net,
    q => delay_q_net
  );
  inverter : entity xil_defaultlib.sysgen_inverter_6233897471 
  port map (
    clr => '0',
    ip => delay1_q_net,
    clk => clk_net,
    ce => ce_net,
    op => inverter_op_net
  );
  edge_op : entity xil_defaultlib.sysgen_logical_0f1aa1e2d7 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => inverter_op_net,
    d1 => delay_q_net,
    y => edge_op_y_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot0_45/ss/basic_ctrl
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_basic_ctrl_x22 is
  port (
    din : in std_logic_vector( 32-1 downto 0 );
    we : in std_logic_vector( 1-1 downto 0 );
    trig : in std_logic_vector( 1-1 downto 0 );
    ctrl : in std_logic_vector( 32-1 downto 0 );
    stopi : in std_logic_vector( 1-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    dout : out std_logic_vector( 32-1 downto 0 );
    we_o : out std_logic_vector( 1-1 downto 0 );
    go : out std_logic_vector( 1-1 downto 0 );
    init : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_basic_ctrl_x22;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_basic_ctrl_x22 is 
  signal data_choice_y_net : std_logic_vector( 32-1 downto 0 );
  signal we_choice_y_net : std_logic_vector( 1-1 downto 0 );
  signal register6_q_net : std_logic_vector( 1-1 downto 0 );
  signal edge_op_y_net_x0 : std_logic_vector( 1-1 downto 0 );
  signal cast_dout_net : std_logic_vector( 32-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc0_sync_net : std_logic_vector( 1-1 downto 0 );
  signal edge_op_y_net : std_logic_vector( 1-1 downto 0 );
  signal concatenate_y_net : std_logic_vector( 32-1 downto 0 );
  signal never_op_net : std_logic_vector( 1-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal mux1_y_net : std_logic_vector( 1-1 downto 0 );
  signal delay1_q_net : std_logic_vector( 1-1 downto 0 );
  signal constant_op_net : std_logic_vector( 1-1 downto 0 );
  signal constant1_op_net : std_logic_vector( 1-1 downto 0 );
  signal constant2_op_net : std_logic_vector( 1-1 downto 0 );
  signal enable_y_net : std_logic_vector( 1-1 downto 0 );
  signal delay2_q_net : std_logic_vector( 1-1 downto 0 );
  signal trig_src_y_net : std_logic_vector( 1-1 downto 0 );
  signal delay3_q_net : std_logic_vector( 1-1 downto 0 );
  signal valid_src_y_net : std_logic_vector( 1-1 downto 0 );
  signal inverter_op_net : std_logic_vector( 1-1 downto 0 );
  signal logical_y_net : std_logic_vector( 1-1 downto 0 );
  signal mux2_y_net : std_logic_vector( 1-1 downto 0 );
  signal register1_q_net : std_logic_vector( 1-1 downto 0 );
begin
  dout <= data_choice_y_net;
  we_o <= we_choice_y_net;
  go <= register6_q_net;
  init <= edge_op_y_net_x0;
  cast_dout_net <= din;
  rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc0_sync_net <= we;
  edge_op_y_net <= trig;
  concatenate_y_net <= ctrl;
  never_op_net <= stopi;
  clk_net <= clk_1;
  ce_net <= ce_1;
  dram_munge : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_dram_munge_x22 
  port map (
    din => cast_dout_net,
    we => mux1_y_net,
    init => edge_op_y_net_x0,
    clk_1 => clk_net,
    ce_1 => ce_net,
    dout => data_choice_y_net,
    we_o => we_choice_y_net
  );
  edge_detect : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x47 
  port map (
    in_x0 => delay1_q_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    out_x0 => edge_op_y_net_x0
  );
  constant_x0 : entity xil_defaultlib.sysgen_constant_c95a0b5efb 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => constant_op_net
  );
  constant1 : entity xil_defaultlib.sysgen_constant_c95a0b5efb 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => constant1_op_net
  );
  constant2 : entity xil_defaultlib.sysgen_constant_c95a0b5efb 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => constant2_op_net
  );
  delay1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 1
  )
  port map (
    en => '1',
    rst => '1',
    d => enable_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay1_q_net
  );
  delay2 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 1
  )
  port map (
    en => '1',
    rst => '1',
    d => trig_src_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay2_q_net
  );
  delay3 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 1
  )
  port map (
    en => '1',
    rst => '1',
    d => valid_src_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay3_q_net
  );
  inverter : entity xil_defaultlib.sysgen_inverter_6233897471 
  port map (
    clr => '0',
    ip => edge_op_y_net_x0,
    clk => clk_net,
    ce => ce_net,
    op => inverter_op_net
  );
  logical : entity xil_defaultlib.sysgen_logical_d26e5cda59 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => mux2_y_net,
    d1 => inverter_op_net,
    y => logical_y_net
  );
  mux1 : entity xil_defaultlib.sysgen_mux_4874190f11 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    sel => delay3_q_net,
    d0 => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc0_sync_net,
    d1 => constant2_op_net,
    y => mux1_y_net
  );
  mux2 : entity xil_defaultlib.sysgen_mux_4874190f11 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    sel => delay2_q_net,
    d0 => edge_op_y_net,
    d1 => constant1_op_net,
    y => mux2_y_net
  );
  register1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlregister 
  generic map (
    d_width => 1,
    init_value => b"0"
  )
  port map (
    d => constant_op_net,
    rst => logical_y_net,
    en => edge_op_y_net_x0,
    clk => clk_net,
    ce => ce_net,
    q => register1_q_net
  );
  register6 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlregister 
  generic map (
    d_width => 1,
    init_value => b"0"
  )
  port map (
    d => mux2_y_net,
    rst => edge_op_y_net_x0,
    en => register1_q_net,
    clk => clk_net,
    ce => ce_net,
    q => register6_q_net
  );
  enable : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 0,
    new_msb => 0,
    x_width => 32,
    y_width => 1
  )
  port map (
    x => concatenate_y_net,
    y => enable_y_net
  );
  trig_src : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 1,
    new_msb => 1,
    x_width => 32,
    y_width => 1
  )
  port map (
    x => concatenate_y_net,
    y => trig_src_y_net
  );
  valid_src : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 2,
    new_msb => 2,
    x_width => 32,
    y_width => 1
  )
  port map (
    x => concatenate_y_net,
    y => valid_src_y_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot0_45/ss/bram/calc_add
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_calc_add_x21 is
  port (
    in_x0 : in std_logic_vector( 10-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    out_x0 : out std_logic_vector( 10-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_calc_add_x21;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_calc_add_x21 is 
  signal mux_y_net : std_logic_vector( 10-1 downto 0 );
  signal add_del_q_net : std_logic_vector( 10-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal add_sub_s_net : std_logic_vector( 1-1 downto 0 );
  signal const_op_net : std_logic_vector( 1-1 downto 0 );
  signal lsw_y_net : std_logic_vector( 1-1 downto 0 );
  signal concat_y_net : std_logic_vector( 10-1 downto 0 );
  signal msw_y_net : std_logic_vector( 9-1 downto 0 );
  signal convert_addr_dout_net : std_logic_vector( 10-1 downto 0 );
  signal manipulate_op_net : std_logic_vector( 1-1 downto 0 );
begin
  out_x0 <= mux_y_net;
  add_del_q_net <= in_x0;
  clk_net <= clk_1;
  ce_net <= ce_1;
  add_sub : entity xil_defaultlib.sysgen_addsub_fd3b6c715c 
  port map (
    clr => '0',
    a => const_op_net,
    b => lsw_y_net,
    clk => clk_net,
    ce => ce_net,
    s => add_sub_s_net
  );
  concat : entity xil_defaultlib.sysgen_concat_f4b90dfa16 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    in0 => msw_y_net,
    in1 => add_sub_s_net,
    y => concat_y_net
  );
  const : entity xil_defaultlib.sysgen_constant_a7b8778750 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => const_op_net
  );
  convert_addr : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 10,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 10,
    latency => 0,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => add_del_q_net,
    clk => clk_net,
    ce => ce_net,
    dout => convert_addr_dout_net
  );
  lsw : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 0,
    new_msb => 0,
    x_width => 10,
    y_width => 1
  )
  port map (
    x => convert_addr_dout_net,
    y => lsw_y_net
  );
  manipulate : entity xil_defaultlib.sysgen_constant_a7b8778750 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => manipulate_op_net
  );
  msw : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 1,
    new_msb => 9,
    x_width => 10,
    y_width => 9
  )
  port map (
    x => convert_addr_dout_net,
    y => msw_y_net
  );
  mux : entity xil_defaultlib.sysgen_mux_4417594854 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    sel => manipulate_op_net,
    d0 => convert_addr_dout_net,
    d1 => concat_y_net,
    y => mux_y_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot0_45/ss/bram/munge_in
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_munge_in_x21 is
  port (
    din : in std_logic_vector( 32-1 downto 0 );
    dout : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_munge_in_x21;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_munge_in_x21 is 
  signal reinterpret_out_output_port_net : std_logic_vector( 32-1 downto 0 );
  signal dat_del_q_net : std_logic_vector( 32-1 downto 0 );
begin
  dout <= reinterpret_out_output_port_net;
  dat_del_q_net <= din;
  reinterpret_out : entity xil_defaultlib.sysgen_reinterpret_52bb84f12b 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => dat_del_q_net,
    output_port => reinterpret_out_output_port_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot0_45/ss/bram
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_bram_x22 is
  port (
    addr : in std_logic_vector( 10-1 downto 0 );
    data_in : in std_logic_vector( 32-1 downto 0 );
    we : in std_logic_vector( 1-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_45_ss_bram_addr : out std_logic_vector( 10-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_45_ss_bram_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_45_ss_bram_we : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_bram_x22;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_bram_x22 is 
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal mux_y_net : std_logic_vector( 10-1 downto 0 );
  signal reinterpret_out_output_port_net : std_logic_vector( 32-1 downto 0 );
  signal add_del_q_net : std_logic_vector( 10-1 downto 0 );
  signal dat_del_q_net : std_logic_vector( 32-1 downto 0 );
  signal we_del_q_net : std_logic_vector( 1-1 downto 0 );
  signal convert_addr_dout_net : std_logic_vector( 10-1 downto 0 );
  signal convert_din1_dout_net : std_logic_vector( 32-1 downto 0 );
  signal convert_we_dout_net : std_logic_vector( 1-1 downto 0 );
begin
  add_del_q_net <= addr;
  dat_del_q_net <= data_in;
  we_del_q_net <= we;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_45_ss_bram_addr <= convert_addr_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_45_ss_bram_data_in <= convert_din1_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_45_ss_bram_we <= convert_we_dout_net;
  clk_net <= clk_1;
  ce_net <= ce_1;
  calc_add : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_calc_add_x21 
  port map (
    in_x0 => add_del_q_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    out_x0 => mux_y_net
  );
  munge_in : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_munge_in_x21 
  port map (
    din => dat_del_q_net,
    dout => reinterpret_out_output_port_net
  );
  convert_addr : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 10,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 10,
    latency => 0,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => mux_y_net,
    clk => clk_net,
    ce => ce_net,
    dout => convert_addr_dout_net
  );
  convert_din1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 32,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 32,
    latency => 0,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => reinterpret_out_output_port_net,
    clk => clk_net,
    ce => ce_net,
    dout => convert_din1_dout_net
  );
  convert_we : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 1,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 1,
    latency => 0,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => we_del_q_net,
    clk => clk_net,
    ce => ce_net,
    dout => convert_we_dout_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot0_45/ss/ctrl
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_ctrl_x20 is
  port (
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_45_ss_ctrl_user_data_out : in std_logic_vector( 32-1 downto 0 );
    in_reg : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_ctrl_x20;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_ctrl_x20 is 
  signal reint1_output_port_net : std_logic_vector( 32-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_45_ss_ctrl_user_data_out_net : std_logic_vector( 32-1 downto 0 );
  signal io_delay_q_net : std_logic_vector( 32-1 downto 0 );
  signal slice_reg_y_net : std_logic_vector( 32-1 downto 0 );
begin
  in_reg <= reint1_output_port_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_45_ss_ctrl_user_data_out_net <= rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_45_ss_ctrl_user_data_out;
  io_delay : entity xil_defaultlib.sysgen_delay_34e314c510 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d => rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_45_ss_ctrl_user_data_out_net,
    q => io_delay_q_net
  );
  slice_reg : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 0,
    new_msb => 31,
    x_width => 32,
    y_width => 32
  )
  port map (
    x => io_delay_q_net,
    y => slice_reg_y_net
  );
  reint1 : entity xil_defaultlib.sysgen_reinterpret_52bb84f12b 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => slice_reg_y_net,
    output_port => reint1_output_port_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot0_45/ss/ctrl_combine
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_ctrl_combine_x20 is
  port (
    in1 : in std_logic_vector( 28-1 downto 0 );
    in2 : in std_logic_vector( 1-1 downto 0 );
    in3 : in std_logic_vector( 2-1 downto 0 );
    in4 : in std_logic_vector( 1-1 downto 0 );
    bus_out : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_ctrl_combine_x20;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_ctrl_combine_x20 is 
  signal concatenate_y_net : std_logic_vector( 32-1 downto 0 );
  signal reinterpret4_output_port_net_x0 : std_logic_vector( 28-1 downto 0 );
  signal circ_or_y_net : std_logic_vector( 1-1 downto 0 );
  signal reinterpret2_output_port_net : std_logic_vector( 2-1 downto 0 );
  signal arm_or_y_net : std_logic_vector( 1-1 downto 0 );
  signal reinterpret1_output_port_net : std_logic_vector( 28-1 downto 0 );
  signal reinterpret2_output_port_net_x0 : std_logic_vector( 1-1 downto 0 );
  signal reinterpret3_output_port_net : std_logic_vector( 2-1 downto 0 );
  signal reinterpret4_output_port_net : std_logic_vector( 1-1 downto 0 );
begin
  bus_out <= concatenate_y_net;
  reinterpret4_output_port_net_x0 <= in1;
  circ_or_y_net <= in2;
  reinterpret2_output_port_net <= in3;
  arm_or_y_net <= in4;
  concatenate : entity xil_defaultlib.sysgen_concat_8611e618a5 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    in0 => reinterpret1_output_port_net,
    in1 => reinterpret2_output_port_net_x0,
    in2 => reinterpret3_output_port_net,
    in3 => reinterpret4_output_port_net,
    y => concatenate_y_net
  );
  reinterpret1 : entity xil_defaultlib.sysgen_reinterpret_f7e0b72e82 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => reinterpret4_output_port_net_x0,
    output_port => reinterpret1_output_port_net
  );
  reinterpret2 : entity xil_defaultlib.sysgen_reinterpret_317b92931a 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => circ_or_y_net,
    output_port => reinterpret2_output_port_net_x0
  );
  reinterpret3 : entity xil_defaultlib.sysgen_reinterpret_5dc9f217bd 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => reinterpret2_output_port_net,
    output_port => reinterpret3_output_port_net
  );
  reinterpret4 : entity xil_defaultlib.sysgen_reinterpret_317b92931a 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => arm_or_y_net,
    output_port => reinterpret4_output_port_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot0_45/ss/ctrl_split
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_ctrl_split_x20 is
  port (
    bus_in : in std_logic_vector( 32-1 downto 0 );
    msb_out4 : out std_logic_vector( 28-1 downto 0 );
    out3 : out std_logic_vector( 1-1 downto 0 );
    out2 : out std_logic_vector( 2-1 downto 0 );
    lsb_out1 : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_ctrl_split_x20;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_ctrl_split_x20 is 
  signal reinterpret4_output_port_net : std_logic_vector( 28-1 downto 0 );
  signal slice3_y_net : std_logic_vector( 1-1 downto 0 );
  signal reinterpret2_output_port_net : std_logic_vector( 2-1 downto 0 );
  signal slice1_y_net : std_logic_vector( 1-1 downto 0 );
  signal reint1_output_port_net : std_logic_vector( 32-1 downto 0 );
  signal slice2_y_net : std_logic_vector( 2-1 downto 0 );
  signal slice4_y_net : std_logic_vector( 28-1 downto 0 );
begin
  msb_out4 <= reinterpret4_output_port_net;
  out3 <= slice3_y_net;
  out2 <= reinterpret2_output_port_net;
  lsb_out1 <= slice1_y_net;
  reint1_output_port_net <= bus_in;
  reinterpret2 : entity xil_defaultlib.sysgen_reinterpret_5dc9f217bd 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => slice2_y_net,
    output_port => reinterpret2_output_port_net
  );
  reinterpret4 : entity xil_defaultlib.sysgen_reinterpret_f7e0b72e82 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => slice4_y_net,
    output_port => reinterpret4_output_port_net
  );
  slice1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 0,
    new_msb => 0,
    x_width => 32,
    y_width => 1
  )
  port map (
    x => reint1_output_port_net,
    y => slice1_y_net
  );
  slice2 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 1,
    new_msb => 2,
    x_width => 32,
    y_width => 2
  )
  port map (
    x => reint1_output_port_net,
    y => slice2_y_net
  );
  slice3 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 3,
    new_msb => 3,
    x_width => 32,
    y_width => 1
  )
  port map (
    x => reint1_output_port_net,
    y => slice3_y_net
  );
  slice4 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 4,
    new_msb => 31,
    x_width => 32,
    y_width => 28
  )
  port map (
    x => reint1_output_port_net,
    y => slice4_y_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot0_45/ss/status
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_status_x20 is
  port (
    out_reg : in std_logic_vector( 32-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_45_ss_status_user_data_in : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_status_x20;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_status_x20 is 
  signal concat_y_net : std_logic_vector( 32-1 downto 0 );
  signal cast_gw_dout_net : std_logic_vector( 32-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal io_delay_q_net : std_logic_vector( 32-1 downto 0 );
  signal reint1_output_port_net : std_logic_vector( 32-1 downto 0 );
  signal assert_reg_dout_net : std_logic_vector( 32-1 downto 0 );
begin
  concat_y_net <= out_reg;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_45_ss_status_user_data_in <= cast_gw_dout_net;
  clk_net <= clk_1;
  ce_net <= ce_1;
  io_delay : entity xil_defaultlib.sysgen_delay_34e314c510 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d => reint1_output_port_net,
    q => io_delay_q_net
  );
  cast_gw : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 32,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 32,
    latency => 1,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => io_delay_q_net,
    clk => clk_net,
    ce => ce_net,
    dout => cast_gw_dout_net
  );
  assert_reg : entity xil_defaultlib.xlpassthrough 
  generic map (
    din_width => 32,
    dout_width => 32
  )
  port map (
    din => concat_y_net,
    dout => assert_reg_dout_net
  );
  reint1 : entity xil_defaultlib.sysgen_reinterpret_52bb84f12b 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => assert_reg_dout_net,
    output_port => reint1_output_port_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot0_45/ss
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_ss_x22 is
  port (
    din : in std_logic_vector( 32-1 downto 0 );
    we : in std_logic_vector( 1-1 downto 0 );
    trig : in std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_45_ss_ctrl_user_data_out : in std_logic_vector( 32-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    arm_out : out std_logic_vector( 1-1 downto 0 );
    goto_120440614_we1 : out std_logic_vector( 1-1 downto 0 );
    goto_120440614_we4 : out std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_45_ss_bram_addr : out std_logic_vector( 10-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_45_ss_bram_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_45_ss_bram_we : out std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_45_ss_status_user_data_in : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_ss_x22;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_ss_x22 is 
  signal arm_or_y_net : std_logic_vector( 1-1 downto 0 );
  signal concatenate_y_net : std_logic_vector( 32-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc0_sync_net : std_logic_vector( 1-1 downto 0 );
  signal edge_op_y_net_x0 : std_logic_vector( 1-1 downto 0 );
  signal we_choice_y_net : std_logic_vector( 1-1 downto 0 );
  signal logical6_y_net : std_logic_vector( 1-1 downto 0 );
  signal convert_addr_dout_net : std_logic_vector( 10-1 downto 0 );
  signal convert_din1_dout_net : std_logic_vector( 32-1 downto 0 );
  signal convert_we_dout_net : std_logic_vector( 1-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_45_ss_ctrl_user_data_out_net : std_logic_vector( 32-1 downto 0 );
  signal cast_gw_dout_net : std_logic_vector( 32-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal slice2_y_net : std_logic_vector( 10-1 downto 0 );
  signal delay6_q_net : std_logic_vector( 32-1 downto 0 );
  signal concat_y_net : std_logic_vector( 32-1 downto 0 );
  signal data_choice_y_net : std_logic_vector( 32-1 downto 0 );
  signal register6_q_net : std_logic_vector( 1-1 downto 0 );
  signal never_op_net : std_logic_vector( 1-1 downto 0 );
  signal edge_op_y_net_x1 : std_logic_vector( 1-1 downto 0 );
  signal cast_dout_net : std_logic_vector( 32-1 downto 0 );
  signal concatenate_y_net_x0 : std_logic_vector( 32-1 downto 0 );
  signal add_del_q_net : std_logic_vector( 10-1 downto 0 );
  signal dat_del_q_net : std_logic_vector( 32-1 downto 0 );
  signal we_del_q_net : std_logic_vector( 1-1 downto 0 );
  signal reint1_output_port_net : std_logic_vector( 32-1 downto 0 );
  signal reinterpret4_output_port_net : std_logic_vector( 28-1 downto 0 );
  signal circ_or_y_net : std_logic_vector( 1-1 downto 0 );
  signal reinterpret2_output_port_net : std_logic_vector( 2-1 downto 0 );
  signal slice3_y_net : std_logic_vector( 1-1 downto 0 );
  signal slice1_y_net : std_logic_vector( 1-1 downto 0 );
  signal arm_op_net : std_logic_vector( 1-1 downto 0 );
  signal ri_output_port_net : std_logic_vector( 32-1 downto 0 );
  signal circ_op_net : std_logic_vector( 1-1 downto 0 );
begin
  arm_out <= arm_or_y_net;
  concatenate_y_net <= din;
  rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc0_sync_net <= we;
  edge_op_y_net_x0 <= trig;
  goto_120440614_we1 <= we_choice_y_net;
  goto_120440614_we4 <= logical6_y_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_45_ss_bram_addr <= convert_addr_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_45_ss_bram_data_in <= convert_din1_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_45_ss_bram_we <= convert_we_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_45_ss_ctrl_user_data_out_net <= rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_45_ss_ctrl_user_data_out;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_45_ss_status_user_data_in <= cast_gw_dout_net;
  clk_net <= clk_1;
  ce_net <= ce_1;
  add_gen : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_add_gen_x22 
  port map (
    din => data_choice_y_net,
    we => we_choice_y_net,
    go => register6_q_net,
    cont => never_op_net,
    init => edge_op_y_net_x1,
    clk_1 => clk_net,
    ce_1 => ce_net,
    add => slice2_y_net,
    dout => delay6_q_net,
    we_o => logical6_y_net,
    status => concat_y_net
  );
  basic_ctrl : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_basic_ctrl_x22 
  port map (
    din => cast_dout_net,
    we => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc0_sync_net,
    trig => edge_op_y_net_x0,
    ctrl => concatenate_y_net_x0,
    stopi => never_op_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    dout => data_choice_y_net,
    we_o => we_choice_y_net,
    go => register6_q_net,
    init => edge_op_y_net_x1
  );
  bram : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_bram_x22 
  port map (
    addr => add_del_q_net,
    data_in => dat_del_q_net,
    we => we_del_q_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_45_ss_bram_addr => convert_addr_dout_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_45_ss_bram_data_in => convert_din1_dout_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_45_ss_bram_we => convert_we_dout_net
  );
  ctrl : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_ctrl_x20 
  port map (
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_45_ss_ctrl_user_data_out => rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_45_ss_ctrl_user_data_out_net,
    in_reg => reint1_output_port_net
  );
  ctrl_combine : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_ctrl_combine_x20 
  port map (
    in1 => reinterpret4_output_port_net,
    in2 => circ_or_y_net,
    in3 => reinterpret2_output_port_net,
    in4 => arm_or_y_net,
    bus_out => concatenate_y_net_x0
  );
  ctrl_split : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_ctrl_split_x20 
  port map (
    bus_in => reint1_output_port_net,
    msb_out4 => reinterpret4_output_port_net,
    out3 => slice3_y_net,
    out2 => reinterpret2_output_port_net,
    lsb_out1 => slice1_y_net
  );
  status : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_status_x20 
  port map (
    out_reg => concat_y_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_45_ss_status_user_data_in => cast_gw_dout_net
  );
  add_del : entity xil_defaultlib.sysgen_delay_4e9264ffdf 
  port map (
    clr => '0',
    d => slice2_y_net,
    clk => clk_net,
    ce => ce_net,
    q => add_del_q_net
  );
  arm : entity xil_defaultlib.sysgen_constant_a7b8778750 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => arm_op_net
  );
  arm_or : entity xil_defaultlib.sysgen_logical_d7dc12cf31 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => slice1_y_net,
    d1 => arm_op_net,
    y => arm_or_y_net
  );
  cast : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 32,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 32,
    latency => 0,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => ri_output_port_net,
    clk => clk_net,
    ce => ce_net,
    dout => cast_dout_net
  );
  circ : entity xil_defaultlib.sysgen_constant_a7b8778750 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => circ_op_net
  );
  circ_or : entity xil_defaultlib.sysgen_logical_d7dc12cf31 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => slice3_y_net,
    d1 => circ_op_net,
    y => circ_or_y_net
  );
  dat_del : entity xil_defaultlib.sysgen_delay_5ec362a23c 
  port map (
    clr => '0',
    d => delay6_q_net,
    clk => clk_net,
    ce => ce_net,
    q => dat_del_q_net
  );
  never : entity xil_defaultlib.sysgen_constant_a7b8778750 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => never_op_net
  );
  ri : entity xil_defaultlib.sysgen_reinterpret_52bb84f12b 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => concatenate_y_net,
    output_port => ri_output_port_net
  );
  we_del : entity xil_defaultlib.sysgen_delay_e0740ee3f9 
  port map (
    clr => '0',
    d => logical6_y_net,
    clk => clk_net,
    ce => ce_net,
    q => we_del_q_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot0_45
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_45 is
  port (
    in_d0 : in std_logic_vector( 16-1 downto 0 );
    in_d1 : in std_logic_vector( 16-1 downto 0 );
    we : in std_logic_vector( 1-1 downto 0 );
    trig : in std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_45_ss_ctrl_user_data_out : in std_logic_vector( 32-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    arm_out : out std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_45_ss_bram_addr : out std_logic_vector( 10-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_45_ss_bram_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_45_ss_bram_we : out std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_45_ss_status_user_data_in : out std_logic_vector( 32-1 downto 0 );
    goto_120440614_we1 : out std_logic_vector( 1-1 downto 0 );
    goto_120440614_we4 : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_45;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_45 is 
  signal arm_or_y_net : std_logic_vector( 1-1 downto 0 );
  signal slice2_y_net : std_logic_vector( 16-1 downto 0 );
  signal slice5_y_net : std_logic_vector( 16-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc0_sync_net : std_logic_vector( 1-1 downto 0 );
  signal edge_op_y_net : std_logic_vector( 1-1 downto 0 );
  signal convert_addr_dout_net : std_logic_vector( 10-1 downto 0 );
  signal convert_din1_dout_net : std_logic_vector( 32-1 downto 0 );
  signal convert_we_dout_net : std_logic_vector( 1-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_45_ss_ctrl_user_data_out_net : std_logic_vector( 32-1 downto 0 );
  signal cast_gw_dout_net : std_logic_vector( 32-1 downto 0 );
  signal we_choice_y_net : std_logic_vector( 1-1 downto 0 );
  signal logical6_y_net : std_logic_vector( 1-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal concatenate_y_net : std_logic_vector( 32-1 downto 0 );
  signal assert_d0_dout_net : std_logic_vector( 16-1 downto 0 );
  signal assert_d1_dout_net : std_logic_vector( 16-1 downto 0 );
begin
  arm_out <= arm_or_y_net;
  slice2_y_net <= in_d0;
  slice5_y_net <= in_d1;
  rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc0_sync_net <= we;
  edge_op_y_net <= trig;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_45_ss_bram_addr <= convert_addr_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_45_ss_bram_data_in <= convert_din1_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_45_ss_bram_we <= convert_we_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_45_ss_ctrl_user_data_out_net <= rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_45_ss_ctrl_user_data_out;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_45_ss_status_user_data_in <= cast_gw_dout_net;
  goto_120440614_we1 <= we_choice_y_net;
  goto_120440614_we4 <= logical6_y_net;
  clk_net <= clk_1;
  ce_net <= ce_1;
  buscreate : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_buscreate_x22 
  port map (
    in1 => assert_d0_dout_net,
    in2 => assert_d1_dout_net,
    bus_out => concatenate_y_net
  );
  ss : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_ss_x22 
  port map (
    din => concatenate_y_net,
    we => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc0_sync_net,
    trig => edge_op_y_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_45_ss_ctrl_user_data_out => rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_45_ss_ctrl_user_data_out_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    arm_out => arm_or_y_net,
    goto_120440614_we1 => we_choice_y_net,
    goto_120440614_we4 => logical6_y_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_45_ss_bram_addr => convert_addr_dout_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_45_ss_bram_data_in => convert_din1_dout_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_45_ss_bram_we => convert_we_dout_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_45_ss_status_user_data_in => cast_gw_dout_net
  );
  assert_d0 : entity xil_defaultlib.xlpassthrough 
  generic map (
    din_width => 16,
    dout_width => 16
  )
  port map (
    din => slice2_y_net,
    dout => assert_d0_dout_net
  );
  assert_d1 : entity xil_defaultlib.xlpassthrough 
  generic map (
    din_width => 16,
    dout_width => 16
  )
  port map (
    din => slice5_y_net,
    dout => assert_d1_dout_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot0_67/buscreate
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_buscreate_x21 is
  port (
    in1 : in std_logic_vector( 16-1 downto 0 );
    in2 : in std_logic_vector( 16-1 downto 0 );
    bus_out : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_buscreate_x21;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_buscreate_x21 is 
  signal concatenate_y_net : std_logic_vector( 32-1 downto 0 );
  signal assert_d0_dout_net : std_logic_vector( 16-1 downto 0 );
  signal assert_d1_dout_net : std_logic_vector( 16-1 downto 0 );
  signal reinterpret1_output_port_net : std_logic_vector( 16-1 downto 0 );
  signal reinterpret2_output_port_net : std_logic_vector( 16-1 downto 0 );
begin
  bus_out <= concatenate_y_net;
  assert_d0_dout_net <= in1;
  assert_d1_dout_net <= in2;
  concatenate : entity xil_defaultlib.sysgen_concat_37649e01d1 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    in0 => reinterpret1_output_port_net,
    in1 => reinterpret2_output_port_net,
    y => concatenate_y_net
  );
  reinterpret1 : entity xil_defaultlib.sysgen_reinterpret_03c8cdbbc1 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => assert_d0_dout_net,
    output_port => reinterpret1_output_port_net
  );
  reinterpret2 : entity xil_defaultlib.sysgen_reinterpret_03c8cdbbc1 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => assert_d1_dout_net,
    output_port => reinterpret2_output_port_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot0_67/ss/add_gen/edge_detect
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x44 is
  port (
    in_x0 : in std_logic_vector( 1-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    out_x0 : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x44;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x44 is 
  signal edge_op_y_net : std_logic_vector( 1-1 downto 0 );
  signal slice3_y_net : std_logic_vector( 1-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal delay_q_net : std_logic_vector( 1-1 downto 0 );
  signal inverter_op_net : std_logic_vector( 1-1 downto 0 );
begin
  out_x0 <= edge_op_y_net;
  slice3_y_net <= in_x0;
  clk_net <= clk_1;
  ce_net <= ce_1;
  delay : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 1
  )
  port map (
    en => '1',
    rst => '1',
    d => slice3_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay_q_net
  );
  inverter : entity xil_defaultlib.sysgen_inverter_6233897471 
  port map (
    clr => '0',
    ip => slice3_y_net,
    clk => clk_net,
    ce => ce_net,
    op => inverter_op_net
  );
  edge_op : entity xil_defaultlib.sysgen_logical_9cc14fefba 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => inverter_op_net,
    d1 => delay_q_net,
    y => edge_op_y_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot0_67/ss/add_gen
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_add_gen_x21 is
  port (
    din : in std_logic_vector( 32-1 downto 0 );
    we : in std_logic_vector( 1-1 downto 0 );
    go : in std_logic_vector( 1-1 downto 0 );
    cont : in std_logic_vector( 1-1 downto 0 );
    init : in std_logic_vector( 1-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    add : out std_logic_vector( 10-1 downto 0 );
    dout : out std_logic_vector( 32-1 downto 0 );
    we_o : out std_logic_vector( 1-1 downto 0 );
    status : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_add_gen_x21;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_add_gen_x21 is 
  signal slice2_y_net : std_logic_vector( 10-1 downto 0 );
  signal delay6_q_net : std_logic_vector( 32-1 downto 0 );
  signal logical6_y_net : std_logic_vector( 1-1 downto 0 );
  signal concat_y_net : std_logic_vector( 32-1 downto 0 );
  signal data_choice_y_net : std_logic_vector( 32-1 downto 0 );
  signal we_choice_y_net : std_logic_vector( 1-1 downto 0 );
  signal register6_q_net : std_logic_vector( 1-1 downto 0 );
  signal never_op_net : std_logic_vector( 1-1 downto 0 );
  signal edge_op_y_net : std_logic_vector( 1-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal edge_op_y_net_x0 : std_logic_vector( 1-1 downto 0 );
  signal slice3_y_net : std_logic_vector( 1-1 downto 0 );
  signal shift_op_net : std_logic_vector( 19-1 downto 0 );
  signal inverter_op_net : std_logic_vector( 1-1 downto 0 );
  signal delay1_q_net : std_logic_vector( 12-1 downto 0 );
  signal convert_dout_net : std_logic_vector( 19-1 downto 0 );
  signal register5_q_net : std_logic_vector( 1-1 downto 0 );
  signal delay_q_net : std_logic_vector( 1-1 downto 0 );
  signal delay4_q_net : std_logic_vector( 1-1 downto 0 );
  signal slice1_y_net : std_logic_vector( 12-1 downto 0 );
  signal delay3_q_net : std_logic_vector( 1-1 downto 0 );
  signal inverter1_op_net : std_logic_vector( 1-1 downto 0 );
  signal logical1_y_net : std_logic_vector( 1-1 downto 0 );
  signal logical4_y_net : std_logic_vector( 1-1 downto 0 );
  signal add_gen_op_net : std_logic_vector( 13-1 downto 0 );
begin
  add <= slice2_y_net;
  dout <= delay6_q_net;
  we_o <= logical6_y_net;
  status <= concat_y_net;
  data_choice_y_net <= din;
  we_choice_y_net <= we;
  register6_q_net <= go;
  never_op_net <= cont;
  edge_op_y_net <= init;
  clk_net <= clk_1;
  ce_net <= ce_1;
  edge_detect : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x44 
  port map (
    in_x0 => slice3_y_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    out_x0 => edge_op_y_net_x0
  );
  concat : entity xil_defaultlib.sysgen_concat_fc8edfac0e 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    in0 => shift_op_net,
    in1 => inverter_op_net,
    in2 => delay1_q_net,
    y => concat_y_net
  );
  convert : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 1,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 19,
    latency => 0,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => register5_q_net,
    clk => clk_net,
    ce => ce_net,
    dout => convert_dout_net
  );
  delay : entity xil_defaultlib.sysgen_delay_e0740ee3f9 
  port map (
    clr => '0',
    d => delay4_q_net,
    clk => clk_net,
    ce => ce_net,
    q => delay_q_net
  );
  delay1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 12
  )
  port map (
    en => '1',
    rst => '1',
    d => slice1_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay1_q_net
  );
  delay3 : entity xil_defaultlib.sysgen_delay_e0740ee3f9 
  port map (
    clr => '0',
    d => never_op_net,
    clk => clk_net,
    ce => ce_net,
    q => delay3_q_net
  );
  delay4 : entity xil_defaultlib.sysgen_delay_e0740ee3f9 
  port map (
    clr => '0',
    d => edge_op_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay4_q_net
  );
  delay6 : entity xil_defaultlib.sysgen_delay_5ec362a23c 
  port map (
    clr => '0',
    d => data_choice_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay6_q_net
  );
  inverter : entity xil_defaultlib.sysgen_inverter_918b6bc6d0 
  port map (
    clr => '0',
    ip => register5_q_net,
    clk => clk_net,
    ce => ce_net,
    op => inverter_op_net
  );
  inverter1 : entity xil_defaultlib.sysgen_inverter_6233897471 
  port map (
    clr => '0',
    ip => edge_op_y_net_x0,
    clk => clk_net,
    ce => ce_net,
    op => inverter1_op_net
  );
  logical1 : entity xil_defaultlib.sysgen_logical_2486129911 
  port map (
    clr => '0',
    d0 => we_choice_y_net,
    d1 => register6_q_net,
    clk => clk_net,
    ce => ce_net,
    y => logical1_y_net
  );
  logical4 : entity xil_defaultlib.sysgen_logical_d7dc12cf31 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => delay3_q_net,
    d1 => inverter1_op_net,
    y => logical4_y_net
  );
  logical6 : entity xil_defaultlib.sysgen_logical_c05fefc67b 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => register5_q_net,
    d1 => logical4_y_net,
    d2 => logical1_y_net,
    y => logical6_y_net
  );
  register5 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlregister 
  generic map (
    d_width => 1,
    init_value => b"1"
  )
  port map (
    d => delay3_q_net,
    rst => delay_q_net,
    en => edge_op_y_net_x0,
    clk => clk_net,
    ce => ce_net,
    q => register5_q_net
  );
  shift : entity xil_defaultlib.sysgen_shift_5af4fe0a99 
  port map (
    clr => '0',
    ip => convert_dout_net,
    clk => clk_net,
    ce => ce_net,
    op => shift_op_net
  );
  add_gen : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlcounter_free 
  generic map (
    core_name0 => "rfdc_multi_eight_adcs_2048gsps_mts_c_counter_binary_v12_0_i1",
    op_arith => xlUnsigned,
    op_width => 13
  )
  port map (
    clr => '0',
    rst => delay4_q_net,
    en => logical6_y_net,
    clk => clk_net,
    ce => ce_net,
    op => add_gen_op_net
  );
  slice1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 0,
    new_msb => 11,
    x_width => 13,
    y_width => 12
  )
  port map (
    x => add_gen_op_net,
    y => slice1_y_net
  );
  slice2 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 2,
    new_msb => 11,
    x_width => 13,
    y_width => 10
  )
  port map (
    x => add_gen_op_net,
    y => slice2_y_net
  );
  slice3 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 12,
    new_msb => 12,
    x_width => 13,
    y_width => 1
  )
  port map (
    x => add_gen_op_net,
    y => slice3_y_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot0_67/ss/basic_ctrl/dram_munge
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_dram_munge_x21 is
  port (
    din : in std_logic_vector( 32-1 downto 0 );
    we : in std_logic_vector( 1-1 downto 0 );
    init : in std_logic_vector( 1-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    dout : out std_logic_vector( 32-1 downto 0 );
    we_o : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_dram_munge_x21;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_dram_munge_x21 is 
  signal data_choice_y_net : std_logic_vector( 32-1 downto 0 );
  signal we_choice_y_net : std_logic_vector( 1-1 downto 0 );
  signal cast_dout_net : std_logic_vector( 32-1 downto 0 );
  signal mux1_y_net_x0 : std_logic_vector( 1-1 downto 0 );
  signal edge_op_y_net : std_logic_vector( 1-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal concat_y_net : std_logic_vector( 80-1 downto 0 );
  signal constant_op_net : std_logic_vector( 8-1 downto 0 );
  signal register_q_net : std_logic_vector( 32-1 downto 0 );
  signal register1_q_net : std_logic_vector( 32-1 downto 0 );
  signal concat1_y_net : std_logic_vector( 80-1 downto 0 );
  signal register2_q_net : std_logic_vector( 32-1 downto 0 );
  signal register3_q_net : std_logic_vector( 32-1 downto 0 );
  signal delay_q_net : std_logic_vector( 1-1 downto 0 );
  signal logical_y_net : std_logic_vector( 1-1 downto 0 );
  signal delay1_q_net : std_logic_vector( 1-1 downto 0 );
  signal logical1_y_net : std_logic_vector( 1-1 downto 0 );
  signal relational3_op_net : std_logic_vector( 1-1 downto 0 );
  signal mux1_y_net : std_logic_vector( 80-1 downto 0 );
  signal dout_count_op_net : std_logic_vector( 1-1 downto 0 );
  signal relational_op_net : std_logic_vector( 1-1 downto 0 );
  signal relational1_op_net : std_logic_vector( 1-1 downto 0 );
  signal relational2_op_net : std_logic_vector( 1-1 downto 0 );
  signal input_count_op_net : std_logic_vector( 2-1 downto 0 );
  signal con0_op_net : std_logic_vector( 2-1 downto 0 );
  signal con1_op_net : std_logic_vector( 2-1 downto 0 );
  signal con2_op_net : std_logic_vector( 2-1 downto 0 );
  signal con3_op_net : std_logic_vector( 2-1 downto 0 );
  signal dram_op_net : std_logic_vector( 1-1 downto 0 );
begin
  dout <= data_choice_y_net;
  we_o <= we_choice_y_net;
  cast_dout_net <= din;
  mux1_y_net_x0 <= we;
  edge_op_y_net <= init;
  clk_net <= clk_1;
  ce_net <= ce_1;
  concat : entity xil_defaultlib.sysgen_concat_e7487baac7 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    in0 => constant_op_net,
    in1 => register_q_net,
    in2 => constant_op_net,
    in3 => register1_q_net,
    y => concat_y_net
  );
  concat1 : entity xil_defaultlib.sysgen_concat_e7487baac7 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    in0 => constant_op_net,
    in1 => register2_q_net,
    in2 => constant_op_net,
    in3 => register3_q_net,
    y => concat1_y_net
  );
  constant_x0 : entity xil_defaultlib.sysgen_constant_869e31f04d 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => constant_op_net
  );
  delay : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 1
  )
  port map (
    en => '1',
    rst => '1',
    d => logical_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay_q_net
  );
  delay1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 1
  )
  port map (
    en => '1',
    rst => '1',
    d => logical1_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay1_q_net
  );
  logical : entity xil_defaultlib.sysgen_logical_2486129911 
  port map (
    clr => '0',
    d0 => relational3_op_net,
    d1 => mux1_y_net_x0,
    clk => clk_net,
    ce => ce_net,
    y => logical_y_net
  );
  logical1 : entity xil_defaultlib.sysgen_logical_d7dc12cf31 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => logical_y_net,
    d1 => delay_q_net,
    y => logical1_y_net
  );
  mux1 : entity xil_defaultlib.sysgen_mux_71ee2b1026 
  port map (
    clr => '0',
    sel => dout_count_op_net,
    d0 => concat_y_net,
    d1 => concat1_y_net,
    clk => clk_net,
    ce => ce_net,
    y => mux1_y_net
  );
  register_x0 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlregister 
  generic map (
    d_width => 32,
    init_value => b"00000000000000000000000000000000"
  )
  port map (
    rst => "0",
    d => cast_dout_net,
    en => relational_op_net,
    clk => clk_net,
    ce => ce_net,
    q => register_q_net
  );
  register1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlregister 
  generic map (
    d_width => 32,
    init_value => b"00000000000000000000000000000000"
  )
  port map (
    rst => "0",
    d => cast_dout_net,
    en => relational1_op_net,
    clk => clk_net,
    ce => ce_net,
    q => register1_q_net
  );
  register2 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlregister 
  generic map (
    d_width => 32,
    init_value => b"00000000000000000000000000000000"
  )
  port map (
    rst => "0",
    d => cast_dout_net,
    en => relational2_op_net,
    clk => clk_net,
    ce => ce_net,
    q => register2_q_net
  );
  register3 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlregister 
  generic map (
    d_width => 32,
    init_value => b"00000000000000000000000000000000"
  )
  port map (
    rst => "0",
    d => cast_dout_net,
    en => relational3_op_net,
    clk => clk_net,
    ce => ce_net,
    q => register3_q_net
  );
  relational : entity xil_defaultlib.sysgen_relational_e5d6b5eaca 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    a => input_count_op_net,
    b => con0_op_net,
    op => relational_op_net
  );
  relational1 : entity xil_defaultlib.sysgen_relational_e5d6b5eaca 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    a => input_count_op_net,
    b => con1_op_net,
    op => relational1_op_net
  );
  relational2 : entity xil_defaultlib.sysgen_relational_e5d6b5eaca 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    a => input_count_op_net,
    b => con2_op_net,
    op => relational2_op_net
  );
  relational3 : entity xil_defaultlib.sysgen_relational_e5d6b5eaca 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    a => input_count_op_net,
    b => con3_op_net,
    op => relational3_op_net
  );
  con0 : entity xil_defaultlib.sysgen_constant_b58c3a1535 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => con0_op_net
  );
  con1 : entity xil_defaultlib.sysgen_constant_d3f27a6354 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => con1_op_net
  );
  con2 : entity xil_defaultlib.sysgen_constant_2fa4689d4e 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => con2_op_net
  );
  con3 : entity xil_defaultlib.sysgen_constant_31bab66ba6 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => con3_op_net
  );
  data_choice : entity xil_defaultlib.sysgen_mux_d624c1af44 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    sel => dram_op_net,
    d0 => cast_dout_net,
    d1 => mux1_y_net,
    y => data_choice_y_net
  );
  dout_count : entity xil_defaultlib.sysgen_counter_a9c1c293c2 
  port map (
    clr => '0',
    rst => edge_op_y_net,
    en => logical1_y_net,
    clk => clk_net,
    ce => ce_net,
    op => dout_count_op_net
  );
  dram : entity xil_defaultlib.sysgen_constant_a7b8778750 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => dram_op_net
  );
  input_count : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlcounter_free 
  generic map (
    core_name0 => "rfdc_multi_eight_adcs_2048gsps_mts_c_counter_binary_v12_0_i2",
    op_arith => xlUnsigned,
    op_width => 2
  )
  port map (
    clr => '0',
    rst => edge_op_y_net,
    en => mux1_y_net_x0,
    clk => clk_net,
    ce => ce_net,
    op => input_count_op_net
  );
  we_choice : entity xil_defaultlib.sysgen_mux_4874190f11 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    sel => dram_op_net,
    d0 => mux1_y_net_x0,
    d1 => delay1_q_net,
    y => we_choice_y_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot0_67/ss/basic_ctrl/edge_detect
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x45 is
  port (
    in_x0 : in std_logic_vector( 1-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    out_x0 : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x45;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x45 is 
  signal edge_op_y_net : std_logic_vector( 1-1 downto 0 );
  signal delay1_q_net : std_logic_vector( 1-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal delay_q_net : std_logic_vector( 1-1 downto 0 );
  signal inverter_op_net : std_logic_vector( 1-1 downto 0 );
begin
  out_x0 <= edge_op_y_net;
  delay1_q_net <= in_x0;
  clk_net <= clk_1;
  ce_net <= ce_1;
  delay : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 1
  )
  port map (
    en => '1',
    rst => '1',
    d => delay1_q_net,
    clk => clk_net,
    ce => ce_net,
    q => delay_q_net
  );
  inverter : entity xil_defaultlib.sysgen_inverter_6233897471 
  port map (
    clr => '0',
    ip => delay1_q_net,
    clk => clk_net,
    ce => ce_net,
    op => inverter_op_net
  );
  edge_op : entity xil_defaultlib.sysgen_logical_0f1aa1e2d7 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => inverter_op_net,
    d1 => delay_q_net,
    y => edge_op_y_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot0_67/ss/basic_ctrl
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_basic_ctrl_x21 is
  port (
    din : in std_logic_vector( 32-1 downto 0 );
    we : in std_logic_vector( 1-1 downto 0 );
    trig : in std_logic_vector( 1-1 downto 0 );
    ctrl : in std_logic_vector( 32-1 downto 0 );
    stopi : in std_logic_vector( 1-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    dout : out std_logic_vector( 32-1 downto 0 );
    we_o : out std_logic_vector( 1-1 downto 0 );
    go : out std_logic_vector( 1-1 downto 0 );
    init : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_basic_ctrl_x21;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_basic_ctrl_x21 is 
  signal data_choice_y_net : std_logic_vector( 32-1 downto 0 );
  signal we_choice_y_net : std_logic_vector( 1-1 downto 0 );
  signal register6_q_net : std_logic_vector( 1-1 downto 0 );
  signal edge_op_y_net_x0 : std_logic_vector( 1-1 downto 0 );
  signal cast_dout_net : std_logic_vector( 32-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc0_sync_net : std_logic_vector( 1-1 downto 0 );
  signal edge_op_y_net : std_logic_vector( 1-1 downto 0 );
  signal concatenate_y_net : std_logic_vector( 32-1 downto 0 );
  signal never_op_net : std_logic_vector( 1-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal mux1_y_net : std_logic_vector( 1-1 downto 0 );
  signal delay1_q_net : std_logic_vector( 1-1 downto 0 );
  signal constant_op_net : std_logic_vector( 1-1 downto 0 );
  signal constant1_op_net : std_logic_vector( 1-1 downto 0 );
  signal constant2_op_net : std_logic_vector( 1-1 downto 0 );
  signal enable_y_net : std_logic_vector( 1-1 downto 0 );
  signal delay2_q_net : std_logic_vector( 1-1 downto 0 );
  signal trig_src_y_net : std_logic_vector( 1-1 downto 0 );
  signal delay3_q_net : std_logic_vector( 1-1 downto 0 );
  signal valid_src_y_net : std_logic_vector( 1-1 downto 0 );
  signal inverter_op_net : std_logic_vector( 1-1 downto 0 );
  signal logical_y_net : std_logic_vector( 1-1 downto 0 );
  signal mux2_y_net : std_logic_vector( 1-1 downto 0 );
  signal register1_q_net : std_logic_vector( 1-1 downto 0 );
begin
  dout <= data_choice_y_net;
  we_o <= we_choice_y_net;
  go <= register6_q_net;
  init <= edge_op_y_net_x0;
  cast_dout_net <= din;
  rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc0_sync_net <= we;
  edge_op_y_net <= trig;
  concatenate_y_net <= ctrl;
  never_op_net <= stopi;
  clk_net <= clk_1;
  ce_net <= ce_1;
  dram_munge : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_dram_munge_x21 
  port map (
    din => cast_dout_net,
    we => mux1_y_net,
    init => edge_op_y_net_x0,
    clk_1 => clk_net,
    ce_1 => ce_net,
    dout => data_choice_y_net,
    we_o => we_choice_y_net
  );
  edge_detect : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x45 
  port map (
    in_x0 => delay1_q_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    out_x0 => edge_op_y_net_x0
  );
  constant_x0 : entity xil_defaultlib.sysgen_constant_c95a0b5efb 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => constant_op_net
  );
  constant1 : entity xil_defaultlib.sysgen_constant_c95a0b5efb 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => constant1_op_net
  );
  constant2 : entity xil_defaultlib.sysgen_constant_c95a0b5efb 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => constant2_op_net
  );
  delay1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 1
  )
  port map (
    en => '1',
    rst => '1',
    d => enable_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay1_q_net
  );
  delay2 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 1
  )
  port map (
    en => '1',
    rst => '1',
    d => trig_src_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay2_q_net
  );
  delay3 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 1
  )
  port map (
    en => '1',
    rst => '1',
    d => valid_src_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay3_q_net
  );
  inverter : entity xil_defaultlib.sysgen_inverter_6233897471 
  port map (
    clr => '0',
    ip => edge_op_y_net_x0,
    clk => clk_net,
    ce => ce_net,
    op => inverter_op_net
  );
  logical : entity xil_defaultlib.sysgen_logical_d26e5cda59 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => mux2_y_net,
    d1 => inverter_op_net,
    y => logical_y_net
  );
  mux1 : entity xil_defaultlib.sysgen_mux_4874190f11 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    sel => delay3_q_net,
    d0 => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc0_sync_net,
    d1 => constant2_op_net,
    y => mux1_y_net
  );
  mux2 : entity xil_defaultlib.sysgen_mux_4874190f11 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    sel => delay2_q_net,
    d0 => edge_op_y_net,
    d1 => constant1_op_net,
    y => mux2_y_net
  );
  register1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlregister 
  generic map (
    d_width => 1,
    init_value => b"0"
  )
  port map (
    d => constant_op_net,
    rst => logical_y_net,
    en => edge_op_y_net_x0,
    clk => clk_net,
    ce => ce_net,
    q => register1_q_net
  );
  register6 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlregister 
  generic map (
    d_width => 1,
    init_value => b"0"
  )
  port map (
    d => mux2_y_net,
    rst => edge_op_y_net_x0,
    en => register1_q_net,
    clk => clk_net,
    ce => ce_net,
    q => register6_q_net
  );
  enable : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 0,
    new_msb => 0,
    x_width => 32,
    y_width => 1
  )
  port map (
    x => concatenate_y_net,
    y => enable_y_net
  );
  trig_src : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 1,
    new_msb => 1,
    x_width => 32,
    y_width => 1
  )
  port map (
    x => concatenate_y_net,
    y => trig_src_y_net
  );
  valid_src : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 2,
    new_msb => 2,
    x_width => 32,
    y_width => 1
  )
  port map (
    x => concatenate_y_net,
    y => valid_src_y_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot0_67/ss/bram/calc_add
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_calc_add_x22 is
  port (
    in_x0 : in std_logic_vector( 10-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    out_x0 : out std_logic_vector( 10-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_calc_add_x22;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_calc_add_x22 is 
  signal mux_y_net : std_logic_vector( 10-1 downto 0 );
  signal add_del_q_net : std_logic_vector( 10-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal add_sub_s_net : std_logic_vector( 1-1 downto 0 );
  signal const_op_net : std_logic_vector( 1-1 downto 0 );
  signal lsw_y_net : std_logic_vector( 1-1 downto 0 );
  signal concat_y_net : std_logic_vector( 10-1 downto 0 );
  signal msw_y_net : std_logic_vector( 9-1 downto 0 );
  signal convert_addr_dout_net : std_logic_vector( 10-1 downto 0 );
  signal manipulate_op_net : std_logic_vector( 1-1 downto 0 );
begin
  out_x0 <= mux_y_net;
  add_del_q_net <= in_x0;
  clk_net <= clk_1;
  ce_net <= ce_1;
  add_sub : entity xil_defaultlib.sysgen_addsub_fd3b6c715c 
  port map (
    clr => '0',
    a => const_op_net,
    b => lsw_y_net,
    clk => clk_net,
    ce => ce_net,
    s => add_sub_s_net
  );
  concat : entity xil_defaultlib.sysgen_concat_f4b90dfa16 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    in0 => msw_y_net,
    in1 => add_sub_s_net,
    y => concat_y_net
  );
  const : entity xil_defaultlib.sysgen_constant_a7b8778750 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => const_op_net
  );
  convert_addr : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 10,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 10,
    latency => 0,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => add_del_q_net,
    clk => clk_net,
    ce => ce_net,
    dout => convert_addr_dout_net
  );
  lsw : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 0,
    new_msb => 0,
    x_width => 10,
    y_width => 1
  )
  port map (
    x => convert_addr_dout_net,
    y => lsw_y_net
  );
  manipulate : entity xil_defaultlib.sysgen_constant_a7b8778750 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => manipulate_op_net
  );
  msw : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 1,
    new_msb => 9,
    x_width => 10,
    y_width => 9
  )
  port map (
    x => convert_addr_dout_net,
    y => msw_y_net
  );
  mux : entity xil_defaultlib.sysgen_mux_4417594854 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    sel => manipulate_op_net,
    d0 => convert_addr_dout_net,
    d1 => concat_y_net,
    y => mux_y_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot0_67/ss/bram/munge_in
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_munge_in_x18 is
  port (
    din : in std_logic_vector( 32-1 downto 0 );
    dout : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_munge_in_x18;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_munge_in_x18 is 
  signal reinterpret_out_output_port_net : std_logic_vector( 32-1 downto 0 );
  signal dat_del_q_net : std_logic_vector( 32-1 downto 0 );
begin
  dout <= reinterpret_out_output_port_net;
  dat_del_q_net <= din;
  reinterpret_out : entity xil_defaultlib.sysgen_reinterpret_52bb84f12b 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => dat_del_q_net,
    output_port => reinterpret_out_output_port_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot0_67/ss/bram
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_bram_x21 is
  port (
    addr : in std_logic_vector( 10-1 downto 0 );
    data_in : in std_logic_vector( 32-1 downto 0 );
    we : in std_logic_vector( 1-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_67_ss_bram_addr : out std_logic_vector( 10-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_67_ss_bram_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_67_ss_bram_we : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_bram_x21;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_bram_x21 is 
  signal add_del_q_net : std_logic_vector( 10-1 downto 0 );
  signal dat_del_q_net : std_logic_vector( 32-1 downto 0 );
  signal we_del_q_net : std_logic_vector( 1-1 downto 0 );
  signal convert_addr_dout_net : std_logic_vector( 10-1 downto 0 );
  signal convert_din1_dout_net : std_logic_vector( 32-1 downto 0 );
  signal convert_we_dout_net : std_logic_vector( 1-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal mux_y_net : std_logic_vector( 10-1 downto 0 );
  signal reinterpret_out_output_port_net : std_logic_vector( 32-1 downto 0 );
begin
  add_del_q_net <= addr;
  dat_del_q_net <= data_in;
  we_del_q_net <= we;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_67_ss_bram_addr <= convert_addr_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_67_ss_bram_data_in <= convert_din1_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_67_ss_bram_we <= convert_we_dout_net;
  clk_net <= clk_1;
  ce_net <= ce_1;
  calc_add : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_calc_add_x22 
  port map (
    in_x0 => add_del_q_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    out_x0 => mux_y_net
  );
  munge_in : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_munge_in_x18 
  port map (
    din => dat_del_q_net,
    dout => reinterpret_out_output_port_net
  );
  convert_addr : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 10,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 10,
    latency => 0,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => mux_y_net,
    clk => clk_net,
    ce => ce_net,
    dout => convert_addr_dout_net
  );
  convert_din1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 32,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 32,
    latency => 0,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => reinterpret_out_output_port_net,
    clk => clk_net,
    ce => ce_net,
    dout => convert_din1_dout_net
  );
  convert_we : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 1,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 1,
    latency => 0,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => we_del_q_net,
    clk => clk_net,
    ce => ce_net,
    dout => convert_we_dout_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot0_67/ss/ctrl
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_ctrl_x16 is
  port (
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_67_ss_ctrl_user_data_out : in std_logic_vector( 32-1 downto 0 );
    in_reg : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_ctrl_x16;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_ctrl_x16 is 
  signal reint1_output_port_net : std_logic_vector( 32-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_67_ss_ctrl_user_data_out_net : std_logic_vector( 32-1 downto 0 );
  signal io_delay_q_net : std_logic_vector( 32-1 downto 0 );
  signal slice_reg_y_net : std_logic_vector( 32-1 downto 0 );
begin
  in_reg <= reint1_output_port_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_67_ss_ctrl_user_data_out_net <= rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_67_ss_ctrl_user_data_out;
  io_delay : entity xil_defaultlib.sysgen_delay_34e314c510 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d => rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_67_ss_ctrl_user_data_out_net,
    q => io_delay_q_net
  );
  slice_reg : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 0,
    new_msb => 31,
    x_width => 32,
    y_width => 32
  )
  port map (
    x => io_delay_q_net,
    y => slice_reg_y_net
  );
  reint1 : entity xil_defaultlib.sysgen_reinterpret_52bb84f12b 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => slice_reg_y_net,
    output_port => reint1_output_port_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot0_67/ss/ctrl_combine
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_ctrl_combine_x16 is
  port (
    in1 : in std_logic_vector( 28-1 downto 0 );
    in2 : in std_logic_vector( 1-1 downto 0 );
    in3 : in std_logic_vector( 2-1 downto 0 );
    in4 : in std_logic_vector( 1-1 downto 0 );
    bus_out : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_ctrl_combine_x16;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_ctrl_combine_x16 is 
  signal concatenate_y_net : std_logic_vector( 32-1 downto 0 );
  signal reinterpret4_output_port_net_x0 : std_logic_vector( 28-1 downto 0 );
  signal circ_or_y_net : std_logic_vector( 1-1 downto 0 );
  signal reinterpret2_output_port_net : std_logic_vector( 2-1 downto 0 );
  signal arm_or_y_net : std_logic_vector( 1-1 downto 0 );
  signal reinterpret1_output_port_net : std_logic_vector( 28-1 downto 0 );
  signal reinterpret2_output_port_net_x0 : std_logic_vector( 1-1 downto 0 );
  signal reinterpret3_output_port_net : std_logic_vector( 2-1 downto 0 );
  signal reinterpret4_output_port_net : std_logic_vector( 1-1 downto 0 );
begin
  bus_out <= concatenate_y_net;
  reinterpret4_output_port_net_x0 <= in1;
  circ_or_y_net <= in2;
  reinterpret2_output_port_net <= in3;
  arm_or_y_net <= in4;
  concatenate : entity xil_defaultlib.sysgen_concat_8611e618a5 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    in0 => reinterpret1_output_port_net,
    in1 => reinterpret2_output_port_net_x0,
    in2 => reinterpret3_output_port_net,
    in3 => reinterpret4_output_port_net,
    y => concatenate_y_net
  );
  reinterpret1 : entity xil_defaultlib.sysgen_reinterpret_f7e0b72e82 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => reinterpret4_output_port_net_x0,
    output_port => reinterpret1_output_port_net
  );
  reinterpret2 : entity xil_defaultlib.sysgen_reinterpret_317b92931a 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => circ_or_y_net,
    output_port => reinterpret2_output_port_net_x0
  );
  reinterpret3 : entity xil_defaultlib.sysgen_reinterpret_5dc9f217bd 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => reinterpret2_output_port_net,
    output_port => reinterpret3_output_port_net
  );
  reinterpret4 : entity xil_defaultlib.sysgen_reinterpret_317b92931a 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => arm_or_y_net,
    output_port => reinterpret4_output_port_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot0_67/ss/ctrl_split
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_ctrl_split_x16 is
  port (
    bus_in : in std_logic_vector( 32-1 downto 0 );
    msb_out4 : out std_logic_vector( 28-1 downto 0 );
    out3 : out std_logic_vector( 1-1 downto 0 );
    out2 : out std_logic_vector( 2-1 downto 0 );
    lsb_out1 : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_ctrl_split_x16;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_ctrl_split_x16 is 
  signal reinterpret4_output_port_net : std_logic_vector( 28-1 downto 0 );
  signal slice3_y_net : std_logic_vector( 1-1 downto 0 );
  signal reinterpret2_output_port_net : std_logic_vector( 2-1 downto 0 );
  signal slice1_y_net : std_logic_vector( 1-1 downto 0 );
  signal reint1_output_port_net : std_logic_vector( 32-1 downto 0 );
  signal slice2_y_net : std_logic_vector( 2-1 downto 0 );
  signal slice4_y_net : std_logic_vector( 28-1 downto 0 );
begin
  msb_out4 <= reinterpret4_output_port_net;
  out3 <= slice3_y_net;
  out2 <= reinterpret2_output_port_net;
  lsb_out1 <= slice1_y_net;
  reint1_output_port_net <= bus_in;
  reinterpret2 : entity xil_defaultlib.sysgen_reinterpret_5dc9f217bd 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => slice2_y_net,
    output_port => reinterpret2_output_port_net
  );
  reinterpret4 : entity xil_defaultlib.sysgen_reinterpret_f7e0b72e82 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => slice4_y_net,
    output_port => reinterpret4_output_port_net
  );
  slice1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 0,
    new_msb => 0,
    x_width => 32,
    y_width => 1
  )
  port map (
    x => reint1_output_port_net,
    y => slice1_y_net
  );
  slice2 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 1,
    new_msb => 2,
    x_width => 32,
    y_width => 2
  )
  port map (
    x => reint1_output_port_net,
    y => slice2_y_net
  );
  slice3 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 3,
    new_msb => 3,
    x_width => 32,
    y_width => 1
  )
  port map (
    x => reint1_output_port_net,
    y => slice3_y_net
  );
  slice4 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 4,
    new_msb => 31,
    x_width => 32,
    y_width => 28
  )
  port map (
    x => reint1_output_port_net,
    y => slice4_y_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot0_67/ss/status
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_status_x16 is
  port (
    out_reg : in std_logic_vector( 32-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_67_ss_status_user_data_in : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_status_x16;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_status_x16 is 
  signal concat_y_net : std_logic_vector( 32-1 downto 0 );
  signal cast_gw_dout_net : std_logic_vector( 32-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal io_delay_q_net : std_logic_vector( 32-1 downto 0 );
  signal reint1_output_port_net : std_logic_vector( 32-1 downto 0 );
  signal assert_reg_dout_net : std_logic_vector( 32-1 downto 0 );
begin
  concat_y_net <= out_reg;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_67_ss_status_user_data_in <= cast_gw_dout_net;
  clk_net <= clk_1;
  ce_net <= ce_1;
  io_delay : entity xil_defaultlib.sysgen_delay_34e314c510 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d => reint1_output_port_net,
    q => io_delay_q_net
  );
  cast_gw : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 32,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 32,
    latency => 1,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => io_delay_q_net,
    clk => clk_net,
    ce => ce_net,
    dout => cast_gw_dout_net
  );
  assert_reg : entity xil_defaultlib.xlpassthrough 
  generic map (
    din_width => 32,
    dout_width => 32
  )
  port map (
    din => concat_y_net,
    dout => assert_reg_dout_net
  );
  reint1 : entity xil_defaultlib.sysgen_reinterpret_52bb84f12b 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => assert_reg_dout_net,
    output_port => reint1_output_port_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot0_67/ss
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_ss_x21 is
  port (
    din : in std_logic_vector( 32-1 downto 0 );
    we : in std_logic_vector( 1-1 downto 0 );
    trig : in std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_67_ss_ctrl_user_data_out : in std_logic_vector( 32-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    arm_out : out std_logic_vector( 1-1 downto 0 );
    goto_122347238_we1 : out std_logic_vector( 1-1 downto 0 );
    goto_122347238_we4 : out std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_67_ss_bram_addr : out std_logic_vector( 10-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_67_ss_bram_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_67_ss_bram_we : out std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_67_ss_status_user_data_in : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_ss_x21;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_ss_x21 is 
  signal arm_or_y_net : std_logic_vector( 1-1 downto 0 );
  signal concatenate_y_net : std_logic_vector( 32-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc0_sync_net : std_logic_vector( 1-1 downto 0 );
  signal edge_op_y_net_x0 : std_logic_vector( 1-1 downto 0 );
  signal we_choice_y_net : std_logic_vector( 1-1 downto 0 );
  signal logical6_y_net : std_logic_vector( 1-1 downto 0 );
  signal convert_addr_dout_net : std_logic_vector( 10-1 downto 0 );
  signal convert_din1_dout_net : std_logic_vector( 32-1 downto 0 );
  signal convert_we_dout_net : std_logic_vector( 1-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_67_ss_ctrl_user_data_out_net : std_logic_vector( 32-1 downto 0 );
  signal cast_gw_dout_net : std_logic_vector( 32-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal slice2_y_net : std_logic_vector( 10-1 downto 0 );
  signal delay6_q_net : std_logic_vector( 32-1 downto 0 );
  signal concat_y_net : std_logic_vector( 32-1 downto 0 );
  signal data_choice_y_net : std_logic_vector( 32-1 downto 0 );
  signal register6_q_net : std_logic_vector( 1-1 downto 0 );
  signal never_op_net : std_logic_vector( 1-1 downto 0 );
  signal edge_op_y_net_x1 : std_logic_vector( 1-1 downto 0 );
  signal cast_dout_net : std_logic_vector( 32-1 downto 0 );
  signal concatenate_y_net_x0 : std_logic_vector( 32-1 downto 0 );
  signal add_del_q_net : std_logic_vector( 10-1 downto 0 );
  signal dat_del_q_net : std_logic_vector( 32-1 downto 0 );
  signal we_del_q_net : std_logic_vector( 1-1 downto 0 );
  signal reint1_output_port_net : std_logic_vector( 32-1 downto 0 );
  signal reinterpret4_output_port_net : std_logic_vector( 28-1 downto 0 );
  signal circ_or_y_net : std_logic_vector( 1-1 downto 0 );
  signal reinterpret2_output_port_net : std_logic_vector( 2-1 downto 0 );
  signal slice3_y_net : std_logic_vector( 1-1 downto 0 );
  signal slice1_y_net : std_logic_vector( 1-1 downto 0 );
  signal arm_op_net : std_logic_vector( 1-1 downto 0 );
  signal ri_output_port_net : std_logic_vector( 32-1 downto 0 );
  signal circ_op_net : std_logic_vector( 1-1 downto 0 );
begin
  arm_out <= arm_or_y_net;
  concatenate_y_net <= din;
  rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc0_sync_net <= we;
  edge_op_y_net_x0 <= trig;
  goto_122347238_we1 <= we_choice_y_net;
  goto_122347238_we4 <= logical6_y_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_67_ss_bram_addr <= convert_addr_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_67_ss_bram_data_in <= convert_din1_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_67_ss_bram_we <= convert_we_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_67_ss_ctrl_user_data_out_net <= rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_67_ss_ctrl_user_data_out;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_67_ss_status_user_data_in <= cast_gw_dout_net;
  clk_net <= clk_1;
  ce_net <= ce_1;
  add_gen : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_add_gen_x21 
  port map (
    din => data_choice_y_net,
    we => we_choice_y_net,
    go => register6_q_net,
    cont => never_op_net,
    init => edge_op_y_net_x1,
    clk_1 => clk_net,
    ce_1 => ce_net,
    add => slice2_y_net,
    dout => delay6_q_net,
    we_o => logical6_y_net,
    status => concat_y_net
  );
  basic_ctrl : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_basic_ctrl_x21 
  port map (
    din => cast_dout_net,
    we => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc0_sync_net,
    trig => edge_op_y_net_x0,
    ctrl => concatenate_y_net_x0,
    stopi => never_op_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    dout => data_choice_y_net,
    we_o => we_choice_y_net,
    go => register6_q_net,
    init => edge_op_y_net_x1
  );
  bram : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_bram_x21 
  port map (
    addr => add_del_q_net,
    data_in => dat_del_q_net,
    we => we_del_q_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_67_ss_bram_addr => convert_addr_dout_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_67_ss_bram_data_in => convert_din1_dout_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_67_ss_bram_we => convert_we_dout_net
  );
  ctrl : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_ctrl_x16 
  port map (
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_67_ss_ctrl_user_data_out => rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_67_ss_ctrl_user_data_out_net,
    in_reg => reint1_output_port_net
  );
  ctrl_combine : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_ctrl_combine_x16 
  port map (
    in1 => reinterpret4_output_port_net,
    in2 => circ_or_y_net,
    in3 => reinterpret2_output_port_net,
    in4 => arm_or_y_net,
    bus_out => concatenate_y_net_x0
  );
  ctrl_split : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_ctrl_split_x16 
  port map (
    bus_in => reint1_output_port_net,
    msb_out4 => reinterpret4_output_port_net,
    out3 => slice3_y_net,
    out2 => reinterpret2_output_port_net,
    lsb_out1 => slice1_y_net
  );
  status : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_status_x16 
  port map (
    out_reg => concat_y_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_67_ss_status_user_data_in => cast_gw_dout_net
  );
  add_del : entity xil_defaultlib.sysgen_delay_4e9264ffdf 
  port map (
    clr => '0',
    d => slice2_y_net,
    clk => clk_net,
    ce => ce_net,
    q => add_del_q_net
  );
  arm : entity xil_defaultlib.sysgen_constant_a7b8778750 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => arm_op_net
  );
  arm_or : entity xil_defaultlib.sysgen_logical_d7dc12cf31 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => slice1_y_net,
    d1 => arm_op_net,
    y => arm_or_y_net
  );
  cast : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 32,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 32,
    latency => 0,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => ri_output_port_net,
    clk => clk_net,
    ce => ce_net,
    dout => cast_dout_net
  );
  circ : entity xil_defaultlib.sysgen_constant_a7b8778750 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => circ_op_net
  );
  circ_or : entity xil_defaultlib.sysgen_logical_d7dc12cf31 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => slice3_y_net,
    d1 => circ_op_net,
    y => circ_or_y_net
  );
  dat_del : entity xil_defaultlib.sysgen_delay_5ec362a23c 
  port map (
    clr => '0',
    d => delay6_q_net,
    clk => clk_net,
    ce => ce_net,
    q => dat_del_q_net
  );
  never : entity xil_defaultlib.sysgen_constant_a7b8778750 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => never_op_net
  );
  ri : entity xil_defaultlib.sysgen_reinterpret_52bb84f12b 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => concatenate_y_net,
    output_port => ri_output_port_net
  );
  we_del : entity xil_defaultlib.sysgen_delay_e0740ee3f9 
  port map (
    clr => '0',
    d => logical6_y_net,
    clk => clk_net,
    ce => ce_net,
    q => we_del_q_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot0_67
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_67 is
  port (
    in_d0 : in std_logic_vector( 16-1 downto 0 );
    in_d1 : in std_logic_vector( 16-1 downto 0 );
    we : in std_logic_vector( 1-1 downto 0 );
    trig : in std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_67_ss_ctrl_user_data_out : in std_logic_vector( 32-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    arm_out : out std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_67_ss_bram_addr : out std_logic_vector( 10-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_67_ss_bram_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_67_ss_bram_we : out std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_67_ss_status_user_data_in : out std_logic_vector( 32-1 downto 0 );
    goto_122347238_we1 : out std_logic_vector( 1-1 downto 0 );
    goto_122347238_we4 : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_67;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_67 is 
  signal arm_or_y_net : std_logic_vector( 1-1 downto 0 );
  signal slice3_y_net : std_logic_vector( 16-1 downto 0 );
  signal slice4_y_net : std_logic_vector( 16-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc0_sync_net : std_logic_vector( 1-1 downto 0 );
  signal edge_op_y_net : std_logic_vector( 1-1 downto 0 );
  signal convert_addr_dout_net : std_logic_vector( 10-1 downto 0 );
  signal convert_din1_dout_net : std_logic_vector( 32-1 downto 0 );
  signal convert_we_dout_net : std_logic_vector( 1-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_67_ss_ctrl_user_data_out_net : std_logic_vector( 32-1 downto 0 );
  signal cast_gw_dout_net : std_logic_vector( 32-1 downto 0 );
  signal we_choice_y_net : std_logic_vector( 1-1 downto 0 );
  signal logical6_y_net : std_logic_vector( 1-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal concatenate_y_net : std_logic_vector( 32-1 downto 0 );
  signal assert_d0_dout_net : std_logic_vector( 16-1 downto 0 );
  signal assert_d1_dout_net : std_logic_vector( 16-1 downto 0 );
begin
  arm_out <= arm_or_y_net;
  slice3_y_net <= in_d0;
  slice4_y_net <= in_d1;
  rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc0_sync_net <= we;
  edge_op_y_net <= trig;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_67_ss_bram_addr <= convert_addr_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_67_ss_bram_data_in <= convert_din1_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_67_ss_bram_we <= convert_we_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_67_ss_ctrl_user_data_out_net <= rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_67_ss_ctrl_user_data_out;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_67_ss_status_user_data_in <= cast_gw_dout_net;
  goto_122347238_we1 <= we_choice_y_net;
  goto_122347238_we4 <= logical6_y_net;
  clk_net <= clk_1;
  ce_net <= ce_1;
  buscreate : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_buscreate_x21 
  port map (
    in1 => assert_d0_dout_net,
    in2 => assert_d1_dout_net,
    bus_out => concatenate_y_net
  );
  ss : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_ss_x21 
  port map (
    din => concatenate_y_net,
    we => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc0_sync_net,
    trig => edge_op_y_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_67_ss_ctrl_user_data_out => rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_67_ss_ctrl_user_data_out_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    arm_out => arm_or_y_net,
    goto_122347238_we1 => we_choice_y_net,
    goto_122347238_we4 => logical6_y_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_67_ss_bram_addr => convert_addr_dout_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_67_ss_bram_data_in => convert_din1_dout_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_67_ss_bram_we => convert_we_dout_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_67_ss_status_user_data_in => cast_gw_dout_net
  );
  assert_d0 : entity xil_defaultlib.xlpassthrough 
  generic map (
    din_width => 16,
    dout_width => 16
  )
  port map (
    din => slice3_y_net,
    dout => assert_d0_dout_net
  );
  assert_d1 : entity xil_defaultlib.xlpassthrough 
  generic map (
    din_width => 16,
    dout_width => 16
  )
  port map (
    din => slice4_y_net,
    dout => assert_d1_dout_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot1_01/buscreate
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_buscreate_x16 is
  port (
    in1 : in std_logic_vector( 16-1 downto 0 );
    in2 : in std_logic_vector( 16-1 downto 0 );
    bus_out : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_buscreate_x16;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_buscreate_x16 is 
  signal concatenate_y_net : std_logic_vector( 32-1 downto 0 );
  signal assert_d0_dout_net : std_logic_vector( 16-1 downto 0 );
  signal assert_d1_dout_net : std_logic_vector( 16-1 downto 0 );
  signal reinterpret1_output_port_net : std_logic_vector( 16-1 downto 0 );
  signal reinterpret2_output_port_net : std_logic_vector( 16-1 downto 0 );
begin
  bus_out <= concatenate_y_net;
  assert_d0_dout_net <= in1;
  assert_d1_dout_net <= in2;
  concatenate : entity xil_defaultlib.sysgen_concat_37649e01d1 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    in0 => reinterpret1_output_port_net,
    in1 => reinterpret2_output_port_net,
    y => concatenate_y_net
  );
  reinterpret1 : entity xil_defaultlib.sysgen_reinterpret_03c8cdbbc1 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => assert_d0_dout_net,
    output_port => reinterpret1_output_port_net
  );
  reinterpret2 : entity xil_defaultlib.sysgen_reinterpret_03c8cdbbc1 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => assert_d1_dout_net,
    output_port => reinterpret2_output_port_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot1_01/ss/add_gen/edge_detect
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x33 is
  port (
    in_x0 : in std_logic_vector( 1-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    out_x0 : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x33;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x33 is 
  signal edge_op_y_net : std_logic_vector( 1-1 downto 0 );
  signal slice3_y_net : std_logic_vector( 1-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal delay_q_net : std_logic_vector( 1-1 downto 0 );
  signal inverter_op_net : std_logic_vector( 1-1 downto 0 );
begin
  out_x0 <= edge_op_y_net;
  slice3_y_net <= in_x0;
  clk_net <= clk_1;
  ce_net <= ce_1;
  delay : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 1
  )
  port map (
    en => '1',
    rst => '1',
    d => slice3_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay_q_net
  );
  inverter : entity xil_defaultlib.sysgen_inverter_6233897471 
  port map (
    clr => '0',
    ip => slice3_y_net,
    clk => clk_net,
    ce => ce_net,
    op => inverter_op_net
  );
  edge_op : entity xil_defaultlib.sysgen_logical_9cc14fefba 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => inverter_op_net,
    d1 => delay_q_net,
    y => edge_op_y_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot1_01/ss/add_gen
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_add_gen_x16 is
  port (
    din : in std_logic_vector( 32-1 downto 0 );
    we : in std_logic_vector( 1-1 downto 0 );
    go : in std_logic_vector( 1-1 downto 0 );
    cont : in std_logic_vector( 1-1 downto 0 );
    init : in std_logic_vector( 1-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    add : out std_logic_vector( 10-1 downto 0 );
    dout : out std_logic_vector( 32-1 downto 0 );
    we_o : out std_logic_vector( 1-1 downto 0 );
    status : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_add_gen_x16;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_add_gen_x16 is 
  signal slice2_y_net : std_logic_vector( 10-1 downto 0 );
  signal delay6_q_net : std_logic_vector( 32-1 downto 0 );
  signal logical6_y_net : std_logic_vector( 1-1 downto 0 );
  signal concat_y_net : std_logic_vector( 32-1 downto 0 );
  signal data_choice_y_net : std_logic_vector( 32-1 downto 0 );
  signal we_choice_y_net : std_logic_vector( 1-1 downto 0 );
  signal register6_q_net : std_logic_vector( 1-1 downto 0 );
  signal never_op_net : std_logic_vector( 1-1 downto 0 );
  signal edge_op_y_net : std_logic_vector( 1-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal edge_op_y_net_x0 : std_logic_vector( 1-1 downto 0 );
  signal slice3_y_net : std_logic_vector( 1-1 downto 0 );
  signal shift_op_net : std_logic_vector( 19-1 downto 0 );
  signal inverter_op_net : std_logic_vector( 1-1 downto 0 );
  signal delay1_q_net : std_logic_vector( 12-1 downto 0 );
  signal convert_dout_net : std_logic_vector( 19-1 downto 0 );
  signal register5_q_net : std_logic_vector( 1-1 downto 0 );
  signal delay_q_net : std_logic_vector( 1-1 downto 0 );
  signal delay4_q_net : std_logic_vector( 1-1 downto 0 );
  signal slice1_y_net : std_logic_vector( 12-1 downto 0 );
  signal delay3_q_net : std_logic_vector( 1-1 downto 0 );
  signal inverter1_op_net : std_logic_vector( 1-1 downto 0 );
  signal logical1_y_net : std_logic_vector( 1-1 downto 0 );
  signal logical4_y_net : std_logic_vector( 1-1 downto 0 );
  signal add_gen_op_net : std_logic_vector( 13-1 downto 0 );
begin
  add <= slice2_y_net;
  dout <= delay6_q_net;
  we_o <= logical6_y_net;
  status <= concat_y_net;
  data_choice_y_net <= din;
  we_choice_y_net <= we;
  register6_q_net <= go;
  never_op_net <= cont;
  edge_op_y_net <= init;
  clk_net <= clk_1;
  ce_net <= ce_1;
  edge_detect : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x33 
  port map (
    in_x0 => slice3_y_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    out_x0 => edge_op_y_net_x0
  );
  concat : entity xil_defaultlib.sysgen_concat_fc8edfac0e 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    in0 => shift_op_net,
    in1 => inverter_op_net,
    in2 => delay1_q_net,
    y => concat_y_net
  );
  convert : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 1,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 19,
    latency => 0,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => register5_q_net,
    clk => clk_net,
    ce => ce_net,
    dout => convert_dout_net
  );
  delay : entity xil_defaultlib.sysgen_delay_e0740ee3f9 
  port map (
    clr => '0',
    d => delay4_q_net,
    clk => clk_net,
    ce => ce_net,
    q => delay_q_net
  );
  delay1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 12
  )
  port map (
    en => '1',
    rst => '1',
    d => slice1_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay1_q_net
  );
  delay3 : entity xil_defaultlib.sysgen_delay_e0740ee3f9 
  port map (
    clr => '0',
    d => never_op_net,
    clk => clk_net,
    ce => ce_net,
    q => delay3_q_net
  );
  delay4 : entity xil_defaultlib.sysgen_delay_e0740ee3f9 
  port map (
    clr => '0',
    d => edge_op_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay4_q_net
  );
  delay6 : entity xil_defaultlib.sysgen_delay_5ec362a23c 
  port map (
    clr => '0',
    d => data_choice_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay6_q_net
  );
  inverter : entity xil_defaultlib.sysgen_inverter_918b6bc6d0 
  port map (
    clr => '0',
    ip => register5_q_net,
    clk => clk_net,
    ce => ce_net,
    op => inverter_op_net
  );
  inverter1 : entity xil_defaultlib.sysgen_inverter_6233897471 
  port map (
    clr => '0',
    ip => edge_op_y_net_x0,
    clk => clk_net,
    ce => ce_net,
    op => inverter1_op_net
  );
  logical1 : entity xil_defaultlib.sysgen_logical_2486129911 
  port map (
    clr => '0',
    d0 => we_choice_y_net,
    d1 => register6_q_net,
    clk => clk_net,
    ce => ce_net,
    y => logical1_y_net
  );
  logical4 : entity xil_defaultlib.sysgen_logical_d7dc12cf31 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => delay3_q_net,
    d1 => inverter1_op_net,
    y => logical4_y_net
  );
  logical6 : entity xil_defaultlib.sysgen_logical_c05fefc67b 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => register5_q_net,
    d1 => logical4_y_net,
    d2 => logical1_y_net,
    y => logical6_y_net
  );
  register5 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlregister 
  generic map (
    d_width => 1,
    init_value => b"1"
  )
  port map (
    d => delay3_q_net,
    rst => delay_q_net,
    en => edge_op_y_net_x0,
    clk => clk_net,
    ce => ce_net,
    q => register5_q_net
  );
  shift : entity xil_defaultlib.sysgen_shift_5af4fe0a99 
  port map (
    clr => '0',
    ip => convert_dout_net,
    clk => clk_net,
    ce => ce_net,
    op => shift_op_net
  );
  add_gen : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlcounter_free 
  generic map (
    core_name0 => "rfdc_multi_eight_adcs_2048gsps_mts_c_counter_binary_v12_0_i1",
    op_arith => xlUnsigned,
    op_width => 13
  )
  port map (
    clr => '0',
    rst => delay4_q_net,
    en => logical6_y_net,
    clk => clk_net,
    ce => ce_net,
    op => add_gen_op_net
  );
  slice1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 0,
    new_msb => 11,
    x_width => 13,
    y_width => 12
  )
  port map (
    x => add_gen_op_net,
    y => slice1_y_net
  );
  slice2 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 2,
    new_msb => 11,
    x_width => 13,
    y_width => 10
  )
  port map (
    x => add_gen_op_net,
    y => slice2_y_net
  );
  slice3 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 12,
    new_msb => 12,
    x_width => 13,
    y_width => 1
  )
  port map (
    x => add_gen_op_net,
    y => slice3_y_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot1_01/ss/basic_ctrl/dram_munge
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_dram_munge_x16 is
  port (
    din : in std_logic_vector( 32-1 downto 0 );
    we : in std_logic_vector( 1-1 downto 0 );
    init : in std_logic_vector( 1-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    dout : out std_logic_vector( 32-1 downto 0 );
    we_o : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_dram_munge_x16;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_dram_munge_x16 is 
  signal data_choice_y_net : std_logic_vector( 32-1 downto 0 );
  signal we_choice_y_net : std_logic_vector( 1-1 downto 0 );
  signal cast_dout_net : std_logic_vector( 32-1 downto 0 );
  signal mux1_y_net_x0 : std_logic_vector( 1-1 downto 0 );
  signal edge_op_y_net : std_logic_vector( 1-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal concat_y_net : std_logic_vector( 80-1 downto 0 );
  signal constant_op_net : std_logic_vector( 8-1 downto 0 );
  signal register_q_net : std_logic_vector( 32-1 downto 0 );
  signal register1_q_net : std_logic_vector( 32-1 downto 0 );
  signal concat1_y_net : std_logic_vector( 80-1 downto 0 );
  signal register2_q_net : std_logic_vector( 32-1 downto 0 );
  signal register3_q_net : std_logic_vector( 32-1 downto 0 );
  signal delay_q_net : std_logic_vector( 1-1 downto 0 );
  signal logical_y_net : std_logic_vector( 1-1 downto 0 );
  signal delay1_q_net : std_logic_vector( 1-1 downto 0 );
  signal logical1_y_net : std_logic_vector( 1-1 downto 0 );
  signal relational3_op_net : std_logic_vector( 1-1 downto 0 );
  signal mux1_y_net : std_logic_vector( 80-1 downto 0 );
  signal dout_count_op_net : std_logic_vector( 1-1 downto 0 );
  signal relational_op_net : std_logic_vector( 1-1 downto 0 );
  signal relational1_op_net : std_logic_vector( 1-1 downto 0 );
  signal relational2_op_net : std_logic_vector( 1-1 downto 0 );
  signal input_count_op_net : std_logic_vector( 2-1 downto 0 );
  signal con0_op_net : std_logic_vector( 2-1 downto 0 );
  signal con1_op_net : std_logic_vector( 2-1 downto 0 );
  signal con2_op_net : std_logic_vector( 2-1 downto 0 );
  signal con3_op_net : std_logic_vector( 2-1 downto 0 );
  signal dram_op_net : std_logic_vector( 1-1 downto 0 );
begin
  dout <= data_choice_y_net;
  we_o <= we_choice_y_net;
  cast_dout_net <= din;
  mux1_y_net_x0 <= we;
  edge_op_y_net <= init;
  clk_net <= clk_1;
  ce_net <= ce_1;
  concat : entity xil_defaultlib.sysgen_concat_e7487baac7 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    in0 => constant_op_net,
    in1 => register_q_net,
    in2 => constant_op_net,
    in3 => register1_q_net,
    y => concat_y_net
  );
  concat1 : entity xil_defaultlib.sysgen_concat_e7487baac7 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    in0 => constant_op_net,
    in1 => register2_q_net,
    in2 => constant_op_net,
    in3 => register3_q_net,
    y => concat1_y_net
  );
  constant_x0 : entity xil_defaultlib.sysgen_constant_869e31f04d 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => constant_op_net
  );
  delay : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 1
  )
  port map (
    en => '1',
    rst => '1',
    d => logical_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay_q_net
  );
  delay1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 1
  )
  port map (
    en => '1',
    rst => '1',
    d => logical1_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay1_q_net
  );
  logical : entity xil_defaultlib.sysgen_logical_2486129911 
  port map (
    clr => '0',
    d0 => relational3_op_net,
    d1 => mux1_y_net_x0,
    clk => clk_net,
    ce => ce_net,
    y => logical_y_net
  );
  logical1 : entity xil_defaultlib.sysgen_logical_d7dc12cf31 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => logical_y_net,
    d1 => delay_q_net,
    y => logical1_y_net
  );
  mux1 : entity xil_defaultlib.sysgen_mux_71ee2b1026 
  port map (
    clr => '0',
    sel => dout_count_op_net,
    d0 => concat_y_net,
    d1 => concat1_y_net,
    clk => clk_net,
    ce => ce_net,
    y => mux1_y_net
  );
  register_x0 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlregister 
  generic map (
    d_width => 32,
    init_value => b"00000000000000000000000000000000"
  )
  port map (
    rst => "0",
    d => cast_dout_net,
    en => relational_op_net,
    clk => clk_net,
    ce => ce_net,
    q => register_q_net
  );
  register1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlregister 
  generic map (
    d_width => 32,
    init_value => b"00000000000000000000000000000000"
  )
  port map (
    rst => "0",
    d => cast_dout_net,
    en => relational1_op_net,
    clk => clk_net,
    ce => ce_net,
    q => register1_q_net
  );
  register2 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlregister 
  generic map (
    d_width => 32,
    init_value => b"00000000000000000000000000000000"
  )
  port map (
    rst => "0",
    d => cast_dout_net,
    en => relational2_op_net,
    clk => clk_net,
    ce => ce_net,
    q => register2_q_net
  );
  register3 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlregister 
  generic map (
    d_width => 32,
    init_value => b"00000000000000000000000000000000"
  )
  port map (
    rst => "0",
    d => cast_dout_net,
    en => relational3_op_net,
    clk => clk_net,
    ce => ce_net,
    q => register3_q_net
  );
  relational : entity xil_defaultlib.sysgen_relational_e5d6b5eaca 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    a => input_count_op_net,
    b => con0_op_net,
    op => relational_op_net
  );
  relational1 : entity xil_defaultlib.sysgen_relational_e5d6b5eaca 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    a => input_count_op_net,
    b => con1_op_net,
    op => relational1_op_net
  );
  relational2 : entity xil_defaultlib.sysgen_relational_e5d6b5eaca 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    a => input_count_op_net,
    b => con2_op_net,
    op => relational2_op_net
  );
  relational3 : entity xil_defaultlib.sysgen_relational_e5d6b5eaca 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    a => input_count_op_net,
    b => con3_op_net,
    op => relational3_op_net
  );
  con0 : entity xil_defaultlib.sysgen_constant_b58c3a1535 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => con0_op_net
  );
  con1 : entity xil_defaultlib.sysgen_constant_d3f27a6354 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => con1_op_net
  );
  con2 : entity xil_defaultlib.sysgen_constant_2fa4689d4e 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => con2_op_net
  );
  con3 : entity xil_defaultlib.sysgen_constant_31bab66ba6 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => con3_op_net
  );
  data_choice : entity xil_defaultlib.sysgen_mux_d624c1af44 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    sel => dram_op_net,
    d0 => cast_dout_net,
    d1 => mux1_y_net,
    y => data_choice_y_net
  );
  dout_count : entity xil_defaultlib.sysgen_counter_a9c1c293c2 
  port map (
    clr => '0',
    rst => edge_op_y_net,
    en => logical1_y_net,
    clk => clk_net,
    ce => ce_net,
    op => dout_count_op_net
  );
  dram : entity xil_defaultlib.sysgen_constant_a7b8778750 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => dram_op_net
  );
  input_count : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlcounter_free 
  generic map (
    core_name0 => "rfdc_multi_eight_adcs_2048gsps_mts_c_counter_binary_v12_0_i2",
    op_arith => xlUnsigned,
    op_width => 2
  )
  port map (
    clr => '0',
    rst => edge_op_y_net,
    en => mux1_y_net_x0,
    clk => clk_net,
    ce => ce_net,
    op => input_count_op_net
  );
  we_choice : entity xil_defaultlib.sysgen_mux_4874190f11 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    sel => dram_op_net,
    d0 => mux1_y_net_x0,
    d1 => delay1_q_net,
    y => we_choice_y_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot1_01/ss/basic_ctrl/edge_detect
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x34 is
  port (
    in_x0 : in std_logic_vector( 1-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    out_x0 : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x34;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x34 is 
  signal edge_op_y_net : std_logic_vector( 1-1 downto 0 );
  signal delay1_q_net : std_logic_vector( 1-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal delay_q_net : std_logic_vector( 1-1 downto 0 );
  signal inverter_op_net : std_logic_vector( 1-1 downto 0 );
begin
  out_x0 <= edge_op_y_net;
  delay1_q_net <= in_x0;
  clk_net <= clk_1;
  ce_net <= ce_1;
  delay : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 1
  )
  port map (
    en => '1',
    rst => '1',
    d => delay1_q_net,
    clk => clk_net,
    ce => ce_net,
    q => delay_q_net
  );
  inverter : entity xil_defaultlib.sysgen_inverter_6233897471 
  port map (
    clr => '0',
    ip => delay1_q_net,
    clk => clk_net,
    ce => ce_net,
    op => inverter_op_net
  );
  edge_op : entity xil_defaultlib.sysgen_logical_0f1aa1e2d7 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => inverter_op_net,
    d1 => delay_q_net,
    y => edge_op_y_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot1_01/ss/basic_ctrl
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_basic_ctrl_x16 is
  port (
    din : in std_logic_vector( 32-1 downto 0 );
    we : in std_logic_vector( 1-1 downto 0 );
    trig : in std_logic_vector( 1-1 downto 0 );
    ctrl : in std_logic_vector( 32-1 downto 0 );
    stopi : in std_logic_vector( 1-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    dout : out std_logic_vector( 32-1 downto 0 );
    we_o : out std_logic_vector( 1-1 downto 0 );
    go : out std_logic_vector( 1-1 downto 0 );
    init : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_basic_ctrl_x16;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_basic_ctrl_x16 is 
  signal data_choice_y_net : std_logic_vector( 32-1 downto 0 );
  signal we_choice_y_net : std_logic_vector( 1-1 downto 0 );
  signal register6_q_net : std_logic_vector( 1-1 downto 0 );
  signal edge_op_y_net_x0 : std_logic_vector( 1-1 downto 0 );
  signal cast_dout_net : std_logic_vector( 32-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc1_sync_net : std_logic_vector( 1-1 downto 0 );
  signal edge_op_y_net : std_logic_vector( 1-1 downto 0 );
  signal concatenate_y_net : std_logic_vector( 32-1 downto 0 );
  signal never_op_net : std_logic_vector( 1-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal mux1_y_net : std_logic_vector( 1-1 downto 0 );
  signal delay1_q_net : std_logic_vector( 1-1 downto 0 );
  signal constant_op_net : std_logic_vector( 1-1 downto 0 );
  signal constant1_op_net : std_logic_vector( 1-1 downto 0 );
  signal constant2_op_net : std_logic_vector( 1-1 downto 0 );
  signal enable_y_net : std_logic_vector( 1-1 downto 0 );
  signal delay2_q_net : std_logic_vector( 1-1 downto 0 );
  signal trig_src_y_net : std_logic_vector( 1-1 downto 0 );
  signal delay3_q_net : std_logic_vector( 1-1 downto 0 );
  signal valid_src_y_net : std_logic_vector( 1-1 downto 0 );
  signal inverter_op_net : std_logic_vector( 1-1 downto 0 );
  signal logical_y_net : std_logic_vector( 1-1 downto 0 );
  signal mux2_y_net : std_logic_vector( 1-1 downto 0 );
  signal register1_q_net : std_logic_vector( 1-1 downto 0 );
begin
  dout <= data_choice_y_net;
  we_o <= we_choice_y_net;
  go <= register6_q_net;
  init <= edge_op_y_net_x0;
  cast_dout_net <= din;
  rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc1_sync_net <= we;
  edge_op_y_net <= trig;
  concatenate_y_net <= ctrl;
  never_op_net <= stopi;
  clk_net <= clk_1;
  ce_net <= ce_1;
  dram_munge : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_dram_munge_x16 
  port map (
    din => cast_dout_net,
    we => mux1_y_net,
    init => edge_op_y_net_x0,
    clk_1 => clk_net,
    ce_1 => ce_net,
    dout => data_choice_y_net,
    we_o => we_choice_y_net
  );
  edge_detect : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x34 
  port map (
    in_x0 => delay1_q_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    out_x0 => edge_op_y_net_x0
  );
  constant_x0 : entity xil_defaultlib.sysgen_constant_c95a0b5efb 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => constant_op_net
  );
  constant1 : entity xil_defaultlib.sysgen_constant_c95a0b5efb 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => constant1_op_net
  );
  constant2 : entity xil_defaultlib.sysgen_constant_c95a0b5efb 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => constant2_op_net
  );
  delay1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 1
  )
  port map (
    en => '1',
    rst => '1',
    d => enable_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay1_q_net
  );
  delay2 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 1
  )
  port map (
    en => '1',
    rst => '1',
    d => trig_src_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay2_q_net
  );
  delay3 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 1
  )
  port map (
    en => '1',
    rst => '1',
    d => valid_src_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay3_q_net
  );
  inverter : entity xil_defaultlib.sysgen_inverter_6233897471 
  port map (
    clr => '0',
    ip => edge_op_y_net_x0,
    clk => clk_net,
    ce => ce_net,
    op => inverter_op_net
  );
  logical : entity xil_defaultlib.sysgen_logical_d26e5cda59 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => mux2_y_net,
    d1 => inverter_op_net,
    y => logical_y_net
  );
  mux1 : entity xil_defaultlib.sysgen_mux_4874190f11 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    sel => delay3_q_net,
    d0 => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc1_sync_net,
    d1 => constant2_op_net,
    y => mux1_y_net
  );
  mux2 : entity xil_defaultlib.sysgen_mux_4874190f11 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    sel => delay2_q_net,
    d0 => edge_op_y_net,
    d1 => constant1_op_net,
    y => mux2_y_net
  );
  register1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlregister 
  generic map (
    d_width => 1,
    init_value => b"0"
  )
  port map (
    d => constant_op_net,
    rst => logical_y_net,
    en => edge_op_y_net_x0,
    clk => clk_net,
    ce => ce_net,
    q => register1_q_net
  );
  register6 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlregister 
  generic map (
    d_width => 1,
    init_value => b"0"
  )
  port map (
    d => mux2_y_net,
    rst => edge_op_y_net_x0,
    en => register1_q_net,
    clk => clk_net,
    ce => ce_net,
    q => register6_q_net
  );
  enable : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 0,
    new_msb => 0,
    x_width => 32,
    y_width => 1
  )
  port map (
    x => concatenate_y_net,
    y => enable_y_net
  );
  trig_src : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 1,
    new_msb => 1,
    x_width => 32,
    y_width => 1
  )
  port map (
    x => concatenate_y_net,
    y => trig_src_y_net
  );
  valid_src : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 2,
    new_msb => 2,
    x_width => 32,
    y_width => 1
  )
  port map (
    x => concatenate_y_net,
    y => valid_src_y_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot1_01/ss/bram/calc_add
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_calc_add_x16 is
  port (
    in_x0 : in std_logic_vector( 10-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    out_x0 : out std_logic_vector( 10-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_calc_add_x16;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_calc_add_x16 is 
  signal mux_y_net : std_logic_vector( 10-1 downto 0 );
  signal add_del_q_net : std_logic_vector( 10-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal add_sub_s_net : std_logic_vector( 1-1 downto 0 );
  signal const_op_net : std_logic_vector( 1-1 downto 0 );
  signal lsw_y_net : std_logic_vector( 1-1 downto 0 );
  signal concat_y_net : std_logic_vector( 10-1 downto 0 );
  signal msw_y_net : std_logic_vector( 9-1 downto 0 );
  signal convert_addr_dout_net : std_logic_vector( 10-1 downto 0 );
  signal manipulate_op_net : std_logic_vector( 1-1 downto 0 );
begin
  out_x0 <= mux_y_net;
  add_del_q_net <= in_x0;
  clk_net <= clk_1;
  ce_net <= ce_1;
  add_sub : entity xil_defaultlib.sysgen_addsub_fd3b6c715c 
  port map (
    clr => '0',
    a => const_op_net,
    b => lsw_y_net,
    clk => clk_net,
    ce => ce_net,
    s => add_sub_s_net
  );
  concat : entity xil_defaultlib.sysgen_concat_f4b90dfa16 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    in0 => msw_y_net,
    in1 => add_sub_s_net,
    y => concat_y_net
  );
  const : entity xil_defaultlib.sysgen_constant_a7b8778750 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => const_op_net
  );
  convert_addr : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 10,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 10,
    latency => 0,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => add_del_q_net,
    clk => clk_net,
    ce => ce_net,
    dout => convert_addr_dout_net
  );
  lsw : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 0,
    new_msb => 0,
    x_width => 10,
    y_width => 1
  )
  port map (
    x => convert_addr_dout_net,
    y => lsw_y_net
  );
  manipulate : entity xil_defaultlib.sysgen_constant_a7b8778750 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => manipulate_op_net
  );
  msw : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 1,
    new_msb => 9,
    x_width => 10,
    y_width => 9
  )
  port map (
    x => convert_addr_dout_net,
    y => msw_y_net
  );
  mux : entity xil_defaultlib.sysgen_mux_4417594854 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    sel => manipulate_op_net,
    d0 => convert_addr_dout_net,
    d1 => concat_y_net,
    y => mux_y_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot1_01/ss/bram/munge_in
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_munge_in_x15 is
  port (
    din : in std_logic_vector( 32-1 downto 0 );
    dout : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_munge_in_x15;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_munge_in_x15 is 
  signal reinterpret_out_output_port_net : std_logic_vector( 32-1 downto 0 );
  signal dat_del_q_net : std_logic_vector( 32-1 downto 0 );
begin
  dout <= reinterpret_out_output_port_net;
  dat_del_q_net <= din;
  reinterpret_out : entity xil_defaultlib.sysgen_reinterpret_52bb84f12b 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => dat_del_q_net,
    output_port => reinterpret_out_output_port_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot1_01/ss/bram
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_bram_x16 is
  port (
    addr : in std_logic_vector( 10-1 downto 0 );
    data_in : in std_logic_vector( 32-1 downto 0 );
    we : in std_logic_vector( 1-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_01_ss_bram_addr : out std_logic_vector( 10-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_01_ss_bram_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_01_ss_bram_we : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_bram_x16;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_bram_x16 is 
  signal add_del_q_net : std_logic_vector( 10-1 downto 0 );
  signal dat_del_q_net : std_logic_vector( 32-1 downto 0 );
  signal we_del_q_net : std_logic_vector( 1-1 downto 0 );
  signal convert_addr_dout_net : std_logic_vector( 10-1 downto 0 );
  signal convert_din1_dout_net : std_logic_vector( 32-1 downto 0 );
  signal convert_we_dout_net : std_logic_vector( 1-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal mux_y_net : std_logic_vector( 10-1 downto 0 );
  signal reinterpret_out_output_port_net : std_logic_vector( 32-1 downto 0 );
begin
  add_del_q_net <= addr;
  dat_del_q_net <= data_in;
  we_del_q_net <= we;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_01_ss_bram_addr <= convert_addr_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_01_ss_bram_data_in <= convert_din1_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_01_ss_bram_we <= convert_we_dout_net;
  clk_net <= clk_1;
  ce_net <= ce_1;
  calc_add : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_calc_add_x16 
  port map (
    in_x0 => add_del_q_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    out_x0 => mux_y_net
  );
  munge_in : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_munge_in_x15 
  port map (
    din => dat_del_q_net,
    dout => reinterpret_out_output_port_net
  );
  convert_addr : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 10,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 10,
    latency => 0,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => mux_y_net,
    clk => clk_net,
    ce => ce_net,
    dout => convert_addr_dout_net
  );
  convert_din1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 32,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 32,
    latency => 0,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => reinterpret_out_output_port_net,
    clk => clk_net,
    ce => ce_net,
    dout => convert_din1_dout_net
  );
  convert_we : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 1,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 1,
    latency => 0,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => we_del_q_net,
    clk => clk_net,
    ce => ce_net,
    dout => convert_we_dout_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot1_01/ss/ctrl
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_ctrl_x15 is
  port (
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_01_ss_ctrl_user_data_out : in std_logic_vector( 32-1 downto 0 );
    in_reg : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_ctrl_x15;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_ctrl_x15 is 
  signal reint1_output_port_net : std_logic_vector( 32-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_01_ss_ctrl_user_data_out_net : std_logic_vector( 32-1 downto 0 );
  signal io_delay_q_net : std_logic_vector( 32-1 downto 0 );
  signal slice_reg_y_net : std_logic_vector( 32-1 downto 0 );
begin
  in_reg <= reint1_output_port_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_01_ss_ctrl_user_data_out_net <= rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_01_ss_ctrl_user_data_out;
  io_delay : entity xil_defaultlib.sysgen_delay_34e314c510 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d => rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_01_ss_ctrl_user_data_out_net,
    q => io_delay_q_net
  );
  slice_reg : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 0,
    new_msb => 31,
    x_width => 32,
    y_width => 32
  )
  port map (
    x => io_delay_q_net,
    y => slice_reg_y_net
  );
  reint1 : entity xil_defaultlib.sysgen_reinterpret_52bb84f12b 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => slice_reg_y_net,
    output_port => reint1_output_port_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot1_01/ss/ctrl_combine
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_ctrl_combine_x15 is
  port (
    in1 : in std_logic_vector( 28-1 downto 0 );
    in2 : in std_logic_vector( 1-1 downto 0 );
    in3 : in std_logic_vector( 2-1 downto 0 );
    in4 : in std_logic_vector( 1-1 downto 0 );
    bus_out : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_ctrl_combine_x15;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_ctrl_combine_x15 is 
  signal concatenate_y_net : std_logic_vector( 32-1 downto 0 );
  signal reinterpret4_output_port_net_x0 : std_logic_vector( 28-1 downto 0 );
  signal circ_or_y_net : std_logic_vector( 1-1 downto 0 );
  signal reinterpret2_output_port_net : std_logic_vector( 2-1 downto 0 );
  signal arm_or_y_net : std_logic_vector( 1-1 downto 0 );
  signal reinterpret1_output_port_net : std_logic_vector( 28-1 downto 0 );
  signal reinterpret2_output_port_net_x0 : std_logic_vector( 1-1 downto 0 );
  signal reinterpret3_output_port_net : std_logic_vector( 2-1 downto 0 );
  signal reinterpret4_output_port_net : std_logic_vector( 1-1 downto 0 );
begin
  bus_out <= concatenate_y_net;
  reinterpret4_output_port_net_x0 <= in1;
  circ_or_y_net <= in2;
  reinterpret2_output_port_net <= in3;
  arm_or_y_net <= in4;
  concatenate : entity xil_defaultlib.sysgen_concat_8611e618a5 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    in0 => reinterpret1_output_port_net,
    in1 => reinterpret2_output_port_net_x0,
    in2 => reinterpret3_output_port_net,
    in3 => reinterpret4_output_port_net,
    y => concatenate_y_net
  );
  reinterpret1 : entity xil_defaultlib.sysgen_reinterpret_f7e0b72e82 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => reinterpret4_output_port_net_x0,
    output_port => reinterpret1_output_port_net
  );
  reinterpret2 : entity xil_defaultlib.sysgen_reinterpret_317b92931a 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => circ_or_y_net,
    output_port => reinterpret2_output_port_net_x0
  );
  reinterpret3 : entity xil_defaultlib.sysgen_reinterpret_5dc9f217bd 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => reinterpret2_output_port_net,
    output_port => reinterpret3_output_port_net
  );
  reinterpret4 : entity xil_defaultlib.sysgen_reinterpret_317b92931a 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => arm_or_y_net,
    output_port => reinterpret4_output_port_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot1_01/ss/ctrl_split
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_ctrl_split_x15 is
  port (
    bus_in : in std_logic_vector( 32-1 downto 0 );
    msb_out4 : out std_logic_vector( 28-1 downto 0 );
    out3 : out std_logic_vector( 1-1 downto 0 );
    out2 : out std_logic_vector( 2-1 downto 0 );
    lsb_out1 : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_ctrl_split_x15;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_ctrl_split_x15 is 
  signal reinterpret4_output_port_net : std_logic_vector( 28-1 downto 0 );
  signal slice3_y_net : std_logic_vector( 1-1 downto 0 );
  signal reinterpret2_output_port_net : std_logic_vector( 2-1 downto 0 );
  signal slice1_y_net : std_logic_vector( 1-1 downto 0 );
  signal reint1_output_port_net : std_logic_vector( 32-1 downto 0 );
  signal slice2_y_net : std_logic_vector( 2-1 downto 0 );
  signal slice4_y_net : std_logic_vector( 28-1 downto 0 );
begin
  msb_out4 <= reinterpret4_output_port_net;
  out3 <= slice3_y_net;
  out2 <= reinterpret2_output_port_net;
  lsb_out1 <= slice1_y_net;
  reint1_output_port_net <= bus_in;
  reinterpret2 : entity xil_defaultlib.sysgen_reinterpret_5dc9f217bd 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => slice2_y_net,
    output_port => reinterpret2_output_port_net
  );
  reinterpret4 : entity xil_defaultlib.sysgen_reinterpret_f7e0b72e82 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => slice4_y_net,
    output_port => reinterpret4_output_port_net
  );
  slice1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 0,
    new_msb => 0,
    x_width => 32,
    y_width => 1
  )
  port map (
    x => reint1_output_port_net,
    y => slice1_y_net
  );
  slice2 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 1,
    new_msb => 2,
    x_width => 32,
    y_width => 2
  )
  port map (
    x => reint1_output_port_net,
    y => slice2_y_net
  );
  slice3 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 3,
    new_msb => 3,
    x_width => 32,
    y_width => 1
  )
  port map (
    x => reint1_output_port_net,
    y => slice3_y_net
  );
  slice4 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 4,
    new_msb => 31,
    x_width => 32,
    y_width => 28
  )
  port map (
    x => reint1_output_port_net,
    y => slice4_y_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot1_01/ss/status
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_status_x15 is
  port (
    out_reg : in std_logic_vector( 32-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_01_ss_status_user_data_in : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_status_x15;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_status_x15 is 
  signal concat_y_net : std_logic_vector( 32-1 downto 0 );
  signal cast_gw_dout_net : std_logic_vector( 32-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal io_delay_q_net : std_logic_vector( 32-1 downto 0 );
  signal reint1_output_port_net : std_logic_vector( 32-1 downto 0 );
  signal assert_reg_dout_net : std_logic_vector( 32-1 downto 0 );
begin
  concat_y_net <= out_reg;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_01_ss_status_user_data_in <= cast_gw_dout_net;
  clk_net <= clk_1;
  ce_net <= ce_1;
  io_delay : entity xil_defaultlib.sysgen_delay_34e314c510 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d => reint1_output_port_net,
    q => io_delay_q_net
  );
  cast_gw : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 32,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 32,
    latency => 1,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => io_delay_q_net,
    clk => clk_net,
    ce => ce_net,
    dout => cast_gw_dout_net
  );
  assert_reg : entity xil_defaultlib.xlpassthrough 
  generic map (
    din_width => 32,
    dout_width => 32
  )
  port map (
    din => concat_y_net,
    dout => assert_reg_dout_net
  );
  reint1 : entity xil_defaultlib.sysgen_reinterpret_52bb84f12b 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => assert_reg_dout_net,
    output_port => reint1_output_port_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot1_01/ss
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_ss_x16 is
  port (
    din : in std_logic_vector( 32-1 downto 0 );
    we : in std_logic_vector( 1-1 downto 0 );
    trig : in std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_01_ss_ctrl_user_data_out : in std_logic_vector( 32-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    arm_out : out std_logic_vector( 1-1 downto 0 );
    goto_64606951_we1 : out std_logic_vector( 1-1 downto 0 );
    goto_64606951_we4 : out std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_01_ss_bram_addr : out std_logic_vector( 10-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_01_ss_bram_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_01_ss_bram_we : out std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_01_ss_status_user_data_in : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_ss_x16;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_ss_x16 is 
  signal arm_or_y_net : std_logic_vector( 1-1 downto 0 );
  signal concatenate_y_net : std_logic_vector( 32-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc1_sync_net : std_logic_vector( 1-1 downto 0 );
  signal edge_op_y_net_x0 : std_logic_vector( 1-1 downto 0 );
  signal we_choice_y_net : std_logic_vector( 1-1 downto 0 );
  signal logical6_y_net : std_logic_vector( 1-1 downto 0 );
  signal convert_addr_dout_net : std_logic_vector( 10-1 downto 0 );
  signal convert_din1_dout_net : std_logic_vector( 32-1 downto 0 );
  signal convert_we_dout_net : std_logic_vector( 1-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_01_ss_ctrl_user_data_out_net : std_logic_vector( 32-1 downto 0 );
  signal cast_gw_dout_net : std_logic_vector( 32-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal slice2_y_net : std_logic_vector( 10-1 downto 0 );
  signal delay6_q_net : std_logic_vector( 32-1 downto 0 );
  signal concat_y_net : std_logic_vector( 32-1 downto 0 );
  signal data_choice_y_net : std_logic_vector( 32-1 downto 0 );
  signal register6_q_net : std_logic_vector( 1-1 downto 0 );
  signal never_op_net : std_logic_vector( 1-1 downto 0 );
  signal edge_op_y_net_x1 : std_logic_vector( 1-1 downto 0 );
  signal cast_dout_net : std_logic_vector( 32-1 downto 0 );
  signal concatenate_y_net_x0 : std_logic_vector( 32-1 downto 0 );
  signal add_del_q_net : std_logic_vector( 10-1 downto 0 );
  signal dat_del_q_net : std_logic_vector( 32-1 downto 0 );
  signal we_del_q_net : std_logic_vector( 1-1 downto 0 );
  signal reint1_output_port_net : std_logic_vector( 32-1 downto 0 );
  signal reinterpret4_output_port_net : std_logic_vector( 28-1 downto 0 );
  signal circ_or_y_net : std_logic_vector( 1-1 downto 0 );
  signal reinterpret2_output_port_net : std_logic_vector( 2-1 downto 0 );
  signal slice3_y_net : std_logic_vector( 1-1 downto 0 );
  signal slice1_y_net : std_logic_vector( 1-1 downto 0 );
  signal arm_op_net : std_logic_vector( 1-1 downto 0 );
  signal ri_output_port_net : std_logic_vector( 32-1 downto 0 );
  signal circ_op_net : std_logic_vector( 1-1 downto 0 );
begin
  arm_out <= arm_or_y_net;
  concatenate_y_net <= din;
  rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc1_sync_net <= we;
  edge_op_y_net_x0 <= trig;
  goto_64606951_we1 <= we_choice_y_net;
  goto_64606951_we4 <= logical6_y_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_01_ss_bram_addr <= convert_addr_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_01_ss_bram_data_in <= convert_din1_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_01_ss_bram_we <= convert_we_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_01_ss_ctrl_user_data_out_net <= rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_01_ss_ctrl_user_data_out;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_01_ss_status_user_data_in <= cast_gw_dout_net;
  clk_net <= clk_1;
  ce_net <= ce_1;
  add_gen : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_add_gen_x16 
  port map (
    din => data_choice_y_net,
    we => we_choice_y_net,
    go => register6_q_net,
    cont => never_op_net,
    init => edge_op_y_net_x1,
    clk_1 => clk_net,
    ce_1 => ce_net,
    add => slice2_y_net,
    dout => delay6_q_net,
    we_o => logical6_y_net,
    status => concat_y_net
  );
  basic_ctrl : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_basic_ctrl_x16 
  port map (
    din => cast_dout_net,
    we => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc1_sync_net,
    trig => edge_op_y_net_x0,
    ctrl => concatenate_y_net_x0,
    stopi => never_op_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    dout => data_choice_y_net,
    we_o => we_choice_y_net,
    go => register6_q_net,
    init => edge_op_y_net_x1
  );
  bram : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_bram_x16 
  port map (
    addr => add_del_q_net,
    data_in => dat_del_q_net,
    we => we_del_q_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_01_ss_bram_addr => convert_addr_dout_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_01_ss_bram_data_in => convert_din1_dout_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_01_ss_bram_we => convert_we_dout_net
  );
  ctrl : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_ctrl_x15 
  port map (
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_01_ss_ctrl_user_data_out => rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_01_ss_ctrl_user_data_out_net,
    in_reg => reint1_output_port_net
  );
  ctrl_combine : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_ctrl_combine_x15 
  port map (
    in1 => reinterpret4_output_port_net,
    in2 => circ_or_y_net,
    in3 => reinterpret2_output_port_net,
    in4 => arm_or_y_net,
    bus_out => concatenate_y_net_x0
  );
  ctrl_split : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_ctrl_split_x15 
  port map (
    bus_in => reint1_output_port_net,
    msb_out4 => reinterpret4_output_port_net,
    out3 => slice3_y_net,
    out2 => reinterpret2_output_port_net,
    lsb_out1 => slice1_y_net
  );
  status : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_status_x15 
  port map (
    out_reg => concat_y_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_01_ss_status_user_data_in => cast_gw_dout_net
  );
  add_del : entity xil_defaultlib.sysgen_delay_4e9264ffdf 
  port map (
    clr => '0',
    d => slice2_y_net,
    clk => clk_net,
    ce => ce_net,
    q => add_del_q_net
  );
  arm : entity xil_defaultlib.sysgen_constant_a7b8778750 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => arm_op_net
  );
  arm_or : entity xil_defaultlib.sysgen_logical_d7dc12cf31 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => slice1_y_net,
    d1 => arm_op_net,
    y => arm_or_y_net
  );
  cast : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 32,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 32,
    latency => 0,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => ri_output_port_net,
    clk => clk_net,
    ce => ce_net,
    dout => cast_dout_net
  );
  circ : entity xil_defaultlib.sysgen_constant_a7b8778750 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => circ_op_net
  );
  circ_or : entity xil_defaultlib.sysgen_logical_d7dc12cf31 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => slice3_y_net,
    d1 => circ_op_net,
    y => circ_or_y_net
  );
  dat_del : entity xil_defaultlib.sysgen_delay_5ec362a23c 
  port map (
    clr => '0',
    d => delay6_q_net,
    clk => clk_net,
    ce => ce_net,
    q => dat_del_q_net
  );
  never : entity xil_defaultlib.sysgen_constant_a7b8778750 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => never_op_net
  );
  ri : entity xil_defaultlib.sysgen_reinterpret_52bb84f12b 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => concatenate_y_net,
    output_port => ri_output_port_net
  );
  we_del : entity xil_defaultlib.sysgen_delay_e0740ee3f9 
  port map (
    clr => '0',
    d => logical6_y_net,
    clk => clk_net,
    ce => ce_net,
    q => we_del_q_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot1_01
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_01 is
  port (
    in_d0 : in std_logic_vector( 16-1 downto 0 );
    in_d1 : in std_logic_vector( 16-1 downto 0 );
    we : in std_logic_vector( 1-1 downto 0 );
    trig : in std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_01_ss_ctrl_user_data_out : in std_logic_vector( 32-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    arm_out : out std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_01_ss_bram_addr : out std_logic_vector( 10-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_01_ss_bram_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_01_ss_bram_we : out std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_01_ss_status_user_data_in : out std_logic_vector( 32-1 downto 0 );
    goto_64606951_we1 : out std_logic_vector( 1-1 downto 0 );
    goto_64606951_we4 : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_01;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_01 is 
  signal arm_or_y_net : std_logic_vector( 1-1 downto 0 );
  signal slice8_y_net : std_logic_vector( 16-1 downto 0 );
  signal slice15_y_net : std_logic_vector( 16-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc1_sync_net : std_logic_vector( 1-1 downto 0 );
  signal edge_op_y_net : std_logic_vector( 1-1 downto 0 );
  signal convert_addr_dout_net : std_logic_vector( 10-1 downto 0 );
  signal convert_din1_dout_net : std_logic_vector( 32-1 downto 0 );
  signal convert_we_dout_net : std_logic_vector( 1-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_01_ss_ctrl_user_data_out_net : std_logic_vector( 32-1 downto 0 );
  signal cast_gw_dout_net : std_logic_vector( 32-1 downto 0 );
  signal we_choice_y_net : std_logic_vector( 1-1 downto 0 );
  signal logical6_y_net : std_logic_vector( 1-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal concatenate_y_net : std_logic_vector( 32-1 downto 0 );
  signal assert_d0_dout_net : std_logic_vector( 16-1 downto 0 );
  signal assert_d1_dout_net : std_logic_vector( 16-1 downto 0 );
begin
  arm_out <= arm_or_y_net;
  slice8_y_net <= in_d0;
  slice15_y_net <= in_d1;
  rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc1_sync_net <= we;
  edge_op_y_net <= trig;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_01_ss_bram_addr <= convert_addr_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_01_ss_bram_data_in <= convert_din1_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_01_ss_bram_we <= convert_we_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_01_ss_ctrl_user_data_out_net <= rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_01_ss_ctrl_user_data_out;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_01_ss_status_user_data_in <= cast_gw_dout_net;
  goto_64606951_we1 <= we_choice_y_net;
  goto_64606951_we4 <= logical6_y_net;
  clk_net <= clk_1;
  ce_net <= ce_1;
  buscreate : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_buscreate_x16 
  port map (
    in1 => assert_d0_dout_net,
    in2 => assert_d1_dout_net,
    bus_out => concatenate_y_net
  );
  ss : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_ss_x16 
  port map (
    din => concatenate_y_net,
    we => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc1_sync_net,
    trig => edge_op_y_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_01_ss_ctrl_user_data_out => rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_01_ss_ctrl_user_data_out_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    arm_out => arm_or_y_net,
    goto_64606951_we1 => we_choice_y_net,
    goto_64606951_we4 => logical6_y_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_01_ss_bram_addr => convert_addr_dout_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_01_ss_bram_data_in => convert_din1_dout_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_01_ss_bram_we => convert_we_dout_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_01_ss_status_user_data_in => cast_gw_dout_net
  );
  assert_d0 : entity xil_defaultlib.xlpassthrough 
  generic map (
    din_width => 16,
    dout_width => 16
  )
  port map (
    din => slice8_y_net,
    dout => assert_d0_dout_net
  );
  assert_d1 : entity xil_defaultlib.xlpassthrough 
  generic map (
    din_width => 16,
    dout_width => 16
  )
  port map (
    din => slice15_y_net,
    dout => assert_d1_dout_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot1_23/buscreate
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_buscreate_x15 is
  port (
    in1 : in std_logic_vector( 16-1 downto 0 );
    in2 : in std_logic_vector( 16-1 downto 0 );
    bus_out : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_buscreate_x15;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_buscreate_x15 is 
  signal concatenate_y_net : std_logic_vector( 32-1 downto 0 );
  signal assert_d0_dout_net : std_logic_vector( 16-1 downto 0 );
  signal assert_d1_dout_net : std_logic_vector( 16-1 downto 0 );
  signal reinterpret1_output_port_net : std_logic_vector( 16-1 downto 0 );
  signal reinterpret2_output_port_net : std_logic_vector( 16-1 downto 0 );
begin
  bus_out <= concatenate_y_net;
  assert_d0_dout_net <= in1;
  assert_d1_dout_net <= in2;
  concatenate : entity xil_defaultlib.sysgen_concat_37649e01d1 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    in0 => reinterpret1_output_port_net,
    in1 => reinterpret2_output_port_net,
    y => concatenate_y_net
  );
  reinterpret1 : entity xil_defaultlib.sysgen_reinterpret_03c8cdbbc1 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => assert_d0_dout_net,
    output_port => reinterpret1_output_port_net
  );
  reinterpret2 : entity xil_defaultlib.sysgen_reinterpret_03c8cdbbc1 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => assert_d1_dout_net,
    output_port => reinterpret2_output_port_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot1_23/ss/add_gen/edge_detect
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x31 is
  port (
    in_x0 : in std_logic_vector( 1-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    out_x0 : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x31;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x31 is 
  signal edge_op_y_net : std_logic_vector( 1-1 downto 0 );
  signal slice3_y_net : std_logic_vector( 1-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal delay_q_net : std_logic_vector( 1-1 downto 0 );
  signal inverter_op_net : std_logic_vector( 1-1 downto 0 );
begin
  out_x0 <= edge_op_y_net;
  slice3_y_net <= in_x0;
  clk_net <= clk_1;
  ce_net <= ce_1;
  delay : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 1
  )
  port map (
    en => '1',
    rst => '1',
    d => slice3_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay_q_net
  );
  inverter : entity xil_defaultlib.sysgen_inverter_6233897471 
  port map (
    clr => '0',
    ip => slice3_y_net,
    clk => clk_net,
    ce => ce_net,
    op => inverter_op_net
  );
  edge_op : entity xil_defaultlib.sysgen_logical_9cc14fefba 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => inverter_op_net,
    d1 => delay_q_net,
    y => edge_op_y_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot1_23/ss/add_gen
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_add_gen_x15 is
  port (
    din : in std_logic_vector( 32-1 downto 0 );
    we : in std_logic_vector( 1-1 downto 0 );
    go : in std_logic_vector( 1-1 downto 0 );
    cont : in std_logic_vector( 1-1 downto 0 );
    init : in std_logic_vector( 1-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    add : out std_logic_vector( 10-1 downto 0 );
    dout : out std_logic_vector( 32-1 downto 0 );
    we_o : out std_logic_vector( 1-1 downto 0 );
    status : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_add_gen_x15;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_add_gen_x15 is 
  signal slice2_y_net : std_logic_vector( 10-1 downto 0 );
  signal delay6_q_net : std_logic_vector( 32-1 downto 0 );
  signal logical6_y_net : std_logic_vector( 1-1 downto 0 );
  signal concat_y_net : std_logic_vector( 32-1 downto 0 );
  signal data_choice_y_net : std_logic_vector( 32-1 downto 0 );
  signal we_choice_y_net : std_logic_vector( 1-1 downto 0 );
  signal register6_q_net : std_logic_vector( 1-1 downto 0 );
  signal never_op_net : std_logic_vector( 1-1 downto 0 );
  signal edge_op_y_net : std_logic_vector( 1-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal edge_op_y_net_x0 : std_logic_vector( 1-1 downto 0 );
  signal slice3_y_net : std_logic_vector( 1-1 downto 0 );
  signal shift_op_net : std_logic_vector( 19-1 downto 0 );
  signal inverter_op_net : std_logic_vector( 1-1 downto 0 );
  signal delay1_q_net : std_logic_vector( 12-1 downto 0 );
  signal convert_dout_net : std_logic_vector( 19-1 downto 0 );
  signal register5_q_net : std_logic_vector( 1-1 downto 0 );
  signal delay_q_net : std_logic_vector( 1-1 downto 0 );
  signal delay4_q_net : std_logic_vector( 1-1 downto 0 );
  signal slice1_y_net : std_logic_vector( 12-1 downto 0 );
  signal delay3_q_net : std_logic_vector( 1-1 downto 0 );
  signal inverter1_op_net : std_logic_vector( 1-1 downto 0 );
  signal logical1_y_net : std_logic_vector( 1-1 downto 0 );
  signal logical4_y_net : std_logic_vector( 1-1 downto 0 );
  signal add_gen_op_net : std_logic_vector( 13-1 downto 0 );
begin
  add <= slice2_y_net;
  dout <= delay6_q_net;
  we_o <= logical6_y_net;
  status <= concat_y_net;
  data_choice_y_net <= din;
  we_choice_y_net <= we;
  register6_q_net <= go;
  never_op_net <= cont;
  edge_op_y_net <= init;
  clk_net <= clk_1;
  ce_net <= ce_1;
  edge_detect : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x31 
  port map (
    in_x0 => slice3_y_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    out_x0 => edge_op_y_net_x0
  );
  concat : entity xil_defaultlib.sysgen_concat_fc8edfac0e 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    in0 => shift_op_net,
    in1 => inverter_op_net,
    in2 => delay1_q_net,
    y => concat_y_net
  );
  convert : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 1,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 19,
    latency => 0,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => register5_q_net,
    clk => clk_net,
    ce => ce_net,
    dout => convert_dout_net
  );
  delay : entity xil_defaultlib.sysgen_delay_e0740ee3f9 
  port map (
    clr => '0',
    d => delay4_q_net,
    clk => clk_net,
    ce => ce_net,
    q => delay_q_net
  );
  delay1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 12
  )
  port map (
    en => '1',
    rst => '1',
    d => slice1_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay1_q_net
  );
  delay3 : entity xil_defaultlib.sysgen_delay_e0740ee3f9 
  port map (
    clr => '0',
    d => never_op_net,
    clk => clk_net,
    ce => ce_net,
    q => delay3_q_net
  );
  delay4 : entity xil_defaultlib.sysgen_delay_e0740ee3f9 
  port map (
    clr => '0',
    d => edge_op_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay4_q_net
  );
  delay6 : entity xil_defaultlib.sysgen_delay_5ec362a23c 
  port map (
    clr => '0',
    d => data_choice_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay6_q_net
  );
  inverter : entity xil_defaultlib.sysgen_inverter_918b6bc6d0 
  port map (
    clr => '0',
    ip => register5_q_net,
    clk => clk_net,
    ce => ce_net,
    op => inverter_op_net
  );
  inverter1 : entity xil_defaultlib.sysgen_inverter_6233897471 
  port map (
    clr => '0',
    ip => edge_op_y_net_x0,
    clk => clk_net,
    ce => ce_net,
    op => inverter1_op_net
  );
  logical1 : entity xil_defaultlib.sysgen_logical_2486129911 
  port map (
    clr => '0',
    d0 => we_choice_y_net,
    d1 => register6_q_net,
    clk => clk_net,
    ce => ce_net,
    y => logical1_y_net
  );
  logical4 : entity xil_defaultlib.sysgen_logical_d7dc12cf31 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => delay3_q_net,
    d1 => inverter1_op_net,
    y => logical4_y_net
  );
  logical6 : entity xil_defaultlib.sysgen_logical_c05fefc67b 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => register5_q_net,
    d1 => logical4_y_net,
    d2 => logical1_y_net,
    y => logical6_y_net
  );
  register5 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlregister 
  generic map (
    d_width => 1,
    init_value => b"1"
  )
  port map (
    d => delay3_q_net,
    rst => delay_q_net,
    en => edge_op_y_net_x0,
    clk => clk_net,
    ce => ce_net,
    q => register5_q_net
  );
  shift : entity xil_defaultlib.sysgen_shift_5af4fe0a99 
  port map (
    clr => '0',
    ip => convert_dout_net,
    clk => clk_net,
    ce => ce_net,
    op => shift_op_net
  );
  add_gen : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlcounter_free 
  generic map (
    core_name0 => "rfdc_multi_eight_adcs_2048gsps_mts_c_counter_binary_v12_0_i1",
    op_arith => xlUnsigned,
    op_width => 13
  )
  port map (
    clr => '0',
    rst => delay4_q_net,
    en => logical6_y_net,
    clk => clk_net,
    ce => ce_net,
    op => add_gen_op_net
  );
  slice1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 0,
    new_msb => 11,
    x_width => 13,
    y_width => 12
  )
  port map (
    x => add_gen_op_net,
    y => slice1_y_net
  );
  slice2 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 2,
    new_msb => 11,
    x_width => 13,
    y_width => 10
  )
  port map (
    x => add_gen_op_net,
    y => slice2_y_net
  );
  slice3 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 12,
    new_msb => 12,
    x_width => 13,
    y_width => 1
  )
  port map (
    x => add_gen_op_net,
    y => slice3_y_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot1_23/ss/basic_ctrl/dram_munge
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_dram_munge_x15 is
  port (
    din : in std_logic_vector( 32-1 downto 0 );
    we : in std_logic_vector( 1-1 downto 0 );
    init : in std_logic_vector( 1-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    dout : out std_logic_vector( 32-1 downto 0 );
    we_o : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_dram_munge_x15;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_dram_munge_x15 is 
  signal data_choice_y_net : std_logic_vector( 32-1 downto 0 );
  signal we_choice_y_net : std_logic_vector( 1-1 downto 0 );
  signal cast_dout_net : std_logic_vector( 32-1 downto 0 );
  signal mux1_y_net_x0 : std_logic_vector( 1-1 downto 0 );
  signal edge_op_y_net : std_logic_vector( 1-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal concat_y_net : std_logic_vector( 80-1 downto 0 );
  signal constant_op_net : std_logic_vector( 8-1 downto 0 );
  signal register_q_net : std_logic_vector( 32-1 downto 0 );
  signal register1_q_net : std_logic_vector( 32-1 downto 0 );
  signal concat1_y_net : std_logic_vector( 80-1 downto 0 );
  signal register2_q_net : std_logic_vector( 32-1 downto 0 );
  signal register3_q_net : std_logic_vector( 32-1 downto 0 );
  signal delay_q_net : std_logic_vector( 1-1 downto 0 );
  signal logical_y_net : std_logic_vector( 1-1 downto 0 );
  signal delay1_q_net : std_logic_vector( 1-1 downto 0 );
  signal logical1_y_net : std_logic_vector( 1-1 downto 0 );
  signal relational3_op_net : std_logic_vector( 1-1 downto 0 );
  signal mux1_y_net : std_logic_vector( 80-1 downto 0 );
  signal dout_count_op_net : std_logic_vector( 1-1 downto 0 );
  signal relational_op_net : std_logic_vector( 1-1 downto 0 );
  signal relational1_op_net : std_logic_vector( 1-1 downto 0 );
  signal relational2_op_net : std_logic_vector( 1-1 downto 0 );
  signal input_count_op_net : std_logic_vector( 2-1 downto 0 );
  signal con0_op_net : std_logic_vector( 2-1 downto 0 );
  signal con1_op_net : std_logic_vector( 2-1 downto 0 );
  signal con2_op_net : std_logic_vector( 2-1 downto 0 );
  signal con3_op_net : std_logic_vector( 2-1 downto 0 );
  signal dram_op_net : std_logic_vector( 1-1 downto 0 );
begin
  dout <= data_choice_y_net;
  we_o <= we_choice_y_net;
  cast_dout_net <= din;
  mux1_y_net_x0 <= we;
  edge_op_y_net <= init;
  clk_net <= clk_1;
  ce_net <= ce_1;
  concat : entity xil_defaultlib.sysgen_concat_e7487baac7 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    in0 => constant_op_net,
    in1 => register_q_net,
    in2 => constant_op_net,
    in3 => register1_q_net,
    y => concat_y_net
  );
  concat1 : entity xil_defaultlib.sysgen_concat_e7487baac7 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    in0 => constant_op_net,
    in1 => register2_q_net,
    in2 => constant_op_net,
    in3 => register3_q_net,
    y => concat1_y_net
  );
  constant_x0 : entity xil_defaultlib.sysgen_constant_869e31f04d 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => constant_op_net
  );
  delay : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 1
  )
  port map (
    en => '1',
    rst => '1',
    d => logical_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay_q_net
  );
  delay1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 1
  )
  port map (
    en => '1',
    rst => '1',
    d => logical1_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay1_q_net
  );
  logical : entity xil_defaultlib.sysgen_logical_2486129911 
  port map (
    clr => '0',
    d0 => relational3_op_net,
    d1 => mux1_y_net_x0,
    clk => clk_net,
    ce => ce_net,
    y => logical_y_net
  );
  logical1 : entity xil_defaultlib.sysgen_logical_d7dc12cf31 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => logical_y_net,
    d1 => delay_q_net,
    y => logical1_y_net
  );
  mux1 : entity xil_defaultlib.sysgen_mux_71ee2b1026 
  port map (
    clr => '0',
    sel => dout_count_op_net,
    d0 => concat_y_net,
    d1 => concat1_y_net,
    clk => clk_net,
    ce => ce_net,
    y => mux1_y_net
  );
  register_x0 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlregister 
  generic map (
    d_width => 32,
    init_value => b"00000000000000000000000000000000"
  )
  port map (
    rst => "0",
    d => cast_dout_net,
    en => relational_op_net,
    clk => clk_net,
    ce => ce_net,
    q => register_q_net
  );
  register1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlregister 
  generic map (
    d_width => 32,
    init_value => b"00000000000000000000000000000000"
  )
  port map (
    rst => "0",
    d => cast_dout_net,
    en => relational1_op_net,
    clk => clk_net,
    ce => ce_net,
    q => register1_q_net
  );
  register2 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlregister 
  generic map (
    d_width => 32,
    init_value => b"00000000000000000000000000000000"
  )
  port map (
    rst => "0",
    d => cast_dout_net,
    en => relational2_op_net,
    clk => clk_net,
    ce => ce_net,
    q => register2_q_net
  );
  register3 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlregister 
  generic map (
    d_width => 32,
    init_value => b"00000000000000000000000000000000"
  )
  port map (
    rst => "0",
    d => cast_dout_net,
    en => relational3_op_net,
    clk => clk_net,
    ce => ce_net,
    q => register3_q_net
  );
  relational : entity xil_defaultlib.sysgen_relational_e5d6b5eaca 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    a => input_count_op_net,
    b => con0_op_net,
    op => relational_op_net
  );
  relational1 : entity xil_defaultlib.sysgen_relational_e5d6b5eaca 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    a => input_count_op_net,
    b => con1_op_net,
    op => relational1_op_net
  );
  relational2 : entity xil_defaultlib.sysgen_relational_e5d6b5eaca 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    a => input_count_op_net,
    b => con2_op_net,
    op => relational2_op_net
  );
  relational3 : entity xil_defaultlib.sysgen_relational_e5d6b5eaca 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    a => input_count_op_net,
    b => con3_op_net,
    op => relational3_op_net
  );
  con0 : entity xil_defaultlib.sysgen_constant_b58c3a1535 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => con0_op_net
  );
  con1 : entity xil_defaultlib.sysgen_constant_d3f27a6354 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => con1_op_net
  );
  con2 : entity xil_defaultlib.sysgen_constant_2fa4689d4e 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => con2_op_net
  );
  con3 : entity xil_defaultlib.sysgen_constant_31bab66ba6 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => con3_op_net
  );
  data_choice : entity xil_defaultlib.sysgen_mux_d624c1af44 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    sel => dram_op_net,
    d0 => cast_dout_net,
    d1 => mux1_y_net,
    y => data_choice_y_net
  );
  dout_count : entity xil_defaultlib.sysgen_counter_a9c1c293c2 
  port map (
    clr => '0',
    rst => edge_op_y_net,
    en => logical1_y_net,
    clk => clk_net,
    ce => ce_net,
    op => dout_count_op_net
  );
  dram : entity xil_defaultlib.sysgen_constant_a7b8778750 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => dram_op_net
  );
  input_count : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlcounter_free 
  generic map (
    core_name0 => "rfdc_multi_eight_adcs_2048gsps_mts_c_counter_binary_v12_0_i2",
    op_arith => xlUnsigned,
    op_width => 2
  )
  port map (
    clr => '0',
    rst => edge_op_y_net,
    en => mux1_y_net_x0,
    clk => clk_net,
    ce => ce_net,
    op => input_count_op_net
  );
  we_choice : entity xil_defaultlib.sysgen_mux_4874190f11 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    sel => dram_op_net,
    d0 => mux1_y_net_x0,
    d1 => delay1_q_net,
    y => we_choice_y_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot1_23/ss/basic_ctrl/edge_detect
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x32 is
  port (
    in_x0 : in std_logic_vector( 1-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    out_x0 : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x32;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x32 is 
  signal edge_op_y_net : std_logic_vector( 1-1 downto 0 );
  signal delay1_q_net : std_logic_vector( 1-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal delay_q_net : std_logic_vector( 1-1 downto 0 );
  signal inverter_op_net : std_logic_vector( 1-1 downto 0 );
begin
  out_x0 <= edge_op_y_net;
  delay1_q_net <= in_x0;
  clk_net <= clk_1;
  ce_net <= ce_1;
  delay : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 1
  )
  port map (
    en => '1',
    rst => '1',
    d => delay1_q_net,
    clk => clk_net,
    ce => ce_net,
    q => delay_q_net
  );
  inverter : entity xil_defaultlib.sysgen_inverter_6233897471 
  port map (
    clr => '0',
    ip => delay1_q_net,
    clk => clk_net,
    ce => ce_net,
    op => inverter_op_net
  );
  edge_op : entity xil_defaultlib.sysgen_logical_0f1aa1e2d7 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => inverter_op_net,
    d1 => delay_q_net,
    y => edge_op_y_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot1_23/ss/basic_ctrl
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_basic_ctrl_x15 is
  port (
    din : in std_logic_vector( 32-1 downto 0 );
    we : in std_logic_vector( 1-1 downto 0 );
    trig : in std_logic_vector( 1-1 downto 0 );
    ctrl : in std_logic_vector( 32-1 downto 0 );
    stopi : in std_logic_vector( 1-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    dout : out std_logic_vector( 32-1 downto 0 );
    we_o : out std_logic_vector( 1-1 downto 0 );
    go : out std_logic_vector( 1-1 downto 0 );
    init : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_basic_ctrl_x15;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_basic_ctrl_x15 is 
  signal edge_op_y_net : std_logic_vector( 1-1 downto 0 );
  signal concatenate_y_net : std_logic_vector( 32-1 downto 0 );
  signal never_op_net : std_logic_vector( 1-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal mux1_y_net : std_logic_vector( 1-1 downto 0 );
  signal delay1_q_net : std_logic_vector( 1-1 downto 0 );
  signal constant_op_net : std_logic_vector( 1-1 downto 0 );
  signal constant1_op_net : std_logic_vector( 1-1 downto 0 );
  signal constant2_op_net : std_logic_vector( 1-1 downto 0 );
  signal enable_y_net : std_logic_vector( 1-1 downto 0 );
  signal delay2_q_net : std_logic_vector( 1-1 downto 0 );
  signal trig_src_y_net : std_logic_vector( 1-1 downto 0 );
  signal delay3_q_net : std_logic_vector( 1-1 downto 0 );
  signal valid_src_y_net : std_logic_vector( 1-1 downto 0 );
  signal inverter_op_net : std_logic_vector( 1-1 downto 0 );
  signal logical_y_net : std_logic_vector( 1-1 downto 0 );
  signal mux2_y_net : std_logic_vector( 1-1 downto 0 );
  signal register1_q_net : std_logic_vector( 1-1 downto 0 );
  signal data_choice_y_net : std_logic_vector( 32-1 downto 0 );
  signal we_choice_y_net : std_logic_vector( 1-1 downto 0 );
  signal register6_q_net : std_logic_vector( 1-1 downto 0 );
  signal edge_op_y_net_x0 : std_logic_vector( 1-1 downto 0 );
  signal cast_dout_net : std_logic_vector( 32-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc1_sync_net : std_logic_vector( 1-1 downto 0 );
begin
  dout <= data_choice_y_net;
  we_o <= we_choice_y_net;
  go <= register6_q_net;
  init <= edge_op_y_net_x0;
  cast_dout_net <= din;
  rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc1_sync_net <= we;
  edge_op_y_net <= trig;
  concatenate_y_net <= ctrl;
  never_op_net <= stopi;
  clk_net <= clk_1;
  ce_net <= ce_1;
  dram_munge : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_dram_munge_x15 
  port map (
    din => cast_dout_net,
    we => mux1_y_net,
    init => edge_op_y_net_x0,
    clk_1 => clk_net,
    ce_1 => ce_net,
    dout => data_choice_y_net,
    we_o => we_choice_y_net
  );
  edge_detect : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x32 
  port map (
    in_x0 => delay1_q_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    out_x0 => edge_op_y_net_x0
  );
  constant_x0 : entity xil_defaultlib.sysgen_constant_c95a0b5efb 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => constant_op_net
  );
  constant1 : entity xil_defaultlib.sysgen_constant_c95a0b5efb 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => constant1_op_net
  );
  constant2 : entity xil_defaultlib.sysgen_constant_c95a0b5efb 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => constant2_op_net
  );
  delay1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 1
  )
  port map (
    en => '1',
    rst => '1',
    d => enable_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay1_q_net
  );
  delay2 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 1
  )
  port map (
    en => '1',
    rst => '1',
    d => trig_src_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay2_q_net
  );
  delay3 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 1
  )
  port map (
    en => '1',
    rst => '1',
    d => valid_src_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay3_q_net
  );
  inverter : entity xil_defaultlib.sysgen_inverter_6233897471 
  port map (
    clr => '0',
    ip => edge_op_y_net_x0,
    clk => clk_net,
    ce => ce_net,
    op => inverter_op_net
  );
  logical : entity xil_defaultlib.sysgen_logical_d26e5cda59 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => mux2_y_net,
    d1 => inverter_op_net,
    y => logical_y_net
  );
  mux1 : entity xil_defaultlib.sysgen_mux_4874190f11 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    sel => delay3_q_net,
    d0 => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc1_sync_net,
    d1 => constant2_op_net,
    y => mux1_y_net
  );
  mux2 : entity xil_defaultlib.sysgen_mux_4874190f11 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    sel => delay2_q_net,
    d0 => edge_op_y_net,
    d1 => constant1_op_net,
    y => mux2_y_net
  );
  register1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlregister 
  generic map (
    d_width => 1,
    init_value => b"0"
  )
  port map (
    d => constant_op_net,
    rst => logical_y_net,
    en => edge_op_y_net_x0,
    clk => clk_net,
    ce => ce_net,
    q => register1_q_net
  );
  register6 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlregister 
  generic map (
    d_width => 1,
    init_value => b"0"
  )
  port map (
    d => mux2_y_net,
    rst => edge_op_y_net_x0,
    en => register1_q_net,
    clk => clk_net,
    ce => ce_net,
    q => register6_q_net
  );
  enable : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 0,
    new_msb => 0,
    x_width => 32,
    y_width => 1
  )
  port map (
    x => concatenate_y_net,
    y => enable_y_net
  );
  trig_src : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 1,
    new_msb => 1,
    x_width => 32,
    y_width => 1
  )
  port map (
    x => concatenate_y_net,
    y => trig_src_y_net
  );
  valid_src : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 2,
    new_msb => 2,
    x_width => 32,
    y_width => 1
  )
  port map (
    x => concatenate_y_net,
    y => valid_src_y_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot1_23/ss/bram/calc_add
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_calc_add_x15 is
  port (
    in_x0 : in std_logic_vector( 10-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    out_x0 : out std_logic_vector( 10-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_calc_add_x15;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_calc_add_x15 is 
  signal mux_y_net : std_logic_vector( 10-1 downto 0 );
  signal add_del_q_net : std_logic_vector( 10-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal add_sub_s_net : std_logic_vector( 1-1 downto 0 );
  signal const_op_net : std_logic_vector( 1-1 downto 0 );
  signal lsw_y_net : std_logic_vector( 1-1 downto 0 );
  signal concat_y_net : std_logic_vector( 10-1 downto 0 );
  signal msw_y_net : std_logic_vector( 9-1 downto 0 );
  signal convert_addr_dout_net : std_logic_vector( 10-1 downto 0 );
  signal manipulate_op_net : std_logic_vector( 1-1 downto 0 );
begin
  out_x0 <= mux_y_net;
  add_del_q_net <= in_x0;
  clk_net <= clk_1;
  ce_net <= ce_1;
  add_sub : entity xil_defaultlib.sysgen_addsub_fd3b6c715c 
  port map (
    clr => '0',
    a => const_op_net,
    b => lsw_y_net,
    clk => clk_net,
    ce => ce_net,
    s => add_sub_s_net
  );
  concat : entity xil_defaultlib.sysgen_concat_f4b90dfa16 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    in0 => msw_y_net,
    in1 => add_sub_s_net,
    y => concat_y_net
  );
  const : entity xil_defaultlib.sysgen_constant_a7b8778750 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => const_op_net
  );
  convert_addr : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 10,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 10,
    latency => 0,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => add_del_q_net,
    clk => clk_net,
    ce => ce_net,
    dout => convert_addr_dout_net
  );
  lsw : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 0,
    new_msb => 0,
    x_width => 10,
    y_width => 1
  )
  port map (
    x => convert_addr_dout_net,
    y => lsw_y_net
  );
  manipulate : entity xil_defaultlib.sysgen_constant_a7b8778750 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => manipulate_op_net
  );
  msw : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 1,
    new_msb => 9,
    x_width => 10,
    y_width => 9
  )
  port map (
    x => convert_addr_dout_net,
    y => msw_y_net
  );
  mux : entity xil_defaultlib.sysgen_mux_4417594854 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    sel => manipulate_op_net,
    d0 => convert_addr_dout_net,
    d1 => concat_y_net,
    y => mux_y_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot1_23/ss/bram/munge_in
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_munge_in_x16 is
  port (
    din : in std_logic_vector( 32-1 downto 0 );
    dout : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_munge_in_x16;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_munge_in_x16 is 
  signal reinterpret_out_output_port_net : std_logic_vector( 32-1 downto 0 );
  signal dat_del_q_net : std_logic_vector( 32-1 downto 0 );
begin
  dout <= reinterpret_out_output_port_net;
  dat_del_q_net <= din;
  reinterpret_out : entity xil_defaultlib.sysgen_reinterpret_52bb84f12b 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => dat_del_q_net,
    output_port => reinterpret_out_output_port_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot1_23/ss/bram
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_bram_x15 is
  port (
    addr : in std_logic_vector( 10-1 downto 0 );
    data_in : in std_logic_vector( 32-1 downto 0 );
    we : in std_logic_vector( 1-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_23_ss_bram_addr : out std_logic_vector( 10-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_23_ss_bram_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_23_ss_bram_we : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_bram_x15;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_bram_x15 is 
  signal add_del_q_net : std_logic_vector( 10-1 downto 0 );
  signal dat_del_q_net : std_logic_vector( 32-1 downto 0 );
  signal we_del_q_net : std_logic_vector( 1-1 downto 0 );
  signal convert_addr_dout_net : std_logic_vector( 10-1 downto 0 );
  signal convert_din1_dout_net : std_logic_vector( 32-1 downto 0 );
  signal convert_we_dout_net : std_logic_vector( 1-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal mux_y_net : std_logic_vector( 10-1 downto 0 );
  signal reinterpret_out_output_port_net : std_logic_vector( 32-1 downto 0 );
begin
  add_del_q_net <= addr;
  dat_del_q_net <= data_in;
  we_del_q_net <= we;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_23_ss_bram_addr <= convert_addr_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_23_ss_bram_data_in <= convert_din1_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_23_ss_bram_we <= convert_we_dout_net;
  clk_net <= clk_1;
  ce_net <= ce_1;
  calc_add : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_calc_add_x15 
  port map (
    in_x0 => add_del_q_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    out_x0 => mux_y_net
  );
  munge_in : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_munge_in_x16 
  port map (
    din => dat_del_q_net,
    dout => reinterpret_out_output_port_net
  );
  convert_addr : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 10,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 10,
    latency => 0,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => mux_y_net,
    clk => clk_net,
    ce => ce_net,
    dout => convert_addr_dout_net
  );
  convert_din1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 32,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 32,
    latency => 0,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => reinterpret_out_output_port_net,
    clk => clk_net,
    ce => ce_net,
    dout => convert_din1_dout_net
  );
  convert_we : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 1,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 1,
    latency => 0,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => we_del_q_net,
    clk => clk_net,
    ce => ce_net,
    dout => convert_we_dout_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot1_23/ss/ctrl
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_ctrl_x18 is
  port (
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_23_ss_ctrl_user_data_out : in std_logic_vector( 32-1 downto 0 );
    in_reg : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_ctrl_x18;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_ctrl_x18 is 
  signal reint1_output_port_net : std_logic_vector( 32-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_23_ss_ctrl_user_data_out_net : std_logic_vector( 32-1 downto 0 );
  signal io_delay_q_net : std_logic_vector( 32-1 downto 0 );
  signal slice_reg_y_net : std_logic_vector( 32-1 downto 0 );
begin
  in_reg <= reint1_output_port_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_23_ss_ctrl_user_data_out_net <= rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_23_ss_ctrl_user_data_out;
  io_delay : entity xil_defaultlib.sysgen_delay_34e314c510 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d => rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_23_ss_ctrl_user_data_out_net,
    q => io_delay_q_net
  );
  slice_reg : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 0,
    new_msb => 31,
    x_width => 32,
    y_width => 32
  )
  port map (
    x => io_delay_q_net,
    y => slice_reg_y_net
  );
  reint1 : entity xil_defaultlib.sysgen_reinterpret_52bb84f12b 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => slice_reg_y_net,
    output_port => reint1_output_port_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot1_23/ss/ctrl_combine
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_ctrl_combine_x18 is
  port (
    in1 : in std_logic_vector( 28-1 downto 0 );
    in2 : in std_logic_vector( 1-1 downto 0 );
    in3 : in std_logic_vector( 2-1 downto 0 );
    in4 : in std_logic_vector( 1-1 downto 0 );
    bus_out : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_ctrl_combine_x18;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_ctrl_combine_x18 is 
  signal concatenate_y_net : std_logic_vector( 32-1 downto 0 );
  signal reinterpret4_output_port_net_x0 : std_logic_vector( 28-1 downto 0 );
  signal circ_or_y_net : std_logic_vector( 1-1 downto 0 );
  signal reinterpret2_output_port_net : std_logic_vector( 2-1 downto 0 );
  signal arm_or_y_net : std_logic_vector( 1-1 downto 0 );
  signal reinterpret1_output_port_net : std_logic_vector( 28-1 downto 0 );
  signal reinterpret2_output_port_net_x0 : std_logic_vector( 1-1 downto 0 );
  signal reinterpret3_output_port_net : std_logic_vector( 2-1 downto 0 );
  signal reinterpret4_output_port_net : std_logic_vector( 1-1 downto 0 );
begin
  bus_out <= concatenate_y_net;
  reinterpret4_output_port_net_x0 <= in1;
  circ_or_y_net <= in2;
  reinterpret2_output_port_net <= in3;
  arm_or_y_net <= in4;
  concatenate : entity xil_defaultlib.sysgen_concat_8611e618a5 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    in0 => reinterpret1_output_port_net,
    in1 => reinterpret2_output_port_net_x0,
    in2 => reinterpret3_output_port_net,
    in3 => reinterpret4_output_port_net,
    y => concatenate_y_net
  );
  reinterpret1 : entity xil_defaultlib.sysgen_reinterpret_f7e0b72e82 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => reinterpret4_output_port_net_x0,
    output_port => reinterpret1_output_port_net
  );
  reinterpret2 : entity xil_defaultlib.sysgen_reinterpret_317b92931a 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => circ_or_y_net,
    output_port => reinterpret2_output_port_net_x0
  );
  reinterpret3 : entity xil_defaultlib.sysgen_reinterpret_5dc9f217bd 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => reinterpret2_output_port_net,
    output_port => reinterpret3_output_port_net
  );
  reinterpret4 : entity xil_defaultlib.sysgen_reinterpret_317b92931a 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => arm_or_y_net,
    output_port => reinterpret4_output_port_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot1_23/ss/ctrl_split
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_ctrl_split_x18 is
  port (
    bus_in : in std_logic_vector( 32-1 downto 0 );
    msb_out4 : out std_logic_vector( 28-1 downto 0 );
    out3 : out std_logic_vector( 1-1 downto 0 );
    out2 : out std_logic_vector( 2-1 downto 0 );
    lsb_out1 : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_ctrl_split_x18;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_ctrl_split_x18 is 
  signal reinterpret4_output_port_net : std_logic_vector( 28-1 downto 0 );
  signal slice3_y_net : std_logic_vector( 1-1 downto 0 );
  signal reinterpret2_output_port_net : std_logic_vector( 2-1 downto 0 );
  signal slice1_y_net : std_logic_vector( 1-1 downto 0 );
  signal reint1_output_port_net : std_logic_vector( 32-1 downto 0 );
  signal slice2_y_net : std_logic_vector( 2-1 downto 0 );
  signal slice4_y_net : std_logic_vector( 28-1 downto 0 );
begin
  msb_out4 <= reinterpret4_output_port_net;
  out3 <= slice3_y_net;
  out2 <= reinterpret2_output_port_net;
  lsb_out1 <= slice1_y_net;
  reint1_output_port_net <= bus_in;
  reinterpret2 : entity xil_defaultlib.sysgen_reinterpret_5dc9f217bd 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => slice2_y_net,
    output_port => reinterpret2_output_port_net
  );
  reinterpret4 : entity xil_defaultlib.sysgen_reinterpret_f7e0b72e82 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => slice4_y_net,
    output_port => reinterpret4_output_port_net
  );
  slice1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 0,
    new_msb => 0,
    x_width => 32,
    y_width => 1
  )
  port map (
    x => reint1_output_port_net,
    y => slice1_y_net
  );
  slice2 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 1,
    new_msb => 2,
    x_width => 32,
    y_width => 2
  )
  port map (
    x => reint1_output_port_net,
    y => slice2_y_net
  );
  slice3 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 3,
    new_msb => 3,
    x_width => 32,
    y_width => 1
  )
  port map (
    x => reint1_output_port_net,
    y => slice3_y_net
  );
  slice4 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 4,
    new_msb => 31,
    x_width => 32,
    y_width => 28
  )
  port map (
    x => reint1_output_port_net,
    y => slice4_y_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot1_23/ss/status
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_status_x18 is
  port (
    out_reg : in std_logic_vector( 32-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_23_ss_status_user_data_in : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_status_x18;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_status_x18 is 
  signal concat_y_net : std_logic_vector( 32-1 downto 0 );
  signal cast_gw_dout_net : std_logic_vector( 32-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal io_delay_q_net : std_logic_vector( 32-1 downto 0 );
  signal reint1_output_port_net : std_logic_vector( 32-1 downto 0 );
  signal assert_reg_dout_net : std_logic_vector( 32-1 downto 0 );
begin
  concat_y_net <= out_reg;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_23_ss_status_user_data_in <= cast_gw_dout_net;
  clk_net <= clk_1;
  ce_net <= ce_1;
  io_delay : entity xil_defaultlib.sysgen_delay_34e314c510 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d => reint1_output_port_net,
    q => io_delay_q_net
  );
  cast_gw : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 32,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 32,
    latency => 1,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => io_delay_q_net,
    clk => clk_net,
    ce => ce_net,
    dout => cast_gw_dout_net
  );
  assert_reg : entity xil_defaultlib.xlpassthrough 
  generic map (
    din_width => 32,
    dout_width => 32
  )
  port map (
    din => concat_y_net,
    dout => assert_reg_dout_net
  );
  reint1 : entity xil_defaultlib.sysgen_reinterpret_52bb84f12b 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => assert_reg_dout_net,
    output_port => reint1_output_port_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot1_23/ss
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_ss_x15 is
  port (
    din : in std_logic_vector( 32-1 downto 0 );
    we : in std_logic_vector( 1-1 downto 0 );
    trig : in std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_23_ss_ctrl_user_data_out : in std_logic_vector( 32-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    arm_out : out std_logic_vector( 1-1 downto 0 );
    goto_66513575_we1 : out std_logic_vector( 1-1 downto 0 );
    goto_66513575_we4 : out std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_23_ss_bram_addr : out std_logic_vector( 10-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_23_ss_bram_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_23_ss_bram_we : out std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_23_ss_status_user_data_in : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_ss_x15;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_ss_x15 is 
  signal arm_or_y_net : std_logic_vector( 1-1 downto 0 );
  signal concatenate_y_net : std_logic_vector( 32-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc1_sync_net : std_logic_vector( 1-1 downto 0 );
  signal edge_op_y_net_x0 : std_logic_vector( 1-1 downto 0 );
  signal we_choice_y_net : std_logic_vector( 1-1 downto 0 );
  signal logical6_y_net : std_logic_vector( 1-1 downto 0 );
  signal convert_addr_dout_net : std_logic_vector( 10-1 downto 0 );
  signal convert_din1_dout_net : std_logic_vector( 32-1 downto 0 );
  signal convert_we_dout_net : std_logic_vector( 1-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_23_ss_ctrl_user_data_out_net : std_logic_vector( 32-1 downto 0 );
  signal cast_gw_dout_net : std_logic_vector( 32-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal slice2_y_net : std_logic_vector( 10-1 downto 0 );
  signal delay6_q_net : std_logic_vector( 32-1 downto 0 );
  signal concat_y_net : std_logic_vector( 32-1 downto 0 );
  signal data_choice_y_net : std_logic_vector( 32-1 downto 0 );
  signal register6_q_net : std_logic_vector( 1-1 downto 0 );
  signal never_op_net : std_logic_vector( 1-1 downto 0 );
  signal edge_op_y_net_x1 : std_logic_vector( 1-1 downto 0 );
  signal cast_dout_net : std_logic_vector( 32-1 downto 0 );
  signal concatenate_y_net_x0 : std_logic_vector( 32-1 downto 0 );
  signal add_del_q_net : std_logic_vector( 10-1 downto 0 );
  signal dat_del_q_net : std_logic_vector( 32-1 downto 0 );
  signal we_del_q_net : std_logic_vector( 1-1 downto 0 );
  signal reint1_output_port_net : std_logic_vector( 32-1 downto 0 );
  signal reinterpret4_output_port_net : std_logic_vector( 28-1 downto 0 );
  signal circ_or_y_net : std_logic_vector( 1-1 downto 0 );
  signal reinterpret2_output_port_net : std_logic_vector( 2-1 downto 0 );
  signal slice3_y_net : std_logic_vector( 1-1 downto 0 );
  signal slice1_y_net : std_logic_vector( 1-1 downto 0 );
  signal arm_op_net : std_logic_vector( 1-1 downto 0 );
  signal ri_output_port_net : std_logic_vector( 32-1 downto 0 );
  signal circ_op_net : std_logic_vector( 1-1 downto 0 );
begin
  arm_out <= arm_or_y_net;
  concatenate_y_net <= din;
  rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc1_sync_net <= we;
  edge_op_y_net_x0 <= trig;
  goto_66513575_we1 <= we_choice_y_net;
  goto_66513575_we4 <= logical6_y_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_23_ss_bram_addr <= convert_addr_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_23_ss_bram_data_in <= convert_din1_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_23_ss_bram_we <= convert_we_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_23_ss_ctrl_user_data_out_net <= rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_23_ss_ctrl_user_data_out;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_23_ss_status_user_data_in <= cast_gw_dout_net;
  clk_net <= clk_1;
  ce_net <= ce_1;
  add_gen : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_add_gen_x15 
  port map (
    din => data_choice_y_net,
    we => we_choice_y_net,
    go => register6_q_net,
    cont => never_op_net,
    init => edge_op_y_net_x1,
    clk_1 => clk_net,
    ce_1 => ce_net,
    add => slice2_y_net,
    dout => delay6_q_net,
    we_o => logical6_y_net,
    status => concat_y_net
  );
  basic_ctrl : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_basic_ctrl_x15 
  port map (
    din => cast_dout_net,
    we => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc1_sync_net,
    trig => edge_op_y_net_x0,
    ctrl => concatenate_y_net_x0,
    stopi => never_op_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    dout => data_choice_y_net,
    we_o => we_choice_y_net,
    go => register6_q_net,
    init => edge_op_y_net_x1
  );
  bram : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_bram_x15 
  port map (
    addr => add_del_q_net,
    data_in => dat_del_q_net,
    we => we_del_q_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_23_ss_bram_addr => convert_addr_dout_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_23_ss_bram_data_in => convert_din1_dout_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_23_ss_bram_we => convert_we_dout_net
  );
  ctrl : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_ctrl_x18 
  port map (
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_23_ss_ctrl_user_data_out => rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_23_ss_ctrl_user_data_out_net,
    in_reg => reint1_output_port_net
  );
  ctrl_combine : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_ctrl_combine_x18 
  port map (
    in1 => reinterpret4_output_port_net,
    in2 => circ_or_y_net,
    in3 => reinterpret2_output_port_net,
    in4 => arm_or_y_net,
    bus_out => concatenate_y_net_x0
  );
  ctrl_split : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_ctrl_split_x18 
  port map (
    bus_in => reint1_output_port_net,
    msb_out4 => reinterpret4_output_port_net,
    out3 => slice3_y_net,
    out2 => reinterpret2_output_port_net,
    lsb_out1 => slice1_y_net
  );
  status : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_status_x18 
  port map (
    out_reg => concat_y_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_23_ss_status_user_data_in => cast_gw_dout_net
  );
  add_del : entity xil_defaultlib.sysgen_delay_4e9264ffdf 
  port map (
    clr => '0',
    d => slice2_y_net,
    clk => clk_net,
    ce => ce_net,
    q => add_del_q_net
  );
  arm : entity xil_defaultlib.sysgen_constant_a7b8778750 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => arm_op_net
  );
  arm_or : entity xil_defaultlib.sysgen_logical_d7dc12cf31 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => slice1_y_net,
    d1 => arm_op_net,
    y => arm_or_y_net
  );
  cast : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 32,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 32,
    latency => 0,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => ri_output_port_net,
    clk => clk_net,
    ce => ce_net,
    dout => cast_dout_net
  );
  circ : entity xil_defaultlib.sysgen_constant_a7b8778750 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => circ_op_net
  );
  circ_or : entity xil_defaultlib.sysgen_logical_d7dc12cf31 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => slice3_y_net,
    d1 => circ_op_net,
    y => circ_or_y_net
  );
  dat_del : entity xil_defaultlib.sysgen_delay_5ec362a23c 
  port map (
    clr => '0',
    d => delay6_q_net,
    clk => clk_net,
    ce => ce_net,
    q => dat_del_q_net
  );
  never : entity xil_defaultlib.sysgen_constant_a7b8778750 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => never_op_net
  );
  ri : entity xil_defaultlib.sysgen_reinterpret_52bb84f12b 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => concatenate_y_net,
    output_port => ri_output_port_net
  );
  we_del : entity xil_defaultlib.sysgen_delay_e0740ee3f9 
  port map (
    clr => '0',
    d => logical6_y_net,
    clk => clk_net,
    ce => ce_net,
    q => we_del_q_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot1_23
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_23 is
  port (
    in_d0 : in std_logic_vector( 16-1 downto 0 );
    in_d1 : in std_logic_vector( 16-1 downto 0 );
    we : in std_logic_vector( 1-1 downto 0 );
    trig : in std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_23_ss_ctrl_user_data_out : in std_logic_vector( 32-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    arm_out : out std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_23_ss_bram_addr : out std_logic_vector( 10-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_23_ss_bram_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_23_ss_bram_we : out std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_23_ss_status_user_data_in : out std_logic_vector( 32-1 downto 0 );
    goto_66513575_we1 : out std_logic_vector( 1-1 downto 0 );
    goto_66513575_we4 : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_23;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_23 is 
  signal arm_or_y_net : std_logic_vector( 1-1 downto 0 );
  signal slice9_y_net : std_logic_vector( 16-1 downto 0 );
  signal slice14_y_net : std_logic_vector( 16-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc1_sync_net : std_logic_vector( 1-1 downto 0 );
  signal edge_op_y_net : std_logic_vector( 1-1 downto 0 );
  signal convert_addr_dout_net : std_logic_vector( 10-1 downto 0 );
  signal convert_din1_dout_net : std_logic_vector( 32-1 downto 0 );
  signal convert_we_dout_net : std_logic_vector( 1-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_23_ss_ctrl_user_data_out_net : std_logic_vector( 32-1 downto 0 );
  signal cast_gw_dout_net : std_logic_vector( 32-1 downto 0 );
  signal we_choice_y_net : std_logic_vector( 1-1 downto 0 );
  signal logical6_y_net : std_logic_vector( 1-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal concatenate_y_net : std_logic_vector( 32-1 downto 0 );
  signal assert_d0_dout_net : std_logic_vector( 16-1 downto 0 );
  signal assert_d1_dout_net : std_logic_vector( 16-1 downto 0 );
begin
  arm_out <= arm_or_y_net;
  slice9_y_net <= in_d0;
  slice14_y_net <= in_d1;
  rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc1_sync_net <= we;
  edge_op_y_net <= trig;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_23_ss_bram_addr <= convert_addr_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_23_ss_bram_data_in <= convert_din1_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_23_ss_bram_we <= convert_we_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_23_ss_ctrl_user_data_out_net <= rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_23_ss_ctrl_user_data_out;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_23_ss_status_user_data_in <= cast_gw_dout_net;
  goto_66513575_we1 <= we_choice_y_net;
  goto_66513575_we4 <= logical6_y_net;
  clk_net <= clk_1;
  ce_net <= ce_1;
  buscreate : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_buscreate_x15 
  port map (
    in1 => assert_d0_dout_net,
    in2 => assert_d1_dout_net,
    bus_out => concatenate_y_net
  );
  ss : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_ss_x15 
  port map (
    din => concatenate_y_net,
    we => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc1_sync_net,
    trig => edge_op_y_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_23_ss_ctrl_user_data_out => rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_23_ss_ctrl_user_data_out_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    arm_out => arm_or_y_net,
    goto_66513575_we1 => we_choice_y_net,
    goto_66513575_we4 => logical6_y_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_23_ss_bram_addr => convert_addr_dout_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_23_ss_bram_data_in => convert_din1_dout_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_23_ss_bram_we => convert_we_dout_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_23_ss_status_user_data_in => cast_gw_dout_net
  );
  assert_d0 : entity xil_defaultlib.xlpassthrough 
  generic map (
    din_width => 16,
    dout_width => 16
  )
  port map (
    din => slice9_y_net,
    dout => assert_d0_dout_net
  );
  assert_d1 : entity xil_defaultlib.xlpassthrough 
  generic map (
    din_width => 16,
    dout_width => 16
  )
  port map (
    din => slice14_y_net,
    dout => assert_d1_dout_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot1_45/buscreate
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_buscreate_x18 is
  port (
    in1 : in std_logic_vector( 16-1 downto 0 );
    in2 : in std_logic_vector( 16-1 downto 0 );
    bus_out : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_buscreate_x18;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_buscreate_x18 is 
  signal concatenate_y_net : std_logic_vector( 32-1 downto 0 );
  signal assert_d0_dout_net : std_logic_vector( 16-1 downto 0 );
  signal assert_d1_dout_net : std_logic_vector( 16-1 downto 0 );
  signal reinterpret1_output_port_net : std_logic_vector( 16-1 downto 0 );
  signal reinterpret2_output_port_net : std_logic_vector( 16-1 downto 0 );
begin
  bus_out <= concatenate_y_net;
  assert_d0_dout_net <= in1;
  assert_d1_dout_net <= in2;
  concatenate : entity xil_defaultlib.sysgen_concat_37649e01d1 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    in0 => reinterpret1_output_port_net,
    in1 => reinterpret2_output_port_net,
    y => concatenate_y_net
  );
  reinterpret1 : entity xil_defaultlib.sysgen_reinterpret_03c8cdbbc1 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => assert_d0_dout_net,
    output_port => reinterpret1_output_port_net
  );
  reinterpret2 : entity xil_defaultlib.sysgen_reinterpret_03c8cdbbc1 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => assert_d1_dout_net,
    output_port => reinterpret2_output_port_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot1_45/ss/add_gen/edge_detect
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x37 is
  port (
    in_x0 : in std_logic_vector( 1-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    out_x0 : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x37;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x37 is 
  signal edge_op_y_net : std_logic_vector( 1-1 downto 0 );
  signal slice3_y_net : std_logic_vector( 1-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal delay_q_net : std_logic_vector( 1-1 downto 0 );
  signal inverter_op_net : std_logic_vector( 1-1 downto 0 );
begin
  out_x0 <= edge_op_y_net;
  slice3_y_net <= in_x0;
  clk_net <= clk_1;
  ce_net <= ce_1;
  delay : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 1
  )
  port map (
    en => '1',
    rst => '1',
    d => slice3_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay_q_net
  );
  inverter : entity xil_defaultlib.sysgen_inverter_6233897471 
  port map (
    clr => '0',
    ip => slice3_y_net,
    clk => clk_net,
    ce => ce_net,
    op => inverter_op_net
  );
  edge_op : entity xil_defaultlib.sysgen_logical_9cc14fefba 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => inverter_op_net,
    d1 => delay_q_net,
    y => edge_op_y_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot1_45/ss/add_gen
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_add_gen_x18 is
  port (
    din : in std_logic_vector( 32-1 downto 0 );
    we : in std_logic_vector( 1-1 downto 0 );
    go : in std_logic_vector( 1-1 downto 0 );
    cont : in std_logic_vector( 1-1 downto 0 );
    init : in std_logic_vector( 1-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    add : out std_logic_vector( 10-1 downto 0 );
    dout : out std_logic_vector( 32-1 downto 0 );
    we_o : out std_logic_vector( 1-1 downto 0 );
    status : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_add_gen_x18;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_add_gen_x18 is 
  signal slice2_y_net : std_logic_vector( 10-1 downto 0 );
  signal delay6_q_net : std_logic_vector( 32-1 downto 0 );
  signal logical6_y_net : std_logic_vector( 1-1 downto 0 );
  signal concat_y_net : std_logic_vector( 32-1 downto 0 );
  signal data_choice_y_net : std_logic_vector( 32-1 downto 0 );
  signal we_choice_y_net : std_logic_vector( 1-1 downto 0 );
  signal register6_q_net : std_logic_vector( 1-1 downto 0 );
  signal never_op_net : std_logic_vector( 1-1 downto 0 );
  signal edge_op_y_net : std_logic_vector( 1-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal edge_op_y_net_x0 : std_logic_vector( 1-1 downto 0 );
  signal slice3_y_net : std_logic_vector( 1-1 downto 0 );
  signal shift_op_net : std_logic_vector( 19-1 downto 0 );
  signal inverter_op_net : std_logic_vector( 1-1 downto 0 );
  signal delay1_q_net : std_logic_vector( 12-1 downto 0 );
  signal convert_dout_net : std_logic_vector( 19-1 downto 0 );
  signal register5_q_net : std_logic_vector( 1-1 downto 0 );
  signal delay_q_net : std_logic_vector( 1-1 downto 0 );
  signal delay4_q_net : std_logic_vector( 1-1 downto 0 );
  signal slice1_y_net : std_logic_vector( 12-1 downto 0 );
  signal delay3_q_net : std_logic_vector( 1-1 downto 0 );
  signal inverter1_op_net : std_logic_vector( 1-1 downto 0 );
  signal logical1_y_net : std_logic_vector( 1-1 downto 0 );
  signal logical4_y_net : std_logic_vector( 1-1 downto 0 );
  signal add_gen_op_net : std_logic_vector( 13-1 downto 0 );
begin
  add <= slice2_y_net;
  dout <= delay6_q_net;
  we_o <= logical6_y_net;
  status <= concat_y_net;
  data_choice_y_net <= din;
  we_choice_y_net <= we;
  register6_q_net <= go;
  never_op_net <= cont;
  edge_op_y_net <= init;
  clk_net <= clk_1;
  ce_net <= ce_1;
  edge_detect : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x37 
  port map (
    in_x0 => slice3_y_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    out_x0 => edge_op_y_net_x0
  );
  concat : entity xil_defaultlib.sysgen_concat_fc8edfac0e 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    in0 => shift_op_net,
    in1 => inverter_op_net,
    in2 => delay1_q_net,
    y => concat_y_net
  );
  convert : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 1,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 19,
    latency => 0,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => register5_q_net,
    clk => clk_net,
    ce => ce_net,
    dout => convert_dout_net
  );
  delay : entity xil_defaultlib.sysgen_delay_e0740ee3f9 
  port map (
    clr => '0',
    d => delay4_q_net,
    clk => clk_net,
    ce => ce_net,
    q => delay_q_net
  );
  delay1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 12
  )
  port map (
    en => '1',
    rst => '1',
    d => slice1_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay1_q_net
  );
  delay3 : entity xil_defaultlib.sysgen_delay_e0740ee3f9 
  port map (
    clr => '0',
    d => never_op_net,
    clk => clk_net,
    ce => ce_net,
    q => delay3_q_net
  );
  delay4 : entity xil_defaultlib.sysgen_delay_e0740ee3f9 
  port map (
    clr => '0',
    d => edge_op_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay4_q_net
  );
  delay6 : entity xil_defaultlib.sysgen_delay_5ec362a23c 
  port map (
    clr => '0',
    d => data_choice_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay6_q_net
  );
  inverter : entity xil_defaultlib.sysgen_inverter_918b6bc6d0 
  port map (
    clr => '0',
    ip => register5_q_net,
    clk => clk_net,
    ce => ce_net,
    op => inverter_op_net
  );
  inverter1 : entity xil_defaultlib.sysgen_inverter_6233897471 
  port map (
    clr => '0',
    ip => edge_op_y_net_x0,
    clk => clk_net,
    ce => ce_net,
    op => inverter1_op_net
  );
  logical1 : entity xil_defaultlib.sysgen_logical_2486129911 
  port map (
    clr => '0',
    d0 => we_choice_y_net,
    d1 => register6_q_net,
    clk => clk_net,
    ce => ce_net,
    y => logical1_y_net
  );
  logical4 : entity xil_defaultlib.sysgen_logical_d7dc12cf31 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => delay3_q_net,
    d1 => inverter1_op_net,
    y => logical4_y_net
  );
  logical6 : entity xil_defaultlib.sysgen_logical_c05fefc67b 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => register5_q_net,
    d1 => logical4_y_net,
    d2 => logical1_y_net,
    y => logical6_y_net
  );
  register5 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlregister 
  generic map (
    d_width => 1,
    init_value => b"1"
  )
  port map (
    d => delay3_q_net,
    rst => delay_q_net,
    en => edge_op_y_net_x0,
    clk => clk_net,
    ce => ce_net,
    q => register5_q_net
  );
  shift : entity xil_defaultlib.sysgen_shift_5af4fe0a99 
  port map (
    clr => '0',
    ip => convert_dout_net,
    clk => clk_net,
    ce => ce_net,
    op => shift_op_net
  );
  add_gen : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlcounter_free 
  generic map (
    core_name0 => "rfdc_multi_eight_adcs_2048gsps_mts_c_counter_binary_v12_0_i1",
    op_arith => xlUnsigned,
    op_width => 13
  )
  port map (
    clr => '0',
    rst => delay4_q_net,
    en => logical6_y_net,
    clk => clk_net,
    ce => ce_net,
    op => add_gen_op_net
  );
  slice1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 0,
    new_msb => 11,
    x_width => 13,
    y_width => 12
  )
  port map (
    x => add_gen_op_net,
    y => slice1_y_net
  );
  slice2 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 2,
    new_msb => 11,
    x_width => 13,
    y_width => 10
  )
  port map (
    x => add_gen_op_net,
    y => slice2_y_net
  );
  slice3 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 12,
    new_msb => 12,
    x_width => 13,
    y_width => 1
  )
  port map (
    x => add_gen_op_net,
    y => slice3_y_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot1_45/ss/basic_ctrl/dram_munge
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_dram_munge_x18 is
  port (
    din : in std_logic_vector( 32-1 downto 0 );
    we : in std_logic_vector( 1-1 downto 0 );
    init : in std_logic_vector( 1-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    dout : out std_logic_vector( 32-1 downto 0 );
    we_o : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_dram_munge_x18;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_dram_munge_x18 is 
  signal data_choice_y_net : std_logic_vector( 32-1 downto 0 );
  signal we_choice_y_net : std_logic_vector( 1-1 downto 0 );
  signal cast_dout_net : std_logic_vector( 32-1 downto 0 );
  signal mux1_y_net_x0 : std_logic_vector( 1-1 downto 0 );
  signal edge_op_y_net : std_logic_vector( 1-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal concat_y_net : std_logic_vector( 80-1 downto 0 );
  signal constant_op_net : std_logic_vector( 8-1 downto 0 );
  signal register_q_net : std_logic_vector( 32-1 downto 0 );
  signal register1_q_net : std_logic_vector( 32-1 downto 0 );
  signal concat1_y_net : std_logic_vector( 80-1 downto 0 );
  signal register2_q_net : std_logic_vector( 32-1 downto 0 );
  signal register3_q_net : std_logic_vector( 32-1 downto 0 );
  signal delay_q_net : std_logic_vector( 1-1 downto 0 );
  signal logical_y_net : std_logic_vector( 1-1 downto 0 );
  signal delay1_q_net : std_logic_vector( 1-1 downto 0 );
  signal logical1_y_net : std_logic_vector( 1-1 downto 0 );
  signal relational3_op_net : std_logic_vector( 1-1 downto 0 );
  signal mux1_y_net : std_logic_vector( 80-1 downto 0 );
  signal dout_count_op_net : std_logic_vector( 1-1 downto 0 );
  signal relational_op_net : std_logic_vector( 1-1 downto 0 );
  signal relational1_op_net : std_logic_vector( 1-1 downto 0 );
  signal relational2_op_net : std_logic_vector( 1-1 downto 0 );
  signal input_count_op_net : std_logic_vector( 2-1 downto 0 );
  signal con0_op_net : std_logic_vector( 2-1 downto 0 );
  signal con1_op_net : std_logic_vector( 2-1 downto 0 );
  signal con2_op_net : std_logic_vector( 2-1 downto 0 );
  signal con3_op_net : std_logic_vector( 2-1 downto 0 );
  signal dram_op_net : std_logic_vector( 1-1 downto 0 );
begin
  dout <= data_choice_y_net;
  we_o <= we_choice_y_net;
  cast_dout_net <= din;
  mux1_y_net_x0 <= we;
  edge_op_y_net <= init;
  clk_net <= clk_1;
  ce_net <= ce_1;
  concat : entity xil_defaultlib.sysgen_concat_e7487baac7 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    in0 => constant_op_net,
    in1 => register_q_net,
    in2 => constant_op_net,
    in3 => register1_q_net,
    y => concat_y_net
  );
  concat1 : entity xil_defaultlib.sysgen_concat_e7487baac7 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    in0 => constant_op_net,
    in1 => register2_q_net,
    in2 => constant_op_net,
    in3 => register3_q_net,
    y => concat1_y_net
  );
  constant_x0 : entity xil_defaultlib.sysgen_constant_869e31f04d 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => constant_op_net
  );
  delay : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 1
  )
  port map (
    en => '1',
    rst => '1',
    d => logical_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay_q_net
  );
  delay1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 1
  )
  port map (
    en => '1',
    rst => '1',
    d => logical1_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay1_q_net
  );
  logical : entity xil_defaultlib.sysgen_logical_2486129911 
  port map (
    clr => '0',
    d0 => relational3_op_net,
    d1 => mux1_y_net_x0,
    clk => clk_net,
    ce => ce_net,
    y => logical_y_net
  );
  logical1 : entity xil_defaultlib.sysgen_logical_d7dc12cf31 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => logical_y_net,
    d1 => delay_q_net,
    y => logical1_y_net
  );
  mux1 : entity xil_defaultlib.sysgen_mux_71ee2b1026 
  port map (
    clr => '0',
    sel => dout_count_op_net,
    d0 => concat_y_net,
    d1 => concat1_y_net,
    clk => clk_net,
    ce => ce_net,
    y => mux1_y_net
  );
  register_x0 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlregister 
  generic map (
    d_width => 32,
    init_value => b"00000000000000000000000000000000"
  )
  port map (
    rst => "0",
    d => cast_dout_net,
    en => relational_op_net,
    clk => clk_net,
    ce => ce_net,
    q => register_q_net
  );
  register1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlregister 
  generic map (
    d_width => 32,
    init_value => b"00000000000000000000000000000000"
  )
  port map (
    rst => "0",
    d => cast_dout_net,
    en => relational1_op_net,
    clk => clk_net,
    ce => ce_net,
    q => register1_q_net
  );
  register2 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlregister 
  generic map (
    d_width => 32,
    init_value => b"00000000000000000000000000000000"
  )
  port map (
    rst => "0",
    d => cast_dout_net,
    en => relational2_op_net,
    clk => clk_net,
    ce => ce_net,
    q => register2_q_net
  );
  register3 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlregister 
  generic map (
    d_width => 32,
    init_value => b"00000000000000000000000000000000"
  )
  port map (
    rst => "0",
    d => cast_dout_net,
    en => relational3_op_net,
    clk => clk_net,
    ce => ce_net,
    q => register3_q_net
  );
  relational : entity xil_defaultlib.sysgen_relational_e5d6b5eaca 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    a => input_count_op_net,
    b => con0_op_net,
    op => relational_op_net
  );
  relational1 : entity xil_defaultlib.sysgen_relational_e5d6b5eaca 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    a => input_count_op_net,
    b => con1_op_net,
    op => relational1_op_net
  );
  relational2 : entity xil_defaultlib.sysgen_relational_e5d6b5eaca 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    a => input_count_op_net,
    b => con2_op_net,
    op => relational2_op_net
  );
  relational3 : entity xil_defaultlib.sysgen_relational_e5d6b5eaca 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    a => input_count_op_net,
    b => con3_op_net,
    op => relational3_op_net
  );
  con0 : entity xil_defaultlib.sysgen_constant_b58c3a1535 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => con0_op_net
  );
  con1 : entity xil_defaultlib.sysgen_constant_d3f27a6354 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => con1_op_net
  );
  con2 : entity xil_defaultlib.sysgen_constant_2fa4689d4e 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => con2_op_net
  );
  con3 : entity xil_defaultlib.sysgen_constant_31bab66ba6 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => con3_op_net
  );
  data_choice : entity xil_defaultlib.sysgen_mux_d624c1af44 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    sel => dram_op_net,
    d0 => cast_dout_net,
    d1 => mux1_y_net,
    y => data_choice_y_net
  );
  dout_count : entity xil_defaultlib.sysgen_counter_a9c1c293c2 
  port map (
    clr => '0',
    rst => edge_op_y_net,
    en => logical1_y_net,
    clk => clk_net,
    ce => ce_net,
    op => dout_count_op_net
  );
  dram : entity xil_defaultlib.sysgen_constant_a7b8778750 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => dram_op_net
  );
  input_count : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlcounter_free 
  generic map (
    core_name0 => "rfdc_multi_eight_adcs_2048gsps_mts_c_counter_binary_v12_0_i2",
    op_arith => xlUnsigned,
    op_width => 2
  )
  port map (
    clr => '0',
    rst => edge_op_y_net,
    en => mux1_y_net_x0,
    clk => clk_net,
    ce => ce_net,
    op => input_count_op_net
  );
  we_choice : entity xil_defaultlib.sysgen_mux_4874190f11 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    sel => dram_op_net,
    d0 => mux1_y_net_x0,
    d1 => delay1_q_net,
    y => we_choice_y_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot1_45/ss/basic_ctrl/edge_detect
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x38 is
  port (
    in_x0 : in std_logic_vector( 1-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    out_x0 : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x38;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x38 is 
  signal edge_op_y_net : std_logic_vector( 1-1 downto 0 );
  signal delay1_q_net : std_logic_vector( 1-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal delay_q_net : std_logic_vector( 1-1 downto 0 );
  signal inverter_op_net : std_logic_vector( 1-1 downto 0 );
begin
  out_x0 <= edge_op_y_net;
  delay1_q_net <= in_x0;
  clk_net <= clk_1;
  ce_net <= ce_1;
  delay : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 1
  )
  port map (
    en => '1',
    rst => '1',
    d => delay1_q_net,
    clk => clk_net,
    ce => ce_net,
    q => delay_q_net
  );
  inverter : entity xil_defaultlib.sysgen_inverter_6233897471 
  port map (
    clr => '0',
    ip => delay1_q_net,
    clk => clk_net,
    ce => ce_net,
    op => inverter_op_net
  );
  edge_op : entity xil_defaultlib.sysgen_logical_0f1aa1e2d7 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => inverter_op_net,
    d1 => delay_q_net,
    y => edge_op_y_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot1_45/ss/basic_ctrl
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_basic_ctrl_x18 is
  port (
    din : in std_logic_vector( 32-1 downto 0 );
    we : in std_logic_vector( 1-1 downto 0 );
    trig : in std_logic_vector( 1-1 downto 0 );
    ctrl : in std_logic_vector( 32-1 downto 0 );
    stopi : in std_logic_vector( 1-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    dout : out std_logic_vector( 32-1 downto 0 );
    we_o : out std_logic_vector( 1-1 downto 0 );
    go : out std_logic_vector( 1-1 downto 0 );
    init : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_basic_ctrl_x18;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_basic_ctrl_x18 is 
  signal data_choice_y_net : std_logic_vector( 32-1 downto 0 );
  signal we_choice_y_net : std_logic_vector( 1-1 downto 0 );
  signal register6_q_net : std_logic_vector( 1-1 downto 0 );
  signal edge_op_y_net_x0 : std_logic_vector( 1-1 downto 0 );
  signal cast_dout_net : std_logic_vector( 32-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc1_sync_net : std_logic_vector( 1-1 downto 0 );
  signal edge_op_y_net : std_logic_vector( 1-1 downto 0 );
  signal concatenate_y_net : std_logic_vector( 32-1 downto 0 );
  signal never_op_net : std_logic_vector( 1-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal mux1_y_net : std_logic_vector( 1-1 downto 0 );
  signal delay1_q_net : std_logic_vector( 1-1 downto 0 );
  signal constant_op_net : std_logic_vector( 1-1 downto 0 );
  signal constant1_op_net : std_logic_vector( 1-1 downto 0 );
  signal constant2_op_net : std_logic_vector( 1-1 downto 0 );
  signal enable_y_net : std_logic_vector( 1-1 downto 0 );
  signal delay2_q_net : std_logic_vector( 1-1 downto 0 );
  signal trig_src_y_net : std_logic_vector( 1-1 downto 0 );
  signal delay3_q_net : std_logic_vector( 1-1 downto 0 );
  signal valid_src_y_net : std_logic_vector( 1-1 downto 0 );
  signal inverter_op_net : std_logic_vector( 1-1 downto 0 );
  signal logical_y_net : std_logic_vector( 1-1 downto 0 );
  signal mux2_y_net : std_logic_vector( 1-1 downto 0 );
  signal register1_q_net : std_logic_vector( 1-1 downto 0 );
begin
  dout <= data_choice_y_net;
  we_o <= we_choice_y_net;
  go <= register6_q_net;
  init <= edge_op_y_net_x0;
  cast_dout_net <= din;
  rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc1_sync_net <= we;
  edge_op_y_net <= trig;
  concatenate_y_net <= ctrl;
  never_op_net <= stopi;
  clk_net <= clk_1;
  ce_net <= ce_1;
  dram_munge : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_dram_munge_x18 
  port map (
    din => cast_dout_net,
    we => mux1_y_net,
    init => edge_op_y_net_x0,
    clk_1 => clk_net,
    ce_1 => ce_net,
    dout => data_choice_y_net,
    we_o => we_choice_y_net
  );
  edge_detect : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x38 
  port map (
    in_x0 => delay1_q_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    out_x0 => edge_op_y_net_x0
  );
  constant_x0 : entity xil_defaultlib.sysgen_constant_c95a0b5efb 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => constant_op_net
  );
  constant1 : entity xil_defaultlib.sysgen_constant_c95a0b5efb 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => constant1_op_net
  );
  constant2 : entity xil_defaultlib.sysgen_constant_c95a0b5efb 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => constant2_op_net
  );
  delay1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 1
  )
  port map (
    en => '1',
    rst => '1',
    d => enable_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay1_q_net
  );
  delay2 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 1
  )
  port map (
    en => '1',
    rst => '1',
    d => trig_src_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay2_q_net
  );
  delay3 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 1
  )
  port map (
    en => '1',
    rst => '1',
    d => valid_src_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay3_q_net
  );
  inverter : entity xil_defaultlib.sysgen_inverter_6233897471 
  port map (
    clr => '0',
    ip => edge_op_y_net_x0,
    clk => clk_net,
    ce => ce_net,
    op => inverter_op_net
  );
  logical : entity xil_defaultlib.sysgen_logical_d26e5cda59 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => mux2_y_net,
    d1 => inverter_op_net,
    y => logical_y_net
  );
  mux1 : entity xil_defaultlib.sysgen_mux_4874190f11 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    sel => delay3_q_net,
    d0 => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc1_sync_net,
    d1 => constant2_op_net,
    y => mux1_y_net
  );
  mux2 : entity xil_defaultlib.sysgen_mux_4874190f11 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    sel => delay2_q_net,
    d0 => edge_op_y_net,
    d1 => constant1_op_net,
    y => mux2_y_net
  );
  register1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlregister 
  generic map (
    d_width => 1,
    init_value => b"0"
  )
  port map (
    d => constant_op_net,
    rst => logical_y_net,
    en => edge_op_y_net_x0,
    clk => clk_net,
    ce => ce_net,
    q => register1_q_net
  );
  register6 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlregister 
  generic map (
    d_width => 1,
    init_value => b"0"
  )
  port map (
    d => mux2_y_net,
    rst => edge_op_y_net_x0,
    en => register1_q_net,
    clk => clk_net,
    ce => ce_net,
    q => register6_q_net
  );
  enable : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 0,
    new_msb => 0,
    x_width => 32,
    y_width => 1
  )
  port map (
    x => concatenate_y_net,
    y => enable_y_net
  );
  trig_src : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 1,
    new_msb => 1,
    x_width => 32,
    y_width => 1
  )
  port map (
    x => concatenate_y_net,
    y => trig_src_y_net
  );
  valid_src : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 2,
    new_msb => 2,
    x_width => 32,
    y_width => 1
  )
  port map (
    x => concatenate_y_net,
    y => valid_src_y_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot1_45/ss/bram/calc_add
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_calc_add_x18 is
  port (
    in_x0 : in std_logic_vector( 10-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    out_x0 : out std_logic_vector( 10-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_calc_add_x18;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_calc_add_x18 is 
  signal mux_y_net : std_logic_vector( 10-1 downto 0 );
  signal add_del_q_net : std_logic_vector( 10-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal add_sub_s_net : std_logic_vector( 1-1 downto 0 );
  signal const_op_net : std_logic_vector( 1-1 downto 0 );
  signal lsw_y_net : std_logic_vector( 1-1 downto 0 );
  signal concat_y_net : std_logic_vector( 10-1 downto 0 );
  signal msw_y_net : std_logic_vector( 9-1 downto 0 );
  signal convert_addr_dout_net : std_logic_vector( 10-1 downto 0 );
  signal manipulate_op_net : std_logic_vector( 1-1 downto 0 );
begin
  out_x0 <= mux_y_net;
  add_del_q_net <= in_x0;
  clk_net <= clk_1;
  ce_net <= ce_1;
  add_sub : entity xil_defaultlib.sysgen_addsub_fd3b6c715c 
  port map (
    clr => '0',
    a => const_op_net,
    b => lsw_y_net,
    clk => clk_net,
    ce => ce_net,
    s => add_sub_s_net
  );
  concat : entity xil_defaultlib.sysgen_concat_f4b90dfa16 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    in0 => msw_y_net,
    in1 => add_sub_s_net,
    y => concat_y_net
  );
  const : entity xil_defaultlib.sysgen_constant_a7b8778750 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => const_op_net
  );
  convert_addr : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 10,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 10,
    latency => 0,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => add_del_q_net,
    clk => clk_net,
    ce => ce_net,
    dout => convert_addr_dout_net
  );
  lsw : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 0,
    new_msb => 0,
    x_width => 10,
    y_width => 1
  )
  port map (
    x => convert_addr_dout_net,
    y => lsw_y_net
  );
  manipulate : entity xil_defaultlib.sysgen_constant_a7b8778750 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => manipulate_op_net
  );
  msw : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 1,
    new_msb => 9,
    x_width => 10,
    y_width => 9
  )
  port map (
    x => convert_addr_dout_net,
    y => msw_y_net
  );
  mux : entity xil_defaultlib.sysgen_mux_4417594854 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    sel => manipulate_op_net,
    d0 => convert_addr_dout_net,
    d1 => concat_y_net,
    y => mux_y_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot1_45/ss/bram/munge_in
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_munge_in_x19 is
  port (
    din : in std_logic_vector( 32-1 downto 0 );
    dout : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_munge_in_x19;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_munge_in_x19 is 
  signal reinterpret_out_output_port_net : std_logic_vector( 32-1 downto 0 );
  signal dat_del_q_net : std_logic_vector( 32-1 downto 0 );
begin
  dout <= reinterpret_out_output_port_net;
  dat_del_q_net <= din;
  reinterpret_out : entity xil_defaultlib.sysgen_reinterpret_52bb84f12b 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => dat_del_q_net,
    output_port => reinterpret_out_output_port_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot1_45/ss/bram
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_bram_x18 is
  port (
    addr : in std_logic_vector( 10-1 downto 0 );
    data_in : in std_logic_vector( 32-1 downto 0 );
    we : in std_logic_vector( 1-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_45_ss_bram_addr : out std_logic_vector( 10-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_45_ss_bram_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_45_ss_bram_we : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_bram_x18;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_bram_x18 is 
  signal add_del_q_net : std_logic_vector( 10-1 downto 0 );
  signal dat_del_q_net : std_logic_vector( 32-1 downto 0 );
  signal we_del_q_net : std_logic_vector( 1-1 downto 0 );
  signal convert_addr_dout_net : std_logic_vector( 10-1 downto 0 );
  signal convert_din1_dout_net : std_logic_vector( 32-1 downto 0 );
  signal convert_we_dout_net : std_logic_vector( 1-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal mux_y_net : std_logic_vector( 10-1 downto 0 );
  signal reinterpret_out_output_port_net : std_logic_vector( 32-1 downto 0 );
begin
  add_del_q_net <= addr;
  dat_del_q_net <= data_in;
  we_del_q_net <= we;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_45_ss_bram_addr <= convert_addr_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_45_ss_bram_data_in <= convert_din1_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_45_ss_bram_we <= convert_we_dout_net;
  clk_net <= clk_1;
  ce_net <= ce_1;
  calc_add : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_calc_add_x18 
  port map (
    in_x0 => add_del_q_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    out_x0 => mux_y_net
  );
  munge_in : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_munge_in_x19 
  port map (
    din => dat_del_q_net,
    dout => reinterpret_out_output_port_net
  );
  convert_addr : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 10,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 10,
    latency => 0,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => mux_y_net,
    clk => clk_net,
    ce => ce_net,
    dout => convert_addr_dout_net
  );
  convert_din1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 32,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 32,
    latency => 0,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => reinterpret_out_output_port_net,
    clk => clk_net,
    ce => ce_net,
    dout => convert_din1_dout_net
  );
  convert_we : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 1,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 1,
    latency => 0,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => we_del_q_net,
    clk => clk_net,
    ce => ce_net,
    dout => convert_we_dout_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot1_45/ss/ctrl
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_ctrl_x17 is
  port (
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_45_ss_ctrl_user_data_out : in std_logic_vector( 32-1 downto 0 );
    in_reg : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_ctrl_x17;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_ctrl_x17 is 
  signal reint1_output_port_net : std_logic_vector( 32-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_45_ss_ctrl_user_data_out_net : std_logic_vector( 32-1 downto 0 );
  signal io_delay_q_net : std_logic_vector( 32-1 downto 0 );
  signal slice_reg_y_net : std_logic_vector( 32-1 downto 0 );
begin
  in_reg <= reint1_output_port_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_45_ss_ctrl_user_data_out_net <= rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_45_ss_ctrl_user_data_out;
  io_delay : entity xil_defaultlib.sysgen_delay_34e314c510 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d => rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_45_ss_ctrl_user_data_out_net,
    q => io_delay_q_net
  );
  slice_reg : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 0,
    new_msb => 31,
    x_width => 32,
    y_width => 32
  )
  port map (
    x => io_delay_q_net,
    y => slice_reg_y_net
  );
  reint1 : entity xil_defaultlib.sysgen_reinterpret_52bb84f12b 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => slice_reg_y_net,
    output_port => reint1_output_port_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot1_45/ss/ctrl_combine
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_ctrl_combine_x17 is
  port (
    in1 : in std_logic_vector( 28-1 downto 0 );
    in2 : in std_logic_vector( 1-1 downto 0 );
    in3 : in std_logic_vector( 2-1 downto 0 );
    in4 : in std_logic_vector( 1-1 downto 0 );
    bus_out : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_ctrl_combine_x17;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_ctrl_combine_x17 is 
  signal concatenate_y_net : std_logic_vector( 32-1 downto 0 );
  signal reinterpret4_output_port_net_x0 : std_logic_vector( 28-1 downto 0 );
  signal circ_or_y_net : std_logic_vector( 1-1 downto 0 );
  signal reinterpret2_output_port_net : std_logic_vector( 2-1 downto 0 );
  signal arm_or_y_net : std_logic_vector( 1-1 downto 0 );
  signal reinterpret1_output_port_net : std_logic_vector( 28-1 downto 0 );
  signal reinterpret2_output_port_net_x0 : std_logic_vector( 1-1 downto 0 );
  signal reinterpret3_output_port_net : std_logic_vector( 2-1 downto 0 );
  signal reinterpret4_output_port_net : std_logic_vector( 1-1 downto 0 );
begin
  bus_out <= concatenate_y_net;
  reinterpret4_output_port_net_x0 <= in1;
  circ_or_y_net <= in2;
  reinterpret2_output_port_net <= in3;
  arm_or_y_net <= in4;
  concatenate : entity xil_defaultlib.sysgen_concat_8611e618a5 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    in0 => reinterpret1_output_port_net,
    in1 => reinterpret2_output_port_net_x0,
    in2 => reinterpret3_output_port_net,
    in3 => reinterpret4_output_port_net,
    y => concatenate_y_net
  );
  reinterpret1 : entity xil_defaultlib.sysgen_reinterpret_f7e0b72e82 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => reinterpret4_output_port_net_x0,
    output_port => reinterpret1_output_port_net
  );
  reinterpret2 : entity xil_defaultlib.sysgen_reinterpret_317b92931a 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => circ_or_y_net,
    output_port => reinterpret2_output_port_net_x0
  );
  reinterpret3 : entity xil_defaultlib.sysgen_reinterpret_5dc9f217bd 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => reinterpret2_output_port_net,
    output_port => reinterpret3_output_port_net
  );
  reinterpret4 : entity xil_defaultlib.sysgen_reinterpret_317b92931a 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => arm_or_y_net,
    output_port => reinterpret4_output_port_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot1_45/ss/ctrl_split
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_ctrl_split_x17 is
  port (
    bus_in : in std_logic_vector( 32-1 downto 0 );
    msb_out4 : out std_logic_vector( 28-1 downto 0 );
    out3 : out std_logic_vector( 1-1 downto 0 );
    out2 : out std_logic_vector( 2-1 downto 0 );
    lsb_out1 : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_ctrl_split_x17;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_ctrl_split_x17 is 
  signal reinterpret4_output_port_net : std_logic_vector( 28-1 downto 0 );
  signal slice3_y_net : std_logic_vector( 1-1 downto 0 );
  signal reinterpret2_output_port_net : std_logic_vector( 2-1 downto 0 );
  signal slice1_y_net : std_logic_vector( 1-1 downto 0 );
  signal reint1_output_port_net : std_logic_vector( 32-1 downto 0 );
  signal slice2_y_net : std_logic_vector( 2-1 downto 0 );
  signal slice4_y_net : std_logic_vector( 28-1 downto 0 );
begin
  msb_out4 <= reinterpret4_output_port_net;
  out3 <= slice3_y_net;
  out2 <= reinterpret2_output_port_net;
  lsb_out1 <= slice1_y_net;
  reint1_output_port_net <= bus_in;
  reinterpret2 : entity xil_defaultlib.sysgen_reinterpret_5dc9f217bd 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => slice2_y_net,
    output_port => reinterpret2_output_port_net
  );
  reinterpret4 : entity xil_defaultlib.sysgen_reinterpret_f7e0b72e82 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => slice4_y_net,
    output_port => reinterpret4_output_port_net
  );
  slice1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 0,
    new_msb => 0,
    x_width => 32,
    y_width => 1
  )
  port map (
    x => reint1_output_port_net,
    y => slice1_y_net
  );
  slice2 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 1,
    new_msb => 2,
    x_width => 32,
    y_width => 2
  )
  port map (
    x => reint1_output_port_net,
    y => slice2_y_net
  );
  slice3 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 3,
    new_msb => 3,
    x_width => 32,
    y_width => 1
  )
  port map (
    x => reint1_output_port_net,
    y => slice3_y_net
  );
  slice4 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 4,
    new_msb => 31,
    x_width => 32,
    y_width => 28
  )
  port map (
    x => reint1_output_port_net,
    y => slice4_y_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot1_45/ss/status
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_status_x17 is
  port (
    out_reg : in std_logic_vector( 32-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_45_ss_status_user_data_in : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_status_x17;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_status_x17 is 
  signal concat_y_net : std_logic_vector( 32-1 downto 0 );
  signal cast_gw_dout_net : std_logic_vector( 32-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal io_delay_q_net : std_logic_vector( 32-1 downto 0 );
  signal reint1_output_port_net : std_logic_vector( 32-1 downto 0 );
  signal assert_reg_dout_net : std_logic_vector( 32-1 downto 0 );
begin
  concat_y_net <= out_reg;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_45_ss_status_user_data_in <= cast_gw_dout_net;
  clk_net <= clk_1;
  ce_net <= ce_1;
  io_delay : entity xil_defaultlib.sysgen_delay_34e314c510 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d => reint1_output_port_net,
    q => io_delay_q_net
  );
  cast_gw : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 32,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 32,
    latency => 1,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => io_delay_q_net,
    clk => clk_net,
    ce => ce_net,
    dout => cast_gw_dout_net
  );
  assert_reg : entity xil_defaultlib.xlpassthrough 
  generic map (
    din_width => 32,
    dout_width => 32
  )
  port map (
    din => concat_y_net,
    dout => assert_reg_dout_net
  );
  reint1 : entity xil_defaultlib.sysgen_reinterpret_52bb84f12b 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => assert_reg_dout_net,
    output_port => reint1_output_port_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot1_45/ss
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_ss_x18 is
  port (
    din : in std_logic_vector( 32-1 downto 0 );
    we : in std_logic_vector( 1-1 downto 0 );
    trig : in std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_45_ss_ctrl_user_data_out : in std_logic_vector( 32-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    arm_out : out std_logic_vector( 1-1 downto 0 );
    goto_68420199_we1 : out std_logic_vector( 1-1 downto 0 );
    goto_68420199_we4 : out std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_45_ss_bram_addr : out std_logic_vector( 10-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_45_ss_bram_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_45_ss_bram_we : out std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_45_ss_status_user_data_in : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_ss_x18;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_ss_x18 is 
  signal arm_or_y_net : std_logic_vector( 1-1 downto 0 );
  signal concatenate_y_net : std_logic_vector( 32-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc1_sync_net : std_logic_vector( 1-1 downto 0 );
  signal edge_op_y_net_x0 : std_logic_vector( 1-1 downto 0 );
  signal we_choice_y_net : std_logic_vector( 1-1 downto 0 );
  signal logical6_y_net : std_logic_vector( 1-1 downto 0 );
  signal convert_addr_dout_net : std_logic_vector( 10-1 downto 0 );
  signal convert_din1_dout_net : std_logic_vector( 32-1 downto 0 );
  signal convert_we_dout_net : std_logic_vector( 1-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_45_ss_ctrl_user_data_out_net : std_logic_vector( 32-1 downto 0 );
  signal cast_gw_dout_net : std_logic_vector( 32-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal slice2_y_net : std_logic_vector( 10-1 downto 0 );
  signal delay6_q_net : std_logic_vector( 32-1 downto 0 );
  signal concat_y_net : std_logic_vector( 32-1 downto 0 );
  signal data_choice_y_net : std_logic_vector( 32-1 downto 0 );
  signal register6_q_net : std_logic_vector( 1-1 downto 0 );
  signal never_op_net : std_logic_vector( 1-1 downto 0 );
  signal edge_op_y_net_x1 : std_logic_vector( 1-1 downto 0 );
  signal cast_dout_net : std_logic_vector( 32-1 downto 0 );
  signal concatenate_y_net_x0 : std_logic_vector( 32-1 downto 0 );
  signal add_del_q_net : std_logic_vector( 10-1 downto 0 );
  signal dat_del_q_net : std_logic_vector( 32-1 downto 0 );
  signal we_del_q_net : std_logic_vector( 1-1 downto 0 );
  signal reint1_output_port_net : std_logic_vector( 32-1 downto 0 );
  signal reinterpret4_output_port_net : std_logic_vector( 28-1 downto 0 );
  signal circ_or_y_net : std_logic_vector( 1-1 downto 0 );
  signal reinterpret2_output_port_net : std_logic_vector( 2-1 downto 0 );
  signal slice3_y_net : std_logic_vector( 1-1 downto 0 );
  signal slice1_y_net : std_logic_vector( 1-1 downto 0 );
  signal arm_op_net : std_logic_vector( 1-1 downto 0 );
  signal ri_output_port_net : std_logic_vector( 32-1 downto 0 );
  signal circ_op_net : std_logic_vector( 1-1 downto 0 );
begin
  arm_out <= arm_or_y_net;
  concatenate_y_net <= din;
  rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc1_sync_net <= we;
  edge_op_y_net_x0 <= trig;
  goto_68420199_we1 <= we_choice_y_net;
  goto_68420199_we4 <= logical6_y_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_45_ss_bram_addr <= convert_addr_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_45_ss_bram_data_in <= convert_din1_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_45_ss_bram_we <= convert_we_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_45_ss_ctrl_user_data_out_net <= rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_45_ss_ctrl_user_data_out;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_45_ss_status_user_data_in <= cast_gw_dout_net;
  clk_net <= clk_1;
  ce_net <= ce_1;
  add_gen : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_add_gen_x18 
  port map (
    din => data_choice_y_net,
    we => we_choice_y_net,
    go => register6_q_net,
    cont => never_op_net,
    init => edge_op_y_net_x1,
    clk_1 => clk_net,
    ce_1 => ce_net,
    add => slice2_y_net,
    dout => delay6_q_net,
    we_o => logical6_y_net,
    status => concat_y_net
  );
  basic_ctrl : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_basic_ctrl_x18 
  port map (
    din => cast_dout_net,
    we => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc1_sync_net,
    trig => edge_op_y_net_x0,
    ctrl => concatenate_y_net_x0,
    stopi => never_op_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    dout => data_choice_y_net,
    we_o => we_choice_y_net,
    go => register6_q_net,
    init => edge_op_y_net_x1
  );
  bram : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_bram_x18 
  port map (
    addr => add_del_q_net,
    data_in => dat_del_q_net,
    we => we_del_q_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_45_ss_bram_addr => convert_addr_dout_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_45_ss_bram_data_in => convert_din1_dout_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_45_ss_bram_we => convert_we_dout_net
  );
  ctrl : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_ctrl_x17 
  port map (
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_45_ss_ctrl_user_data_out => rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_45_ss_ctrl_user_data_out_net,
    in_reg => reint1_output_port_net
  );
  ctrl_combine : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_ctrl_combine_x17 
  port map (
    in1 => reinterpret4_output_port_net,
    in2 => circ_or_y_net,
    in3 => reinterpret2_output_port_net,
    in4 => arm_or_y_net,
    bus_out => concatenate_y_net_x0
  );
  ctrl_split : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_ctrl_split_x17 
  port map (
    bus_in => reint1_output_port_net,
    msb_out4 => reinterpret4_output_port_net,
    out3 => slice3_y_net,
    out2 => reinterpret2_output_port_net,
    lsb_out1 => slice1_y_net
  );
  status : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_status_x17 
  port map (
    out_reg => concat_y_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_45_ss_status_user_data_in => cast_gw_dout_net
  );
  add_del : entity xil_defaultlib.sysgen_delay_4e9264ffdf 
  port map (
    clr => '0',
    d => slice2_y_net,
    clk => clk_net,
    ce => ce_net,
    q => add_del_q_net
  );
  arm : entity xil_defaultlib.sysgen_constant_a7b8778750 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => arm_op_net
  );
  arm_or : entity xil_defaultlib.sysgen_logical_d7dc12cf31 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => slice1_y_net,
    d1 => arm_op_net,
    y => arm_or_y_net
  );
  cast : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 32,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 32,
    latency => 0,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => ri_output_port_net,
    clk => clk_net,
    ce => ce_net,
    dout => cast_dout_net
  );
  circ : entity xil_defaultlib.sysgen_constant_a7b8778750 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => circ_op_net
  );
  circ_or : entity xil_defaultlib.sysgen_logical_d7dc12cf31 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => slice3_y_net,
    d1 => circ_op_net,
    y => circ_or_y_net
  );
  dat_del : entity xil_defaultlib.sysgen_delay_5ec362a23c 
  port map (
    clr => '0',
    d => delay6_q_net,
    clk => clk_net,
    ce => ce_net,
    q => dat_del_q_net
  );
  never : entity xil_defaultlib.sysgen_constant_a7b8778750 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => never_op_net
  );
  ri : entity xil_defaultlib.sysgen_reinterpret_52bb84f12b 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => concatenate_y_net,
    output_port => ri_output_port_net
  );
  we_del : entity xil_defaultlib.sysgen_delay_e0740ee3f9 
  port map (
    clr => '0',
    d => logical6_y_net,
    clk => clk_net,
    ce => ce_net,
    q => we_del_q_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot1_45
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_45 is
  port (
    in_d0 : in std_logic_vector( 16-1 downto 0 );
    in_d1 : in std_logic_vector( 16-1 downto 0 );
    we : in std_logic_vector( 1-1 downto 0 );
    trig : in std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_45_ss_ctrl_user_data_out : in std_logic_vector( 32-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    arm_out : out std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_45_ss_bram_addr : out std_logic_vector( 10-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_45_ss_bram_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_45_ss_bram_we : out std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_45_ss_status_user_data_in : out std_logic_vector( 32-1 downto 0 );
    goto_68420199_we1 : out std_logic_vector( 1-1 downto 0 );
    goto_68420199_we4 : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_45;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_45 is 
  signal arm_or_y_net : std_logic_vector( 1-1 downto 0 );
  signal slice10_y_net : std_logic_vector( 16-1 downto 0 );
  signal slice13_y_net : std_logic_vector( 16-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc1_sync_net : std_logic_vector( 1-1 downto 0 );
  signal edge_op_y_net : std_logic_vector( 1-1 downto 0 );
  signal convert_addr_dout_net : std_logic_vector( 10-1 downto 0 );
  signal convert_din1_dout_net : std_logic_vector( 32-1 downto 0 );
  signal convert_we_dout_net : std_logic_vector( 1-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_45_ss_ctrl_user_data_out_net : std_logic_vector( 32-1 downto 0 );
  signal cast_gw_dout_net : std_logic_vector( 32-1 downto 0 );
  signal we_choice_y_net : std_logic_vector( 1-1 downto 0 );
  signal logical6_y_net : std_logic_vector( 1-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal concatenate_y_net : std_logic_vector( 32-1 downto 0 );
  signal assert_d0_dout_net : std_logic_vector( 16-1 downto 0 );
  signal assert_d1_dout_net : std_logic_vector( 16-1 downto 0 );
begin
  arm_out <= arm_or_y_net;
  slice10_y_net <= in_d0;
  slice13_y_net <= in_d1;
  rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc1_sync_net <= we;
  edge_op_y_net <= trig;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_45_ss_bram_addr <= convert_addr_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_45_ss_bram_data_in <= convert_din1_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_45_ss_bram_we <= convert_we_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_45_ss_ctrl_user_data_out_net <= rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_45_ss_ctrl_user_data_out;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_45_ss_status_user_data_in <= cast_gw_dout_net;
  goto_68420199_we1 <= we_choice_y_net;
  goto_68420199_we4 <= logical6_y_net;
  clk_net <= clk_1;
  ce_net <= ce_1;
  buscreate : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_buscreate_x18 
  port map (
    in1 => assert_d0_dout_net,
    in2 => assert_d1_dout_net,
    bus_out => concatenate_y_net
  );
  ss : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_ss_x18 
  port map (
    din => concatenate_y_net,
    we => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc1_sync_net,
    trig => edge_op_y_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_45_ss_ctrl_user_data_out => rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_45_ss_ctrl_user_data_out_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    arm_out => arm_or_y_net,
    goto_68420199_we1 => we_choice_y_net,
    goto_68420199_we4 => logical6_y_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_45_ss_bram_addr => convert_addr_dout_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_45_ss_bram_data_in => convert_din1_dout_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_45_ss_bram_we => convert_we_dout_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_45_ss_status_user_data_in => cast_gw_dout_net
  );
  assert_d0 : entity xil_defaultlib.xlpassthrough 
  generic map (
    din_width => 16,
    dout_width => 16
  )
  port map (
    din => slice10_y_net,
    dout => assert_d0_dout_net
  );
  assert_d1 : entity xil_defaultlib.xlpassthrough 
  generic map (
    din_width => 16,
    dout_width => 16
  )
  port map (
    din => slice13_y_net,
    dout => assert_d1_dout_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot1_67/buscreate
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_buscreate_x17 is
  port (
    in1 : in std_logic_vector( 16-1 downto 0 );
    in2 : in std_logic_vector( 16-1 downto 0 );
    bus_out : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_buscreate_x17;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_buscreate_x17 is 
  signal concatenate_y_net : std_logic_vector( 32-1 downto 0 );
  signal assert_d0_dout_net : std_logic_vector( 16-1 downto 0 );
  signal assert_d1_dout_net : std_logic_vector( 16-1 downto 0 );
  signal reinterpret1_output_port_net : std_logic_vector( 16-1 downto 0 );
  signal reinterpret2_output_port_net : std_logic_vector( 16-1 downto 0 );
begin
  bus_out <= concatenate_y_net;
  assert_d0_dout_net <= in1;
  assert_d1_dout_net <= in2;
  concatenate : entity xil_defaultlib.sysgen_concat_37649e01d1 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    in0 => reinterpret1_output_port_net,
    in1 => reinterpret2_output_port_net,
    y => concatenate_y_net
  );
  reinterpret1 : entity xil_defaultlib.sysgen_reinterpret_03c8cdbbc1 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => assert_d0_dout_net,
    output_port => reinterpret1_output_port_net
  );
  reinterpret2 : entity xil_defaultlib.sysgen_reinterpret_03c8cdbbc1 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => assert_d1_dout_net,
    output_port => reinterpret2_output_port_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot1_67/ss/add_gen/edge_detect
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x35 is
  port (
    in_x0 : in std_logic_vector( 1-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    out_x0 : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x35;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x35 is 
  signal edge_op_y_net : std_logic_vector( 1-1 downto 0 );
  signal slice3_y_net : std_logic_vector( 1-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal delay_q_net : std_logic_vector( 1-1 downto 0 );
  signal inverter_op_net : std_logic_vector( 1-1 downto 0 );
begin
  out_x0 <= edge_op_y_net;
  slice3_y_net <= in_x0;
  clk_net <= clk_1;
  ce_net <= ce_1;
  delay : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 1
  )
  port map (
    en => '1',
    rst => '1',
    d => slice3_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay_q_net
  );
  inverter : entity xil_defaultlib.sysgen_inverter_6233897471 
  port map (
    clr => '0',
    ip => slice3_y_net,
    clk => clk_net,
    ce => ce_net,
    op => inverter_op_net
  );
  edge_op : entity xil_defaultlib.sysgen_logical_9cc14fefba 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => inverter_op_net,
    d1 => delay_q_net,
    y => edge_op_y_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot1_67/ss/add_gen
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_add_gen_x17 is
  port (
    din : in std_logic_vector( 32-1 downto 0 );
    we : in std_logic_vector( 1-1 downto 0 );
    go : in std_logic_vector( 1-1 downto 0 );
    cont : in std_logic_vector( 1-1 downto 0 );
    init : in std_logic_vector( 1-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    add : out std_logic_vector( 10-1 downto 0 );
    dout : out std_logic_vector( 32-1 downto 0 );
    we_o : out std_logic_vector( 1-1 downto 0 );
    status : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_add_gen_x17;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_add_gen_x17 is 
  signal slice2_y_net : std_logic_vector( 10-1 downto 0 );
  signal delay6_q_net : std_logic_vector( 32-1 downto 0 );
  signal logical6_y_net : std_logic_vector( 1-1 downto 0 );
  signal concat_y_net : std_logic_vector( 32-1 downto 0 );
  signal data_choice_y_net : std_logic_vector( 32-1 downto 0 );
  signal we_choice_y_net : std_logic_vector( 1-1 downto 0 );
  signal register6_q_net : std_logic_vector( 1-1 downto 0 );
  signal never_op_net : std_logic_vector( 1-1 downto 0 );
  signal edge_op_y_net : std_logic_vector( 1-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal edge_op_y_net_x0 : std_logic_vector( 1-1 downto 0 );
  signal slice3_y_net : std_logic_vector( 1-1 downto 0 );
  signal shift_op_net : std_logic_vector( 19-1 downto 0 );
  signal inverter_op_net : std_logic_vector( 1-1 downto 0 );
  signal delay1_q_net : std_logic_vector( 12-1 downto 0 );
  signal convert_dout_net : std_logic_vector( 19-1 downto 0 );
  signal register5_q_net : std_logic_vector( 1-1 downto 0 );
  signal delay_q_net : std_logic_vector( 1-1 downto 0 );
  signal delay4_q_net : std_logic_vector( 1-1 downto 0 );
  signal slice1_y_net : std_logic_vector( 12-1 downto 0 );
  signal delay3_q_net : std_logic_vector( 1-1 downto 0 );
  signal inverter1_op_net : std_logic_vector( 1-1 downto 0 );
  signal logical1_y_net : std_logic_vector( 1-1 downto 0 );
  signal logical4_y_net : std_logic_vector( 1-1 downto 0 );
  signal add_gen_op_net : std_logic_vector( 13-1 downto 0 );
begin
  add <= slice2_y_net;
  dout <= delay6_q_net;
  we_o <= logical6_y_net;
  status <= concat_y_net;
  data_choice_y_net <= din;
  we_choice_y_net <= we;
  register6_q_net <= go;
  never_op_net <= cont;
  edge_op_y_net <= init;
  clk_net <= clk_1;
  ce_net <= ce_1;
  edge_detect : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x35 
  port map (
    in_x0 => slice3_y_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    out_x0 => edge_op_y_net_x0
  );
  concat : entity xil_defaultlib.sysgen_concat_fc8edfac0e 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    in0 => shift_op_net,
    in1 => inverter_op_net,
    in2 => delay1_q_net,
    y => concat_y_net
  );
  convert : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 1,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 19,
    latency => 0,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => register5_q_net,
    clk => clk_net,
    ce => ce_net,
    dout => convert_dout_net
  );
  delay : entity xil_defaultlib.sysgen_delay_e0740ee3f9 
  port map (
    clr => '0',
    d => delay4_q_net,
    clk => clk_net,
    ce => ce_net,
    q => delay_q_net
  );
  delay1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 12
  )
  port map (
    en => '1',
    rst => '1',
    d => slice1_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay1_q_net
  );
  delay3 : entity xil_defaultlib.sysgen_delay_e0740ee3f9 
  port map (
    clr => '0',
    d => never_op_net,
    clk => clk_net,
    ce => ce_net,
    q => delay3_q_net
  );
  delay4 : entity xil_defaultlib.sysgen_delay_e0740ee3f9 
  port map (
    clr => '0',
    d => edge_op_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay4_q_net
  );
  delay6 : entity xil_defaultlib.sysgen_delay_5ec362a23c 
  port map (
    clr => '0',
    d => data_choice_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay6_q_net
  );
  inverter : entity xil_defaultlib.sysgen_inverter_918b6bc6d0 
  port map (
    clr => '0',
    ip => register5_q_net,
    clk => clk_net,
    ce => ce_net,
    op => inverter_op_net
  );
  inverter1 : entity xil_defaultlib.sysgen_inverter_6233897471 
  port map (
    clr => '0',
    ip => edge_op_y_net_x0,
    clk => clk_net,
    ce => ce_net,
    op => inverter1_op_net
  );
  logical1 : entity xil_defaultlib.sysgen_logical_2486129911 
  port map (
    clr => '0',
    d0 => we_choice_y_net,
    d1 => register6_q_net,
    clk => clk_net,
    ce => ce_net,
    y => logical1_y_net
  );
  logical4 : entity xil_defaultlib.sysgen_logical_d7dc12cf31 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => delay3_q_net,
    d1 => inverter1_op_net,
    y => logical4_y_net
  );
  logical6 : entity xil_defaultlib.sysgen_logical_c05fefc67b 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => register5_q_net,
    d1 => logical4_y_net,
    d2 => logical1_y_net,
    y => logical6_y_net
  );
  register5 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlregister 
  generic map (
    d_width => 1,
    init_value => b"1"
  )
  port map (
    d => delay3_q_net,
    rst => delay_q_net,
    en => edge_op_y_net_x0,
    clk => clk_net,
    ce => ce_net,
    q => register5_q_net
  );
  shift : entity xil_defaultlib.sysgen_shift_5af4fe0a99 
  port map (
    clr => '0',
    ip => convert_dout_net,
    clk => clk_net,
    ce => ce_net,
    op => shift_op_net
  );
  add_gen : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlcounter_free 
  generic map (
    core_name0 => "rfdc_multi_eight_adcs_2048gsps_mts_c_counter_binary_v12_0_i1",
    op_arith => xlUnsigned,
    op_width => 13
  )
  port map (
    clr => '0',
    rst => delay4_q_net,
    en => logical6_y_net,
    clk => clk_net,
    ce => ce_net,
    op => add_gen_op_net
  );
  slice1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 0,
    new_msb => 11,
    x_width => 13,
    y_width => 12
  )
  port map (
    x => add_gen_op_net,
    y => slice1_y_net
  );
  slice2 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 2,
    new_msb => 11,
    x_width => 13,
    y_width => 10
  )
  port map (
    x => add_gen_op_net,
    y => slice2_y_net
  );
  slice3 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 12,
    new_msb => 12,
    x_width => 13,
    y_width => 1
  )
  port map (
    x => add_gen_op_net,
    y => slice3_y_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot1_67/ss/basic_ctrl/dram_munge
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_dram_munge_x17 is
  port (
    din : in std_logic_vector( 32-1 downto 0 );
    we : in std_logic_vector( 1-1 downto 0 );
    init : in std_logic_vector( 1-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    dout : out std_logic_vector( 32-1 downto 0 );
    we_o : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_dram_munge_x17;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_dram_munge_x17 is 
  signal data_choice_y_net : std_logic_vector( 32-1 downto 0 );
  signal we_choice_y_net : std_logic_vector( 1-1 downto 0 );
  signal cast_dout_net : std_logic_vector( 32-1 downto 0 );
  signal mux1_y_net_x0 : std_logic_vector( 1-1 downto 0 );
  signal edge_op_y_net : std_logic_vector( 1-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal concat_y_net : std_logic_vector( 80-1 downto 0 );
  signal constant_op_net : std_logic_vector( 8-1 downto 0 );
  signal register_q_net : std_logic_vector( 32-1 downto 0 );
  signal register1_q_net : std_logic_vector( 32-1 downto 0 );
  signal concat1_y_net : std_logic_vector( 80-1 downto 0 );
  signal register2_q_net : std_logic_vector( 32-1 downto 0 );
  signal register3_q_net : std_logic_vector( 32-1 downto 0 );
  signal delay_q_net : std_logic_vector( 1-1 downto 0 );
  signal logical_y_net : std_logic_vector( 1-1 downto 0 );
  signal delay1_q_net : std_logic_vector( 1-1 downto 0 );
  signal logical1_y_net : std_logic_vector( 1-1 downto 0 );
  signal relational3_op_net : std_logic_vector( 1-1 downto 0 );
  signal mux1_y_net : std_logic_vector( 80-1 downto 0 );
  signal dout_count_op_net : std_logic_vector( 1-1 downto 0 );
  signal relational_op_net : std_logic_vector( 1-1 downto 0 );
  signal relational1_op_net : std_logic_vector( 1-1 downto 0 );
  signal relational2_op_net : std_logic_vector( 1-1 downto 0 );
  signal input_count_op_net : std_logic_vector( 2-1 downto 0 );
  signal con0_op_net : std_logic_vector( 2-1 downto 0 );
  signal con1_op_net : std_logic_vector( 2-1 downto 0 );
  signal con2_op_net : std_logic_vector( 2-1 downto 0 );
  signal con3_op_net : std_logic_vector( 2-1 downto 0 );
  signal dram_op_net : std_logic_vector( 1-1 downto 0 );
begin
  dout <= data_choice_y_net;
  we_o <= we_choice_y_net;
  cast_dout_net <= din;
  mux1_y_net_x0 <= we;
  edge_op_y_net <= init;
  clk_net <= clk_1;
  ce_net <= ce_1;
  concat : entity xil_defaultlib.sysgen_concat_e7487baac7 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    in0 => constant_op_net,
    in1 => register_q_net,
    in2 => constant_op_net,
    in3 => register1_q_net,
    y => concat_y_net
  );
  concat1 : entity xil_defaultlib.sysgen_concat_e7487baac7 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    in0 => constant_op_net,
    in1 => register2_q_net,
    in2 => constant_op_net,
    in3 => register3_q_net,
    y => concat1_y_net
  );
  constant_x0 : entity xil_defaultlib.sysgen_constant_869e31f04d 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => constant_op_net
  );
  delay : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 1
  )
  port map (
    en => '1',
    rst => '1',
    d => logical_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay_q_net
  );
  delay1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 1
  )
  port map (
    en => '1',
    rst => '1',
    d => logical1_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay1_q_net
  );
  logical : entity xil_defaultlib.sysgen_logical_2486129911 
  port map (
    clr => '0',
    d0 => relational3_op_net,
    d1 => mux1_y_net_x0,
    clk => clk_net,
    ce => ce_net,
    y => logical_y_net
  );
  logical1 : entity xil_defaultlib.sysgen_logical_d7dc12cf31 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => logical_y_net,
    d1 => delay_q_net,
    y => logical1_y_net
  );
  mux1 : entity xil_defaultlib.sysgen_mux_71ee2b1026 
  port map (
    clr => '0',
    sel => dout_count_op_net,
    d0 => concat_y_net,
    d1 => concat1_y_net,
    clk => clk_net,
    ce => ce_net,
    y => mux1_y_net
  );
  register_x0 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlregister 
  generic map (
    d_width => 32,
    init_value => b"00000000000000000000000000000000"
  )
  port map (
    rst => "0",
    d => cast_dout_net,
    en => relational_op_net,
    clk => clk_net,
    ce => ce_net,
    q => register_q_net
  );
  register1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlregister 
  generic map (
    d_width => 32,
    init_value => b"00000000000000000000000000000000"
  )
  port map (
    rst => "0",
    d => cast_dout_net,
    en => relational1_op_net,
    clk => clk_net,
    ce => ce_net,
    q => register1_q_net
  );
  register2 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlregister 
  generic map (
    d_width => 32,
    init_value => b"00000000000000000000000000000000"
  )
  port map (
    rst => "0",
    d => cast_dout_net,
    en => relational2_op_net,
    clk => clk_net,
    ce => ce_net,
    q => register2_q_net
  );
  register3 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlregister 
  generic map (
    d_width => 32,
    init_value => b"00000000000000000000000000000000"
  )
  port map (
    rst => "0",
    d => cast_dout_net,
    en => relational3_op_net,
    clk => clk_net,
    ce => ce_net,
    q => register3_q_net
  );
  relational : entity xil_defaultlib.sysgen_relational_e5d6b5eaca 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    a => input_count_op_net,
    b => con0_op_net,
    op => relational_op_net
  );
  relational1 : entity xil_defaultlib.sysgen_relational_e5d6b5eaca 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    a => input_count_op_net,
    b => con1_op_net,
    op => relational1_op_net
  );
  relational2 : entity xil_defaultlib.sysgen_relational_e5d6b5eaca 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    a => input_count_op_net,
    b => con2_op_net,
    op => relational2_op_net
  );
  relational3 : entity xil_defaultlib.sysgen_relational_e5d6b5eaca 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    a => input_count_op_net,
    b => con3_op_net,
    op => relational3_op_net
  );
  con0 : entity xil_defaultlib.sysgen_constant_b58c3a1535 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => con0_op_net
  );
  con1 : entity xil_defaultlib.sysgen_constant_d3f27a6354 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => con1_op_net
  );
  con2 : entity xil_defaultlib.sysgen_constant_2fa4689d4e 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => con2_op_net
  );
  con3 : entity xil_defaultlib.sysgen_constant_31bab66ba6 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => con3_op_net
  );
  data_choice : entity xil_defaultlib.sysgen_mux_d624c1af44 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    sel => dram_op_net,
    d0 => cast_dout_net,
    d1 => mux1_y_net,
    y => data_choice_y_net
  );
  dout_count : entity xil_defaultlib.sysgen_counter_a9c1c293c2 
  port map (
    clr => '0',
    rst => edge_op_y_net,
    en => logical1_y_net,
    clk => clk_net,
    ce => ce_net,
    op => dout_count_op_net
  );
  dram : entity xil_defaultlib.sysgen_constant_a7b8778750 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => dram_op_net
  );
  input_count : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlcounter_free 
  generic map (
    core_name0 => "rfdc_multi_eight_adcs_2048gsps_mts_c_counter_binary_v12_0_i2",
    op_arith => xlUnsigned,
    op_width => 2
  )
  port map (
    clr => '0',
    rst => edge_op_y_net,
    en => mux1_y_net_x0,
    clk => clk_net,
    ce => ce_net,
    op => input_count_op_net
  );
  we_choice : entity xil_defaultlib.sysgen_mux_4874190f11 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    sel => dram_op_net,
    d0 => mux1_y_net_x0,
    d1 => delay1_q_net,
    y => we_choice_y_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot1_67/ss/basic_ctrl/edge_detect
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x36 is
  port (
    in_x0 : in std_logic_vector( 1-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    out_x0 : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x36;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x36 is 
  signal edge_op_y_net : std_logic_vector( 1-1 downto 0 );
  signal delay1_q_net : std_logic_vector( 1-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal delay_q_net : std_logic_vector( 1-1 downto 0 );
  signal inverter_op_net : std_logic_vector( 1-1 downto 0 );
begin
  out_x0 <= edge_op_y_net;
  delay1_q_net <= in_x0;
  clk_net <= clk_1;
  ce_net <= ce_1;
  delay : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 1
  )
  port map (
    en => '1',
    rst => '1',
    d => delay1_q_net,
    clk => clk_net,
    ce => ce_net,
    q => delay_q_net
  );
  inverter : entity xil_defaultlib.sysgen_inverter_6233897471 
  port map (
    clr => '0',
    ip => delay1_q_net,
    clk => clk_net,
    ce => ce_net,
    op => inverter_op_net
  );
  edge_op : entity xil_defaultlib.sysgen_logical_0f1aa1e2d7 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => inverter_op_net,
    d1 => delay_q_net,
    y => edge_op_y_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot1_67/ss/basic_ctrl
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_basic_ctrl_x17 is
  port (
    din : in std_logic_vector( 32-1 downto 0 );
    we : in std_logic_vector( 1-1 downto 0 );
    trig : in std_logic_vector( 1-1 downto 0 );
    ctrl : in std_logic_vector( 32-1 downto 0 );
    stopi : in std_logic_vector( 1-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    dout : out std_logic_vector( 32-1 downto 0 );
    we_o : out std_logic_vector( 1-1 downto 0 );
    go : out std_logic_vector( 1-1 downto 0 );
    init : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_basic_ctrl_x17;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_basic_ctrl_x17 is 
  signal data_choice_y_net : std_logic_vector( 32-1 downto 0 );
  signal we_choice_y_net : std_logic_vector( 1-1 downto 0 );
  signal register6_q_net : std_logic_vector( 1-1 downto 0 );
  signal edge_op_y_net_x0 : std_logic_vector( 1-1 downto 0 );
  signal cast_dout_net : std_logic_vector( 32-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc1_sync_net : std_logic_vector( 1-1 downto 0 );
  signal edge_op_y_net : std_logic_vector( 1-1 downto 0 );
  signal concatenate_y_net : std_logic_vector( 32-1 downto 0 );
  signal never_op_net : std_logic_vector( 1-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal mux1_y_net : std_logic_vector( 1-1 downto 0 );
  signal delay1_q_net : std_logic_vector( 1-1 downto 0 );
  signal constant_op_net : std_logic_vector( 1-1 downto 0 );
  signal constant1_op_net : std_logic_vector( 1-1 downto 0 );
  signal constant2_op_net : std_logic_vector( 1-1 downto 0 );
  signal enable_y_net : std_logic_vector( 1-1 downto 0 );
  signal delay2_q_net : std_logic_vector( 1-1 downto 0 );
  signal trig_src_y_net : std_logic_vector( 1-1 downto 0 );
  signal delay3_q_net : std_logic_vector( 1-1 downto 0 );
  signal valid_src_y_net : std_logic_vector( 1-1 downto 0 );
  signal inverter_op_net : std_logic_vector( 1-1 downto 0 );
  signal logical_y_net : std_logic_vector( 1-1 downto 0 );
  signal mux2_y_net : std_logic_vector( 1-1 downto 0 );
  signal register1_q_net : std_logic_vector( 1-1 downto 0 );
begin
  dout <= data_choice_y_net;
  we_o <= we_choice_y_net;
  go <= register6_q_net;
  init <= edge_op_y_net_x0;
  cast_dout_net <= din;
  rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc1_sync_net <= we;
  edge_op_y_net <= trig;
  concatenate_y_net <= ctrl;
  never_op_net <= stopi;
  clk_net <= clk_1;
  ce_net <= ce_1;
  dram_munge : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_dram_munge_x17 
  port map (
    din => cast_dout_net,
    we => mux1_y_net,
    init => edge_op_y_net_x0,
    clk_1 => clk_net,
    ce_1 => ce_net,
    dout => data_choice_y_net,
    we_o => we_choice_y_net
  );
  edge_detect : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x36 
  port map (
    in_x0 => delay1_q_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    out_x0 => edge_op_y_net_x0
  );
  constant_x0 : entity xil_defaultlib.sysgen_constant_c95a0b5efb 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => constant_op_net
  );
  constant1 : entity xil_defaultlib.sysgen_constant_c95a0b5efb 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => constant1_op_net
  );
  constant2 : entity xil_defaultlib.sysgen_constant_c95a0b5efb 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => constant2_op_net
  );
  delay1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 1
  )
  port map (
    en => '1',
    rst => '1',
    d => enable_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay1_q_net
  );
  delay2 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 1
  )
  port map (
    en => '1',
    rst => '1',
    d => trig_src_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay2_q_net
  );
  delay3 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 1
  )
  port map (
    en => '1',
    rst => '1',
    d => valid_src_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay3_q_net
  );
  inverter : entity xil_defaultlib.sysgen_inverter_6233897471 
  port map (
    clr => '0',
    ip => edge_op_y_net_x0,
    clk => clk_net,
    ce => ce_net,
    op => inverter_op_net
  );
  logical : entity xil_defaultlib.sysgen_logical_d26e5cda59 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => mux2_y_net,
    d1 => inverter_op_net,
    y => logical_y_net
  );
  mux1 : entity xil_defaultlib.sysgen_mux_4874190f11 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    sel => delay3_q_net,
    d0 => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc1_sync_net,
    d1 => constant2_op_net,
    y => mux1_y_net
  );
  mux2 : entity xil_defaultlib.sysgen_mux_4874190f11 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    sel => delay2_q_net,
    d0 => edge_op_y_net,
    d1 => constant1_op_net,
    y => mux2_y_net
  );
  register1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlregister 
  generic map (
    d_width => 1,
    init_value => b"0"
  )
  port map (
    d => constant_op_net,
    rst => logical_y_net,
    en => edge_op_y_net_x0,
    clk => clk_net,
    ce => ce_net,
    q => register1_q_net
  );
  register6 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlregister 
  generic map (
    d_width => 1,
    init_value => b"0"
  )
  port map (
    d => mux2_y_net,
    rst => edge_op_y_net_x0,
    en => register1_q_net,
    clk => clk_net,
    ce => ce_net,
    q => register6_q_net
  );
  enable : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 0,
    new_msb => 0,
    x_width => 32,
    y_width => 1
  )
  port map (
    x => concatenate_y_net,
    y => enable_y_net
  );
  trig_src : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 1,
    new_msb => 1,
    x_width => 32,
    y_width => 1
  )
  port map (
    x => concatenate_y_net,
    y => trig_src_y_net
  );
  valid_src : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 2,
    new_msb => 2,
    x_width => 32,
    y_width => 1
  )
  port map (
    x => concatenate_y_net,
    y => valid_src_y_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot1_67/ss/bram/calc_add
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_calc_add_x17 is
  port (
    in_x0 : in std_logic_vector( 10-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    out_x0 : out std_logic_vector( 10-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_calc_add_x17;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_calc_add_x17 is 
  signal mux_y_net : std_logic_vector( 10-1 downto 0 );
  signal add_del_q_net : std_logic_vector( 10-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal add_sub_s_net : std_logic_vector( 1-1 downto 0 );
  signal const_op_net : std_logic_vector( 1-1 downto 0 );
  signal lsw_y_net : std_logic_vector( 1-1 downto 0 );
  signal concat_y_net : std_logic_vector( 10-1 downto 0 );
  signal msw_y_net : std_logic_vector( 9-1 downto 0 );
  signal convert_addr_dout_net : std_logic_vector( 10-1 downto 0 );
  signal manipulate_op_net : std_logic_vector( 1-1 downto 0 );
begin
  out_x0 <= mux_y_net;
  add_del_q_net <= in_x0;
  clk_net <= clk_1;
  ce_net <= ce_1;
  add_sub : entity xil_defaultlib.sysgen_addsub_fd3b6c715c 
  port map (
    clr => '0',
    a => const_op_net,
    b => lsw_y_net,
    clk => clk_net,
    ce => ce_net,
    s => add_sub_s_net
  );
  concat : entity xil_defaultlib.sysgen_concat_f4b90dfa16 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    in0 => msw_y_net,
    in1 => add_sub_s_net,
    y => concat_y_net
  );
  const : entity xil_defaultlib.sysgen_constant_a7b8778750 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => const_op_net
  );
  convert_addr : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 10,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 10,
    latency => 0,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => add_del_q_net,
    clk => clk_net,
    ce => ce_net,
    dout => convert_addr_dout_net
  );
  lsw : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 0,
    new_msb => 0,
    x_width => 10,
    y_width => 1
  )
  port map (
    x => convert_addr_dout_net,
    y => lsw_y_net
  );
  manipulate : entity xil_defaultlib.sysgen_constant_a7b8778750 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => manipulate_op_net
  );
  msw : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 1,
    new_msb => 9,
    x_width => 10,
    y_width => 9
  )
  port map (
    x => convert_addr_dout_net,
    y => msw_y_net
  );
  mux : entity xil_defaultlib.sysgen_mux_4417594854 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    sel => manipulate_op_net,
    d0 => convert_addr_dout_net,
    d1 => concat_y_net,
    y => mux_y_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot1_67/ss/bram/munge_in
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_munge_in_x17 is
  port (
    din : in std_logic_vector( 32-1 downto 0 );
    dout : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_munge_in_x17;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_munge_in_x17 is 
  signal reinterpret_out_output_port_net : std_logic_vector( 32-1 downto 0 );
  signal dat_del_q_net : std_logic_vector( 32-1 downto 0 );
begin
  dout <= reinterpret_out_output_port_net;
  dat_del_q_net <= din;
  reinterpret_out : entity xil_defaultlib.sysgen_reinterpret_52bb84f12b 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => dat_del_q_net,
    output_port => reinterpret_out_output_port_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot1_67/ss/bram
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_bram_x17 is
  port (
    addr : in std_logic_vector( 10-1 downto 0 );
    data_in : in std_logic_vector( 32-1 downto 0 );
    we : in std_logic_vector( 1-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_67_ss_bram_addr : out std_logic_vector( 10-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_67_ss_bram_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_67_ss_bram_we : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_bram_x17;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_bram_x17 is 
  signal add_del_q_net : std_logic_vector( 10-1 downto 0 );
  signal dat_del_q_net : std_logic_vector( 32-1 downto 0 );
  signal we_del_q_net : std_logic_vector( 1-1 downto 0 );
  signal convert_addr_dout_net : std_logic_vector( 10-1 downto 0 );
  signal convert_din1_dout_net : std_logic_vector( 32-1 downto 0 );
  signal convert_we_dout_net : std_logic_vector( 1-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal mux_y_net : std_logic_vector( 10-1 downto 0 );
  signal reinterpret_out_output_port_net : std_logic_vector( 32-1 downto 0 );
begin
  add_del_q_net <= addr;
  dat_del_q_net <= data_in;
  we_del_q_net <= we;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_67_ss_bram_addr <= convert_addr_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_67_ss_bram_data_in <= convert_din1_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_67_ss_bram_we <= convert_we_dout_net;
  clk_net <= clk_1;
  ce_net <= ce_1;
  calc_add : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_calc_add_x17 
  port map (
    in_x0 => add_del_q_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    out_x0 => mux_y_net
  );
  munge_in : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_munge_in_x17 
  port map (
    din => dat_del_q_net,
    dout => reinterpret_out_output_port_net
  );
  convert_addr : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 10,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 10,
    latency => 0,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => mux_y_net,
    clk => clk_net,
    ce => ce_net,
    dout => convert_addr_dout_net
  );
  convert_din1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 32,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 32,
    latency => 0,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => reinterpret_out_output_port_net,
    clk => clk_net,
    ce => ce_net,
    dout => convert_din1_dout_net
  );
  convert_we : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 1,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 1,
    latency => 0,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => we_del_q_net,
    clk => clk_net,
    ce => ce_net,
    dout => convert_we_dout_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot1_67/ss/ctrl
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_ctrl_x25 is
  port (
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_67_ss_ctrl_user_data_out : in std_logic_vector( 32-1 downto 0 );
    in_reg : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_ctrl_x25;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_ctrl_x25 is 
  signal reint1_output_port_net : std_logic_vector( 32-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_67_ss_ctrl_user_data_out_net : std_logic_vector( 32-1 downto 0 );
  signal io_delay_q_net : std_logic_vector( 32-1 downto 0 );
  signal slice_reg_y_net : std_logic_vector( 32-1 downto 0 );
begin
  in_reg <= reint1_output_port_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_67_ss_ctrl_user_data_out_net <= rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_67_ss_ctrl_user_data_out;
  io_delay : entity xil_defaultlib.sysgen_delay_34e314c510 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d => rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_67_ss_ctrl_user_data_out_net,
    q => io_delay_q_net
  );
  slice_reg : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 0,
    new_msb => 31,
    x_width => 32,
    y_width => 32
  )
  port map (
    x => io_delay_q_net,
    y => slice_reg_y_net
  );
  reint1 : entity xil_defaultlib.sysgen_reinterpret_52bb84f12b 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => slice_reg_y_net,
    output_port => reint1_output_port_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot1_67/ss/ctrl_combine
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_ctrl_combine_x27 is
  port (
    in1 : in std_logic_vector( 28-1 downto 0 );
    in2 : in std_logic_vector( 1-1 downto 0 );
    in3 : in std_logic_vector( 2-1 downto 0 );
    in4 : in std_logic_vector( 1-1 downto 0 );
    bus_out : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_ctrl_combine_x27;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_ctrl_combine_x27 is 
  signal concatenate_y_net : std_logic_vector( 32-1 downto 0 );
  signal reinterpret4_output_port_net_x0 : std_logic_vector( 28-1 downto 0 );
  signal circ_or_y_net : std_logic_vector( 1-1 downto 0 );
  signal reinterpret2_output_port_net : std_logic_vector( 2-1 downto 0 );
  signal arm_or_y_net : std_logic_vector( 1-1 downto 0 );
  signal reinterpret1_output_port_net : std_logic_vector( 28-1 downto 0 );
  signal reinterpret2_output_port_net_x0 : std_logic_vector( 1-1 downto 0 );
  signal reinterpret3_output_port_net : std_logic_vector( 2-1 downto 0 );
  signal reinterpret4_output_port_net : std_logic_vector( 1-1 downto 0 );
begin
  bus_out <= concatenate_y_net;
  reinterpret4_output_port_net_x0 <= in1;
  circ_or_y_net <= in2;
  reinterpret2_output_port_net <= in3;
  arm_or_y_net <= in4;
  concatenate : entity xil_defaultlib.sysgen_concat_8611e618a5 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    in0 => reinterpret1_output_port_net,
    in1 => reinterpret2_output_port_net_x0,
    in2 => reinterpret3_output_port_net,
    in3 => reinterpret4_output_port_net,
    y => concatenate_y_net
  );
  reinterpret1 : entity xil_defaultlib.sysgen_reinterpret_f7e0b72e82 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => reinterpret4_output_port_net_x0,
    output_port => reinterpret1_output_port_net
  );
  reinterpret2 : entity xil_defaultlib.sysgen_reinterpret_317b92931a 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => circ_or_y_net,
    output_port => reinterpret2_output_port_net_x0
  );
  reinterpret3 : entity xil_defaultlib.sysgen_reinterpret_5dc9f217bd 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => reinterpret2_output_port_net,
    output_port => reinterpret3_output_port_net
  );
  reinterpret4 : entity xil_defaultlib.sysgen_reinterpret_317b92931a 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => arm_or_y_net,
    output_port => reinterpret4_output_port_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot1_67/ss/ctrl_split
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_ctrl_split_x28 is
  port (
    bus_in : in std_logic_vector( 32-1 downto 0 );
    msb_out4 : out std_logic_vector( 28-1 downto 0 );
    out3 : out std_logic_vector( 1-1 downto 0 );
    out2 : out std_logic_vector( 2-1 downto 0 );
    lsb_out1 : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_ctrl_split_x28;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_ctrl_split_x28 is 
  signal reinterpret4_output_port_net : std_logic_vector( 28-1 downto 0 );
  signal slice3_y_net : std_logic_vector( 1-1 downto 0 );
  signal reinterpret2_output_port_net : std_logic_vector( 2-1 downto 0 );
  signal slice1_y_net : std_logic_vector( 1-1 downto 0 );
  signal reint1_output_port_net : std_logic_vector( 32-1 downto 0 );
  signal slice2_y_net : std_logic_vector( 2-1 downto 0 );
  signal slice4_y_net : std_logic_vector( 28-1 downto 0 );
begin
  msb_out4 <= reinterpret4_output_port_net;
  out3 <= slice3_y_net;
  out2 <= reinterpret2_output_port_net;
  lsb_out1 <= slice1_y_net;
  reint1_output_port_net <= bus_in;
  reinterpret2 : entity xil_defaultlib.sysgen_reinterpret_5dc9f217bd 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => slice2_y_net,
    output_port => reinterpret2_output_port_net
  );
  reinterpret4 : entity xil_defaultlib.sysgen_reinterpret_f7e0b72e82 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => slice4_y_net,
    output_port => reinterpret4_output_port_net
  );
  slice1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 0,
    new_msb => 0,
    x_width => 32,
    y_width => 1
  )
  port map (
    x => reint1_output_port_net,
    y => slice1_y_net
  );
  slice2 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 1,
    new_msb => 2,
    x_width => 32,
    y_width => 2
  )
  port map (
    x => reint1_output_port_net,
    y => slice2_y_net
  );
  slice3 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 3,
    new_msb => 3,
    x_width => 32,
    y_width => 1
  )
  port map (
    x => reint1_output_port_net,
    y => slice3_y_net
  );
  slice4 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 4,
    new_msb => 31,
    x_width => 32,
    y_width => 28
  )
  port map (
    x => reint1_output_port_net,
    y => slice4_y_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot1_67/ss/status
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_status_x28 is
  port (
    out_reg : in std_logic_vector( 32-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_67_ss_status_user_data_in : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_status_x28;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_status_x28 is 
  signal concat_y_net : std_logic_vector( 32-1 downto 0 );
  signal cast_gw_dout_net : std_logic_vector( 32-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal io_delay_q_net : std_logic_vector( 32-1 downto 0 );
  signal reint1_output_port_net : std_logic_vector( 32-1 downto 0 );
  signal assert_reg_dout_net : std_logic_vector( 32-1 downto 0 );
begin
  concat_y_net <= out_reg;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_67_ss_status_user_data_in <= cast_gw_dout_net;
  clk_net <= clk_1;
  ce_net <= ce_1;
  io_delay : entity xil_defaultlib.sysgen_delay_34e314c510 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d => reint1_output_port_net,
    q => io_delay_q_net
  );
  cast_gw : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 32,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 32,
    latency => 1,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => io_delay_q_net,
    clk => clk_net,
    ce => ce_net,
    dout => cast_gw_dout_net
  );
  assert_reg : entity xil_defaultlib.xlpassthrough 
  generic map (
    din_width => 32,
    dout_width => 32
  )
  port map (
    din => concat_y_net,
    dout => assert_reg_dout_net
  );
  reint1 : entity xil_defaultlib.sysgen_reinterpret_52bb84f12b 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => assert_reg_dout_net,
    output_port => reint1_output_port_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot1_67/ss
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_ss_x17 is
  port (
    din : in std_logic_vector( 32-1 downto 0 );
    we : in std_logic_vector( 1-1 downto 0 );
    trig : in std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_67_ss_ctrl_user_data_out : in std_logic_vector( 32-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    arm_out : out std_logic_vector( 1-1 downto 0 );
    goto_70326823_we1 : out std_logic_vector( 1-1 downto 0 );
    goto_70326823_we4 : out std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_67_ss_bram_addr : out std_logic_vector( 10-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_67_ss_bram_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_67_ss_bram_we : out std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_67_ss_status_user_data_in : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_ss_x17;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_ss_x17 is 
  signal arm_or_y_net : std_logic_vector( 1-1 downto 0 );
  signal concatenate_y_net : std_logic_vector( 32-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc1_sync_net : std_logic_vector( 1-1 downto 0 );
  signal edge_op_y_net_x0 : std_logic_vector( 1-1 downto 0 );
  signal we_choice_y_net : std_logic_vector( 1-1 downto 0 );
  signal logical6_y_net : std_logic_vector( 1-1 downto 0 );
  signal convert_addr_dout_net : std_logic_vector( 10-1 downto 0 );
  signal convert_din1_dout_net : std_logic_vector( 32-1 downto 0 );
  signal convert_we_dout_net : std_logic_vector( 1-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_67_ss_ctrl_user_data_out_net : std_logic_vector( 32-1 downto 0 );
  signal cast_gw_dout_net : std_logic_vector( 32-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal slice2_y_net : std_logic_vector( 10-1 downto 0 );
  signal delay6_q_net : std_logic_vector( 32-1 downto 0 );
  signal concat_y_net : std_logic_vector( 32-1 downto 0 );
  signal data_choice_y_net : std_logic_vector( 32-1 downto 0 );
  signal register6_q_net : std_logic_vector( 1-1 downto 0 );
  signal never_op_net : std_logic_vector( 1-1 downto 0 );
  signal edge_op_y_net_x1 : std_logic_vector( 1-1 downto 0 );
  signal cast_dout_net : std_logic_vector( 32-1 downto 0 );
  signal concatenate_y_net_x0 : std_logic_vector( 32-1 downto 0 );
  signal add_del_q_net : std_logic_vector( 10-1 downto 0 );
  signal dat_del_q_net : std_logic_vector( 32-1 downto 0 );
  signal we_del_q_net : std_logic_vector( 1-1 downto 0 );
  signal reint1_output_port_net : std_logic_vector( 32-1 downto 0 );
  signal reinterpret4_output_port_net : std_logic_vector( 28-1 downto 0 );
  signal circ_or_y_net : std_logic_vector( 1-1 downto 0 );
  signal reinterpret2_output_port_net : std_logic_vector( 2-1 downto 0 );
  signal slice3_y_net : std_logic_vector( 1-1 downto 0 );
  signal slice1_y_net : std_logic_vector( 1-1 downto 0 );
  signal arm_op_net : std_logic_vector( 1-1 downto 0 );
  signal ri_output_port_net : std_logic_vector( 32-1 downto 0 );
  signal circ_op_net : std_logic_vector( 1-1 downto 0 );
begin
  arm_out <= arm_or_y_net;
  concatenate_y_net <= din;
  rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc1_sync_net <= we;
  edge_op_y_net_x0 <= trig;
  goto_70326823_we1 <= we_choice_y_net;
  goto_70326823_we4 <= logical6_y_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_67_ss_bram_addr <= convert_addr_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_67_ss_bram_data_in <= convert_din1_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_67_ss_bram_we <= convert_we_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_67_ss_ctrl_user_data_out_net <= rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_67_ss_ctrl_user_data_out;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_67_ss_status_user_data_in <= cast_gw_dout_net;
  clk_net <= clk_1;
  ce_net <= ce_1;
  add_gen : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_add_gen_x17 
  port map (
    din => data_choice_y_net,
    we => we_choice_y_net,
    go => register6_q_net,
    cont => never_op_net,
    init => edge_op_y_net_x1,
    clk_1 => clk_net,
    ce_1 => ce_net,
    add => slice2_y_net,
    dout => delay6_q_net,
    we_o => logical6_y_net,
    status => concat_y_net
  );
  basic_ctrl : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_basic_ctrl_x17 
  port map (
    din => cast_dout_net,
    we => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc1_sync_net,
    trig => edge_op_y_net_x0,
    ctrl => concatenate_y_net_x0,
    stopi => never_op_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    dout => data_choice_y_net,
    we_o => we_choice_y_net,
    go => register6_q_net,
    init => edge_op_y_net_x1
  );
  bram : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_bram_x17 
  port map (
    addr => add_del_q_net,
    data_in => dat_del_q_net,
    we => we_del_q_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_67_ss_bram_addr => convert_addr_dout_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_67_ss_bram_data_in => convert_din1_dout_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_67_ss_bram_we => convert_we_dout_net
  );
  ctrl : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_ctrl_x25 
  port map (
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_67_ss_ctrl_user_data_out => rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_67_ss_ctrl_user_data_out_net,
    in_reg => reint1_output_port_net
  );
  ctrl_combine : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_ctrl_combine_x27 
  port map (
    in1 => reinterpret4_output_port_net,
    in2 => circ_or_y_net,
    in3 => reinterpret2_output_port_net,
    in4 => arm_or_y_net,
    bus_out => concatenate_y_net_x0
  );
  ctrl_split : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_ctrl_split_x28 
  port map (
    bus_in => reint1_output_port_net,
    msb_out4 => reinterpret4_output_port_net,
    out3 => slice3_y_net,
    out2 => reinterpret2_output_port_net,
    lsb_out1 => slice1_y_net
  );
  status : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_status_x28 
  port map (
    out_reg => concat_y_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_67_ss_status_user_data_in => cast_gw_dout_net
  );
  add_del : entity xil_defaultlib.sysgen_delay_4e9264ffdf 
  port map (
    clr => '0',
    d => slice2_y_net,
    clk => clk_net,
    ce => ce_net,
    q => add_del_q_net
  );
  arm : entity xil_defaultlib.sysgen_constant_a7b8778750 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => arm_op_net
  );
  arm_or : entity xil_defaultlib.sysgen_logical_d7dc12cf31 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => slice1_y_net,
    d1 => arm_op_net,
    y => arm_or_y_net
  );
  cast : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 32,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 32,
    latency => 0,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => ri_output_port_net,
    clk => clk_net,
    ce => ce_net,
    dout => cast_dout_net
  );
  circ : entity xil_defaultlib.sysgen_constant_a7b8778750 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => circ_op_net
  );
  circ_or : entity xil_defaultlib.sysgen_logical_d7dc12cf31 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => slice3_y_net,
    d1 => circ_op_net,
    y => circ_or_y_net
  );
  dat_del : entity xil_defaultlib.sysgen_delay_5ec362a23c 
  port map (
    clr => '0',
    d => delay6_q_net,
    clk => clk_net,
    ce => ce_net,
    q => dat_del_q_net
  );
  never : entity xil_defaultlib.sysgen_constant_a7b8778750 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => never_op_net
  );
  ri : entity xil_defaultlib.sysgen_reinterpret_52bb84f12b 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => concatenate_y_net,
    output_port => ri_output_port_net
  );
  we_del : entity xil_defaultlib.sysgen_delay_e0740ee3f9 
  port map (
    clr => '0',
    d => logical6_y_net,
    clk => clk_net,
    ce => ce_net,
    q => we_del_q_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot1_67
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_67 is
  port (
    in_d0 : in std_logic_vector( 16-1 downto 0 );
    in_d1 : in std_logic_vector( 16-1 downto 0 );
    we : in std_logic_vector( 1-1 downto 0 );
    trig : in std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_67_ss_ctrl_user_data_out : in std_logic_vector( 32-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    arm_out : out std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_67_ss_bram_addr : out std_logic_vector( 10-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_67_ss_bram_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_67_ss_bram_we : out std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_67_ss_status_user_data_in : out std_logic_vector( 32-1 downto 0 );
    goto_70326823_we1 : out std_logic_vector( 1-1 downto 0 );
    goto_70326823_we4 : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_67;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_67 is 
  signal arm_or_y_net : std_logic_vector( 1-1 downto 0 );
  signal slice11_y_net : std_logic_vector( 16-1 downto 0 );
  signal slice12_y_net : std_logic_vector( 16-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc1_sync_net : std_logic_vector( 1-1 downto 0 );
  signal edge_op_y_net : std_logic_vector( 1-1 downto 0 );
  signal convert_addr_dout_net : std_logic_vector( 10-1 downto 0 );
  signal convert_din1_dout_net : std_logic_vector( 32-1 downto 0 );
  signal convert_we_dout_net : std_logic_vector( 1-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_67_ss_ctrl_user_data_out_net : std_logic_vector( 32-1 downto 0 );
  signal cast_gw_dout_net : std_logic_vector( 32-1 downto 0 );
  signal we_choice_y_net : std_logic_vector( 1-1 downto 0 );
  signal logical6_y_net : std_logic_vector( 1-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal concatenate_y_net : std_logic_vector( 32-1 downto 0 );
  signal assert_d0_dout_net : std_logic_vector( 16-1 downto 0 );
  signal assert_d1_dout_net : std_logic_vector( 16-1 downto 0 );
begin
  arm_out <= arm_or_y_net;
  slice11_y_net <= in_d0;
  slice12_y_net <= in_d1;
  rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc1_sync_net <= we;
  edge_op_y_net <= trig;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_67_ss_bram_addr <= convert_addr_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_67_ss_bram_data_in <= convert_din1_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_67_ss_bram_we <= convert_we_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_67_ss_ctrl_user_data_out_net <= rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_67_ss_ctrl_user_data_out;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_67_ss_status_user_data_in <= cast_gw_dout_net;
  goto_70326823_we1 <= we_choice_y_net;
  goto_70326823_we4 <= logical6_y_net;
  clk_net <= clk_1;
  ce_net <= ce_1;
  buscreate : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_buscreate_x17 
  port map (
    in1 => assert_d0_dout_net,
    in2 => assert_d1_dout_net,
    bus_out => concatenate_y_net
  );
  ss : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_ss_x17 
  port map (
    din => concatenate_y_net,
    we => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc1_sync_net,
    trig => edge_op_y_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_67_ss_ctrl_user_data_out => rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_67_ss_ctrl_user_data_out_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    arm_out => arm_or_y_net,
    goto_70326823_we1 => we_choice_y_net,
    goto_70326823_we4 => logical6_y_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_67_ss_bram_addr => convert_addr_dout_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_67_ss_bram_data_in => convert_din1_dout_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_67_ss_bram_we => convert_we_dout_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_67_ss_status_user_data_in => cast_gw_dout_net
  );
  assert_d0 : entity xil_defaultlib.xlpassthrough 
  generic map (
    din_width => 16,
    dout_width => 16
  )
  port map (
    din => slice11_y_net,
    dout => assert_d0_dout_net
  );
  assert_d1 : entity xil_defaultlib.xlpassthrough 
  generic map (
    din_width => 16,
    dout_width => 16
  )
  port map (
    din => slice12_y_net,
    dout => assert_d1_dout_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot2_01/buscreate
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_buscreate_x28 is
  port (
    in1 : in std_logic_vector( 16-1 downto 0 );
    in2 : in std_logic_vector( 16-1 downto 0 );
    bus_out : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_buscreate_x28;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_buscreate_x28 is 
  signal concatenate_y_net : std_logic_vector( 32-1 downto 0 );
  signal assert_d0_dout_net : std_logic_vector( 16-1 downto 0 );
  signal assert_d1_dout_net : std_logic_vector( 16-1 downto 0 );
  signal reinterpret1_output_port_net : std_logic_vector( 16-1 downto 0 );
  signal reinterpret2_output_port_net : std_logic_vector( 16-1 downto 0 );
begin
  bus_out <= concatenate_y_net;
  assert_d0_dout_net <= in1;
  assert_d1_dout_net <= in2;
  concatenate : entity xil_defaultlib.sysgen_concat_37649e01d1 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    in0 => reinterpret1_output_port_net,
    in1 => reinterpret2_output_port_net,
    y => concatenate_y_net
  );
  reinterpret1 : entity xil_defaultlib.sysgen_reinterpret_03c8cdbbc1 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => assert_d0_dout_net,
    output_port => reinterpret1_output_port_net
  );
  reinterpret2 : entity xil_defaultlib.sysgen_reinterpret_03c8cdbbc1 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => assert_d1_dout_net,
    output_port => reinterpret2_output_port_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot2_01/ss/add_gen/edge_detect
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x58 is
  port (
    in_x0 : in std_logic_vector( 1-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    out_x0 : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x58;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x58 is 
  signal edge_op_y_net : std_logic_vector( 1-1 downto 0 );
  signal slice3_y_net : std_logic_vector( 1-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal delay_q_net : std_logic_vector( 1-1 downto 0 );
  signal inverter_op_net : std_logic_vector( 1-1 downto 0 );
begin
  out_x0 <= edge_op_y_net;
  slice3_y_net <= in_x0;
  clk_net <= clk_1;
  ce_net <= ce_1;
  delay : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 1
  )
  port map (
    en => '1',
    rst => '1',
    d => slice3_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay_q_net
  );
  inverter : entity xil_defaultlib.sysgen_inverter_6233897471 
  port map (
    clr => '0',
    ip => slice3_y_net,
    clk => clk_net,
    ce => ce_net,
    op => inverter_op_net
  );
  edge_op : entity xil_defaultlib.sysgen_logical_9cc14fefba 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => inverter_op_net,
    d1 => delay_q_net,
    y => edge_op_y_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot2_01/ss/add_gen
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_add_gen_x28 is
  port (
    din : in std_logic_vector( 32-1 downto 0 );
    we : in std_logic_vector( 1-1 downto 0 );
    go : in std_logic_vector( 1-1 downto 0 );
    cont : in std_logic_vector( 1-1 downto 0 );
    init : in std_logic_vector( 1-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    add : out std_logic_vector( 10-1 downto 0 );
    dout : out std_logic_vector( 32-1 downto 0 );
    we_o : out std_logic_vector( 1-1 downto 0 );
    status : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_add_gen_x28;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_add_gen_x28 is 
  signal slice2_y_net : std_logic_vector( 10-1 downto 0 );
  signal delay6_q_net : std_logic_vector( 32-1 downto 0 );
  signal logical6_y_net : std_logic_vector( 1-1 downto 0 );
  signal concat_y_net : std_logic_vector( 32-1 downto 0 );
  signal data_choice_y_net : std_logic_vector( 32-1 downto 0 );
  signal we_choice_y_net : std_logic_vector( 1-1 downto 0 );
  signal register6_q_net : std_logic_vector( 1-1 downto 0 );
  signal never_op_net : std_logic_vector( 1-1 downto 0 );
  signal edge_op_y_net : std_logic_vector( 1-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal edge_op_y_net_x0 : std_logic_vector( 1-1 downto 0 );
  signal slice3_y_net : std_logic_vector( 1-1 downto 0 );
  signal shift_op_net : std_logic_vector( 19-1 downto 0 );
  signal inverter_op_net : std_logic_vector( 1-1 downto 0 );
  signal delay1_q_net : std_logic_vector( 12-1 downto 0 );
  signal convert_dout_net : std_logic_vector( 19-1 downto 0 );
  signal register5_q_net : std_logic_vector( 1-1 downto 0 );
  signal delay_q_net : std_logic_vector( 1-1 downto 0 );
  signal delay4_q_net : std_logic_vector( 1-1 downto 0 );
  signal slice1_y_net : std_logic_vector( 12-1 downto 0 );
  signal delay3_q_net : std_logic_vector( 1-1 downto 0 );
  signal inverter1_op_net : std_logic_vector( 1-1 downto 0 );
  signal logical1_y_net : std_logic_vector( 1-1 downto 0 );
  signal logical4_y_net : std_logic_vector( 1-1 downto 0 );
  signal add_gen_op_net : std_logic_vector( 13-1 downto 0 );
begin
  add <= slice2_y_net;
  dout <= delay6_q_net;
  we_o <= logical6_y_net;
  status <= concat_y_net;
  data_choice_y_net <= din;
  we_choice_y_net <= we;
  register6_q_net <= go;
  never_op_net <= cont;
  edge_op_y_net <= init;
  clk_net <= clk_1;
  ce_net <= ce_1;
  edge_detect : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x58 
  port map (
    in_x0 => slice3_y_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    out_x0 => edge_op_y_net_x0
  );
  concat : entity xil_defaultlib.sysgen_concat_fc8edfac0e 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    in0 => shift_op_net,
    in1 => inverter_op_net,
    in2 => delay1_q_net,
    y => concat_y_net
  );
  convert : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 1,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 19,
    latency => 0,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => register5_q_net,
    clk => clk_net,
    ce => ce_net,
    dout => convert_dout_net
  );
  delay : entity xil_defaultlib.sysgen_delay_e0740ee3f9 
  port map (
    clr => '0',
    d => delay4_q_net,
    clk => clk_net,
    ce => ce_net,
    q => delay_q_net
  );
  delay1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 12
  )
  port map (
    en => '1',
    rst => '1',
    d => slice1_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay1_q_net
  );
  delay3 : entity xil_defaultlib.sysgen_delay_e0740ee3f9 
  port map (
    clr => '0',
    d => never_op_net,
    clk => clk_net,
    ce => ce_net,
    q => delay3_q_net
  );
  delay4 : entity xil_defaultlib.sysgen_delay_e0740ee3f9 
  port map (
    clr => '0',
    d => edge_op_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay4_q_net
  );
  delay6 : entity xil_defaultlib.sysgen_delay_5ec362a23c 
  port map (
    clr => '0',
    d => data_choice_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay6_q_net
  );
  inverter : entity xil_defaultlib.sysgen_inverter_918b6bc6d0 
  port map (
    clr => '0',
    ip => register5_q_net,
    clk => clk_net,
    ce => ce_net,
    op => inverter_op_net
  );
  inverter1 : entity xil_defaultlib.sysgen_inverter_6233897471 
  port map (
    clr => '0',
    ip => edge_op_y_net_x0,
    clk => clk_net,
    ce => ce_net,
    op => inverter1_op_net
  );
  logical1 : entity xil_defaultlib.sysgen_logical_2486129911 
  port map (
    clr => '0',
    d0 => we_choice_y_net,
    d1 => register6_q_net,
    clk => clk_net,
    ce => ce_net,
    y => logical1_y_net
  );
  logical4 : entity xil_defaultlib.sysgen_logical_d7dc12cf31 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => delay3_q_net,
    d1 => inverter1_op_net,
    y => logical4_y_net
  );
  logical6 : entity xil_defaultlib.sysgen_logical_c05fefc67b 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => register5_q_net,
    d1 => logical4_y_net,
    d2 => logical1_y_net,
    y => logical6_y_net
  );
  register5 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlregister 
  generic map (
    d_width => 1,
    init_value => b"1"
  )
  port map (
    d => delay3_q_net,
    rst => delay_q_net,
    en => edge_op_y_net_x0,
    clk => clk_net,
    ce => ce_net,
    q => register5_q_net
  );
  shift : entity xil_defaultlib.sysgen_shift_5af4fe0a99 
  port map (
    clr => '0',
    ip => convert_dout_net,
    clk => clk_net,
    ce => ce_net,
    op => shift_op_net
  );
  add_gen : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlcounter_free 
  generic map (
    core_name0 => "rfdc_multi_eight_adcs_2048gsps_mts_c_counter_binary_v12_0_i1",
    op_arith => xlUnsigned,
    op_width => 13
  )
  port map (
    clr => '0',
    rst => delay4_q_net,
    en => logical6_y_net,
    clk => clk_net,
    ce => ce_net,
    op => add_gen_op_net
  );
  slice1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 0,
    new_msb => 11,
    x_width => 13,
    y_width => 12
  )
  port map (
    x => add_gen_op_net,
    y => slice1_y_net
  );
  slice2 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 2,
    new_msb => 11,
    x_width => 13,
    y_width => 10
  )
  port map (
    x => add_gen_op_net,
    y => slice2_y_net
  );
  slice3 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 12,
    new_msb => 12,
    x_width => 13,
    y_width => 1
  )
  port map (
    x => add_gen_op_net,
    y => slice3_y_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot2_01/ss/basic_ctrl/dram_munge
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_dram_munge_x28 is
  port (
    din : in std_logic_vector( 32-1 downto 0 );
    we : in std_logic_vector( 1-1 downto 0 );
    init : in std_logic_vector( 1-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    dout : out std_logic_vector( 32-1 downto 0 );
    we_o : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_dram_munge_x28;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_dram_munge_x28 is 
  signal data_choice_y_net : std_logic_vector( 32-1 downto 0 );
  signal we_choice_y_net : std_logic_vector( 1-1 downto 0 );
  signal cast_dout_net : std_logic_vector( 32-1 downto 0 );
  signal mux1_y_net_x0 : std_logic_vector( 1-1 downto 0 );
  signal edge_op_y_net : std_logic_vector( 1-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal concat_y_net : std_logic_vector( 80-1 downto 0 );
  signal constant_op_net : std_logic_vector( 8-1 downto 0 );
  signal register_q_net : std_logic_vector( 32-1 downto 0 );
  signal register1_q_net : std_logic_vector( 32-1 downto 0 );
  signal concat1_y_net : std_logic_vector( 80-1 downto 0 );
  signal register2_q_net : std_logic_vector( 32-1 downto 0 );
  signal register3_q_net : std_logic_vector( 32-1 downto 0 );
  signal delay_q_net : std_logic_vector( 1-1 downto 0 );
  signal logical_y_net : std_logic_vector( 1-1 downto 0 );
  signal delay1_q_net : std_logic_vector( 1-1 downto 0 );
  signal logical1_y_net : std_logic_vector( 1-1 downto 0 );
  signal relational3_op_net : std_logic_vector( 1-1 downto 0 );
  signal mux1_y_net : std_logic_vector( 80-1 downto 0 );
  signal dout_count_op_net : std_logic_vector( 1-1 downto 0 );
  signal relational_op_net : std_logic_vector( 1-1 downto 0 );
  signal relational1_op_net : std_logic_vector( 1-1 downto 0 );
  signal relational2_op_net : std_logic_vector( 1-1 downto 0 );
  signal input_count_op_net : std_logic_vector( 2-1 downto 0 );
  signal con0_op_net : std_logic_vector( 2-1 downto 0 );
  signal con1_op_net : std_logic_vector( 2-1 downto 0 );
  signal con2_op_net : std_logic_vector( 2-1 downto 0 );
  signal con3_op_net : std_logic_vector( 2-1 downto 0 );
  signal dram_op_net : std_logic_vector( 1-1 downto 0 );
begin
  dout <= data_choice_y_net;
  we_o <= we_choice_y_net;
  cast_dout_net <= din;
  mux1_y_net_x0 <= we;
  edge_op_y_net <= init;
  clk_net <= clk_1;
  ce_net <= ce_1;
  concat : entity xil_defaultlib.sysgen_concat_e7487baac7 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    in0 => constant_op_net,
    in1 => register_q_net,
    in2 => constant_op_net,
    in3 => register1_q_net,
    y => concat_y_net
  );
  concat1 : entity xil_defaultlib.sysgen_concat_e7487baac7 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    in0 => constant_op_net,
    in1 => register2_q_net,
    in2 => constant_op_net,
    in3 => register3_q_net,
    y => concat1_y_net
  );
  constant_x0 : entity xil_defaultlib.sysgen_constant_869e31f04d 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => constant_op_net
  );
  delay : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 1
  )
  port map (
    en => '1',
    rst => '1',
    d => logical_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay_q_net
  );
  delay1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 1
  )
  port map (
    en => '1',
    rst => '1',
    d => logical1_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay1_q_net
  );
  logical : entity xil_defaultlib.sysgen_logical_2486129911 
  port map (
    clr => '0',
    d0 => relational3_op_net,
    d1 => mux1_y_net_x0,
    clk => clk_net,
    ce => ce_net,
    y => logical_y_net
  );
  logical1 : entity xil_defaultlib.sysgen_logical_d7dc12cf31 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => logical_y_net,
    d1 => delay_q_net,
    y => logical1_y_net
  );
  mux1 : entity xil_defaultlib.sysgen_mux_71ee2b1026 
  port map (
    clr => '0',
    sel => dout_count_op_net,
    d0 => concat_y_net,
    d1 => concat1_y_net,
    clk => clk_net,
    ce => ce_net,
    y => mux1_y_net
  );
  register_x0 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlregister 
  generic map (
    d_width => 32,
    init_value => b"00000000000000000000000000000000"
  )
  port map (
    rst => "0",
    d => cast_dout_net,
    en => relational_op_net,
    clk => clk_net,
    ce => ce_net,
    q => register_q_net
  );
  register1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlregister 
  generic map (
    d_width => 32,
    init_value => b"00000000000000000000000000000000"
  )
  port map (
    rst => "0",
    d => cast_dout_net,
    en => relational1_op_net,
    clk => clk_net,
    ce => ce_net,
    q => register1_q_net
  );
  register2 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlregister 
  generic map (
    d_width => 32,
    init_value => b"00000000000000000000000000000000"
  )
  port map (
    rst => "0",
    d => cast_dout_net,
    en => relational2_op_net,
    clk => clk_net,
    ce => ce_net,
    q => register2_q_net
  );
  register3 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlregister 
  generic map (
    d_width => 32,
    init_value => b"00000000000000000000000000000000"
  )
  port map (
    rst => "0",
    d => cast_dout_net,
    en => relational3_op_net,
    clk => clk_net,
    ce => ce_net,
    q => register3_q_net
  );
  relational : entity xil_defaultlib.sysgen_relational_e5d6b5eaca 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    a => input_count_op_net,
    b => con0_op_net,
    op => relational_op_net
  );
  relational1 : entity xil_defaultlib.sysgen_relational_e5d6b5eaca 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    a => input_count_op_net,
    b => con1_op_net,
    op => relational1_op_net
  );
  relational2 : entity xil_defaultlib.sysgen_relational_e5d6b5eaca 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    a => input_count_op_net,
    b => con2_op_net,
    op => relational2_op_net
  );
  relational3 : entity xil_defaultlib.sysgen_relational_e5d6b5eaca 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    a => input_count_op_net,
    b => con3_op_net,
    op => relational3_op_net
  );
  con0 : entity xil_defaultlib.sysgen_constant_b58c3a1535 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => con0_op_net
  );
  con1 : entity xil_defaultlib.sysgen_constant_d3f27a6354 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => con1_op_net
  );
  con2 : entity xil_defaultlib.sysgen_constant_2fa4689d4e 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => con2_op_net
  );
  con3 : entity xil_defaultlib.sysgen_constant_31bab66ba6 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => con3_op_net
  );
  data_choice : entity xil_defaultlib.sysgen_mux_d624c1af44 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    sel => dram_op_net,
    d0 => cast_dout_net,
    d1 => mux1_y_net,
    y => data_choice_y_net
  );
  dout_count : entity xil_defaultlib.sysgen_counter_a9c1c293c2 
  port map (
    clr => '0',
    rst => edge_op_y_net,
    en => logical1_y_net,
    clk => clk_net,
    ce => ce_net,
    op => dout_count_op_net
  );
  dram : entity xil_defaultlib.sysgen_constant_a7b8778750 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => dram_op_net
  );
  input_count : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlcounter_free 
  generic map (
    core_name0 => "rfdc_multi_eight_adcs_2048gsps_mts_c_counter_binary_v12_0_i2",
    op_arith => xlUnsigned,
    op_width => 2
  )
  port map (
    clr => '0',
    rst => edge_op_y_net,
    en => mux1_y_net_x0,
    clk => clk_net,
    ce => ce_net,
    op => input_count_op_net
  );
  we_choice : entity xil_defaultlib.sysgen_mux_4874190f11 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    sel => dram_op_net,
    d0 => mux1_y_net_x0,
    d1 => delay1_q_net,
    y => we_choice_y_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot2_01/ss/basic_ctrl/edge_detect
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x59 is
  port (
    in_x0 : in std_logic_vector( 1-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    out_x0 : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x59;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x59 is 
  signal edge_op_y_net : std_logic_vector( 1-1 downto 0 );
  signal delay1_q_net : std_logic_vector( 1-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal delay_q_net : std_logic_vector( 1-1 downto 0 );
  signal inverter_op_net : std_logic_vector( 1-1 downto 0 );
begin
  out_x0 <= edge_op_y_net;
  delay1_q_net <= in_x0;
  clk_net <= clk_1;
  ce_net <= ce_1;
  delay : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 1
  )
  port map (
    en => '1',
    rst => '1',
    d => delay1_q_net,
    clk => clk_net,
    ce => ce_net,
    q => delay_q_net
  );
  inverter : entity xil_defaultlib.sysgen_inverter_6233897471 
  port map (
    clr => '0',
    ip => delay1_q_net,
    clk => clk_net,
    ce => ce_net,
    op => inverter_op_net
  );
  edge_op : entity xil_defaultlib.sysgen_logical_0f1aa1e2d7 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => inverter_op_net,
    d1 => delay_q_net,
    y => edge_op_y_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot2_01/ss/basic_ctrl
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_basic_ctrl_x28 is
  port (
    din : in std_logic_vector( 32-1 downto 0 );
    we : in std_logic_vector( 1-1 downto 0 );
    trig : in std_logic_vector( 1-1 downto 0 );
    ctrl : in std_logic_vector( 32-1 downto 0 );
    stopi : in std_logic_vector( 1-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    dout : out std_logic_vector( 32-1 downto 0 );
    we_o : out std_logic_vector( 1-1 downto 0 );
    go : out std_logic_vector( 1-1 downto 0 );
    init : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_basic_ctrl_x28;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_basic_ctrl_x28 is 
  signal data_choice_y_net : std_logic_vector( 32-1 downto 0 );
  signal we_choice_y_net : std_logic_vector( 1-1 downto 0 );
  signal register6_q_net : std_logic_vector( 1-1 downto 0 );
  signal edge_op_y_net_x0 : std_logic_vector( 1-1 downto 0 );
  signal cast_dout_net : std_logic_vector( 32-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc2_sync_net : std_logic_vector( 1-1 downto 0 );
  signal edge_op_y_net : std_logic_vector( 1-1 downto 0 );
  signal concatenate_y_net : std_logic_vector( 32-1 downto 0 );
  signal never_op_net : std_logic_vector( 1-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal mux1_y_net : std_logic_vector( 1-1 downto 0 );
  signal delay1_q_net : std_logic_vector( 1-1 downto 0 );
  signal constant_op_net : std_logic_vector( 1-1 downto 0 );
  signal constant1_op_net : std_logic_vector( 1-1 downto 0 );
  signal constant2_op_net : std_logic_vector( 1-1 downto 0 );
  signal enable_y_net : std_logic_vector( 1-1 downto 0 );
  signal delay2_q_net : std_logic_vector( 1-1 downto 0 );
  signal trig_src_y_net : std_logic_vector( 1-1 downto 0 );
  signal delay3_q_net : std_logic_vector( 1-1 downto 0 );
  signal valid_src_y_net : std_logic_vector( 1-1 downto 0 );
  signal inverter_op_net : std_logic_vector( 1-1 downto 0 );
  signal logical_y_net : std_logic_vector( 1-1 downto 0 );
  signal mux2_y_net : std_logic_vector( 1-1 downto 0 );
  signal register1_q_net : std_logic_vector( 1-1 downto 0 );
begin
  dout <= data_choice_y_net;
  we_o <= we_choice_y_net;
  go <= register6_q_net;
  init <= edge_op_y_net_x0;
  cast_dout_net <= din;
  rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc2_sync_net <= we;
  edge_op_y_net <= trig;
  concatenate_y_net <= ctrl;
  never_op_net <= stopi;
  clk_net <= clk_1;
  ce_net <= ce_1;
  dram_munge : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_dram_munge_x28 
  port map (
    din => cast_dout_net,
    we => mux1_y_net,
    init => edge_op_y_net_x0,
    clk_1 => clk_net,
    ce_1 => ce_net,
    dout => data_choice_y_net,
    we_o => we_choice_y_net
  );
  edge_detect : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x59 
  port map (
    in_x0 => delay1_q_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    out_x0 => edge_op_y_net_x0
  );
  constant_x0 : entity xil_defaultlib.sysgen_constant_c95a0b5efb 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => constant_op_net
  );
  constant1 : entity xil_defaultlib.sysgen_constant_c95a0b5efb 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => constant1_op_net
  );
  constant2 : entity xil_defaultlib.sysgen_constant_c95a0b5efb 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => constant2_op_net
  );
  delay1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 1
  )
  port map (
    en => '1',
    rst => '1',
    d => enable_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay1_q_net
  );
  delay2 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 1
  )
  port map (
    en => '1',
    rst => '1',
    d => trig_src_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay2_q_net
  );
  delay3 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 1
  )
  port map (
    en => '1',
    rst => '1',
    d => valid_src_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay3_q_net
  );
  inverter : entity xil_defaultlib.sysgen_inverter_6233897471 
  port map (
    clr => '0',
    ip => edge_op_y_net_x0,
    clk => clk_net,
    ce => ce_net,
    op => inverter_op_net
  );
  logical : entity xil_defaultlib.sysgen_logical_d26e5cda59 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => mux2_y_net,
    d1 => inverter_op_net,
    y => logical_y_net
  );
  mux1 : entity xil_defaultlib.sysgen_mux_4874190f11 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    sel => delay3_q_net,
    d0 => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc2_sync_net,
    d1 => constant2_op_net,
    y => mux1_y_net
  );
  mux2 : entity xil_defaultlib.sysgen_mux_4874190f11 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    sel => delay2_q_net,
    d0 => edge_op_y_net,
    d1 => constant1_op_net,
    y => mux2_y_net
  );
  register1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlregister 
  generic map (
    d_width => 1,
    init_value => b"0"
  )
  port map (
    d => constant_op_net,
    rst => logical_y_net,
    en => edge_op_y_net_x0,
    clk => clk_net,
    ce => ce_net,
    q => register1_q_net
  );
  register6 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlregister 
  generic map (
    d_width => 1,
    init_value => b"0"
  )
  port map (
    d => mux2_y_net,
    rst => edge_op_y_net_x0,
    en => register1_q_net,
    clk => clk_net,
    ce => ce_net,
    q => register6_q_net
  );
  enable : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 0,
    new_msb => 0,
    x_width => 32,
    y_width => 1
  )
  port map (
    x => concatenate_y_net,
    y => enable_y_net
  );
  trig_src : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 1,
    new_msb => 1,
    x_width => 32,
    y_width => 1
  )
  port map (
    x => concatenate_y_net,
    y => trig_src_y_net
  );
  valid_src : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 2,
    new_msb => 2,
    x_width => 32,
    y_width => 1
  )
  port map (
    x => concatenate_y_net,
    y => valid_src_y_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot2_01/ss/bram/calc_add
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_calc_add_x28 is
  port (
    in_x0 : in std_logic_vector( 10-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    out_x0 : out std_logic_vector( 10-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_calc_add_x28;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_calc_add_x28 is 
  signal mux_y_net : std_logic_vector( 10-1 downto 0 );
  signal add_del_q_net : std_logic_vector( 10-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal add_sub_s_net : std_logic_vector( 1-1 downto 0 );
  signal const_op_net : std_logic_vector( 1-1 downto 0 );
  signal lsw_y_net : std_logic_vector( 1-1 downto 0 );
  signal concat_y_net : std_logic_vector( 10-1 downto 0 );
  signal msw_y_net : std_logic_vector( 9-1 downto 0 );
  signal convert_addr_dout_net : std_logic_vector( 10-1 downto 0 );
  signal manipulate_op_net : std_logic_vector( 1-1 downto 0 );
begin
  out_x0 <= mux_y_net;
  add_del_q_net <= in_x0;
  clk_net <= clk_1;
  ce_net <= ce_1;
  add_sub : entity xil_defaultlib.sysgen_addsub_fd3b6c715c 
  port map (
    clr => '0',
    a => const_op_net,
    b => lsw_y_net,
    clk => clk_net,
    ce => ce_net,
    s => add_sub_s_net
  );
  concat : entity xil_defaultlib.sysgen_concat_f4b90dfa16 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    in0 => msw_y_net,
    in1 => add_sub_s_net,
    y => concat_y_net
  );
  const : entity xil_defaultlib.sysgen_constant_a7b8778750 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => const_op_net
  );
  convert_addr : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 10,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 10,
    latency => 0,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => add_del_q_net,
    clk => clk_net,
    ce => ce_net,
    dout => convert_addr_dout_net
  );
  lsw : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 0,
    new_msb => 0,
    x_width => 10,
    y_width => 1
  )
  port map (
    x => convert_addr_dout_net,
    y => lsw_y_net
  );
  manipulate : entity xil_defaultlib.sysgen_constant_a7b8778750 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => manipulate_op_net
  );
  msw : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 1,
    new_msb => 9,
    x_width => 10,
    y_width => 9
  )
  port map (
    x => convert_addr_dout_net,
    y => msw_y_net
  );
  mux : entity xil_defaultlib.sysgen_mux_4417594854 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    sel => manipulate_op_net,
    d0 => convert_addr_dout_net,
    d1 => concat_y_net,
    y => mux_y_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot2_01/ss/bram/munge_in
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_munge_in_x28 is
  port (
    din : in std_logic_vector( 32-1 downto 0 );
    dout : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_munge_in_x28;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_munge_in_x28 is 
  signal reinterpret_out_output_port_net : std_logic_vector( 32-1 downto 0 );
  signal dat_del_q_net : std_logic_vector( 32-1 downto 0 );
begin
  dout <= reinterpret_out_output_port_net;
  dat_del_q_net <= din;
  reinterpret_out : entity xil_defaultlib.sysgen_reinterpret_52bb84f12b 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => dat_del_q_net,
    output_port => reinterpret_out_output_port_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot2_01/ss/bram
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_bram_x28 is
  port (
    addr : in std_logic_vector( 10-1 downto 0 );
    data_in : in std_logic_vector( 32-1 downto 0 );
    we : in std_logic_vector( 1-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_01_ss_bram_addr : out std_logic_vector( 10-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_01_ss_bram_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_01_ss_bram_we : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_bram_x28;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_bram_x28 is 
  signal add_del_q_net : std_logic_vector( 10-1 downto 0 );
  signal dat_del_q_net : std_logic_vector( 32-1 downto 0 );
  signal we_del_q_net : std_logic_vector( 1-1 downto 0 );
  signal convert_addr_dout_net : std_logic_vector( 10-1 downto 0 );
  signal convert_din1_dout_net : std_logic_vector( 32-1 downto 0 );
  signal convert_we_dout_net : std_logic_vector( 1-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal mux_y_net : std_logic_vector( 10-1 downto 0 );
  signal reinterpret_out_output_port_net : std_logic_vector( 32-1 downto 0 );
begin
  add_del_q_net <= addr;
  dat_del_q_net <= data_in;
  we_del_q_net <= we;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_01_ss_bram_addr <= convert_addr_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_01_ss_bram_data_in <= convert_din1_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_01_ss_bram_we <= convert_we_dout_net;
  clk_net <= clk_1;
  ce_net <= ce_1;
  calc_add : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_calc_add_x28 
  port map (
    in_x0 => add_del_q_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    out_x0 => mux_y_net
  );
  munge_in : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_munge_in_x28 
  port map (
    din => dat_del_q_net,
    dout => reinterpret_out_output_port_net
  );
  convert_addr : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 10,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 10,
    latency => 0,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => mux_y_net,
    clk => clk_net,
    ce => ce_net,
    dout => convert_addr_dout_net
  );
  convert_din1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 32,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 32,
    latency => 0,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => reinterpret_out_output_port_net,
    clk => clk_net,
    ce => ce_net,
    dout => convert_din1_dout_net
  );
  convert_we : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 1,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 1,
    latency => 0,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => we_del_q_net,
    clk => clk_net,
    ce => ce_net,
    dout => convert_we_dout_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot2_01/ss/ctrl
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_ctrl_x27 is
  port (
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_01_ss_ctrl_user_data_out : in std_logic_vector( 32-1 downto 0 );
    in_reg : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_ctrl_x27;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_ctrl_x27 is 
  signal reint1_output_port_net : std_logic_vector( 32-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_01_ss_ctrl_user_data_out_net : std_logic_vector( 32-1 downto 0 );
  signal io_delay_q_net : std_logic_vector( 32-1 downto 0 );
  signal slice_reg_y_net : std_logic_vector( 32-1 downto 0 );
begin
  in_reg <= reint1_output_port_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_01_ss_ctrl_user_data_out_net <= rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_01_ss_ctrl_user_data_out;
  io_delay : entity xil_defaultlib.sysgen_delay_34e314c510 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d => rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_01_ss_ctrl_user_data_out_net,
    q => io_delay_q_net
  );
  slice_reg : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 0,
    new_msb => 31,
    x_width => 32,
    y_width => 32
  )
  port map (
    x => io_delay_q_net,
    y => slice_reg_y_net
  );
  reint1 : entity xil_defaultlib.sysgen_reinterpret_52bb84f12b 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => slice_reg_y_net,
    output_port => reint1_output_port_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot2_01/ss/ctrl_combine
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_ctrl_combine_x26 is
  port (
    in1 : in std_logic_vector( 28-1 downto 0 );
    in2 : in std_logic_vector( 1-1 downto 0 );
    in3 : in std_logic_vector( 2-1 downto 0 );
    in4 : in std_logic_vector( 1-1 downto 0 );
    bus_out : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_ctrl_combine_x26;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_ctrl_combine_x26 is 
  signal concatenate_y_net : std_logic_vector( 32-1 downto 0 );
  signal reinterpret4_output_port_net_x0 : std_logic_vector( 28-1 downto 0 );
  signal circ_or_y_net : std_logic_vector( 1-1 downto 0 );
  signal reinterpret2_output_port_net : std_logic_vector( 2-1 downto 0 );
  signal arm_or_y_net : std_logic_vector( 1-1 downto 0 );
  signal reinterpret1_output_port_net : std_logic_vector( 28-1 downto 0 );
  signal reinterpret2_output_port_net_x0 : std_logic_vector( 1-1 downto 0 );
  signal reinterpret3_output_port_net : std_logic_vector( 2-1 downto 0 );
  signal reinterpret4_output_port_net : std_logic_vector( 1-1 downto 0 );
begin
  bus_out <= concatenate_y_net;
  reinterpret4_output_port_net_x0 <= in1;
  circ_or_y_net <= in2;
  reinterpret2_output_port_net <= in3;
  arm_or_y_net <= in4;
  concatenate : entity xil_defaultlib.sysgen_concat_8611e618a5 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    in0 => reinterpret1_output_port_net,
    in1 => reinterpret2_output_port_net_x0,
    in2 => reinterpret3_output_port_net,
    in3 => reinterpret4_output_port_net,
    y => concatenate_y_net
  );
  reinterpret1 : entity xil_defaultlib.sysgen_reinterpret_f7e0b72e82 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => reinterpret4_output_port_net_x0,
    output_port => reinterpret1_output_port_net
  );
  reinterpret2 : entity xil_defaultlib.sysgen_reinterpret_317b92931a 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => circ_or_y_net,
    output_port => reinterpret2_output_port_net_x0
  );
  reinterpret3 : entity xil_defaultlib.sysgen_reinterpret_5dc9f217bd 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => reinterpret2_output_port_net,
    output_port => reinterpret3_output_port_net
  );
  reinterpret4 : entity xil_defaultlib.sysgen_reinterpret_317b92931a 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => arm_or_y_net,
    output_port => reinterpret4_output_port_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot2_01/ss/ctrl_split
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_ctrl_split_x27 is
  port (
    bus_in : in std_logic_vector( 32-1 downto 0 );
    msb_out4 : out std_logic_vector( 28-1 downto 0 );
    out3 : out std_logic_vector( 1-1 downto 0 );
    out2 : out std_logic_vector( 2-1 downto 0 );
    lsb_out1 : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_ctrl_split_x27;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_ctrl_split_x27 is 
  signal reinterpret4_output_port_net : std_logic_vector( 28-1 downto 0 );
  signal slice3_y_net : std_logic_vector( 1-1 downto 0 );
  signal reinterpret2_output_port_net : std_logic_vector( 2-1 downto 0 );
  signal slice1_y_net : std_logic_vector( 1-1 downto 0 );
  signal reint1_output_port_net : std_logic_vector( 32-1 downto 0 );
  signal slice2_y_net : std_logic_vector( 2-1 downto 0 );
  signal slice4_y_net : std_logic_vector( 28-1 downto 0 );
begin
  msb_out4 <= reinterpret4_output_port_net;
  out3 <= slice3_y_net;
  out2 <= reinterpret2_output_port_net;
  lsb_out1 <= slice1_y_net;
  reint1_output_port_net <= bus_in;
  reinterpret2 : entity xil_defaultlib.sysgen_reinterpret_5dc9f217bd 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => slice2_y_net,
    output_port => reinterpret2_output_port_net
  );
  reinterpret4 : entity xil_defaultlib.sysgen_reinterpret_f7e0b72e82 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => slice4_y_net,
    output_port => reinterpret4_output_port_net
  );
  slice1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 0,
    new_msb => 0,
    x_width => 32,
    y_width => 1
  )
  port map (
    x => reint1_output_port_net,
    y => slice1_y_net
  );
  slice2 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 1,
    new_msb => 2,
    x_width => 32,
    y_width => 2
  )
  port map (
    x => reint1_output_port_net,
    y => slice2_y_net
  );
  slice3 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 3,
    new_msb => 3,
    x_width => 32,
    y_width => 1
  )
  port map (
    x => reint1_output_port_net,
    y => slice3_y_net
  );
  slice4 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 4,
    new_msb => 31,
    x_width => 32,
    y_width => 28
  )
  port map (
    x => reint1_output_port_net,
    y => slice4_y_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot2_01/ss/status
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_status_x27 is
  port (
    out_reg : in std_logic_vector( 32-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_01_ss_status_user_data_in : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_status_x27;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_status_x27 is 
  signal concat_y_net : std_logic_vector( 32-1 downto 0 );
  signal cast_gw_dout_net : std_logic_vector( 32-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal io_delay_q_net : std_logic_vector( 32-1 downto 0 );
  signal reint1_output_port_net : std_logic_vector( 32-1 downto 0 );
  signal assert_reg_dout_net : std_logic_vector( 32-1 downto 0 );
begin
  concat_y_net <= out_reg;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_01_ss_status_user_data_in <= cast_gw_dout_net;
  clk_net <= clk_1;
  ce_net <= ce_1;
  io_delay : entity xil_defaultlib.sysgen_delay_34e314c510 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d => reint1_output_port_net,
    q => io_delay_q_net
  );
  cast_gw : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 32,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 32,
    latency => 1,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => io_delay_q_net,
    clk => clk_net,
    ce => ce_net,
    dout => cast_gw_dout_net
  );
  assert_reg : entity xil_defaultlib.xlpassthrough 
  generic map (
    din_width => 32,
    dout_width => 32
  )
  port map (
    din => concat_y_net,
    dout => assert_reg_dout_net
  );
  reint1 : entity xil_defaultlib.sysgen_reinterpret_52bb84f12b 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => assert_reg_dout_net,
    output_port => reint1_output_port_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot2_01/ss
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_ss_x28 is
  port (
    din : in std_logic_vector( 32-1 downto 0 );
    we : in std_logic_vector( 1-1 downto 0 );
    trig : in std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_01_ss_ctrl_user_data_out : in std_logic_vector( 32-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    arm_out : out std_logic_vector( 1-1 downto 0 );
    goto_12586536_we1 : out std_logic_vector( 1-1 downto 0 );
    goto_12586536_we4 : out std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_01_ss_bram_addr : out std_logic_vector( 10-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_01_ss_bram_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_01_ss_bram_we : out std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_01_ss_status_user_data_in : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_ss_x28;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_ss_x28 is 
  signal arm_or_y_net : std_logic_vector( 1-1 downto 0 );
  signal concatenate_y_net : std_logic_vector( 32-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc2_sync_net : std_logic_vector( 1-1 downto 0 );
  signal edge_op_y_net_x0 : std_logic_vector( 1-1 downto 0 );
  signal we_choice_y_net : std_logic_vector( 1-1 downto 0 );
  signal logical6_y_net : std_logic_vector( 1-1 downto 0 );
  signal convert_addr_dout_net : std_logic_vector( 10-1 downto 0 );
  signal convert_din1_dout_net : std_logic_vector( 32-1 downto 0 );
  signal convert_we_dout_net : std_logic_vector( 1-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_01_ss_ctrl_user_data_out_net : std_logic_vector( 32-1 downto 0 );
  signal cast_gw_dout_net : std_logic_vector( 32-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal slice2_y_net : std_logic_vector( 10-1 downto 0 );
  signal delay6_q_net : std_logic_vector( 32-1 downto 0 );
  signal concat_y_net : std_logic_vector( 32-1 downto 0 );
  signal data_choice_y_net : std_logic_vector( 32-1 downto 0 );
  signal register6_q_net : std_logic_vector( 1-1 downto 0 );
  signal never_op_net : std_logic_vector( 1-1 downto 0 );
  signal edge_op_y_net_x1 : std_logic_vector( 1-1 downto 0 );
  signal cast_dout_net : std_logic_vector( 32-1 downto 0 );
  signal concatenate_y_net_x0 : std_logic_vector( 32-1 downto 0 );
  signal add_del_q_net : std_logic_vector( 10-1 downto 0 );
  signal dat_del_q_net : std_logic_vector( 32-1 downto 0 );
  signal we_del_q_net : std_logic_vector( 1-1 downto 0 );
  signal reint1_output_port_net : std_logic_vector( 32-1 downto 0 );
  signal reinterpret4_output_port_net : std_logic_vector( 28-1 downto 0 );
  signal circ_or_y_net : std_logic_vector( 1-1 downto 0 );
  signal reinterpret2_output_port_net : std_logic_vector( 2-1 downto 0 );
  signal slice3_y_net : std_logic_vector( 1-1 downto 0 );
  signal slice1_y_net : std_logic_vector( 1-1 downto 0 );
  signal arm_op_net : std_logic_vector( 1-1 downto 0 );
  signal ri_output_port_net : std_logic_vector( 32-1 downto 0 );
  signal circ_op_net : std_logic_vector( 1-1 downto 0 );
begin
  arm_out <= arm_or_y_net;
  concatenate_y_net <= din;
  rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc2_sync_net <= we;
  edge_op_y_net_x0 <= trig;
  goto_12586536_we1 <= we_choice_y_net;
  goto_12586536_we4 <= logical6_y_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_01_ss_bram_addr <= convert_addr_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_01_ss_bram_data_in <= convert_din1_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_01_ss_bram_we <= convert_we_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_01_ss_ctrl_user_data_out_net <= rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_01_ss_ctrl_user_data_out;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_01_ss_status_user_data_in <= cast_gw_dout_net;
  clk_net <= clk_1;
  ce_net <= ce_1;
  add_gen : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_add_gen_x28 
  port map (
    din => data_choice_y_net,
    we => we_choice_y_net,
    go => register6_q_net,
    cont => never_op_net,
    init => edge_op_y_net_x1,
    clk_1 => clk_net,
    ce_1 => ce_net,
    add => slice2_y_net,
    dout => delay6_q_net,
    we_o => logical6_y_net,
    status => concat_y_net
  );
  basic_ctrl : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_basic_ctrl_x28 
  port map (
    din => cast_dout_net,
    we => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc2_sync_net,
    trig => edge_op_y_net_x0,
    ctrl => concatenate_y_net_x0,
    stopi => never_op_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    dout => data_choice_y_net,
    we_o => we_choice_y_net,
    go => register6_q_net,
    init => edge_op_y_net_x1
  );
  bram : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_bram_x28 
  port map (
    addr => add_del_q_net,
    data_in => dat_del_q_net,
    we => we_del_q_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_01_ss_bram_addr => convert_addr_dout_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_01_ss_bram_data_in => convert_din1_dout_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_01_ss_bram_we => convert_we_dout_net
  );
  ctrl : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_ctrl_x27 
  port map (
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_01_ss_ctrl_user_data_out => rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_01_ss_ctrl_user_data_out_net,
    in_reg => reint1_output_port_net
  );
  ctrl_combine : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_ctrl_combine_x26 
  port map (
    in1 => reinterpret4_output_port_net,
    in2 => circ_or_y_net,
    in3 => reinterpret2_output_port_net,
    in4 => arm_or_y_net,
    bus_out => concatenate_y_net_x0
  );
  ctrl_split : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_ctrl_split_x27 
  port map (
    bus_in => reint1_output_port_net,
    msb_out4 => reinterpret4_output_port_net,
    out3 => slice3_y_net,
    out2 => reinterpret2_output_port_net,
    lsb_out1 => slice1_y_net
  );
  status : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_status_x27 
  port map (
    out_reg => concat_y_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_01_ss_status_user_data_in => cast_gw_dout_net
  );
  add_del : entity xil_defaultlib.sysgen_delay_4e9264ffdf 
  port map (
    clr => '0',
    d => slice2_y_net,
    clk => clk_net,
    ce => ce_net,
    q => add_del_q_net
  );
  arm : entity xil_defaultlib.sysgen_constant_a7b8778750 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => arm_op_net
  );
  arm_or : entity xil_defaultlib.sysgen_logical_d7dc12cf31 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => slice1_y_net,
    d1 => arm_op_net,
    y => arm_or_y_net
  );
  cast : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 32,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 32,
    latency => 0,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => ri_output_port_net,
    clk => clk_net,
    ce => ce_net,
    dout => cast_dout_net
  );
  circ : entity xil_defaultlib.sysgen_constant_a7b8778750 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => circ_op_net
  );
  circ_or : entity xil_defaultlib.sysgen_logical_d7dc12cf31 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => slice3_y_net,
    d1 => circ_op_net,
    y => circ_or_y_net
  );
  dat_del : entity xil_defaultlib.sysgen_delay_5ec362a23c 
  port map (
    clr => '0',
    d => delay6_q_net,
    clk => clk_net,
    ce => ce_net,
    q => dat_del_q_net
  );
  never : entity xil_defaultlib.sysgen_constant_a7b8778750 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => never_op_net
  );
  ri : entity xil_defaultlib.sysgen_reinterpret_52bb84f12b 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => concatenate_y_net,
    output_port => ri_output_port_net
  );
  we_del : entity xil_defaultlib.sysgen_delay_e0740ee3f9 
  port map (
    clr => '0',
    d => logical6_y_net,
    clk => clk_net,
    ce => ce_net,
    q => we_del_q_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot2_01
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_01 is
  port (
    in_d0 : in std_logic_vector( 16-1 downto 0 );
    in_d1 : in std_logic_vector( 16-1 downto 0 );
    we : in std_logic_vector( 1-1 downto 0 );
    trig : in std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_01_ss_ctrl_user_data_out : in std_logic_vector( 32-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    arm_out : out std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_01_ss_bram_addr : out std_logic_vector( 10-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_01_ss_bram_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_01_ss_bram_we : out std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_01_ss_status_user_data_in : out std_logic_vector( 32-1 downto 0 );
    goto_12586536_we1 : out std_logic_vector( 1-1 downto 0 );
    goto_12586536_we4 : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_01;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_01 is 
  signal arm_or_y_net : std_logic_vector( 1-1 downto 0 );
  signal slice22_y_net : std_logic_vector( 16-1 downto 0 );
  signal slice21_y_net : std_logic_vector( 16-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc2_sync_net : std_logic_vector( 1-1 downto 0 );
  signal edge_op_y_net : std_logic_vector( 1-1 downto 0 );
  signal convert_addr_dout_net : std_logic_vector( 10-1 downto 0 );
  signal convert_din1_dout_net : std_logic_vector( 32-1 downto 0 );
  signal convert_we_dout_net : std_logic_vector( 1-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_01_ss_ctrl_user_data_out_net : std_logic_vector( 32-1 downto 0 );
  signal cast_gw_dout_net : std_logic_vector( 32-1 downto 0 );
  signal we_choice_y_net : std_logic_vector( 1-1 downto 0 );
  signal logical6_y_net : std_logic_vector( 1-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal concatenate_y_net : std_logic_vector( 32-1 downto 0 );
  signal assert_d0_dout_net : std_logic_vector( 16-1 downto 0 );
  signal assert_d1_dout_net : std_logic_vector( 16-1 downto 0 );
begin
  arm_out <= arm_or_y_net;
  slice22_y_net <= in_d0;
  slice21_y_net <= in_d1;
  rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc2_sync_net <= we;
  edge_op_y_net <= trig;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_01_ss_bram_addr <= convert_addr_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_01_ss_bram_data_in <= convert_din1_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_01_ss_bram_we <= convert_we_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_01_ss_ctrl_user_data_out_net <= rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_01_ss_ctrl_user_data_out;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_01_ss_status_user_data_in <= cast_gw_dout_net;
  goto_12586536_we1 <= we_choice_y_net;
  goto_12586536_we4 <= logical6_y_net;
  clk_net <= clk_1;
  ce_net <= ce_1;
  buscreate : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_buscreate_x28 
  port map (
    in1 => assert_d0_dout_net,
    in2 => assert_d1_dout_net,
    bus_out => concatenate_y_net
  );
  ss : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_ss_x28 
  port map (
    din => concatenate_y_net,
    we => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc2_sync_net,
    trig => edge_op_y_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_01_ss_ctrl_user_data_out => rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_01_ss_ctrl_user_data_out_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    arm_out => arm_or_y_net,
    goto_12586536_we1 => we_choice_y_net,
    goto_12586536_we4 => logical6_y_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_01_ss_bram_addr => convert_addr_dout_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_01_ss_bram_data_in => convert_din1_dout_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_01_ss_bram_we => convert_we_dout_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_01_ss_status_user_data_in => cast_gw_dout_net
  );
  assert_d0 : entity xil_defaultlib.xlpassthrough 
  generic map (
    din_width => 16,
    dout_width => 16
  )
  port map (
    din => slice22_y_net,
    dout => assert_d0_dout_net
  );
  assert_d1 : entity xil_defaultlib.xlpassthrough 
  generic map (
    din_width => 16,
    dout_width => 16
  )
  port map (
    din => slice21_y_net,
    dout => assert_d1_dout_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot2_23/buscreate
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_buscreate_x27 is
  port (
    in1 : in std_logic_vector( 16-1 downto 0 );
    in2 : in std_logic_vector( 16-1 downto 0 );
    bus_out : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_buscreate_x27;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_buscreate_x27 is 
  signal concatenate_y_net : std_logic_vector( 32-1 downto 0 );
  signal assert_d0_dout_net : std_logic_vector( 16-1 downto 0 );
  signal assert_d1_dout_net : std_logic_vector( 16-1 downto 0 );
  signal reinterpret1_output_port_net : std_logic_vector( 16-1 downto 0 );
  signal reinterpret2_output_port_net : std_logic_vector( 16-1 downto 0 );
begin
  bus_out <= concatenate_y_net;
  assert_d0_dout_net <= in1;
  assert_d1_dout_net <= in2;
  concatenate : entity xil_defaultlib.sysgen_concat_37649e01d1 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    in0 => reinterpret1_output_port_net,
    in1 => reinterpret2_output_port_net,
    y => concatenate_y_net
  );
  reinterpret1 : entity xil_defaultlib.sysgen_reinterpret_03c8cdbbc1 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => assert_d0_dout_net,
    output_port => reinterpret1_output_port_net
  );
  reinterpret2 : entity xil_defaultlib.sysgen_reinterpret_03c8cdbbc1 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => assert_d1_dout_net,
    output_port => reinterpret2_output_port_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot2_23/ss/add_gen/edge_detect
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x56 is
  port (
    in_x0 : in std_logic_vector( 1-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    out_x0 : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x56;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x56 is 
  signal edge_op_y_net : std_logic_vector( 1-1 downto 0 );
  signal slice3_y_net : std_logic_vector( 1-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal delay_q_net : std_logic_vector( 1-1 downto 0 );
  signal inverter_op_net : std_logic_vector( 1-1 downto 0 );
begin
  out_x0 <= edge_op_y_net;
  slice3_y_net <= in_x0;
  clk_net <= clk_1;
  ce_net <= ce_1;
  delay : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 1
  )
  port map (
    en => '1',
    rst => '1',
    d => slice3_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay_q_net
  );
  inverter : entity xil_defaultlib.sysgen_inverter_6233897471 
  port map (
    clr => '0',
    ip => slice3_y_net,
    clk => clk_net,
    ce => ce_net,
    op => inverter_op_net
  );
  edge_op : entity xil_defaultlib.sysgen_logical_9cc14fefba 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => inverter_op_net,
    d1 => delay_q_net,
    y => edge_op_y_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot2_23/ss/add_gen
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_add_gen_x27 is
  port (
    din : in std_logic_vector( 32-1 downto 0 );
    we : in std_logic_vector( 1-1 downto 0 );
    go : in std_logic_vector( 1-1 downto 0 );
    cont : in std_logic_vector( 1-1 downto 0 );
    init : in std_logic_vector( 1-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    add : out std_logic_vector( 10-1 downto 0 );
    dout : out std_logic_vector( 32-1 downto 0 );
    we_o : out std_logic_vector( 1-1 downto 0 );
    status : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_add_gen_x27;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_add_gen_x27 is 
  signal slice2_y_net : std_logic_vector( 10-1 downto 0 );
  signal delay6_q_net : std_logic_vector( 32-1 downto 0 );
  signal logical6_y_net : std_logic_vector( 1-1 downto 0 );
  signal concat_y_net : std_logic_vector( 32-1 downto 0 );
  signal data_choice_y_net : std_logic_vector( 32-1 downto 0 );
  signal we_choice_y_net : std_logic_vector( 1-1 downto 0 );
  signal register6_q_net : std_logic_vector( 1-1 downto 0 );
  signal never_op_net : std_logic_vector( 1-1 downto 0 );
  signal edge_op_y_net : std_logic_vector( 1-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal edge_op_y_net_x0 : std_logic_vector( 1-1 downto 0 );
  signal slice3_y_net : std_logic_vector( 1-1 downto 0 );
  signal shift_op_net : std_logic_vector( 19-1 downto 0 );
  signal inverter_op_net : std_logic_vector( 1-1 downto 0 );
  signal delay1_q_net : std_logic_vector( 12-1 downto 0 );
  signal convert_dout_net : std_logic_vector( 19-1 downto 0 );
  signal register5_q_net : std_logic_vector( 1-1 downto 0 );
  signal delay_q_net : std_logic_vector( 1-1 downto 0 );
  signal delay4_q_net : std_logic_vector( 1-1 downto 0 );
  signal slice1_y_net : std_logic_vector( 12-1 downto 0 );
  signal delay3_q_net : std_logic_vector( 1-1 downto 0 );
  signal inverter1_op_net : std_logic_vector( 1-1 downto 0 );
  signal logical1_y_net : std_logic_vector( 1-1 downto 0 );
  signal logical4_y_net : std_logic_vector( 1-1 downto 0 );
  signal add_gen_op_net : std_logic_vector( 13-1 downto 0 );
begin
  add <= slice2_y_net;
  dout <= delay6_q_net;
  we_o <= logical6_y_net;
  status <= concat_y_net;
  data_choice_y_net <= din;
  we_choice_y_net <= we;
  register6_q_net <= go;
  never_op_net <= cont;
  edge_op_y_net <= init;
  clk_net <= clk_1;
  ce_net <= ce_1;
  edge_detect : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x56 
  port map (
    in_x0 => slice3_y_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    out_x0 => edge_op_y_net_x0
  );
  concat : entity xil_defaultlib.sysgen_concat_fc8edfac0e 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    in0 => shift_op_net,
    in1 => inverter_op_net,
    in2 => delay1_q_net,
    y => concat_y_net
  );
  convert : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 1,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 19,
    latency => 0,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => register5_q_net,
    clk => clk_net,
    ce => ce_net,
    dout => convert_dout_net
  );
  delay : entity xil_defaultlib.sysgen_delay_e0740ee3f9 
  port map (
    clr => '0',
    d => delay4_q_net,
    clk => clk_net,
    ce => ce_net,
    q => delay_q_net
  );
  delay1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 12
  )
  port map (
    en => '1',
    rst => '1',
    d => slice1_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay1_q_net
  );
  delay3 : entity xil_defaultlib.sysgen_delay_e0740ee3f9 
  port map (
    clr => '0',
    d => never_op_net,
    clk => clk_net,
    ce => ce_net,
    q => delay3_q_net
  );
  delay4 : entity xil_defaultlib.sysgen_delay_e0740ee3f9 
  port map (
    clr => '0',
    d => edge_op_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay4_q_net
  );
  delay6 : entity xil_defaultlib.sysgen_delay_5ec362a23c 
  port map (
    clr => '0',
    d => data_choice_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay6_q_net
  );
  inverter : entity xil_defaultlib.sysgen_inverter_918b6bc6d0 
  port map (
    clr => '0',
    ip => register5_q_net,
    clk => clk_net,
    ce => ce_net,
    op => inverter_op_net
  );
  inverter1 : entity xil_defaultlib.sysgen_inverter_6233897471 
  port map (
    clr => '0',
    ip => edge_op_y_net_x0,
    clk => clk_net,
    ce => ce_net,
    op => inverter1_op_net
  );
  logical1 : entity xil_defaultlib.sysgen_logical_2486129911 
  port map (
    clr => '0',
    d0 => we_choice_y_net,
    d1 => register6_q_net,
    clk => clk_net,
    ce => ce_net,
    y => logical1_y_net
  );
  logical4 : entity xil_defaultlib.sysgen_logical_d7dc12cf31 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => delay3_q_net,
    d1 => inverter1_op_net,
    y => logical4_y_net
  );
  logical6 : entity xil_defaultlib.sysgen_logical_c05fefc67b 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => register5_q_net,
    d1 => logical4_y_net,
    d2 => logical1_y_net,
    y => logical6_y_net
  );
  register5 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlregister 
  generic map (
    d_width => 1,
    init_value => b"1"
  )
  port map (
    d => delay3_q_net,
    rst => delay_q_net,
    en => edge_op_y_net_x0,
    clk => clk_net,
    ce => ce_net,
    q => register5_q_net
  );
  shift : entity xil_defaultlib.sysgen_shift_5af4fe0a99 
  port map (
    clr => '0',
    ip => convert_dout_net,
    clk => clk_net,
    ce => ce_net,
    op => shift_op_net
  );
  add_gen : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlcounter_free 
  generic map (
    core_name0 => "rfdc_multi_eight_adcs_2048gsps_mts_c_counter_binary_v12_0_i1",
    op_arith => xlUnsigned,
    op_width => 13
  )
  port map (
    clr => '0',
    rst => delay4_q_net,
    en => logical6_y_net,
    clk => clk_net,
    ce => ce_net,
    op => add_gen_op_net
  );
  slice1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 0,
    new_msb => 11,
    x_width => 13,
    y_width => 12
  )
  port map (
    x => add_gen_op_net,
    y => slice1_y_net
  );
  slice2 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 2,
    new_msb => 11,
    x_width => 13,
    y_width => 10
  )
  port map (
    x => add_gen_op_net,
    y => slice2_y_net
  );
  slice3 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 12,
    new_msb => 12,
    x_width => 13,
    y_width => 1
  )
  port map (
    x => add_gen_op_net,
    y => slice3_y_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot2_23/ss/basic_ctrl/dram_munge
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_dram_munge_x27 is
  port (
    din : in std_logic_vector( 32-1 downto 0 );
    we : in std_logic_vector( 1-1 downto 0 );
    init : in std_logic_vector( 1-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    dout : out std_logic_vector( 32-1 downto 0 );
    we_o : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_dram_munge_x27;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_dram_munge_x27 is 
  signal data_choice_y_net : std_logic_vector( 32-1 downto 0 );
  signal we_choice_y_net : std_logic_vector( 1-1 downto 0 );
  signal cast_dout_net : std_logic_vector( 32-1 downto 0 );
  signal mux1_y_net_x0 : std_logic_vector( 1-1 downto 0 );
  signal edge_op_y_net : std_logic_vector( 1-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal concat_y_net : std_logic_vector( 80-1 downto 0 );
  signal constant_op_net : std_logic_vector( 8-1 downto 0 );
  signal register_q_net : std_logic_vector( 32-1 downto 0 );
  signal register1_q_net : std_logic_vector( 32-1 downto 0 );
  signal concat1_y_net : std_logic_vector( 80-1 downto 0 );
  signal register2_q_net : std_logic_vector( 32-1 downto 0 );
  signal register3_q_net : std_logic_vector( 32-1 downto 0 );
  signal delay_q_net : std_logic_vector( 1-1 downto 0 );
  signal logical_y_net : std_logic_vector( 1-1 downto 0 );
  signal delay1_q_net : std_logic_vector( 1-1 downto 0 );
  signal logical1_y_net : std_logic_vector( 1-1 downto 0 );
  signal relational3_op_net : std_logic_vector( 1-1 downto 0 );
  signal mux1_y_net : std_logic_vector( 80-1 downto 0 );
  signal dout_count_op_net : std_logic_vector( 1-1 downto 0 );
  signal relational_op_net : std_logic_vector( 1-1 downto 0 );
  signal relational1_op_net : std_logic_vector( 1-1 downto 0 );
  signal relational2_op_net : std_logic_vector( 1-1 downto 0 );
  signal input_count_op_net : std_logic_vector( 2-1 downto 0 );
  signal con0_op_net : std_logic_vector( 2-1 downto 0 );
  signal con1_op_net : std_logic_vector( 2-1 downto 0 );
  signal con2_op_net : std_logic_vector( 2-1 downto 0 );
  signal con3_op_net : std_logic_vector( 2-1 downto 0 );
  signal dram_op_net : std_logic_vector( 1-1 downto 0 );
begin
  dout <= data_choice_y_net;
  we_o <= we_choice_y_net;
  cast_dout_net <= din;
  mux1_y_net_x0 <= we;
  edge_op_y_net <= init;
  clk_net <= clk_1;
  ce_net <= ce_1;
  concat : entity xil_defaultlib.sysgen_concat_e7487baac7 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    in0 => constant_op_net,
    in1 => register_q_net,
    in2 => constant_op_net,
    in3 => register1_q_net,
    y => concat_y_net
  );
  concat1 : entity xil_defaultlib.sysgen_concat_e7487baac7 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    in0 => constant_op_net,
    in1 => register2_q_net,
    in2 => constant_op_net,
    in3 => register3_q_net,
    y => concat1_y_net
  );
  constant_x0 : entity xil_defaultlib.sysgen_constant_869e31f04d 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => constant_op_net
  );
  delay : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 1
  )
  port map (
    en => '1',
    rst => '1',
    d => logical_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay_q_net
  );
  delay1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 1
  )
  port map (
    en => '1',
    rst => '1',
    d => logical1_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay1_q_net
  );
  logical : entity xil_defaultlib.sysgen_logical_2486129911 
  port map (
    clr => '0',
    d0 => relational3_op_net,
    d1 => mux1_y_net_x0,
    clk => clk_net,
    ce => ce_net,
    y => logical_y_net
  );
  logical1 : entity xil_defaultlib.sysgen_logical_d7dc12cf31 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => logical_y_net,
    d1 => delay_q_net,
    y => logical1_y_net
  );
  mux1 : entity xil_defaultlib.sysgen_mux_71ee2b1026 
  port map (
    clr => '0',
    sel => dout_count_op_net,
    d0 => concat_y_net,
    d1 => concat1_y_net,
    clk => clk_net,
    ce => ce_net,
    y => mux1_y_net
  );
  register_x0 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlregister 
  generic map (
    d_width => 32,
    init_value => b"00000000000000000000000000000000"
  )
  port map (
    rst => "0",
    d => cast_dout_net,
    en => relational_op_net,
    clk => clk_net,
    ce => ce_net,
    q => register_q_net
  );
  register1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlregister 
  generic map (
    d_width => 32,
    init_value => b"00000000000000000000000000000000"
  )
  port map (
    rst => "0",
    d => cast_dout_net,
    en => relational1_op_net,
    clk => clk_net,
    ce => ce_net,
    q => register1_q_net
  );
  register2 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlregister 
  generic map (
    d_width => 32,
    init_value => b"00000000000000000000000000000000"
  )
  port map (
    rst => "0",
    d => cast_dout_net,
    en => relational2_op_net,
    clk => clk_net,
    ce => ce_net,
    q => register2_q_net
  );
  register3 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlregister 
  generic map (
    d_width => 32,
    init_value => b"00000000000000000000000000000000"
  )
  port map (
    rst => "0",
    d => cast_dout_net,
    en => relational3_op_net,
    clk => clk_net,
    ce => ce_net,
    q => register3_q_net
  );
  relational : entity xil_defaultlib.sysgen_relational_e5d6b5eaca 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    a => input_count_op_net,
    b => con0_op_net,
    op => relational_op_net
  );
  relational1 : entity xil_defaultlib.sysgen_relational_e5d6b5eaca 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    a => input_count_op_net,
    b => con1_op_net,
    op => relational1_op_net
  );
  relational2 : entity xil_defaultlib.sysgen_relational_e5d6b5eaca 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    a => input_count_op_net,
    b => con2_op_net,
    op => relational2_op_net
  );
  relational3 : entity xil_defaultlib.sysgen_relational_e5d6b5eaca 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    a => input_count_op_net,
    b => con3_op_net,
    op => relational3_op_net
  );
  con0 : entity xil_defaultlib.sysgen_constant_b58c3a1535 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => con0_op_net
  );
  con1 : entity xil_defaultlib.sysgen_constant_d3f27a6354 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => con1_op_net
  );
  con2 : entity xil_defaultlib.sysgen_constant_2fa4689d4e 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => con2_op_net
  );
  con3 : entity xil_defaultlib.sysgen_constant_31bab66ba6 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => con3_op_net
  );
  data_choice : entity xil_defaultlib.sysgen_mux_d624c1af44 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    sel => dram_op_net,
    d0 => cast_dout_net,
    d1 => mux1_y_net,
    y => data_choice_y_net
  );
  dout_count : entity xil_defaultlib.sysgen_counter_a9c1c293c2 
  port map (
    clr => '0',
    rst => edge_op_y_net,
    en => logical1_y_net,
    clk => clk_net,
    ce => ce_net,
    op => dout_count_op_net
  );
  dram : entity xil_defaultlib.sysgen_constant_a7b8778750 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => dram_op_net
  );
  input_count : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlcounter_free 
  generic map (
    core_name0 => "rfdc_multi_eight_adcs_2048gsps_mts_c_counter_binary_v12_0_i2",
    op_arith => xlUnsigned,
    op_width => 2
  )
  port map (
    clr => '0',
    rst => edge_op_y_net,
    en => mux1_y_net_x0,
    clk => clk_net,
    ce => ce_net,
    op => input_count_op_net
  );
  we_choice : entity xil_defaultlib.sysgen_mux_4874190f11 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    sel => dram_op_net,
    d0 => mux1_y_net_x0,
    d1 => delay1_q_net,
    y => we_choice_y_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot2_23/ss/basic_ctrl/edge_detect
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x57 is
  port (
    in_x0 : in std_logic_vector( 1-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    out_x0 : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x57;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x57 is 
  signal edge_op_y_net : std_logic_vector( 1-1 downto 0 );
  signal delay1_q_net : std_logic_vector( 1-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal delay_q_net : std_logic_vector( 1-1 downto 0 );
  signal inverter_op_net : std_logic_vector( 1-1 downto 0 );
begin
  out_x0 <= edge_op_y_net;
  delay1_q_net <= in_x0;
  clk_net <= clk_1;
  ce_net <= ce_1;
  delay : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 1
  )
  port map (
    en => '1',
    rst => '1',
    d => delay1_q_net,
    clk => clk_net,
    ce => ce_net,
    q => delay_q_net
  );
  inverter : entity xil_defaultlib.sysgen_inverter_6233897471 
  port map (
    clr => '0',
    ip => delay1_q_net,
    clk => clk_net,
    ce => ce_net,
    op => inverter_op_net
  );
  edge_op : entity xil_defaultlib.sysgen_logical_0f1aa1e2d7 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => inverter_op_net,
    d1 => delay_q_net,
    y => edge_op_y_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot2_23/ss/basic_ctrl
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_basic_ctrl_x27 is
  port (
    din : in std_logic_vector( 32-1 downto 0 );
    we : in std_logic_vector( 1-1 downto 0 );
    trig : in std_logic_vector( 1-1 downto 0 );
    ctrl : in std_logic_vector( 32-1 downto 0 );
    stopi : in std_logic_vector( 1-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    dout : out std_logic_vector( 32-1 downto 0 );
    we_o : out std_logic_vector( 1-1 downto 0 );
    go : out std_logic_vector( 1-1 downto 0 );
    init : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_basic_ctrl_x27;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_basic_ctrl_x27 is 
  signal data_choice_y_net : std_logic_vector( 32-1 downto 0 );
  signal we_choice_y_net : std_logic_vector( 1-1 downto 0 );
  signal register6_q_net : std_logic_vector( 1-1 downto 0 );
  signal edge_op_y_net_x0 : std_logic_vector( 1-1 downto 0 );
  signal cast_dout_net : std_logic_vector( 32-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc2_sync_net : std_logic_vector( 1-1 downto 0 );
  signal edge_op_y_net : std_logic_vector( 1-1 downto 0 );
  signal concatenate_y_net : std_logic_vector( 32-1 downto 0 );
  signal never_op_net : std_logic_vector( 1-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal mux1_y_net : std_logic_vector( 1-1 downto 0 );
  signal delay1_q_net : std_logic_vector( 1-1 downto 0 );
  signal constant_op_net : std_logic_vector( 1-1 downto 0 );
  signal constant1_op_net : std_logic_vector( 1-1 downto 0 );
  signal constant2_op_net : std_logic_vector( 1-1 downto 0 );
  signal enable_y_net : std_logic_vector( 1-1 downto 0 );
  signal delay2_q_net : std_logic_vector( 1-1 downto 0 );
  signal trig_src_y_net : std_logic_vector( 1-1 downto 0 );
  signal delay3_q_net : std_logic_vector( 1-1 downto 0 );
  signal valid_src_y_net : std_logic_vector( 1-1 downto 0 );
  signal inverter_op_net : std_logic_vector( 1-1 downto 0 );
  signal logical_y_net : std_logic_vector( 1-1 downto 0 );
  signal mux2_y_net : std_logic_vector( 1-1 downto 0 );
  signal register1_q_net : std_logic_vector( 1-1 downto 0 );
begin
  dout <= data_choice_y_net;
  we_o <= we_choice_y_net;
  go <= register6_q_net;
  init <= edge_op_y_net_x0;
  cast_dout_net <= din;
  rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc2_sync_net <= we;
  edge_op_y_net <= trig;
  concatenate_y_net <= ctrl;
  never_op_net <= stopi;
  clk_net <= clk_1;
  ce_net <= ce_1;
  dram_munge : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_dram_munge_x27 
  port map (
    din => cast_dout_net,
    we => mux1_y_net,
    init => edge_op_y_net_x0,
    clk_1 => clk_net,
    ce_1 => ce_net,
    dout => data_choice_y_net,
    we_o => we_choice_y_net
  );
  edge_detect : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x57 
  port map (
    in_x0 => delay1_q_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    out_x0 => edge_op_y_net_x0
  );
  constant_x0 : entity xil_defaultlib.sysgen_constant_c95a0b5efb 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => constant_op_net
  );
  constant1 : entity xil_defaultlib.sysgen_constant_c95a0b5efb 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => constant1_op_net
  );
  constant2 : entity xil_defaultlib.sysgen_constant_c95a0b5efb 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => constant2_op_net
  );
  delay1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 1
  )
  port map (
    en => '1',
    rst => '1',
    d => enable_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay1_q_net
  );
  delay2 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 1
  )
  port map (
    en => '1',
    rst => '1',
    d => trig_src_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay2_q_net
  );
  delay3 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 1
  )
  port map (
    en => '1',
    rst => '1',
    d => valid_src_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay3_q_net
  );
  inverter : entity xil_defaultlib.sysgen_inverter_6233897471 
  port map (
    clr => '0',
    ip => edge_op_y_net_x0,
    clk => clk_net,
    ce => ce_net,
    op => inverter_op_net
  );
  logical : entity xil_defaultlib.sysgen_logical_d26e5cda59 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => mux2_y_net,
    d1 => inverter_op_net,
    y => logical_y_net
  );
  mux1 : entity xil_defaultlib.sysgen_mux_4874190f11 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    sel => delay3_q_net,
    d0 => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc2_sync_net,
    d1 => constant2_op_net,
    y => mux1_y_net
  );
  mux2 : entity xil_defaultlib.sysgen_mux_4874190f11 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    sel => delay2_q_net,
    d0 => edge_op_y_net,
    d1 => constant1_op_net,
    y => mux2_y_net
  );
  register1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlregister 
  generic map (
    d_width => 1,
    init_value => b"0"
  )
  port map (
    d => constant_op_net,
    rst => logical_y_net,
    en => edge_op_y_net_x0,
    clk => clk_net,
    ce => ce_net,
    q => register1_q_net
  );
  register6 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlregister 
  generic map (
    d_width => 1,
    init_value => b"0"
  )
  port map (
    d => mux2_y_net,
    rst => edge_op_y_net_x0,
    en => register1_q_net,
    clk => clk_net,
    ce => ce_net,
    q => register6_q_net
  );
  enable : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 0,
    new_msb => 0,
    x_width => 32,
    y_width => 1
  )
  port map (
    x => concatenate_y_net,
    y => enable_y_net
  );
  trig_src : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 1,
    new_msb => 1,
    x_width => 32,
    y_width => 1
  )
  port map (
    x => concatenate_y_net,
    y => trig_src_y_net
  );
  valid_src : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 2,
    new_msb => 2,
    x_width => 32,
    y_width => 1
  )
  port map (
    x => concatenate_y_net,
    y => valid_src_y_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot2_23/ss/bram/calc_add
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_calc_add_x27 is
  port (
    in_x0 : in std_logic_vector( 10-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    out_x0 : out std_logic_vector( 10-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_calc_add_x27;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_calc_add_x27 is 
  signal mux_y_net : std_logic_vector( 10-1 downto 0 );
  signal add_del_q_net : std_logic_vector( 10-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal add_sub_s_net : std_logic_vector( 1-1 downto 0 );
  signal const_op_net : std_logic_vector( 1-1 downto 0 );
  signal lsw_y_net : std_logic_vector( 1-1 downto 0 );
  signal concat_y_net : std_logic_vector( 10-1 downto 0 );
  signal msw_y_net : std_logic_vector( 9-1 downto 0 );
  signal convert_addr_dout_net : std_logic_vector( 10-1 downto 0 );
  signal manipulate_op_net : std_logic_vector( 1-1 downto 0 );
begin
  out_x0 <= mux_y_net;
  add_del_q_net <= in_x0;
  clk_net <= clk_1;
  ce_net <= ce_1;
  add_sub : entity xil_defaultlib.sysgen_addsub_fd3b6c715c 
  port map (
    clr => '0',
    a => const_op_net,
    b => lsw_y_net,
    clk => clk_net,
    ce => ce_net,
    s => add_sub_s_net
  );
  concat : entity xil_defaultlib.sysgen_concat_f4b90dfa16 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    in0 => msw_y_net,
    in1 => add_sub_s_net,
    y => concat_y_net
  );
  const : entity xil_defaultlib.sysgen_constant_a7b8778750 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => const_op_net
  );
  convert_addr : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 10,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 10,
    latency => 0,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => add_del_q_net,
    clk => clk_net,
    ce => ce_net,
    dout => convert_addr_dout_net
  );
  lsw : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 0,
    new_msb => 0,
    x_width => 10,
    y_width => 1
  )
  port map (
    x => convert_addr_dout_net,
    y => lsw_y_net
  );
  manipulate : entity xil_defaultlib.sysgen_constant_a7b8778750 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => manipulate_op_net
  );
  msw : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 1,
    new_msb => 9,
    x_width => 10,
    y_width => 9
  )
  port map (
    x => convert_addr_dout_net,
    y => msw_y_net
  );
  mux : entity xil_defaultlib.sysgen_mux_4417594854 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    sel => manipulate_op_net,
    d0 => convert_addr_dout_net,
    d1 => concat_y_net,
    y => mux_y_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot2_23/ss/bram/munge_in
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_munge_in_x27 is
  port (
    din : in std_logic_vector( 32-1 downto 0 );
    dout : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_munge_in_x27;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_munge_in_x27 is 
  signal reinterpret_out_output_port_net : std_logic_vector( 32-1 downto 0 );
  signal dat_del_q_net : std_logic_vector( 32-1 downto 0 );
begin
  dout <= reinterpret_out_output_port_net;
  dat_del_q_net <= din;
  reinterpret_out : entity xil_defaultlib.sysgen_reinterpret_52bb84f12b 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => dat_del_q_net,
    output_port => reinterpret_out_output_port_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot2_23/ss/bram
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_bram_x27 is
  port (
    addr : in std_logic_vector( 10-1 downto 0 );
    data_in : in std_logic_vector( 32-1 downto 0 );
    we : in std_logic_vector( 1-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_23_ss_bram_addr : out std_logic_vector( 10-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_23_ss_bram_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_23_ss_bram_we : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_bram_x27;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_bram_x27 is 
  signal add_del_q_net : std_logic_vector( 10-1 downto 0 );
  signal dat_del_q_net : std_logic_vector( 32-1 downto 0 );
  signal we_del_q_net : std_logic_vector( 1-1 downto 0 );
  signal convert_addr_dout_net : std_logic_vector( 10-1 downto 0 );
  signal convert_din1_dout_net : std_logic_vector( 32-1 downto 0 );
  signal convert_we_dout_net : std_logic_vector( 1-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal mux_y_net : std_logic_vector( 10-1 downto 0 );
  signal reinterpret_out_output_port_net : std_logic_vector( 32-1 downto 0 );
begin
  add_del_q_net <= addr;
  dat_del_q_net <= data_in;
  we_del_q_net <= we;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_23_ss_bram_addr <= convert_addr_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_23_ss_bram_data_in <= convert_din1_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_23_ss_bram_we <= convert_we_dout_net;
  clk_net <= clk_1;
  ce_net <= ce_1;
  calc_add : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_calc_add_x27 
  port map (
    in_x0 => add_del_q_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    out_x0 => mux_y_net
  );
  munge_in : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_munge_in_x27 
  port map (
    din => dat_del_q_net,
    dout => reinterpret_out_output_port_net
  );
  convert_addr : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 10,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 10,
    latency => 0,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => mux_y_net,
    clk => clk_net,
    ce => ce_net,
    dout => convert_addr_dout_net
  );
  convert_din1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 32,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 32,
    latency => 0,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => reinterpret_out_output_port_net,
    clk => clk_net,
    ce => ce_net,
    dout => convert_din1_dout_net
  );
  convert_we : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 1,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 1,
    latency => 0,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => we_del_q_net,
    clk => clk_net,
    ce => ce_net,
    dout => convert_we_dout_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot2_23/ss/ctrl
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_ctrl_x29 is
  port (
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_23_ss_ctrl_user_data_out : in std_logic_vector( 32-1 downto 0 );
    in_reg : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_ctrl_x29;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_ctrl_x29 is 
  signal reint1_output_port_net : std_logic_vector( 32-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_23_ss_ctrl_user_data_out_net : std_logic_vector( 32-1 downto 0 );
  signal io_delay_q_net : std_logic_vector( 32-1 downto 0 );
  signal slice_reg_y_net : std_logic_vector( 32-1 downto 0 );
begin
  in_reg <= reint1_output_port_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_23_ss_ctrl_user_data_out_net <= rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_23_ss_ctrl_user_data_out;
  io_delay : entity xil_defaultlib.sysgen_delay_34e314c510 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d => rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_23_ss_ctrl_user_data_out_net,
    q => io_delay_q_net
  );
  slice_reg : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 0,
    new_msb => 31,
    x_width => 32,
    y_width => 32
  )
  port map (
    x => io_delay_q_net,
    y => slice_reg_y_net
  );
  reint1 : entity xil_defaultlib.sysgen_reinterpret_52bb84f12b 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => slice_reg_y_net,
    output_port => reint1_output_port_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot2_23/ss/ctrl_combine
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_ctrl_combine_x29 is
  port (
    in1 : in std_logic_vector( 28-1 downto 0 );
    in2 : in std_logic_vector( 1-1 downto 0 );
    in3 : in std_logic_vector( 2-1 downto 0 );
    in4 : in std_logic_vector( 1-1 downto 0 );
    bus_out : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_ctrl_combine_x29;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_ctrl_combine_x29 is 
  signal concatenate_y_net : std_logic_vector( 32-1 downto 0 );
  signal reinterpret4_output_port_net_x0 : std_logic_vector( 28-1 downto 0 );
  signal circ_or_y_net : std_logic_vector( 1-1 downto 0 );
  signal reinterpret2_output_port_net : std_logic_vector( 2-1 downto 0 );
  signal arm_or_y_net : std_logic_vector( 1-1 downto 0 );
  signal reinterpret1_output_port_net : std_logic_vector( 28-1 downto 0 );
  signal reinterpret2_output_port_net_x0 : std_logic_vector( 1-1 downto 0 );
  signal reinterpret3_output_port_net : std_logic_vector( 2-1 downto 0 );
  signal reinterpret4_output_port_net : std_logic_vector( 1-1 downto 0 );
begin
  bus_out <= concatenate_y_net;
  reinterpret4_output_port_net_x0 <= in1;
  circ_or_y_net <= in2;
  reinterpret2_output_port_net <= in3;
  arm_or_y_net <= in4;
  concatenate : entity xil_defaultlib.sysgen_concat_8611e618a5 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    in0 => reinterpret1_output_port_net,
    in1 => reinterpret2_output_port_net_x0,
    in2 => reinterpret3_output_port_net,
    in3 => reinterpret4_output_port_net,
    y => concatenate_y_net
  );
  reinterpret1 : entity xil_defaultlib.sysgen_reinterpret_f7e0b72e82 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => reinterpret4_output_port_net_x0,
    output_port => reinterpret1_output_port_net
  );
  reinterpret2 : entity xil_defaultlib.sysgen_reinterpret_317b92931a 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => circ_or_y_net,
    output_port => reinterpret2_output_port_net_x0
  );
  reinterpret3 : entity xil_defaultlib.sysgen_reinterpret_5dc9f217bd 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => reinterpret2_output_port_net,
    output_port => reinterpret3_output_port_net
  );
  reinterpret4 : entity xil_defaultlib.sysgen_reinterpret_317b92931a 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => arm_or_y_net,
    output_port => reinterpret4_output_port_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot2_23/ss/ctrl_split
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_ctrl_split_x30 is
  port (
    bus_in : in std_logic_vector( 32-1 downto 0 );
    msb_out4 : out std_logic_vector( 28-1 downto 0 );
    out3 : out std_logic_vector( 1-1 downto 0 );
    out2 : out std_logic_vector( 2-1 downto 0 );
    lsb_out1 : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_ctrl_split_x30;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_ctrl_split_x30 is 
  signal reinterpret4_output_port_net : std_logic_vector( 28-1 downto 0 );
  signal slice3_y_net : std_logic_vector( 1-1 downto 0 );
  signal reinterpret2_output_port_net : std_logic_vector( 2-1 downto 0 );
  signal slice1_y_net : std_logic_vector( 1-1 downto 0 );
  signal reint1_output_port_net : std_logic_vector( 32-1 downto 0 );
  signal slice2_y_net : std_logic_vector( 2-1 downto 0 );
  signal slice4_y_net : std_logic_vector( 28-1 downto 0 );
begin
  msb_out4 <= reinterpret4_output_port_net;
  out3 <= slice3_y_net;
  out2 <= reinterpret2_output_port_net;
  lsb_out1 <= slice1_y_net;
  reint1_output_port_net <= bus_in;
  reinterpret2 : entity xil_defaultlib.sysgen_reinterpret_5dc9f217bd 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => slice2_y_net,
    output_port => reinterpret2_output_port_net
  );
  reinterpret4 : entity xil_defaultlib.sysgen_reinterpret_f7e0b72e82 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => slice4_y_net,
    output_port => reinterpret4_output_port_net
  );
  slice1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 0,
    new_msb => 0,
    x_width => 32,
    y_width => 1
  )
  port map (
    x => reint1_output_port_net,
    y => slice1_y_net
  );
  slice2 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 1,
    new_msb => 2,
    x_width => 32,
    y_width => 2
  )
  port map (
    x => reint1_output_port_net,
    y => slice2_y_net
  );
  slice3 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 3,
    new_msb => 3,
    x_width => 32,
    y_width => 1
  )
  port map (
    x => reint1_output_port_net,
    y => slice3_y_net
  );
  slice4 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 4,
    new_msb => 31,
    x_width => 32,
    y_width => 28
  )
  port map (
    x => reint1_output_port_net,
    y => slice4_y_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot2_23/ss/status
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_status_x30 is
  port (
    out_reg : in std_logic_vector( 32-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_23_ss_status_user_data_in : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_status_x30;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_status_x30 is 
  signal concat_y_net : std_logic_vector( 32-1 downto 0 );
  signal cast_gw_dout_net : std_logic_vector( 32-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal io_delay_q_net : std_logic_vector( 32-1 downto 0 );
  signal reint1_output_port_net : std_logic_vector( 32-1 downto 0 );
  signal assert_reg_dout_net : std_logic_vector( 32-1 downto 0 );
begin
  concat_y_net <= out_reg;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_23_ss_status_user_data_in <= cast_gw_dout_net;
  clk_net <= clk_1;
  ce_net <= ce_1;
  io_delay : entity xil_defaultlib.sysgen_delay_34e314c510 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d => reint1_output_port_net,
    q => io_delay_q_net
  );
  cast_gw : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 32,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 32,
    latency => 1,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => io_delay_q_net,
    clk => clk_net,
    ce => ce_net,
    dout => cast_gw_dout_net
  );
  assert_reg : entity xil_defaultlib.xlpassthrough 
  generic map (
    din_width => 32,
    dout_width => 32
  )
  port map (
    din => concat_y_net,
    dout => assert_reg_dout_net
  );
  reint1 : entity xil_defaultlib.sysgen_reinterpret_52bb84f12b 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => assert_reg_dout_net,
    output_port => reint1_output_port_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot2_23/ss
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_ss_x27 is
  port (
    din : in std_logic_vector( 32-1 downto 0 );
    we : in std_logic_vector( 1-1 downto 0 );
    trig : in std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_23_ss_ctrl_user_data_out : in std_logic_vector( 32-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    arm_out : out std_logic_vector( 1-1 downto 0 );
    goto_14493160_we1 : out std_logic_vector( 1-1 downto 0 );
    goto_14493160_we4 : out std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_23_ss_bram_addr : out std_logic_vector( 10-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_23_ss_bram_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_23_ss_bram_we : out std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_23_ss_status_user_data_in : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_ss_x27;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_ss_x27 is 
  signal arm_or_y_net : std_logic_vector( 1-1 downto 0 );
  signal concatenate_y_net : std_logic_vector( 32-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc2_sync_net : std_logic_vector( 1-1 downto 0 );
  signal edge_op_y_net_x0 : std_logic_vector( 1-1 downto 0 );
  signal we_choice_y_net : std_logic_vector( 1-1 downto 0 );
  signal logical6_y_net : std_logic_vector( 1-1 downto 0 );
  signal convert_addr_dout_net : std_logic_vector( 10-1 downto 0 );
  signal convert_din1_dout_net : std_logic_vector( 32-1 downto 0 );
  signal convert_we_dout_net : std_logic_vector( 1-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_23_ss_ctrl_user_data_out_net : std_logic_vector( 32-1 downto 0 );
  signal cast_gw_dout_net : std_logic_vector( 32-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal slice2_y_net : std_logic_vector( 10-1 downto 0 );
  signal delay6_q_net : std_logic_vector( 32-1 downto 0 );
  signal concat_y_net : std_logic_vector( 32-1 downto 0 );
  signal data_choice_y_net : std_logic_vector( 32-1 downto 0 );
  signal register6_q_net : std_logic_vector( 1-1 downto 0 );
  signal never_op_net : std_logic_vector( 1-1 downto 0 );
  signal edge_op_y_net_x1 : std_logic_vector( 1-1 downto 0 );
  signal cast_dout_net : std_logic_vector( 32-1 downto 0 );
  signal concatenate_y_net_x0 : std_logic_vector( 32-1 downto 0 );
  signal add_del_q_net : std_logic_vector( 10-1 downto 0 );
  signal dat_del_q_net : std_logic_vector( 32-1 downto 0 );
  signal we_del_q_net : std_logic_vector( 1-1 downto 0 );
  signal reint1_output_port_net : std_logic_vector( 32-1 downto 0 );
  signal reinterpret4_output_port_net : std_logic_vector( 28-1 downto 0 );
  signal circ_or_y_net : std_logic_vector( 1-1 downto 0 );
  signal reinterpret2_output_port_net : std_logic_vector( 2-1 downto 0 );
  signal slice3_y_net : std_logic_vector( 1-1 downto 0 );
  signal slice1_y_net : std_logic_vector( 1-1 downto 0 );
  signal arm_op_net : std_logic_vector( 1-1 downto 0 );
  signal ri_output_port_net : std_logic_vector( 32-1 downto 0 );
  signal circ_op_net : std_logic_vector( 1-1 downto 0 );
begin
  arm_out <= arm_or_y_net;
  concatenate_y_net <= din;
  rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc2_sync_net <= we;
  edge_op_y_net_x0 <= trig;
  goto_14493160_we1 <= we_choice_y_net;
  goto_14493160_we4 <= logical6_y_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_23_ss_bram_addr <= convert_addr_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_23_ss_bram_data_in <= convert_din1_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_23_ss_bram_we <= convert_we_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_23_ss_ctrl_user_data_out_net <= rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_23_ss_ctrl_user_data_out;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_23_ss_status_user_data_in <= cast_gw_dout_net;
  clk_net <= clk_1;
  ce_net <= ce_1;
  add_gen : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_add_gen_x27 
  port map (
    din => data_choice_y_net,
    we => we_choice_y_net,
    go => register6_q_net,
    cont => never_op_net,
    init => edge_op_y_net_x1,
    clk_1 => clk_net,
    ce_1 => ce_net,
    add => slice2_y_net,
    dout => delay6_q_net,
    we_o => logical6_y_net,
    status => concat_y_net
  );
  basic_ctrl : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_basic_ctrl_x27 
  port map (
    din => cast_dout_net,
    we => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc2_sync_net,
    trig => edge_op_y_net_x0,
    ctrl => concatenate_y_net_x0,
    stopi => never_op_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    dout => data_choice_y_net,
    we_o => we_choice_y_net,
    go => register6_q_net,
    init => edge_op_y_net_x1
  );
  bram : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_bram_x27 
  port map (
    addr => add_del_q_net,
    data_in => dat_del_q_net,
    we => we_del_q_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_23_ss_bram_addr => convert_addr_dout_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_23_ss_bram_data_in => convert_din1_dout_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_23_ss_bram_we => convert_we_dout_net
  );
  ctrl : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_ctrl_x29 
  port map (
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_23_ss_ctrl_user_data_out => rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_23_ss_ctrl_user_data_out_net,
    in_reg => reint1_output_port_net
  );
  ctrl_combine : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_ctrl_combine_x29 
  port map (
    in1 => reinterpret4_output_port_net,
    in2 => circ_or_y_net,
    in3 => reinterpret2_output_port_net,
    in4 => arm_or_y_net,
    bus_out => concatenate_y_net_x0
  );
  ctrl_split : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_ctrl_split_x30 
  port map (
    bus_in => reint1_output_port_net,
    msb_out4 => reinterpret4_output_port_net,
    out3 => slice3_y_net,
    out2 => reinterpret2_output_port_net,
    lsb_out1 => slice1_y_net
  );
  status : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_status_x30 
  port map (
    out_reg => concat_y_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_23_ss_status_user_data_in => cast_gw_dout_net
  );
  add_del : entity xil_defaultlib.sysgen_delay_4e9264ffdf 
  port map (
    clr => '0',
    d => slice2_y_net,
    clk => clk_net,
    ce => ce_net,
    q => add_del_q_net
  );
  arm : entity xil_defaultlib.sysgen_constant_a7b8778750 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => arm_op_net
  );
  arm_or : entity xil_defaultlib.sysgen_logical_d7dc12cf31 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => slice1_y_net,
    d1 => arm_op_net,
    y => arm_or_y_net
  );
  cast : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 32,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 32,
    latency => 0,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => ri_output_port_net,
    clk => clk_net,
    ce => ce_net,
    dout => cast_dout_net
  );
  circ : entity xil_defaultlib.sysgen_constant_a7b8778750 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => circ_op_net
  );
  circ_or : entity xil_defaultlib.sysgen_logical_d7dc12cf31 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => slice3_y_net,
    d1 => circ_op_net,
    y => circ_or_y_net
  );
  dat_del : entity xil_defaultlib.sysgen_delay_5ec362a23c 
  port map (
    clr => '0',
    d => delay6_q_net,
    clk => clk_net,
    ce => ce_net,
    q => dat_del_q_net
  );
  never : entity xil_defaultlib.sysgen_constant_a7b8778750 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => never_op_net
  );
  ri : entity xil_defaultlib.sysgen_reinterpret_52bb84f12b 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => concatenate_y_net,
    output_port => ri_output_port_net
  );
  we_del : entity xil_defaultlib.sysgen_delay_e0740ee3f9 
  port map (
    clr => '0',
    d => logical6_y_net,
    clk => clk_net,
    ce => ce_net,
    q => we_del_q_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot2_23
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_23 is
  port (
    in_d0 : in std_logic_vector( 16-1 downto 0 );
    in_d1 : in std_logic_vector( 16-1 downto 0 );
    we : in std_logic_vector( 1-1 downto 0 );
    trig : in std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_23_ss_ctrl_user_data_out : in std_logic_vector( 32-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    arm_out : out std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_23_ss_bram_addr : out std_logic_vector( 10-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_23_ss_bram_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_23_ss_bram_we : out std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_23_ss_status_user_data_in : out std_logic_vector( 32-1 downto 0 );
    goto_14493160_we1 : out std_logic_vector( 1-1 downto 0 );
    goto_14493160_we4 : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_23;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_23 is 
  signal arm_or_y_net : std_logic_vector( 1-1 downto 0 );
  signal slice23_y_net : std_logic_vector( 16-1 downto 0 );
  signal slice20_y_net : std_logic_vector( 16-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc2_sync_net : std_logic_vector( 1-1 downto 0 );
  signal edge_op_y_net : std_logic_vector( 1-1 downto 0 );
  signal convert_addr_dout_net : std_logic_vector( 10-1 downto 0 );
  signal convert_din1_dout_net : std_logic_vector( 32-1 downto 0 );
  signal convert_we_dout_net : std_logic_vector( 1-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_23_ss_ctrl_user_data_out_net : std_logic_vector( 32-1 downto 0 );
  signal cast_gw_dout_net : std_logic_vector( 32-1 downto 0 );
  signal we_choice_y_net : std_logic_vector( 1-1 downto 0 );
  signal logical6_y_net : std_logic_vector( 1-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal concatenate_y_net : std_logic_vector( 32-1 downto 0 );
  signal assert_d0_dout_net : std_logic_vector( 16-1 downto 0 );
  signal assert_d1_dout_net : std_logic_vector( 16-1 downto 0 );
begin
  arm_out <= arm_or_y_net;
  slice23_y_net <= in_d0;
  slice20_y_net <= in_d1;
  rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc2_sync_net <= we;
  edge_op_y_net <= trig;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_23_ss_bram_addr <= convert_addr_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_23_ss_bram_data_in <= convert_din1_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_23_ss_bram_we <= convert_we_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_23_ss_ctrl_user_data_out_net <= rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_23_ss_ctrl_user_data_out;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_23_ss_status_user_data_in <= cast_gw_dout_net;
  goto_14493160_we1 <= we_choice_y_net;
  goto_14493160_we4 <= logical6_y_net;
  clk_net <= clk_1;
  ce_net <= ce_1;
  buscreate : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_buscreate_x27 
  port map (
    in1 => assert_d0_dout_net,
    in2 => assert_d1_dout_net,
    bus_out => concatenate_y_net
  );
  ss : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_ss_x27 
  port map (
    din => concatenate_y_net,
    we => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc2_sync_net,
    trig => edge_op_y_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_23_ss_ctrl_user_data_out => rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_23_ss_ctrl_user_data_out_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    arm_out => arm_or_y_net,
    goto_14493160_we1 => we_choice_y_net,
    goto_14493160_we4 => logical6_y_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_23_ss_bram_addr => convert_addr_dout_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_23_ss_bram_data_in => convert_din1_dout_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_23_ss_bram_we => convert_we_dout_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_23_ss_status_user_data_in => cast_gw_dout_net
  );
  assert_d0 : entity xil_defaultlib.xlpassthrough 
  generic map (
    din_width => 16,
    dout_width => 16
  )
  port map (
    din => slice23_y_net,
    dout => assert_d0_dout_net
  );
  assert_d1 : entity xil_defaultlib.xlpassthrough 
  generic map (
    din_width => 16,
    dout_width => 16
  )
  port map (
    din => slice20_y_net,
    dout => assert_d1_dout_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot2_45/buscreate
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_buscreate_x30 is
  port (
    in1 : in std_logic_vector( 16-1 downto 0 );
    in2 : in std_logic_vector( 16-1 downto 0 );
    bus_out : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_buscreate_x30;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_buscreate_x30 is 
  signal concatenate_y_net : std_logic_vector( 32-1 downto 0 );
  signal assert_d0_dout_net : std_logic_vector( 16-1 downto 0 );
  signal assert_d1_dout_net : std_logic_vector( 16-1 downto 0 );
  signal reinterpret1_output_port_net : std_logic_vector( 16-1 downto 0 );
  signal reinterpret2_output_port_net : std_logic_vector( 16-1 downto 0 );
begin
  bus_out <= concatenate_y_net;
  assert_d0_dout_net <= in1;
  assert_d1_dout_net <= in2;
  concatenate : entity xil_defaultlib.sysgen_concat_37649e01d1 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    in0 => reinterpret1_output_port_net,
    in1 => reinterpret2_output_port_net,
    y => concatenate_y_net
  );
  reinterpret1 : entity xil_defaultlib.sysgen_reinterpret_03c8cdbbc1 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => assert_d0_dout_net,
    output_port => reinterpret1_output_port_net
  );
  reinterpret2 : entity xil_defaultlib.sysgen_reinterpret_03c8cdbbc1 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => assert_d1_dout_net,
    output_port => reinterpret2_output_port_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot2_45/ss/add_gen/edge_detect
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x62 is
  port (
    in_x0 : in std_logic_vector( 1-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    out_x0 : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x62;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x62 is 
  signal edge_op_y_net : std_logic_vector( 1-1 downto 0 );
  signal slice3_y_net : std_logic_vector( 1-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal delay_q_net : std_logic_vector( 1-1 downto 0 );
  signal inverter_op_net : std_logic_vector( 1-1 downto 0 );
begin
  out_x0 <= edge_op_y_net;
  slice3_y_net <= in_x0;
  clk_net <= clk_1;
  ce_net <= ce_1;
  delay : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 1
  )
  port map (
    en => '1',
    rst => '1',
    d => slice3_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay_q_net
  );
  inverter : entity xil_defaultlib.sysgen_inverter_6233897471 
  port map (
    clr => '0',
    ip => slice3_y_net,
    clk => clk_net,
    ce => ce_net,
    op => inverter_op_net
  );
  edge_op : entity xil_defaultlib.sysgen_logical_9cc14fefba 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => inverter_op_net,
    d1 => delay_q_net,
    y => edge_op_y_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot2_45/ss/add_gen
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_add_gen_x30 is
  port (
    din : in std_logic_vector( 32-1 downto 0 );
    we : in std_logic_vector( 1-1 downto 0 );
    go : in std_logic_vector( 1-1 downto 0 );
    cont : in std_logic_vector( 1-1 downto 0 );
    init : in std_logic_vector( 1-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    add : out std_logic_vector( 10-1 downto 0 );
    dout : out std_logic_vector( 32-1 downto 0 );
    we_o : out std_logic_vector( 1-1 downto 0 );
    status : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_add_gen_x30;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_add_gen_x30 is 
  signal slice2_y_net : std_logic_vector( 10-1 downto 0 );
  signal delay6_q_net : std_logic_vector( 32-1 downto 0 );
  signal logical6_y_net : std_logic_vector( 1-1 downto 0 );
  signal concat_y_net : std_logic_vector( 32-1 downto 0 );
  signal data_choice_y_net : std_logic_vector( 32-1 downto 0 );
  signal we_choice_y_net : std_logic_vector( 1-1 downto 0 );
  signal register6_q_net : std_logic_vector( 1-1 downto 0 );
  signal never_op_net : std_logic_vector( 1-1 downto 0 );
  signal edge_op_y_net : std_logic_vector( 1-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal edge_op_y_net_x0 : std_logic_vector( 1-1 downto 0 );
  signal slice3_y_net : std_logic_vector( 1-1 downto 0 );
  signal shift_op_net : std_logic_vector( 19-1 downto 0 );
  signal inverter_op_net : std_logic_vector( 1-1 downto 0 );
  signal delay1_q_net : std_logic_vector( 12-1 downto 0 );
  signal convert_dout_net : std_logic_vector( 19-1 downto 0 );
  signal register5_q_net : std_logic_vector( 1-1 downto 0 );
  signal delay_q_net : std_logic_vector( 1-1 downto 0 );
  signal delay4_q_net : std_logic_vector( 1-1 downto 0 );
  signal slice1_y_net : std_logic_vector( 12-1 downto 0 );
  signal delay3_q_net : std_logic_vector( 1-1 downto 0 );
  signal inverter1_op_net : std_logic_vector( 1-1 downto 0 );
  signal logical1_y_net : std_logic_vector( 1-1 downto 0 );
  signal logical4_y_net : std_logic_vector( 1-1 downto 0 );
  signal add_gen_op_net : std_logic_vector( 13-1 downto 0 );
begin
  add <= slice2_y_net;
  dout <= delay6_q_net;
  we_o <= logical6_y_net;
  status <= concat_y_net;
  data_choice_y_net <= din;
  we_choice_y_net <= we;
  register6_q_net <= go;
  never_op_net <= cont;
  edge_op_y_net <= init;
  clk_net <= clk_1;
  ce_net <= ce_1;
  edge_detect : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x62 
  port map (
    in_x0 => slice3_y_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    out_x0 => edge_op_y_net_x0
  );
  concat : entity xil_defaultlib.sysgen_concat_fc8edfac0e 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    in0 => shift_op_net,
    in1 => inverter_op_net,
    in2 => delay1_q_net,
    y => concat_y_net
  );
  convert : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 1,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 19,
    latency => 0,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => register5_q_net,
    clk => clk_net,
    ce => ce_net,
    dout => convert_dout_net
  );
  delay : entity xil_defaultlib.sysgen_delay_e0740ee3f9 
  port map (
    clr => '0',
    d => delay4_q_net,
    clk => clk_net,
    ce => ce_net,
    q => delay_q_net
  );
  delay1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 12
  )
  port map (
    en => '1',
    rst => '1',
    d => slice1_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay1_q_net
  );
  delay3 : entity xil_defaultlib.sysgen_delay_e0740ee3f9 
  port map (
    clr => '0',
    d => never_op_net,
    clk => clk_net,
    ce => ce_net,
    q => delay3_q_net
  );
  delay4 : entity xil_defaultlib.sysgen_delay_e0740ee3f9 
  port map (
    clr => '0',
    d => edge_op_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay4_q_net
  );
  delay6 : entity xil_defaultlib.sysgen_delay_5ec362a23c 
  port map (
    clr => '0',
    d => data_choice_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay6_q_net
  );
  inverter : entity xil_defaultlib.sysgen_inverter_918b6bc6d0 
  port map (
    clr => '0',
    ip => register5_q_net,
    clk => clk_net,
    ce => ce_net,
    op => inverter_op_net
  );
  inverter1 : entity xil_defaultlib.sysgen_inverter_6233897471 
  port map (
    clr => '0',
    ip => edge_op_y_net_x0,
    clk => clk_net,
    ce => ce_net,
    op => inverter1_op_net
  );
  logical1 : entity xil_defaultlib.sysgen_logical_2486129911 
  port map (
    clr => '0',
    d0 => we_choice_y_net,
    d1 => register6_q_net,
    clk => clk_net,
    ce => ce_net,
    y => logical1_y_net
  );
  logical4 : entity xil_defaultlib.sysgen_logical_d7dc12cf31 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => delay3_q_net,
    d1 => inverter1_op_net,
    y => logical4_y_net
  );
  logical6 : entity xil_defaultlib.sysgen_logical_c05fefc67b 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => register5_q_net,
    d1 => logical4_y_net,
    d2 => logical1_y_net,
    y => logical6_y_net
  );
  register5 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlregister 
  generic map (
    d_width => 1,
    init_value => b"1"
  )
  port map (
    d => delay3_q_net,
    rst => delay_q_net,
    en => edge_op_y_net_x0,
    clk => clk_net,
    ce => ce_net,
    q => register5_q_net
  );
  shift : entity xil_defaultlib.sysgen_shift_5af4fe0a99 
  port map (
    clr => '0',
    ip => convert_dout_net,
    clk => clk_net,
    ce => ce_net,
    op => shift_op_net
  );
  add_gen : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlcounter_free 
  generic map (
    core_name0 => "rfdc_multi_eight_adcs_2048gsps_mts_c_counter_binary_v12_0_i1",
    op_arith => xlUnsigned,
    op_width => 13
  )
  port map (
    clr => '0',
    rst => delay4_q_net,
    en => logical6_y_net,
    clk => clk_net,
    ce => ce_net,
    op => add_gen_op_net
  );
  slice1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 0,
    new_msb => 11,
    x_width => 13,
    y_width => 12
  )
  port map (
    x => add_gen_op_net,
    y => slice1_y_net
  );
  slice2 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 2,
    new_msb => 11,
    x_width => 13,
    y_width => 10
  )
  port map (
    x => add_gen_op_net,
    y => slice2_y_net
  );
  slice3 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 12,
    new_msb => 12,
    x_width => 13,
    y_width => 1
  )
  port map (
    x => add_gen_op_net,
    y => slice3_y_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot2_45/ss/basic_ctrl/dram_munge
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_dram_munge_x30 is
  port (
    din : in std_logic_vector( 32-1 downto 0 );
    we : in std_logic_vector( 1-1 downto 0 );
    init : in std_logic_vector( 1-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    dout : out std_logic_vector( 32-1 downto 0 );
    we_o : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_dram_munge_x30;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_dram_munge_x30 is 
  signal data_choice_y_net : std_logic_vector( 32-1 downto 0 );
  signal we_choice_y_net : std_logic_vector( 1-1 downto 0 );
  signal cast_dout_net : std_logic_vector( 32-1 downto 0 );
  signal mux1_y_net_x0 : std_logic_vector( 1-1 downto 0 );
  signal edge_op_y_net : std_logic_vector( 1-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal concat_y_net : std_logic_vector( 80-1 downto 0 );
  signal constant_op_net : std_logic_vector( 8-1 downto 0 );
  signal register_q_net : std_logic_vector( 32-1 downto 0 );
  signal register1_q_net : std_logic_vector( 32-1 downto 0 );
  signal concat1_y_net : std_logic_vector( 80-1 downto 0 );
  signal register2_q_net : std_logic_vector( 32-1 downto 0 );
  signal register3_q_net : std_logic_vector( 32-1 downto 0 );
  signal delay_q_net : std_logic_vector( 1-1 downto 0 );
  signal logical_y_net : std_logic_vector( 1-1 downto 0 );
  signal delay1_q_net : std_logic_vector( 1-1 downto 0 );
  signal logical1_y_net : std_logic_vector( 1-1 downto 0 );
  signal relational3_op_net : std_logic_vector( 1-1 downto 0 );
  signal mux1_y_net : std_logic_vector( 80-1 downto 0 );
  signal dout_count_op_net : std_logic_vector( 1-1 downto 0 );
  signal relational_op_net : std_logic_vector( 1-1 downto 0 );
  signal relational1_op_net : std_logic_vector( 1-1 downto 0 );
  signal relational2_op_net : std_logic_vector( 1-1 downto 0 );
  signal input_count_op_net : std_logic_vector( 2-1 downto 0 );
  signal con0_op_net : std_logic_vector( 2-1 downto 0 );
  signal con1_op_net : std_logic_vector( 2-1 downto 0 );
  signal con2_op_net : std_logic_vector( 2-1 downto 0 );
  signal con3_op_net : std_logic_vector( 2-1 downto 0 );
  signal dram_op_net : std_logic_vector( 1-1 downto 0 );
begin
  dout <= data_choice_y_net;
  we_o <= we_choice_y_net;
  cast_dout_net <= din;
  mux1_y_net_x0 <= we;
  edge_op_y_net <= init;
  clk_net <= clk_1;
  ce_net <= ce_1;
  concat : entity xil_defaultlib.sysgen_concat_e7487baac7 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    in0 => constant_op_net,
    in1 => register_q_net,
    in2 => constant_op_net,
    in3 => register1_q_net,
    y => concat_y_net
  );
  concat1 : entity xil_defaultlib.sysgen_concat_e7487baac7 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    in0 => constant_op_net,
    in1 => register2_q_net,
    in2 => constant_op_net,
    in3 => register3_q_net,
    y => concat1_y_net
  );
  constant_x0 : entity xil_defaultlib.sysgen_constant_869e31f04d 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => constant_op_net
  );
  delay : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 1
  )
  port map (
    en => '1',
    rst => '1',
    d => logical_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay_q_net
  );
  delay1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 1
  )
  port map (
    en => '1',
    rst => '1',
    d => logical1_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay1_q_net
  );
  logical : entity xil_defaultlib.sysgen_logical_2486129911 
  port map (
    clr => '0',
    d0 => relational3_op_net,
    d1 => mux1_y_net_x0,
    clk => clk_net,
    ce => ce_net,
    y => logical_y_net
  );
  logical1 : entity xil_defaultlib.sysgen_logical_d7dc12cf31 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => logical_y_net,
    d1 => delay_q_net,
    y => logical1_y_net
  );
  mux1 : entity xil_defaultlib.sysgen_mux_71ee2b1026 
  port map (
    clr => '0',
    sel => dout_count_op_net,
    d0 => concat_y_net,
    d1 => concat1_y_net,
    clk => clk_net,
    ce => ce_net,
    y => mux1_y_net
  );
  register_x0 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlregister 
  generic map (
    d_width => 32,
    init_value => b"00000000000000000000000000000000"
  )
  port map (
    rst => "0",
    d => cast_dout_net,
    en => relational_op_net,
    clk => clk_net,
    ce => ce_net,
    q => register_q_net
  );
  register1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlregister 
  generic map (
    d_width => 32,
    init_value => b"00000000000000000000000000000000"
  )
  port map (
    rst => "0",
    d => cast_dout_net,
    en => relational1_op_net,
    clk => clk_net,
    ce => ce_net,
    q => register1_q_net
  );
  register2 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlregister 
  generic map (
    d_width => 32,
    init_value => b"00000000000000000000000000000000"
  )
  port map (
    rst => "0",
    d => cast_dout_net,
    en => relational2_op_net,
    clk => clk_net,
    ce => ce_net,
    q => register2_q_net
  );
  register3 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlregister 
  generic map (
    d_width => 32,
    init_value => b"00000000000000000000000000000000"
  )
  port map (
    rst => "0",
    d => cast_dout_net,
    en => relational3_op_net,
    clk => clk_net,
    ce => ce_net,
    q => register3_q_net
  );
  relational : entity xil_defaultlib.sysgen_relational_e5d6b5eaca 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    a => input_count_op_net,
    b => con0_op_net,
    op => relational_op_net
  );
  relational1 : entity xil_defaultlib.sysgen_relational_e5d6b5eaca 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    a => input_count_op_net,
    b => con1_op_net,
    op => relational1_op_net
  );
  relational2 : entity xil_defaultlib.sysgen_relational_e5d6b5eaca 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    a => input_count_op_net,
    b => con2_op_net,
    op => relational2_op_net
  );
  relational3 : entity xil_defaultlib.sysgen_relational_e5d6b5eaca 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    a => input_count_op_net,
    b => con3_op_net,
    op => relational3_op_net
  );
  con0 : entity xil_defaultlib.sysgen_constant_b58c3a1535 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => con0_op_net
  );
  con1 : entity xil_defaultlib.sysgen_constant_d3f27a6354 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => con1_op_net
  );
  con2 : entity xil_defaultlib.sysgen_constant_2fa4689d4e 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => con2_op_net
  );
  con3 : entity xil_defaultlib.sysgen_constant_31bab66ba6 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => con3_op_net
  );
  data_choice : entity xil_defaultlib.sysgen_mux_d624c1af44 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    sel => dram_op_net,
    d0 => cast_dout_net,
    d1 => mux1_y_net,
    y => data_choice_y_net
  );
  dout_count : entity xil_defaultlib.sysgen_counter_a9c1c293c2 
  port map (
    clr => '0',
    rst => edge_op_y_net,
    en => logical1_y_net,
    clk => clk_net,
    ce => ce_net,
    op => dout_count_op_net
  );
  dram : entity xil_defaultlib.sysgen_constant_a7b8778750 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => dram_op_net
  );
  input_count : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlcounter_free 
  generic map (
    core_name0 => "rfdc_multi_eight_adcs_2048gsps_mts_c_counter_binary_v12_0_i2",
    op_arith => xlUnsigned,
    op_width => 2
  )
  port map (
    clr => '0',
    rst => edge_op_y_net,
    en => mux1_y_net_x0,
    clk => clk_net,
    ce => ce_net,
    op => input_count_op_net
  );
  we_choice : entity xil_defaultlib.sysgen_mux_4874190f11 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    sel => dram_op_net,
    d0 => mux1_y_net_x0,
    d1 => delay1_q_net,
    y => we_choice_y_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot2_45/ss/basic_ctrl/edge_detect
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x63 is
  port (
    in_x0 : in std_logic_vector( 1-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    out_x0 : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x63;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x63 is 
  signal edge_op_y_net : std_logic_vector( 1-1 downto 0 );
  signal delay1_q_net : std_logic_vector( 1-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal delay_q_net : std_logic_vector( 1-1 downto 0 );
  signal inverter_op_net : std_logic_vector( 1-1 downto 0 );
begin
  out_x0 <= edge_op_y_net;
  delay1_q_net <= in_x0;
  clk_net <= clk_1;
  ce_net <= ce_1;
  delay : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 1
  )
  port map (
    en => '1',
    rst => '1',
    d => delay1_q_net,
    clk => clk_net,
    ce => ce_net,
    q => delay_q_net
  );
  inverter : entity xil_defaultlib.sysgen_inverter_6233897471 
  port map (
    clr => '0',
    ip => delay1_q_net,
    clk => clk_net,
    ce => ce_net,
    op => inverter_op_net
  );
  edge_op : entity xil_defaultlib.sysgen_logical_0f1aa1e2d7 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => inverter_op_net,
    d1 => delay_q_net,
    y => edge_op_y_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot2_45/ss/basic_ctrl
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_basic_ctrl_x30 is
  port (
    din : in std_logic_vector( 32-1 downto 0 );
    we : in std_logic_vector( 1-1 downto 0 );
    trig : in std_logic_vector( 1-1 downto 0 );
    ctrl : in std_logic_vector( 32-1 downto 0 );
    stopi : in std_logic_vector( 1-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    dout : out std_logic_vector( 32-1 downto 0 );
    we_o : out std_logic_vector( 1-1 downto 0 );
    go : out std_logic_vector( 1-1 downto 0 );
    init : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_basic_ctrl_x30;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_basic_ctrl_x30 is 
  signal data_choice_y_net : std_logic_vector( 32-1 downto 0 );
  signal we_choice_y_net : std_logic_vector( 1-1 downto 0 );
  signal register6_q_net : std_logic_vector( 1-1 downto 0 );
  signal edge_op_y_net_x0 : std_logic_vector( 1-1 downto 0 );
  signal cast_dout_net : std_logic_vector( 32-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc2_sync_net : std_logic_vector( 1-1 downto 0 );
  signal edge_op_y_net : std_logic_vector( 1-1 downto 0 );
  signal concatenate_y_net : std_logic_vector( 32-1 downto 0 );
  signal never_op_net : std_logic_vector( 1-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal mux1_y_net : std_logic_vector( 1-1 downto 0 );
  signal delay1_q_net : std_logic_vector( 1-1 downto 0 );
  signal constant_op_net : std_logic_vector( 1-1 downto 0 );
  signal constant1_op_net : std_logic_vector( 1-1 downto 0 );
  signal constant2_op_net : std_logic_vector( 1-1 downto 0 );
  signal enable_y_net : std_logic_vector( 1-1 downto 0 );
  signal delay2_q_net : std_logic_vector( 1-1 downto 0 );
  signal trig_src_y_net : std_logic_vector( 1-1 downto 0 );
  signal delay3_q_net : std_logic_vector( 1-1 downto 0 );
  signal valid_src_y_net : std_logic_vector( 1-1 downto 0 );
  signal inverter_op_net : std_logic_vector( 1-1 downto 0 );
  signal logical_y_net : std_logic_vector( 1-1 downto 0 );
  signal mux2_y_net : std_logic_vector( 1-1 downto 0 );
  signal register1_q_net : std_logic_vector( 1-1 downto 0 );
begin
  dout <= data_choice_y_net;
  we_o <= we_choice_y_net;
  go <= register6_q_net;
  init <= edge_op_y_net_x0;
  cast_dout_net <= din;
  rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc2_sync_net <= we;
  edge_op_y_net <= trig;
  concatenate_y_net <= ctrl;
  never_op_net <= stopi;
  clk_net <= clk_1;
  ce_net <= ce_1;
  dram_munge : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_dram_munge_x30 
  port map (
    din => cast_dout_net,
    we => mux1_y_net,
    init => edge_op_y_net_x0,
    clk_1 => clk_net,
    ce_1 => ce_net,
    dout => data_choice_y_net,
    we_o => we_choice_y_net
  );
  edge_detect : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x63 
  port map (
    in_x0 => delay1_q_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    out_x0 => edge_op_y_net_x0
  );
  constant_x0 : entity xil_defaultlib.sysgen_constant_c95a0b5efb 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => constant_op_net
  );
  constant1 : entity xil_defaultlib.sysgen_constant_c95a0b5efb 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => constant1_op_net
  );
  constant2 : entity xil_defaultlib.sysgen_constant_c95a0b5efb 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => constant2_op_net
  );
  delay1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 1
  )
  port map (
    en => '1',
    rst => '1',
    d => enable_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay1_q_net
  );
  delay2 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 1
  )
  port map (
    en => '1',
    rst => '1',
    d => trig_src_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay2_q_net
  );
  delay3 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 1
  )
  port map (
    en => '1',
    rst => '1',
    d => valid_src_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay3_q_net
  );
  inverter : entity xil_defaultlib.sysgen_inverter_6233897471 
  port map (
    clr => '0',
    ip => edge_op_y_net_x0,
    clk => clk_net,
    ce => ce_net,
    op => inverter_op_net
  );
  logical : entity xil_defaultlib.sysgen_logical_d26e5cda59 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => mux2_y_net,
    d1 => inverter_op_net,
    y => logical_y_net
  );
  mux1 : entity xil_defaultlib.sysgen_mux_4874190f11 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    sel => delay3_q_net,
    d0 => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc2_sync_net,
    d1 => constant2_op_net,
    y => mux1_y_net
  );
  mux2 : entity xil_defaultlib.sysgen_mux_4874190f11 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    sel => delay2_q_net,
    d0 => edge_op_y_net,
    d1 => constant1_op_net,
    y => mux2_y_net
  );
  register1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlregister 
  generic map (
    d_width => 1,
    init_value => b"0"
  )
  port map (
    d => constant_op_net,
    rst => logical_y_net,
    en => edge_op_y_net_x0,
    clk => clk_net,
    ce => ce_net,
    q => register1_q_net
  );
  register6 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlregister 
  generic map (
    d_width => 1,
    init_value => b"0"
  )
  port map (
    d => mux2_y_net,
    rst => edge_op_y_net_x0,
    en => register1_q_net,
    clk => clk_net,
    ce => ce_net,
    q => register6_q_net
  );
  enable : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 0,
    new_msb => 0,
    x_width => 32,
    y_width => 1
  )
  port map (
    x => concatenate_y_net,
    y => enable_y_net
  );
  trig_src : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 1,
    new_msb => 1,
    x_width => 32,
    y_width => 1
  )
  port map (
    x => concatenate_y_net,
    y => trig_src_y_net
  );
  valid_src : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 2,
    new_msb => 2,
    x_width => 32,
    y_width => 1
  )
  port map (
    x => concatenate_y_net,
    y => valid_src_y_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot2_45/ss/bram/calc_add
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_calc_add_x30 is
  port (
    in_x0 : in std_logic_vector( 10-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    out_x0 : out std_logic_vector( 10-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_calc_add_x30;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_calc_add_x30 is 
  signal mux_y_net : std_logic_vector( 10-1 downto 0 );
  signal add_del_q_net : std_logic_vector( 10-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal add_sub_s_net : std_logic_vector( 1-1 downto 0 );
  signal const_op_net : std_logic_vector( 1-1 downto 0 );
  signal lsw_y_net : std_logic_vector( 1-1 downto 0 );
  signal concat_y_net : std_logic_vector( 10-1 downto 0 );
  signal msw_y_net : std_logic_vector( 9-1 downto 0 );
  signal convert_addr_dout_net : std_logic_vector( 10-1 downto 0 );
  signal manipulate_op_net : std_logic_vector( 1-1 downto 0 );
begin
  out_x0 <= mux_y_net;
  add_del_q_net <= in_x0;
  clk_net <= clk_1;
  ce_net <= ce_1;
  add_sub : entity xil_defaultlib.sysgen_addsub_fd3b6c715c 
  port map (
    clr => '0',
    a => const_op_net,
    b => lsw_y_net,
    clk => clk_net,
    ce => ce_net,
    s => add_sub_s_net
  );
  concat : entity xil_defaultlib.sysgen_concat_f4b90dfa16 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    in0 => msw_y_net,
    in1 => add_sub_s_net,
    y => concat_y_net
  );
  const : entity xil_defaultlib.sysgen_constant_a7b8778750 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => const_op_net
  );
  convert_addr : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 10,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 10,
    latency => 0,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => add_del_q_net,
    clk => clk_net,
    ce => ce_net,
    dout => convert_addr_dout_net
  );
  lsw : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 0,
    new_msb => 0,
    x_width => 10,
    y_width => 1
  )
  port map (
    x => convert_addr_dout_net,
    y => lsw_y_net
  );
  manipulate : entity xil_defaultlib.sysgen_constant_a7b8778750 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => manipulate_op_net
  );
  msw : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 1,
    new_msb => 9,
    x_width => 10,
    y_width => 9
  )
  port map (
    x => convert_addr_dout_net,
    y => msw_y_net
  );
  mux : entity xil_defaultlib.sysgen_mux_4417594854 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    sel => manipulate_op_net,
    d0 => convert_addr_dout_net,
    d1 => concat_y_net,
    y => mux_y_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot2_45/ss/bram/munge_in
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_munge_in_x30 is
  port (
    din : in std_logic_vector( 32-1 downto 0 );
    dout : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_munge_in_x30;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_munge_in_x30 is 
  signal reinterpret_out_output_port_net : std_logic_vector( 32-1 downto 0 );
  signal dat_del_q_net : std_logic_vector( 32-1 downto 0 );
begin
  dout <= reinterpret_out_output_port_net;
  dat_del_q_net <= din;
  reinterpret_out : entity xil_defaultlib.sysgen_reinterpret_52bb84f12b 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => dat_del_q_net,
    output_port => reinterpret_out_output_port_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot2_45/ss/bram
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_bram_x30 is
  port (
    addr : in std_logic_vector( 10-1 downto 0 );
    data_in : in std_logic_vector( 32-1 downto 0 );
    we : in std_logic_vector( 1-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_45_ss_bram_addr : out std_logic_vector( 10-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_45_ss_bram_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_45_ss_bram_we : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_bram_x30;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_bram_x30 is 
  signal add_del_q_net : std_logic_vector( 10-1 downto 0 );
  signal dat_del_q_net : std_logic_vector( 32-1 downto 0 );
  signal we_del_q_net : std_logic_vector( 1-1 downto 0 );
  signal convert_addr_dout_net : std_logic_vector( 10-1 downto 0 );
  signal convert_din1_dout_net : std_logic_vector( 32-1 downto 0 );
  signal convert_we_dout_net : std_logic_vector( 1-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal mux_y_net : std_logic_vector( 10-1 downto 0 );
  signal reinterpret_out_output_port_net : std_logic_vector( 32-1 downto 0 );
begin
  add_del_q_net <= addr;
  dat_del_q_net <= data_in;
  we_del_q_net <= we;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_45_ss_bram_addr <= convert_addr_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_45_ss_bram_data_in <= convert_din1_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_45_ss_bram_we <= convert_we_dout_net;
  clk_net <= clk_1;
  ce_net <= ce_1;
  calc_add : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_calc_add_x30 
  port map (
    in_x0 => add_del_q_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    out_x0 => mux_y_net
  );
  munge_in : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_munge_in_x30 
  port map (
    din => dat_del_q_net,
    dout => reinterpret_out_output_port_net
  );
  convert_addr : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 10,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 10,
    latency => 0,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => mux_y_net,
    clk => clk_net,
    ce => ce_net,
    dout => convert_addr_dout_net
  );
  convert_din1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 32,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 32,
    latency => 0,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => reinterpret_out_output_port_net,
    clk => clk_net,
    ce => ce_net,
    dout => convert_din1_dout_net
  );
  convert_we : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 1,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 1,
    latency => 0,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => we_del_q_net,
    clk => clk_net,
    ce => ce_net,
    dout => convert_we_dout_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot2_45/ss/ctrl
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_ctrl_x30 is
  port (
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_45_ss_ctrl_user_data_out : in std_logic_vector( 32-1 downto 0 );
    in_reg : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_ctrl_x30;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_ctrl_x30 is 
  signal reint1_output_port_net : std_logic_vector( 32-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_45_ss_ctrl_user_data_out_net : std_logic_vector( 32-1 downto 0 );
  signal io_delay_q_net : std_logic_vector( 32-1 downto 0 );
  signal slice_reg_y_net : std_logic_vector( 32-1 downto 0 );
begin
  in_reg <= reint1_output_port_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_45_ss_ctrl_user_data_out_net <= rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_45_ss_ctrl_user_data_out;
  io_delay : entity xil_defaultlib.sysgen_delay_34e314c510 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d => rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_45_ss_ctrl_user_data_out_net,
    q => io_delay_q_net
  );
  slice_reg : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 0,
    new_msb => 31,
    x_width => 32,
    y_width => 32
  )
  port map (
    x => io_delay_q_net,
    y => slice_reg_y_net
  );
  reint1 : entity xil_defaultlib.sysgen_reinterpret_52bb84f12b 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => slice_reg_y_net,
    output_port => reint1_output_port_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot2_45/ss/ctrl_combine
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_ctrl_combine_x28 is
  port (
    in1 : in std_logic_vector( 28-1 downto 0 );
    in2 : in std_logic_vector( 1-1 downto 0 );
    in3 : in std_logic_vector( 2-1 downto 0 );
    in4 : in std_logic_vector( 1-1 downto 0 );
    bus_out : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_ctrl_combine_x28;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_ctrl_combine_x28 is 
  signal concatenate_y_net : std_logic_vector( 32-1 downto 0 );
  signal reinterpret4_output_port_net_x0 : std_logic_vector( 28-1 downto 0 );
  signal circ_or_y_net : std_logic_vector( 1-1 downto 0 );
  signal reinterpret2_output_port_net : std_logic_vector( 2-1 downto 0 );
  signal arm_or_y_net : std_logic_vector( 1-1 downto 0 );
  signal reinterpret1_output_port_net : std_logic_vector( 28-1 downto 0 );
  signal reinterpret2_output_port_net_x0 : std_logic_vector( 1-1 downto 0 );
  signal reinterpret3_output_port_net : std_logic_vector( 2-1 downto 0 );
  signal reinterpret4_output_port_net : std_logic_vector( 1-1 downto 0 );
begin
  bus_out <= concatenate_y_net;
  reinterpret4_output_port_net_x0 <= in1;
  circ_or_y_net <= in2;
  reinterpret2_output_port_net <= in3;
  arm_or_y_net <= in4;
  concatenate : entity xil_defaultlib.sysgen_concat_8611e618a5 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    in0 => reinterpret1_output_port_net,
    in1 => reinterpret2_output_port_net_x0,
    in2 => reinterpret3_output_port_net,
    in3 => reinterpret4_output_port_net,
    y => concatenate_y_net
  );
  reinterpret1 : entity xil_defaultlib.sysgen_reinterpret_f7e0b72e82 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => reinterpret4_output_port_net_x0,
    output_port => reinterpret1_output_port_net
  );
  reinterpret2 : entity xil_defaultlib.sysgen_reinterpret_317b92931a 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => circ_or_y_net,
    output_port => reinterpret2_output_port_net_x0
  );
  reinterpret3 : entity xil_defaultlib.sysgen_reinterpret_5dc9f217bd 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => reinterpret2_output_port_net,
    output_port => reinterpret3_output_port_net
  );
  reinterpret4 : entity xil_defaultlib.sysgen_reinterpret_317b92931a 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => arm_or_y_net,
    output_port => reinterpret4_output_port_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot2_45/ss/ctrl_split
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_ctrl_split_x29 is
  port (
    bus_in : in std_logic_vector( 32-1 downto 0 );
    msb_out4 : out std_logic_vector( 28-1 downto 0 );
    out3 : out std_logic_vector( 1-1 downto 0 );
    out2 : out std_logic_vector( 2-1 downto 0 );
    lsb_out1 : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_ctrl_split_x29;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_ctrl_split_x29 is 
  signal reinterpret4_output_port_net : std_logic_vector( 28-1 downto 0 );
  signal slice3_y_net : std_logic_vector( 1-1 downto 0 );
  signal reinterpret2_output_port_net : std_logic_vector( 2-1 downto 0 );
  signal slice1_y_net : std_logic_vector( 1-1 downto 0 );
  signal reint1_output_port_net : std_logic_vector( 32-1 downto 0 );
  signal slice2_y_net : std_logic_vector( 2-1 downto 0 );
  signal slice4_y_net : std_logic_vector( 28-1 downto 0 );
begin
  msb_out4 <= reinterpret4_output_port_net;
  out3 <= slice3_y_net;
  out2 <= reinterpret2_output_port_net;
  lsb_out1 <= slice1_y_net;
  reint1_output_port_net <= bus_in;
  reinterpret2 : entity xil_defaultlib.sysgen_reinterpret_5dc9f217bd 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => slice2_y_net,
    output_port => reinterpret2_output_port_net
  );
  reinterpret4 : entity xil_defaultlib.sysgen_reinterpret_f7e0b72e82 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => slice4_y_net,
    output_port => reinterpret4_output_port_net
  );
  slice1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 0,
    new_msb => 0,
    x_width => 32,
    y_width => 1
  )
  port map (
    x => reint1_output_port_net,
    y => slice1_y_net
  );
  slice2 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 1,
    new_msb => 2,
    x_width => 32,
    y_width => 2
  )
  port map (
    x => reint1_output_port_net,
    y => slice2_y_net
  );
  slice3 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 3,
    new_msb => 3,
    x_width => 32,
    y_width => 1
  )
  port map (
    x => reint1_output_port_net,
    y => slice3_y_net
  );
  slice4 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 4,
    new_msb => 31,
    x_width => 32,
    y_width => 28
  )
  port map (
    x => reint1_output_port_net,
    y => slice4_y_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot2_45/ss/status
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_status_x29 is
  port (
    out_reg : in std_logic_vector( 32-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_45_ss_status_user_data_in : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_status_x29;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_status_x29 is 
  signal concat_y_net : std_logic_vector( 32-1 downto 0 );
  signal cast_gw_dout_net : std_logic_vector( 32-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal io_delay_q_net : std_logic_vector( 32-1 downto 0 );
  signal reint1_output_port_net : std_logic_vector( 32-1 downto 0 );
  signal assert_reg_dout_net : std_logic_vector( 32-1 downto 0 );
begin
  concat_y_net <= out_reg;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_45_ss_status_user_data_in <= cast_gw_dout_net;
  clk_net <= clk_1;
  ce_net <= ce_1;
  io_delay : entity xil_defaultlib.sysgen_delay_34e314c510 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d => reint1_output_port_net,
    q => io_delay_q_net
  );
  cast_gw : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 32,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 32,
    latency => 1,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => io_delay_q_net,
    clk => clk_net,
    ce => ce_net,
    dout => cast_gw_dout_net
  );
  assert_reg : entity xil_defaultlib.xlpassthrough 
  generic map (
    din_width => 32,
    dout_width => 32
  )
  port map (
    din => concat_y_net,
    dout => assert_reg_dout_net
  );
  reint1 : entity xil_defaultlib.sysgen_reinterpret_52bb84f12b 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => assert_reg_dout_net,
    output_port => reint1_output_port_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot2_45/ss
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_ss_x30 is
  port (
    din : in std_logic_vector( 32-1 downto 0 );
    we : in std_logic_vector( 1-1 downto 0 );
    trig : in std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_45_ss_ctrl_user_data_out : in std_logic_vector( 32-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    arm_out : out std_logic_vector( 1-1 downto 0 );
    goto_16399784_we1 : out std_logic_vector( 1-1 downto 0 );
    goto_16399784_we4 : out std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_45_ss_bram_addr : out std_logic_vector( 10-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_45_ss_bram_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_45_ss_bram_we : out std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_45_ss_status_user_data_in : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_ss_x30;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_ss_x30 is 
  signal arm_or_y_net : std_logic_vector( 1-1 downto 0 );
  signal concatenate_y_net : std_logic_vector( 32-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc2_sync_net : std_logic_vector( 1-1 downto 0 );
  signal edge_op_y_net_x0 : std_logic_vector( 1-1 downto 0 );
  signal we_choice_y_net : std_logic_vector( 1-1 downto 0 );
  signal logical6_y_net : std_logic_vector( 1-1 downto 0 );
  signal convert_addr_dout_net : std_logic_vector( 10-1 downto 0 );
  signal convert_din1_dout_net : std_logic_vector( 32-1 downto 0 );
  signal convert_we_dout_net : std_logic_vector( 1-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_45_ss_ctrl_user_data_out_net : std_logic_vector( 32-1 downto 0 );
  signal cast_gw_dout_net : std_logic_vector( 32-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal slice2_y_net : std_logic_vector( 10-1 downto 0 );
  signal delay6_q_net : std_logic_vector( 32-1 downto 0 );
  signal concat_y_net : std_logic_vector( 32-1 downto 0 );
  signal data_choice_y_net : std_logic_vector( 32-1 downto 0 );
  signal register6_q_net : std_logic_vector( 1-1 downto 0 );
  signal never_op_net : std_logic_vector( 1-1 downto 0 );
  signal edge_op_y_net_x1 : std_logic_vector( 1-1 downto 0 );
  signal cast_dout_net : std_logic_vector( 32-1 downto 0 );
  signal concatenate_y_net_x0 : std_logic_vector( 32-1 downto 0 );
  signal add_del_q_net : std_logic_vector( 10-1 downto 0 );
  signal dat_del_q_net : std_logic_vector( 32-1 downto 0 );
  signal we_del_q_net : std_logic_vector( 1-1 downto 0 );
  signal reint1_output_port_net : std_logic_vector( 32-1 downto 0 );
  signal reinterpret4_output_port_net : std_logic_vector( 28-1 downto 0 );
  signal circ_or_y_net : std_logic_vector( 1-1 downto 0 );
  signal reinterpret2_output_port_net : std_logic_vector( 2-1 downto 0 );
  signal slice3_y_net : std_logic_vector( 1-1 downto 0 );
  signal slice1_y_net : std_logic_vector( 1-1 downto 0 );
  signal arm_op_net : std_logic_vector( 1-1 downto 0 );
  signal ri_output_port_net : std_logic_vector( 32-1 downto 0 );
  signal circ_op_net : std_logic_vector( 1-1 downto 0 );
begin
  arm_out <= arm_or_y_net;
  concatenate_y_net <= din;
  rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc2_sync_net <= we;
  edge_op_y_net_x0 <= trig;
  goto_16399784_we1 <= we_choice_y_net;
  goto_16399784_we4 <= logical6_y_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_45_ss_bram_addr <= convert_addr_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_45_ss_bram_data_in <= convert_din1_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_45_ss_bram_we <= convert_we_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_45_ss_ctrl_user_data_out_net <= rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_45_ss_ctrl_user_data_out;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_45_ss_status_user_data_in <= cast_gw_dout_net;
  clk_net <= clk_1;
  ce_net <= ce_1;
  add_gen : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_add_gen_x30 
  port map (
    din => data_choice_y_net,
    we => we_choice_y_net,
    go => register6_q_net,
    cont => never_op_net,
    init => edge_op_y_net_x1,
    clk_1 => clk_net,
    ce_1 => ce_net,
    add => slice2_y_net,
    dout => delay6_q_net,
    we_o => logical6_y_net,
    status => concat_y_net
  );
  basic_ctrl : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_basic_ctrl_x30 
  port map (
    din => cast_dout_net,
    we => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc2_sync_net,
    trig => edge_op_y_net_x0,
    ctrl => concatenate_y_net_x0,
    stopi => never_op_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    dout => data_choice_y_net,
    we_o => we_choice_y_net,
    go => register6_q_net,
    init => edge_op_y_net_x1
  );
  bram : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_bram_x30 
  port map (
    addr => add_del_q_net,
    data_in => dat_del_q_net,
    we => we_del_q_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_45_ss_bram_addr => convert_addr_dout_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_45_ss_bram_data_in => convert_din1_dout_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_45_ss_bram_we => convert_we_dout_net
  );
  ctrl : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_ctrl_x30 
  port map (
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_45_ss_ctrl_user_data_out => rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_45_ss_ctrl_user_data_out_net,
    in_reg => reint1_output_port_net
  );
  ctrl_combine : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_ctrl_combine_x28 
  port map (
    in1 => reinterpret4_output_port_net,
    in2 => circ_or_y_net,
    in3 => reinterpret2_output_port_net,
    in4 => arm_or_y_net,
    bus_out => concatenate_y_net_x0
  );
  ctrl_split : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_ctrl_split_x29 
  port map (
    bus_in => reint1_output_port_net,
    msb_out4 => reinterpret4_output_port_net,
    out3 => slice3_y_net,
    out2 => reinterpret2_output_port_net,
    lsb_out1 => slice1_y_net
  );
  status : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_status_x29 
  port map (
    out_reg => concat_y_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_45_ss_status_user_data_in => cast_gw_dout_net
  );
  add_del : entity xil_defaultlib.sysgen_delay_4e9264ffdf 
  port map (
    clr => '0',
    d => slice2_y_net,
    clk => clk_net,
    ce => ce_net,
    q => add_del_q_net
  );
  arm : entity xil_defaultlib.sysgen_constant_a7b8778750 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => arm_op_net
  );
  arm_or : entity xil_defaultlib.sysgen_logical_d7dc12cf31 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => slice1_y_net,
    d1 => arm_op_net,
    y => arm_or_y_net
  );
  cast : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 32,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 32,
    latency => 0,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => ri_output_port_net,
    clk => clk_net,
    ce => ce_net,
    dout => cast_dout_net
  );
  circ : entity xil_defaultlib.sysgen_constant_a7b8778750 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => circ_op_net
  );
  circ_or : entity xil_defaultlib.sysgen_logical_d7dc12cf31 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => slice3_y_net,
    d1 => circ_op_net,
    y => circ_or_y_net
  );
  dat_del : entity xil_defaultlib.sysgen_delay_5ec362a23c 
  port map (
    clr => '0',
    d => delay6_q_net,
    clk => clk_net,
    ce => ce_net,
    q => dat_del_q_net
  );
  never : entity xil_defaultlib.sysgen_constant_a7b8778750 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => never_op_net
  );
  ri : entity xil_defaultlib.sysgen_reinterpret_52bb84f12b 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => concatenate_y_net,
    output_port => ri_output_port_net
  );
  we_del : entity xil_defaultlib.sysgen_delay_e0740ee3f9 
  port map (
    clr => '0',
    d => logical6_y_net,
    clk => clk_net,
    ce => ce_net,
    q => we_del_q_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot2_45
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_45 is
  port (
    in_d0 : in std_logic_vector( 16-1 downto 0 );
    in_d1 : in std_logic_vector( 16-1 downto 0 );
    we : in std_logic_vector( 1-1 downto 0 );
    trig : in std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_45_ss_ctrl_user_data_out : in std_logic_vector( 32-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    arm_out : out std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_45_ss_bram_addr : out std_logic_vector( 10-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_45_ss_bram_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_45_ss_bram_we : out std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_45_ss_status_user_data_in : out std_logic_vector( 32-1 downto 0 );
    goto_16399784_we1 : out std_logic_vector( 1-1 downto 0 );
    goto_16399784_we4 : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_45;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_45 is 
  signal arm_or_y_net : std_logic_vector( 1-1 downto 0 );
  signal slice16_y_net : std_logic_vector( 16-1 downto 0 );
  signal slice19_y_net : std_logic_vector( 16-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc2_sync_net : std_logic_vector( 1-1 downto 0 );
  signal edge_op_y_net : std_logic_vector( 1-1 downto 0 );
  signal convert_addr_dout_net : std_logic_vector( 10-1 downto 0 );
  signal convert_din1_dout_net : std_logic_vector( 32-1 downto 0 );
  signal convert_we_dout_net : std_logic_vector( 1-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_45_ss_ctrl_user_data_out_net : std_logic_vector( 32-1 downto 0 );
  signal cast_gw_dout_net : std_logic_vector( 32-1 downto 0 );
  signal we_choice_y_net : std_logic_vector( 1-1 downto 0 );
  signal logical6_y_net : std_logic_vector( 1-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal concatenate_y_net : std_logic_vector( 32-1 downto 0 );
  signal assert_d0_dout_net : std_logic_vector( 16-1 downto 0 );
  signal assert_d1_dout_net : std_logic_vector( 16-1 downto 0 );
begin
  arm_out <= arm_or_y_net;
  slice16_y_net <= in_d0;
  slice19_y_net <= in_d1;
  rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc2_sync_net <= we;
  edge_op_y_net <= trig;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_45_ss_bram_addr <= convert_addr_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_45_ss_bram_data_in <= convert_din1_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_45_ss_bram_we <= convert_we_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_45_ss_ctrl_user_data_out_net <= rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_45_ss_ctrl_user_data_out;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_45_ss_status_user_data_in <= cast_gw_dout_net;
  goto_16399784_we1 <= we_choice_y_net;
  goto_16399784_we4 <= logical6_y_net;
  clk_net <= clk_1;
  ce_net <= ce_1;
  buscreate : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_buscreate_x30 
  port map (
    in1 => assert_d0_dout_net,
    in2 => assert_d1_dout_net,
    bus_out => concatenate_y_net
  );
  ss : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_ss_x30 
  port map (
    din => concatenate_y_net,
    we => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc2_sync_net,
    trig => edge_op_y_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_45_ss_ctrl_user_data_out => rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_45_ss_ctrl_user_data_out_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    arm_out => arm_or_y_net,
    goto_16399784_we1 => we_choice_y_net,
    goto_16399784_we4 => logical6_y_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_45_ss_bram_addr => convert_addr_dout_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_45_ss_bram_data_in => convert_din1_dout_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_45_ss_bram_we => convert_we_dout_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_45_ss_status_user_data_in => cast_gw_dout_net
  );
  assert_d0 : entity xil_defaultlib.xlpassthrough 
  generic map (
    din_width => 16,
    dout_width => 16
  )
  port map (
    din => slice16_y_net,
    dout => assert_d0_dout_net
  );
  assert_d1 : entity xil_defaultlib.xlpassthrough 
  generic map (
    din_width => 16,
    dout_width => 16
  )
  port map (
    din => slice19_y_net,
    dout => assert_d1_dout_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot2_67/buscreate
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_buscreate_x29 is
  port (
    in1 : in std_logic_vector( 16-1 downto 0 );
    in2 : in std_logic_vector( 16-1 downto 0 );
    bus_out : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_buscreate_x29;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_buscreate_x29 is 
  signal concatenate_y_net : std_logic_vector( 32-1 downto 0 );
  signal assert_d0_dout_net : std_logic_vector( 16-1 downto 0 );
  signal assert_d1_dout_net : std_logic_vector( 16-1 downto 0 );
  signal reinterpret1_output_port_net : std_logic_vector( 16-1 downto 0 );
  signal reinterpret2_output_port_net : std_logic_vector( 16-1 downto 0 );
begin
  bus_out <= concatenate_y_net;
  assert_d0_dout_net <= in1;
  assert_d1_dout_net <= in2;
  concatenate : entity xil_defaultlib.sysgen_concat_37649e01d1 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    in0 => reinterpret1_output_port_net,
    in1 => reinterpret2_output_port_net,
    y => concatenate_y_net
  );
  reinterpret1 : entity xil_defaultlib.sysgen_reinterpret_03c8cdbbc1 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => assert_d0_dout_net,
    output_port => reinterpret1_output_port_net
  );
  reinterpret2 : entity xil_defaultlib.sysgen_reinterpret_03c8cdbbc1 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => assert_d1_dout_net,
    output_port => reinterpret2_output_port_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot2_67/ss/add_gen/edge_detect
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x60 is
  port (
    in_x0 : in std_logic_vector( 1-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    out_x0 : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x60;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x60 is 
  signal edge_op_y_net : std_logic_vector( 1-1 downto 0 );
  signal slice3_y_net : std_logic_vector( 1-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal delay_q_net : std_logic_vector( 1-1 downto 0 );
  signal inverter_op_net : std_logic_vector( 1-1 downto 0 );
begin
  out_x0 <= edge_op_y_net;
  slice3_y_net <= in_x0;
  clk_net <= clk_1;
  ce_net <= ce_1;
  delay : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 1
  )
  port map (
    en => '1',
    rst => '1',
    d => slice3_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay_q_net
  );
  inverter : entity xil_defaultlib.sysgen_inverter_6233897471 
  port map (
    clr => '0',
    ip => slice3_y_net,
    clk => clk_net,
    ce => ce_net,
    op => inverter_op_net
  );
  edge_op : entity xil_defaultlib.sysgen_logical_9cc14fefba 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => inverter_op_net,
    d1 => delay_q_net,
    y => edge_op_y_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot2_67/ss/add_gen
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_add_gen_x29 is
  port (
    din : in std_logic_vector( 32-1 downto 0 );
    we : in std_logic_vector( 1-1 downto 0 );
    go : in std_logic_vector( 1-1 downto 0 );
    cont : in std_logic_vector( 1-1 downto 0 );
    init : in std_logic_vector( 1-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    add : out std_logic_vector( 10-1 downto 0 );
    dout : out std_logic_vector( 32-1 downto 0 );
    we_o : out std_logic_vector( 1-1 downto 0 );
    status : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_add_gen_x29;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_add_gen_x29 is 
  signal slice2_y_net : std_logic_vector( 10-1 downto 0 );
  signal delay6_q_net : std_logic_vector( 32-1 downto 0 );
  signal logical6_y_net : std_logic_vector( 1-1 downto 0 );
  signal concat_y_net : std_logic_vector( 32-1 downto 0 );
  signal data_choice_y_net : std_logic_vector( 32-1 downto 0 );
  signal we_choice_y_net : std_logic_vector( 1-1 downto 0 );
  signal register6_q_net : std_logic_vector( 1-1 downto 0 );
  signal never_op_net : std_logic_vector( 1-1 downto 0 );
  signal edge_op_y_net : std_logic_vector( 1-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal edge_op_y_net_x0 : std_logic_vector( 1-1 downto 0 );
  signal slice3_y_net : std_logic_vector( 1-1 downto 0 );
  signal shift_op_net : std_logic_vector( 19-1 downto 0 );
  signal inverter_op_net : std_logic_vector( 1-1 downto 0 );
  signal delay1_q_net : std_logic_vector( 12-1 downto 0 );
  signal convert_dout_net : std_logic_vector( 19-1 downto 0 );
  signal register5_q_net : std_logic_vector( 1-1 downto 0 );
  signal delay_q_net : std_logic_vector( 1-1 downto 0 );
  signal delay4_q_net : std_logic_vector( 1-1 downto 0 );
  signal slice1_y_net : std_logic_vector( 12-1 downto 0 );
  signal delay3_q_net : std_logic_vector( 1-1 downto 0 );
  signal inverter1_op_net : std_logic_vector( 1-1 downto 0 );
  signal logical1_y_net : std_logic_vector( 1-1 downto 0 );
  signal logical4_y_net : std_logic_vector( 1-1 downto 0 );
  signal add_gen_op_net : std_logic_vector( 13-1 downto 0 );
begin
  add <= slice2_y_net;
  dout <= delay6_q_net;
  we_o <= logical6_y_net;
  status <= concat_y_net;
  data_choice_y_net <= din;
  we_choice_y_net <= we;
  register6_q_net <= go;
  never_op_net <= cont;
  edge_op_y_net <= init;
  clk_net <= clk_1;
  ce_net <= ce_1;
  edge_detect : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x60 
  port map (
    in_x0 => slice3_y_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    out_x0 => edge_op_y_net_x0
  );
  concat : entity xil_defaultlib.sysgen_concat_fc8edfac0e 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    in0 => shift_op_net,
    in1 => inverter_op_net,
    in2 => delay1_q_net,
    y => concat_y_net
  );
  convert : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 1,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 19,
    latency => 0,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => register5_q_net,
    clk => clk_net,
    ce => ce_net,
    dout => convert_dout_net
  );
  delay : entity xil_defaultlib.sysgen_delay_e0740ee3f9 
  port map (
    clr => '0',
    d => delay4_q_net,
    clk => clk_net,
    ce => ce_net,
    q => delay_q_net
  );
  delay1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 12
  )
  port map (
    en => '1',
    rst => '1',
    d => slice1_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay1_q_net
  );
  delay3 : entity xil_defaultlib.sysgen_delay_e0740ee3f9 
  port map (
    clr => '0',
    d => never_op_net,
    clk => clk_net,
    ce => ce_net,
    q => delay3_q_net
  );
  delay4 : entity xil_defaultlib.sysgen_delay_e0740ee3f9 
  port map (
    clr => '0',
    d => edge_op_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay4_q_net
  );
  delay6 : entity xil_defaultlib.sysgen_delay_5ec362a23c 
  port map (
    clr => '0',
    d => data_choice_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay6_q_net
  );
  inverter : entity xil_defaultlib.sysgen_inverter_918b6bc6d0 
  port map (
    clr => '0',
    ip => register5_q_net,
    clk => clk_net,
    ce => ce_net,
    op => inverter_op_net
  );
  inverter1 : entity xil_defaultlib.sysgen_inverter_6233897471 
  port map (
    clr => '0',
    ip => edge_op_y_net_x0,
    clk => clk_net,
    ce => ce_net,
    op => inverter1_op_net
  );
  logical1 : entity xil_defaultlib.sysgen_logical_2486129911 
  port map (
    clr => '0',
    d0 => we_choice_y_net,
    d1 => register6_q_net,
    clk => clk_net,
    ce => ce_net,
    y => logical1_y_net
  );
  logical4 : entity xil_defaultlib.sysgen_logical_d7dc12cf31 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => delay3_q_net,
    d1 => inverter1_op_net,
    y => logical4_y_net
  );
  logical6 : entity xil_defaultlib.sysgen_logical_c05fefc67b 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => register5_q_net,
    d1 => logical4_y_net,
    d2 => logical1_y_net,
    y => logical6_y_net
  );
  register5 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlregister 
  generic map (
    d_width => 1,
    init_value => b"1"
  )
  port map (
    d => delay3_q_net,
    rst => delay_q_net,
    en => edge_op_y_net_x0,
    clk => clk_net,
    ce => ce_net,
    q => register5_q_net
  );
  shift : entity xil_defaultlib.sysgen_shift_5af4fe0a99 
  port map (
    clr => '0',
    ip => convert_dout_net,
    clk => clk_net,
    ce => ce_net,
    op => shift_op_net
  );
  add_gen : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlcounter_free 
  generic map (
    core_name0 => "rfdc_multi_eight_adcs_2048gsps_mts_c_counter_binary_v12_0_i1",
    op_arith => xlUnsigned,
    op_width => 13
  )
  port map (
    clr => '0',
    rst => delay4_q_net,
    en => logical6_y_net,
    clk => clk_net,
    ce => ce_net,
    op => add_gen_op_net
  );
  slice1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 0,
    new_msb => 11,
    x_width => 13,
    y_width => 12
  )
  port map (
    x => add_gen_op_net,
    y => slice1_y_net
  );
  slice2 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 2,
    new_msb => 11,
    x_width => 13,
    y_width => 10
  )
  port map (
    x => add_gen_op_net,
    y => slice2_y_net
  );
  slice3 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 12,
    new_msb => 12,
    x_width => 13,
    y_width => 1
  )
  port map (
    x => add_gen_op_net,
    y => slice3_y_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot2_67/ss/basic_ctrl/dram_munge
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_dram_munge_x29 is
  port (
    din : in std_logic_vector( 32-1 downto 0 );
    we : in std_logic_vector( 1-1 downto 0 );
    init : in std_logic_vector( 1-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    dout : out std_logic_vector( 32-1 downto 0 );
    we_o : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_dram_munge_x29;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_dram_munge_x29 is 
  signal data_choice_y_net : std_logic_vector( 32-1 downto 0 );
  signal we_choice_y_net : std_logic_vector( 1-1 downto 0 );
  signal cast_dout_net : std_logic_vector( 32-1 downto 0 );
  signal mux1_y_net_x0 : std_logic_vector( 1-1 downto 0 );
  signal edge_op_y_net : std_logic_vector( 1-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal concat_y_net : std_logic_vector( 80-1 downto 0 );
  signal constant_op_net : std_logic_vector( 8-1 downto 0 );
  signal register_q_net : std_logic_vector( 32-1 downto 0 );
  signal register1_q_net : std_logic_vector( 32-1 downto 0 );
  signal concat1_y_net : std_logic_vector( 80-1 downto 0 );
  signal register2_q_net : std_logic_vector( 32-1 downto 0 );
  signal register3_q_net : std_logic_vector( 32-1 downto 0 );
  signal delay_q_net : std_logic_vector( 1-1 downto 0 );
  signal logical_y_net : std_logic_vector( 1-1 downto 0 );
  signal delay1_q_net : std_logic_vector( 1-1 downto 0 );
  signal logical1_y_net : std_logic_vector( 1-1 downto 0 );
  signal relational3_op_net : std_logic_vector( 1-1 downto 0 );
  signal mux1_y_net : std_logic_vector( 80-1 downto 0 );
  signal dout_count_op_net : std_logic_vector( 1-1 downto 0 );
  signal relational_op_net : std_logic_vector( 1-1 downto 0 );
  signal relational1_op_net : std_logic_vector( 1-1 downto 0 );
  signal relational2_op_net : std_logic_vector( 1-1 downto 0 );
  signal input_count_op_net : std_logic_vector( 2-1 downto 0 );
  signal con0_op_net : std_logic_vector( 2-1 downto 0 );
  signal con1_op_net : std_logic_vector( 2-1 downto 0 );
  signal con2_op_net : std_logic_vector( 2-1 downto 0 );
  signal con3_op_net : std_logic_vector( 2-1 downto 0 );
  signal dram_op_net : std_logic_vector( 1-1 downto 0 );
begin
  dout <= data_choice_y_net;
  we_o <= we_choice_y_net;
  cast_dout_net <= din;
  mux1_y_net_x0 <= we;
  edge_op_y_net <= init;
  clk_net <= clk_1;
  ce_net <= ce_1;
  concat : entity xil_defaultlib.sysgen_concat_e7487baac7 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    in0 => constant_op_net,
    in1 => register_q_net,
    in2 => constant_op_net,
    in3 => register1_q_net,
    y => concat_y_net
  );
  concat1 : entity xil_defaultlib.sysgen_concat_e7487baac7 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    in0 => constant_op_net,
    in1 => register2_q_net,
    in2 => constant_op_net,
    in3 => register3_q_net,
    y => concat1_y_net
  );
  constant_x0 : entity xil_defaultlib.sysgen_constant_869e31f04d 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => constant_op_net
  );
  delay : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 1
  )
  port map (
    en => '1',
    rst => '1',
    d => logical_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay_q_net
  );
  delay1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 1
  )
  port map (
    en => '1',
    rst => '1',
    d => logical1_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay1_q_net
  );
  logical : entity xil_defaultlib.sysgen_logical_2486129911 
  port map (
    clr => '0',
    d0 => relational3_op_net,
    d1 => mux1_y_net_x0,
    clk => clk_net,
    ce => ce_net,
    y => logical_y_net
  );
  logical1 : entity xil_defaultlib.sysgen_logical_d7dc12cf31 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => logical_y_net,
    d1 => delay_q_net,
    y => logical1_y_net
  );
  mux1 : entity xil_defaultlib.sysgen_mux_71ee2b1026 
  port map (
    clr => '0',
    sel => dout_count_op_net,
    d0 => concat_y_net,
    d1 => concat1_y_net,
    clk => clk_net,
    ce => ce_net,
    y => mux1_y_net
  );
  register_x0 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlregister 
  generic map (
    d_width => 32,
    init_value => b"00000000000000000000000000000000"
  )
  port map (
    rst => "0",
    d => cast_dout_net,
    en => relational_op_net,
    clk => clk_net,
    ce => ce_net,
    q => register_q_net
  );
  register1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlregister 
  generic map (
    d_width => 32,
    init_value => b"00000000000000000000000000000000"
  )
  port map (
    rst => "0",
    d => cast_dout_net,
    en => relational1_op_net,
    clk => clk_net,
    ce => ce_net,
    q => register1_q_net
  );
  register2 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlregister 
  generic map (
    d_width => 32,
    init_value => b"00000000000000000000000000000000"
  )
  port map (
    rst => "0",
    d => cast_dout_net,
    en => relational2_op_net,
    clk => clk_net,
    ce => ce_net,
    q => register2_q_net
  );
  register3 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlregister 
  generic map (
    d_width => 32,
    init_value => b"00000000000000000000000000000000"
  )
  port map (
    rst => "0",
    d => cast_dout_net,
    en => relational3_op_net,
    clk => clk_net,
    ce => ce_net,
    q => register3_q_net
  );
  relational : entity xil_defaultlib.sysgen_relational_e5d6b5eaca 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    a => input_count_op_net,
    b => con0_op_net,
    op => relational_op_net
  );
  relational1 : entity xil_defaultlib.sysgen_relational_e5d6b5eaca 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    a => input_count_op_net,
    b => con1_op_net,
    op => relational1_op_net
  );
  relational2 : entity xil_defaultlib.sysgen_relational_e5d6b5eaca 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    a => input_count_op_net,
    b => con2_op_net,
    op => relational2_op_net
  );
  relational3 : entity xil_defaultlib.sysgen_relational_e5d6b5eaca 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    a => input_count_op_net,
    b => con3_op_net,
    op => relational3_op_net
  );
  con0 : entity xil_defaultlib.sysgen_constant_b58c3a1535 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => con0_op_net
  );
  con1 : entity xil_defaultlib.sysgen_constant_d3f27a6354 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => con1_op_net
  );
  con2 : entity xil_defaultlib.sysgen_constant_2fa4689d4e 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => con2_op_net
  );
  con3 : entity xil_defaultlib.sysgen_constant_31bab66ba6 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => con3_op_net
  );
  data_choice : entity xil_defaultlib.sysgen_mux_d624c1af44 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    sel => dram_op_net,
    d0 => cast_dout_net,
    d1 => mux1_y_net,
    y => data_choice_y_net
  );
  dout_count : entity xil_defaultlib.sysgen_counter_a9c1c293c2 
  port map (
    clr => '0',
    rst => edge_op_y_net,
    en => logical1_y_net,
    clk => clk_net,
    ce => ce_net,
    op => dout_count_op_net
  );
  dram : entity xil_defaultlib.sysgen_constant_a7b8778750 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => dram_op_net
  );
  input_count : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlcounter_free 
  generic map (
    core_name0 => "rfdc_multi_eight_adcs_2048gsps_mts_c_counter_binary_v12_0_i2",
    op_arith => xlUnsigned,
    op_width => 2
  )
  port map (
    clr => '0',
    rst => edge_op_y_net,
    en => mux1_y_net_x0,
    clk => clk_net,
    ce => ce_net,
    op => input_count_op_net
  );
  we_choice : entity xil_defaultlib.sysgen_mux_4874190f11 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    sel => dram_op_net,
    d0 => mux1_y_net_x0,
    d1 => delay1_q_net,
    y => we_choice_y_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot2_67/ss/basic_ctrl/edge_detect
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x61 is
  port (
    in_x0 : in std_logic_vector( 1-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    out_x0 : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x61;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x61 is 
  signal edge_op_y_net : std_logic_vector( 1-1 downto 0 );
  signal delay1_q_net : std_logic_vector( 1-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal delay_q_net : std_logic_vector( 1-1 downto 0 );
  signal inverter_op_net : std_logic_vector( 1-1 downto 0 );
begin
  out_x0 <= edge_op_y_net;
  delay1_q_net <= in_x0;
  clk_net <= clk_1;
  ce_net <= ce_1;
  delay : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 1
  )
  port map (
    en => '1',
    rst => '1',
    d => delay1_q_net,
    clk => clk_net,
    ce => ce_net,
    q => delay_q_net
  );
  inverter : entity xil_defaultlib.sysgen_inverter_6233897471 
  port map (
    clr => '0',
    ip => delay1_q_net,
    clk => clk_net,
    ce => ce_net,
    op => inverter_op_net
  );
  edge_op : entity xil_defaultlib.sysgen_logical_0f1aa1e2d7 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => inverter_op_net,
    d1 => delay_q_net,
    y => edge_op_y_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot2_67/ss/basic_ctrl
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_basic_ctrl_x29 is
  port (
    din : in std_logic_vector( 32-1 downto 0 );
    we : in std_logic_vector( 1-1 downto 0 );
    trig : in std_logic_vector( 1-1 downto 0 );
    ctrl : in std_logic_vector( 32-1 downto 0 );
    stopi : in std_logic_vector( 1-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    dout : out std_logic_vector( 32-1 downto 0 );
    we_o : out std_logic_vector( 1-1 downto 0 );
    go : out std_logic_vector( 1-1 downto 0 );
    init : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_basic_ctrl_x29;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_basic_ctrl_x29 is 
  signal data_choice_y_net : std_logic_vector( 32-1 downto 0 );
  signal we_choice_y_net : std_logic_vector( 1-1 downto 0 );
  signal register6_q_net : std_logic_vector( 1-1 downto 0 );
  signal edge_op_y_net_x0 : std_logic_vector( 1-1 downto 0 );
  signal cast_dout_net : std_logic_vector( 32-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc2_sync_net : std_logic_vector( 1-1 downto 0 );
  signal edge_op_y_net : std_logic_vector( 1-1 downto 0 );
  signal concatenate_y_net : std_logic_vector( 32-1 downto 0 );
  signal never_op_net : std_logic_vector( 1-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal mux1_y_net : std_logic_vector( 1-1 downto 0 );
  signal delay1_q_net : std_logic_vector( 1-1 downto 0 );
  signal constant_op_net : std_logic_vector( 1-1 downto 0 );
  signal constant1_op_net : std_logic_vector( 1-1 downto 0 );
  signal constant2_op_net : std_logic_vector( 1-1 downto 0 );
  signal enable_y_net : std_logic_vector( 1-1 downto 0 );
  signal delay2_q_net : std_logic_vector( 1-1 downto 0 );
  signal trig_src_y_net : std_logic_vector( 1-1 downto 0 );
  signal delay3_q_net : std_logic_vector( 1-1 downto 0 );
  signal valid_src_y_net : std_logic_vector( 1-1 downto 0 );
  signal inverter_op_net : std_logic_vector( 1-1 downto 0 );
  signal logical_y_net : std_logic_vector( 1-1 downto 0 );
  signal mux2_y_net : std_logic_vector( 1-1 downto 0 );
  signal register1_q_net : std_logic_vector( 1-1 downto 0 );
begin
  dout <= data_choice_y_net;
  we_o <= we_choice_y_net;
  go <= register6_q_net;
  init <= edge_op_y_net_x0;
  cast_dout_net <= din;
  rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc2_sync_net <= we;
  edge_op_y_net <= trig;
  concatenate_y_net <= ctrl;
  never_op_net <= stopi;
  clk_net <= clk_1;
  ce_net <= ce_1;
  dram_munge : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_dram_munge_x29 
  port map (
    din => cast_dout_net,
    we => mux1_y_net,
    init => edge_op_y_net_x0,
    clk_1 => clk_net,
    ce_1 => ce_net,
    dout => data_choice_y_net,
    we_o => we_choice_y_net
  );
  edge_detect : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x61 
  port map (
    in_x0 => delay1_q_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    out_x0 => edge_op_y_net_x0
  );
  constant_x0 : entity xil_defaultlib.sysgen_constant_c95a0b5efb 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => constant_op_net
  );
  constant1 : entity xil_defaultlib.sysgen_constant_c95a0b5efb 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => constant1_op_net
  );
  constant2 : entity xil_defaultlib.sysgen_constant_c95a0b5efb 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => constant2_op_net
  );
  delay1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 1
  )
  port map (
    en => '1',
    rst => '1',
    d => enable_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay1_q_net
  );
  delay2 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 1
  )
  port map (
    en => '1',
    rst => '1',
    d => trig_src_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay2_q_net
  );
  delay3 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 1
  )
  port map (
    en => '1',
    rst => '1',
    d => valid_src_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay3_q_net
  );
  inverter : entity xil_defaultlib.sysgen_inverter_6233897471 
  port map (
    clr => '0',
    ip => edge_op_y_net_x0,
    clk => clk_net,
    ce => ce_net,
    op => inverter_op_net
  );
  logical : entity xil_defaultlib.sysgen_logical_d26e5cda59 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => mux2_y_net,
    d1 => inverter_op_net,
    y => logical_y_net
  );
  mux1 : entity xil_defaultlib.sysgen_mux_4874190f11 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    sel => delay3_q_net,
    d0 => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc2_sync_net,
    d1 => constant2_op_net,
    y => mux1_y_net
  );
  mux2 : entity xil_defaultlib.sysgen_mux_4874190f11 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    sel => delay2_q_net,
    d0 => edge_op_y_net,
    d1 => constant1_op_net,
    y => mux2_y_net
  );
  register1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlregister 
  generic map (
    d_width => 1,
    init_value => b"0"
  )
  port map (
    d => constant_op_net,
    rst => logical_y_net,
    en => edge_op_y_net_x0,
    clk => clk_net,
    ce => ce_net,
    q => register1_q_net
  );
  register6 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlregister 
  generic map (
    d_width => 1,
    init_value => b"0"
  )
  port map (
    d => mux2_y_net,
    rst => edge_op_y_net_x0,
    en => register1_q_net,
    clk => clk_net,
    ce => ce_net,
    q => register6_q_net
  );
  enable : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 0,
    new_msb => 0,
    x_width => 32,
    y_width => 1
  )
  port map (
    x => concatenate_y_net,
    y => enable_y_net
  );
  trig_src : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 1,
    new_msb => 1,
    x_width => 32,
    y_width => 1
  )
  port map (
    x => concatenate_y_net,
    y => trig_src_y_net
  );
  valid_src : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 2,
    new_msb => 2,
    x_width => 32,
    y_width => 1
  )
  port map (
    x => concatenate_y_net,
    y => valid_src_y_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot2_67/ss/bram/calc_add
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_calc_add_x29 is
  port (
    in_x0 : in std_logic_vector( 10-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    out_x0 : out std_logic_vector( 10-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_calc_add_x29;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_calc_add_x29 is 
  signal mux_y_net : std_logic_vector( 10-1 downto 0 );
  signal add_del_q_net : std_logic_vector( 10-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal add_sub_s_net : std_logic_vector( 1-1 downto 0 );
  signal const_op_net : std_logic_vector( 1-1 downto 0 );
  signal lsw_y_net : std_logic_vector( 1-1 downto 0 );
  signal concat_y_net : std_logic_vector( 10-1 downto 0 );
  signal msw_y_net : std_logic_vector( 9-1 downto 0 );
  signal convert_addr_dout_net : std_logic_vector( 10-1 downto 0 );
  signal manipulate_op_net : std_logic_vector( 1-1 downto 0 );
begin
  out_x0 <= mux_y_net;
  add_del_q_net <= in_x0;
  clk_net <= clk_1;
  ce_net <= ce_1;
  add_sub : entity xil_defaultlib.sysgen_addsub_fd3b6c715c 
  port map (
    clr => '0',
    a => const_op_net,
    b => lsw_y_net,
    clk => clk_net,
    ce => ce_net,
    s => add_sub_s_net
  );
  concat : entity xil_defaultlib.sysgen_concat_f4b90dfa16 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    in0 => msw_y_net,
    in1 => add_sub_s_net,
    y => concat_y_net
  );
  const : entity xil_defaultlib.sysgen_constant_a7b8778750 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => const_op_net
  );
  convert_addr : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 10,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 10,
    latency => 0,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => add_del_q_net,
    clk => clk_net,
    ce => ce_net,
    dout => convert_addr_dout_net
  );
  lsw : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 0,
    new_msb => 0,
    x_width => 10,
    y_width => 1
  )
  port map (
    x => convert_addr_dout_net,
    y => lsw_y_net
  );
  manipulate : entity xil_defaultlib.sysgen_constant_a7b8778750 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => manipulate_op_net
  );
  msw : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 1,
    new_msb => 9,
    x_width => 10,
    y_width => 9
  )
  port map (
    x => convert_addr_dout_net,
    y => msw_y_net
  );
  mux : entity xil_defaultlib.sysgen_mux_4417594854 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    sel => manipulate_op_net,
    d0 => convert_addr_dout_net,
    d1 => concat_y_net,
    y => mux_y_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot2_67/ss/bram/munge_in
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_munge_in_x29 is
  port (
    din : in std_logic_vector( 32-1 downto 0 );
    dout : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_munge_in_x29;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_munge_in_x29 is 
  signal reinterpret_out_output_port_net : std_logic_vector( 32-1 downto 0 );
  signal dat_del_q_net : std_logic_vector( 32-1 downto 0 );
begin
  dout <= reinterpret_out_output_port_net;
  dat_del_q_net <= din;
  reinterpret_out : entity xil_defaultlib.sysgen_reinterpret_52bb84f12b 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => dat_del_q_net,
    output_port => reinterpret_out_output_port_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot2_67/ss/bram
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_bram_x29 is
  port (
    addr : in std_logic_vector( 10-1 downto 0 );
    data_in : in std_logic_vector( 32-1 downto 0 );
    we : in std_logic_vector( 1-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_67_ss_bram_addr : out std_logic_vector( 10-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_67_ss_bram_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_67_ss_bram_we : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_bram_x29;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_bram_x29 is 
  signal add_del_q_net : std_logic_vector( 10-1 downto 0 );
  signal dat_del_q_net : std_logic_vector( 32-1 downto 0 );
  signal we_del_q_net : std_logic_vector( 1-1 downto 0 );
  signal convert_addr_dout_net : std_logic_vector( 10-1 downto 0 );
  signal convert_din1_dout_net : std_logic_vector( 32-1 downto 0 );
  signal convert_we_dout_net : std_logic_vector( 1-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal mux_y_net : std_logic_vector( 10-1 downto 0 );
  signal reinterpret_out_output_port_net : std_logic_vector( 32-1 downto 0 );
begin
  add_del_q_net <= addr;
  dat_del_q_net <= data_in;
  we_del_q_net <= we;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_67_ss_bram_addr <= convert_addr_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_67_ss_bram_data_in <= convert_din1_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_67_ss_bram_we <= convert_we_dout_net;
  clk_net <= clk_1;
  ce_net <= ce_1;
  calc_add : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_calc_add_x29 
  port map (
    in_x0 => add_del_q_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    out_x0 => mux_y_net
  );
  munge_in : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_munge_in_x29 
  port map (
    din => dat_del_q_net,
    dout => reinterpret_out_output_port_net
  );
  convert_addr : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 10,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 10,
    latency => 0,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => mux_y_net,
    clk => clk_net,
    ce => ce_net,
    dout => convert_addr_dout_net
  );
  convert_din1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 32,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 32,
    latency => 0,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => reinterpret_out_output_port_net,
    clk => clk_net,
    ce => ce_net,
    dout => convert_din1_dout_net
  );
  convert_we : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 1,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 1,
    latency => 0,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => we_del_q_net,
    clk => clk_net,
    ce => ce_net,
    dout => convert_we_dout_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot2_67/ss/ctrl
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_ctrl_x28 is
  port (
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_67_ss_ctrl_user_data_out : in std_logic_vector( 32-1 downto 0 );
    in_reg : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_ctrl_x28;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_ctrl_x28 is 
  signal reint1_output_port_net : std_logic_vector( 32-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_67_ss_ctrl_user_data_out_net : std_logic_vector( 32-1 downto 0 );
  signal io_delay_q_net : std_logic_vector( 32-1 downto 0 );
  signal slice_reg_y_net : std_logic_vector( 32-1 downto 0 );
begin
  in_reg <= reint1_output_port_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_67_ss_ctrl_user_data_out_net <= rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_67_ss_ctrl_user_data_out;
  io_delay : entity xil_defaultlib.sysgen_delay_34e314c510 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d => rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_67_ss_ctrl_user_data_out_net,
    q => io_delay_q_net
  );
  slice_reg : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 0,
    new_msb => 31,
    x_width => 32,
    y_width => 32
  )
  port map (
    x => io_delay_q_net,
    y => slice_reg_y_net
  );
  reint1 : entity xil_defaultlib.sysgen_reinterpret_52bb84f12b 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => slice_reg_y_net,
    output_port => reint1_output_port_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot2_67/ss/ctrl_combine
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_ctrl_combine_x30 is
  port (
    in1 : in std_logic_vector( 28-1 downto 0 );
    in2 : in std_logic_vector( 1-1 downto 0 );
    in3 : in std_logic_vector( 2-1 downto 0 );
    in4 : in std_logic_vector( 1-1 downto 0 );
    bus_out : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_ctrl_combine_x30;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_ctrl_combine_x30 is 
  signal concatenate_y_net : std_logic_vector( 32-1 downto 0 );
  signal reinterpret4_output_port_net_x0 : std_logic_vector( 28-1 downto 0 );
  signal circ_or_y_net : std_logic_vector( 1-1 downto 0 );
  signal reinterpret2_output_port_net : std_logic_vector( 2-1 downto 0 );
  signal arm_or_y_net : std_logic_vector( 1-1 downto 0 );
  signal reinterpret1_output_port_net : std_logic_vector( 28-1 downto 0 );
  signal reinterpret2_output_port_net_x0 : std_logic_vector( 1-1 downto 0 );
  signal reinterpret3_output_port_net : std_logic_vector( 2-1 downto 0 );
  signal reinterpret4_output_port_net : std_logic_vector( 1-1 downto 0 );
begin
  bus_out <= concatenate_y_net;
  reinterpret4_output_port_net_x0 <= in1;
  circ_or_y_net <= in2;
  reinterpret2_output_port_net <= in3;
  arm_or_y_net <= in4;
  concatenate : entity xil_defaultlib.sysgen_concat_8611e618a5 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    in0 => reinterpret1_output_port_net,
    in1 => reinterpret2_output_port_net_x0,
    in2 => reinterpret3_output_port_net,
    in3 => reinterpret4_output_port_net,
    y => concatenate_y_net
  );
  reinterpret1 : entity xil_defaultlib.sysgen_reinterpret_f7e0b72e82 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => reinterpret4_output_port_net_x0,
    output_port => reinterpret1_output_port_net
  );
  reinterpret2 : entity xil_defaultlib.sysgen_reinterpret_317b92931a 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => circ_or_y_net,
    output_port => reinterpret2_output_port_net_x0
  );
  reinterpret3 : entity xil_defaultlib.sysgen_reinterpret_5dc9f217bd 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => reinterpret2_output_port_net,
    output_port => reinterpret3_output_port_net
  );
  reinterpret4 : entity xil_defaultlib.sysgen_reinterpret_317b92931a 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => arm_or_y_net,
    output_port => reinterpret4_output_port_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot2_67/ss/ctrl_split
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_ctrl_split_x24 is
  port (
    bus_in : in std_logic_vector( 32-1 downto 0 );
    msb_out4 : out std_logic_vector( 28-1 downto 0 );
    out3 : out std_logic_vector( 1-1 downto 0 );
    out2 : out std_logic_vector( 2-1 downto 0 );
    lsb_out1 : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_ctrl_split_x24;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_ctrl_split_x24 is 
  signal reinterpret4_output_port_net : std_logic_vector( 28-1 downto 0 );
  signal slice3_y_net : std_logic_vector( 1-1 downto 0 );
  signal reinterpret2_output_port_net : std_logic_vector( 2-1 downto 0 );
  signal slice1_y_net : std_logic_vector( 1-1 downto 0 );
  signal reint1_output_port_net : std_logic_vector( 32-1 downto 0 );
  signal slice2_y_net : std_logic_vector( 2-1 downto 0 );
  signal slice4_y_net : std_logic_vector( 28-1 downto 0 );
begin
  msb_out4 <= reinterpret4_output_port_net;
  out3 <= slice3_y_net;
  out2 <= reinterpret2_output_port_net;
  lsb_out1 <= slice1_y_net;
  reint1_output_port_net <= bus_in;
  reinterpret2 : entity xil_defaultlib.sysgen_reinterpret_5dc9f217bd 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => slice2_y_net,
    output_port => reinterpret2_output_port_net
  );
  reinterpret4 : entity xil_defaultlib.sysgen_reinterpret_f7e0b72e82 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => slice4_y_net,
    output_port => reinterpret4_output_port_net
  );
  slice1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 0,
    new_msb => 0,
    x_width => 32,
    y_width => 1
  )
  port map (
    x => reint1_output_port_net,
    y => slice1_y_net
  );
  slice2 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 1,
    new_msb => 2,
    x_width => 32,
    y_width => 2
  )
  port map (
    x => reint1_output_port_net,
    y => slice2_y_net
  );
  slice3 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 3,
    new_msb => 3,
    x_width => 32,
    y_width => 1
  )
  port map (
    x => reint1_output_port_net,
    y => slice3_y_net
  );
  slice4 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 4,
    new_msb => 31,
    x_width => 32,
    y_width => 28
  )
  port map (
    x => reint1_output_port_net,
    y => slice4_y_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot2_67/ss/status
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_status_x23 is
  port (
    out_reg : in std_logic_vector( 32-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_67_ss_status_user_data_in : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_status_x23;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_status_x23 is 
  signal concat_y_net : std_logic_vector( 32-1 downto 0 );
  signal cast_gw_dout_net : std_logic_vector( 32-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal io_delay_q_net : std_logic_vector( 32-1 downto 0 );
  signal reint1_output_port_net : std_logic_vector( 32-1 downto 0 );
  signal assert_reg_dout_net : std_logic_vector( 32-1 downto 0 );
begin
  concat_y_net <= out_reg;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_67_ss_status_user_data_in <= cast_gw_dout_net;
  clk_net <= clk_1;
  ce_net <= ce_1;
  io_delay : entity xil_defaultlib.sysgen_delay_34e314c510 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d => reint1_output_port_net,
    q => io_delay_q_net
  );
  cast_gw : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 32,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 32,
    latency => 1,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => io_delay_q_net,
    clk => clk_net,
    ce => ce_net,
    dout => cast_gw_dout_net
  );
  assert_reg : entity xil_defaultlib.xlpassthrough 
  generic map (
    din_width => 32,
    dout_width => 32
  )
  port map (
    din => concat_y_net,
    dout => assert_reg_dout_net
  );
  reint1 : entity xil_defaultlib.sysgen_reinterpret_52bb84f12b 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => assert_reg_dout_net,
    output_port => reint1_output_port_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot2_67/ss
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_ss_x29 is
  port (
    din : in std_logic_vector( 32-1 downto 0 );
    we : in std_logic_vector( 1-1 downto 0 );
    trig : in std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_67_ss_ctrl_user_data_out : in std_logic_vector( 32-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    arm_out : out std_logic_vector( 1-1 downto 0 );
    goto_18306408_we1 : out std_logic_vector( 1-1 downto 0 );
    goto_18306408_we4 : out std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_67_ss_bram_addr : out std_logic_vector( 10-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_67_ss_bram_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_67_ss_bram_we : out std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_67_ss_status_user_data_in : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_ss_x29;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_ss_x29 is 
  signal arm_or_y_net : std_logic_vector( 1-1 downto 0 );
  signal concatenate_y_net : std_logic_vector( 32-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc2_sync_net : std_logic_vector( 1-1 downto 0 );
  signal edge_op_y_net_x0 : std_logic_vector( 1-1 downto 0 );
  signal we_choice_y_net : std_logic_vector( 1-1 downto 0 );
  signal logical6_y_net : std_logic_vector( 1-1 downto 0 );
  signal convert_addr_dout_net : std_logic_vector( 10-1 downto 0 );
  signal convert_din1_dout_net : std_logic_vector( 32-1 downto 0 );
  signal convert_we_dout_net : std_logic_vector( 1-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_67_ss_ctrl_user_data_out_net : std_logic_vector( 32-1 downto 0 );
  signal cast_gw_dout_net : std_logic_vector( 32-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal slice2_y_net : std_logic_vector( 10-1 downto 0 );
  signal delay6_q_net : std_logic_vector( 32-1 downto 0 );
  signal concat_y_net : std_logic_vector( 32-1 downto 0 );
  signal data_choice_y_net : std_logic_vector( 32-1 downto 0 );
  signal register6_q_net : std_logic_vector( 1-1 downto 0 );
  signal never_op_net : std_logic_vector( 1-1 downto 0 );
  signal edge_op_y_net_x1 : std_logic_vector( 1-1 downto 0 );
  signal cast_dout_net : std_logic_vector( 32-1 downto 0 );
  signal concatenate_y_net_x0 : std_logic_vector( 32-1 downto 0 );
  signal add_del_q_net : std_logic_vector( 10-1 downto 0 );
  signal dat_del_q_net : std_logic_vector( 32-1 downto 0 );
  signal we_del_q_net : std_logic_vector( 1-1 downto 0 );
  signal reint1_output_port_net : std_logic_vector( 32-1 downto 0 );
  signal reinterpret4_output_port_net : std_logic_vector( 28-1 downto 0 );
  signal circ_or_y_net : std_logic_vector( 1-1 downto 0 );
  signal reinterpret2_output_port_net : std_logic_vector( 2-1 downto 0 );
  signal slice3_y_net : std_logic_vector( 1-1 downto 0 );
  signal slice1_y_net : std_logic_vector( 1-1 downto 0 );
  signal arm_op_net : std_logic_vector( 1-1 downto 0 );
  signal ri_output_port_net : std_logic_vector( 32-1 downto 0 );
  signal circ_op_net : std_logic_vector( 1-1 downto 0 );
begin
  arm_out <= arm_or_y_net;
  concatenate_y_net <= din;
  rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc2_sync_net <= we;
  edge_op_y_net_x0 <= trig;
  goto_18306408_we1 <= we_choice_y_net;
  goto_18306408_we4 <= logical6_y_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_67_ss_bram_addr <= convert_addr_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_67_ss_bram_data_in <= convert_din1_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_67_ss_bram_we <= convert_we_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_67_ss_ctrl_user_data_out_net <= rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_67_ss_ctrl_user_data_out;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_67_ss_status_user_data_in <= cast_gw_dout_net;
  clk_net <= clk_1;
  ce_net <= ce_1;
  add_gen : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_add_gen_x29 
  port map (
    din => data_choice_y_net,
    we => we_choice_y_net,
    go => register6_q_net,
    cont => never_op_net,
    init => edge_op_y_net_x1,
    clk_1 => clk_net,
    ce_1 => ce_net,
    add => slice2_y_net,
    dout => delay6_q_net,
    we_o => logical6_y_net,
    status => concat_y_net
  );
  basic_ctrl : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_basic_ctrl_x29 
  port map (
    din => cast_dout_net,
    we => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc2_sync_net,
    trig => edge_op_y_net_x0,
    ctrl => concatenate_y_net_x0,
    stopi => never_op_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    dout => data_choice_y_net,
    we_o => we_choice_y_net,
    go => register6_q_net,
    init => edge_op_y_net_x1
  );
  bram : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_bram_x29 
  port map (
    addr => add_del_q_net,
    data_in => dat_del_q_net,
    we => we_del_q_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_67_ss_bram_addr => convert_addr_dout_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_67_ss_bram_data_in => convert_din1_dout_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_67_ss_bram_we => convert_we_dout_net
  );
  ctrl : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_ctrl_x28 
  port map (
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_67_ss_ctrl_user_data_out => rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_67_ss_ctrl_user_data_out_net,
    in_reg => reint1_output_port_net
  );
  ctrl_combine : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_ctrl_combine_x30 
  port map (
    in1 => reinterpret4_output_port_net,
    in2 => circ_or_y_net,
    in3 => reinterpret2_output_port_net,
    in4 => arm_or_y_net,
    bus_out => concatenate_y_net_x0
  );
  ctrl_split : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_ctrl_split_x24 
  port map (
    bus_in => reint1_output_port_net,
    msb_out4 => reinterpret4_output_port_net,
    out3 => slice3_y_net,
    out2 => reinterpret2_output_port_net,
    lsb_out1 => slice1_y_net
  );
  status : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_status_x23 
  port map (
    out_reg => concat_y_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_67_ss_status_user_data_in => cast_gw_dout_net
  );
  add_del : entity xil_defaultlib.sysgen_delay_4e9264ffdf 
  port map (
    clr => '0',
    d => slice2_y_net,
    clk => clk_net,
    ce => ce_net,
    q => add_del_q_net
  );
  arm : entity xil_defaultlib.sysgen_constant_a7b8778750 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => arm_op_net
  );
  arm_or : entity xil_defaultlib.sysgen_logical_d7dc12cf31 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => slice1_y_net,
    d1 => arm_op_net,
    y => arm_or_y_net
  );
  cast : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 32,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 32,
    latency => 0,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => ri_output_port_net,
    clk => clk_net,
    ce => ce_net,
    dout => cast_dout_net
  );
  circ : entity xil_defaultlib.sysgen_constant_a7b8778750 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => circ_op_net
  );
  circ_or : entity xil_defaultlib.sysgen_logical_d7dc12cf31 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => slice3_y_net,
    d1 => circ_op_net,
    y => circ_or_y_net
  );
  dat_del : entity xil_defaultlib.sysgen_delay_5ec362a23c 
  port map (
    clr => '0',
    d => delay6_q_net,
    clk => clk_net,
    ce => ce_net,
    q => dat_del_q_net
  );
  never : entity xil_defaultlib.sysgen_constant_a7b8778750 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => never_op_net
  );
  ri : entity xil_defaultlib.sysgen_reinterpret_52bb84f12b 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => concatenate_y_net,
    output_port => ri_output_port_net
  );
  we_del : entity xil_defaultlib.sysgen_delay_e0740ee3f9 
  port map (
    clr => '0',
    d => logical6_y_net,
    clk => clk_net,
    ce => ce_net,
    q => we_del_q_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot2_67
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_67 is
  port (
    in_d0 : in std_logic_vector( 16-1 downto 0 );
    in_d1 : in std_logic_vector( 16-1 downto 0 );
    we : in std_logic_vector( 1-1 downto 0 );
    trig : in std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_67_ss_ctrl_user_data_out : in std_logic_vector( 32-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    arm_out : out std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_67_ss_bram_addr : out std_logic_vector( 10-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_67_ss_bram_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_67_ss_bram_we : out std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_67_ss_status_user_data_in : out std_logic_vector( 32-1 downto 0 );
    goto_18306408_we1 : out std_logic_vector( 1-1 downto 0 );
    goto_18306408_we4 : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_67;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_67 is 
  signal arm_or_y_net : std_logic_vector( 1-1 downto 0 );
  signal slice17_y_net : std_logic_vector( 16-1 downto 0 );
  signal slice18_y_net : std_logic_vector( 16-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc2_sync_net : std_logic_vector( 1-1 downto 0 );
  signal edge_op_y_net : std_logic_vector( 1-1 downto 0 );
  signal convert_addr_dout_net : std_logic_vector( 10-1 downto 0 );
  signal convert_din1_dout_net : std_logic_vector( 32-1 downto 0 );
  signal convert_we_dout_net : std_logic_vector( 1-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_67_ss_ctrl_user_data_out_net : std_logic_vector( 32-1 downto 0 );
  signal cast_gw_dout_net : std_logic_vector( 32-1 downto 0 );
  signal we_choice_y_net : std_logic_vector( 1-1 downto 0 );
  signal logical6_y_net : std_logic_vector( 1-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal concatenate_y_net : std_logic_vector( 32-1 downto 0 );
  signal assert_d0_dout_net : std_logic_vector( 16-1 downto 0 );
  signal assert_d1_dout_net : std_logic_vector( 16-1 downto 0 );
begin
  arm_out <= arm_or_y_net;
  slice17_y_net <= in_d0;
  slice18_y_net <= in_d1;
  rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc2_sync_net <= we;
  edge_op_y_net <= trig;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_67_ss_bram_addr <= convert_addr_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_67_ss_bram_data_in <= convert_din1_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_67_ss_bram_we <= convert_we_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_67_ss_ctrl_user_data_out_net <= rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_67_ss_ctrl_user_data_out;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_67_ss_status_user_data_in <= cast_gw_dout_net;
  goto_18306408_we1 <= we_choice_y_net;
  goto_18306408_we4 <= logical6_y_net;
  clk_net <= clk_1;
  ce_net <= ce_1;
  buscreate : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_buscreate_x29 
  port map (
    in1 => assert_d0_dout_net,
    in2 => assert_d1_dout_net,
    bus_out => concatenate_y_net
  );
  ss : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_ss_x29 
  port map (
    din => concatenate_y_net,
    we => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc2_sync_net,
    trig => edge_op_y_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_67_ss_ctrl_user_data_out => rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_67_ss_ctrl_user_data_out_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    arm_out => arm_or_y_net,
    goto_18306408_we1 => we_choice_y_net,
    goto_18306408_we4 => logical6_y_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_67_ss_bram_addr => convert_addr_dout_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_67_ss_bram_data_in => convert_din1_dout_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_67_ss_bram_we => convert_we_dout_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_67_ss_status_user_data_in => cast_gw_dout_net
  );
  assert_d0 : entity xil_defaultlib.xlpassthrough 
  generic map (
    din_width => 16,
    dout_width => 16
  )
  port map (
    din => slice17_y_net,
    dout => assert_d0_dout_net
  );
  assert_d1 : entity xil_defaultlib.xlpassthrough 
  generic map (
    din_width => 16,
    dout_width => 16
  )
  port map (
    din => slice18_y_net,
    dout => assert_d1_dout_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot3_01/buscreate
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_buscreate_x24 is
  port (
    in1 : in std_logic_vector( 16-1 downto 0 );
    in2 : in std_logic_vector( 16-1 downto 0 );
    bus_out : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_buscreate_x24;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_buscreate_x24 is 
  signal concatenate_y_net : std_logic_vector( 32-1 downto 0 );
  signal assert_d0_dout_net : std_logic_vector( 16-1 downto 0 );
  signal assert_d1_dout_net : std_logic_vector( 16-1 downto 0 );
  signal reinterpret1_output_port_net : std_logic_vector( 16-1 downto 0 );
  signal reinterpret2_output_port_net : std_logic_vector( 16-1 downto 0 );
begin
  bus_out <= concatenate_y_net;
  assert_d0_dout_net <= in1;
  assert_d1_dout_net <= in2;
  concatenate : entity xil_defaultlib.sysgen_concat_37649e01d1 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    in0 => reinterpret1_output_port_net,
    in1 => reinterpret2_output_port_net,
    y => concatenate_y_net
  );
  reinterpret1 : entity xil_defaultlib.sysgen_reinterpret_03c8cdbbc1 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => assert_d0_dout_net,
    output_port => reinterpret1_output_port_net
  );
  reinterpret2 : entity xil_defaultlib.sysgen_reinterpret_03c8cdbbc1 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => assert_d1_dout_net,
    output_port => reinterpret2_output_port_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot3_01/ss/add_gen/edge_detect
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x50 is
  port (
    in_x0 : in std_logic_vector( 1-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    out_x0 : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x50;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x50 is 
  signal edge_op_y_net : std_logic_vector( 1-1 downto 0 );
  signal slice3_y_net : std_logic_vector( 1-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal delay_q_net : std_logic_vector( 1-1 downto 0 );
  signal inverter_op_net : std_logic_vector( 1-1 downto 0 );
begin
  out_x0 <= edge_op_y_net;
  slice3_y_net <= in_x0;
  clk_net <= clk_1;
  ce_net <= ce_1;
  delay : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 1
  )
  port map (
    en => '1',
    rst => '1',
    d => slice3_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay_q_net
  );
  inverter : entity xil_defaultlib.sysgen_inverter_6233897471 
  port map (
    clr => '0',
    ip => slice3_y_net,
    clk => clk_net,
    ce => ce_net,
    op => inverter_op_net
  );
  edge_op : entity xil_defaultlib.sysgen_logical_9cc14fefba 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => inverter_op_net,
    d1 => delay_q_net,
    y => edge_op_y_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot3_01/ss/add_gen
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_add_gen_x24 is
  port (
    din : in std_logic_vector( 32-1 downto 0 );
    we : in std_logic_vector( 1-1 downto 0 );
    go : in std_logic_vector( 1-1 downto 0 );
    cont : in std_logic_vector( 1-1 downto 0 );
    init : in std_logic_vector( 1-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    add : out std_logic_vector( 10-1 downto 0 );
    dout : out std_logic_vector( 32-1 downto 0 );
    we_o : out std_logic_vector( 1-1 downto 0 );
    status : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_add_gen_x24;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_add_gen_x24 is 
  signal slice2_y_net : std_logic_vector( 10-1 downto 0 );
  signal delay6_q_net : std_logic_vector( 32-1 downto 0 );
  signal logical6_y_net : std_logic_vector( 1-1 downto 0 );
  signal concat_y_net : std_logic_vector( 32-1 downto 0 );
  signal data_choice_y_net : std_logic_vector( 32-1 downto 0 );
  signal we_choice_y_net : std_logic_vector( 1-1 downto 0 );
  signal register6_q_net : std_logic_vector( 1-1 downto 0 );
  signal never_op_net : std_logic_vector( 1-1 downto 0 );
  signal edge_op_y_net : std_logic_vector( 1-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal edge_op_y_net_x0 : std_logic_vector( 1-1 downto 0 );
  signal slice3_y_net : std_logic_vector( 1-1 downto 0 );
  signal shift_op_net : std_logic_vector( 19-1 downto 0 );
  signal inverter_op_net : std_logic_vector( 1-1 downto 0 );
  signal delay1_q_net : std_logic_vector( 12-1 downto 0 );
  signal convert_dout_net : std_logic_vector( 19-1 downto 0 );
  signal register5_q_net : std_logic_vector( 1-1 downto 0 );
  signal delay_q_net : std_logic_vector( 1-1 downto 0 );
  signal delay4_q_net : std_logic_vector( 1-1 downto 0 );
  signal slice1_y_net : std_logic_vector( 12-1 downto 0 );
  signal delay3_q_net : std_logic_vector( 1-1 downto 0 );
  signal inverter1_op_net : std_logic_vector( 1-1 downto 0 );
  signal logical1_y_net : std_logic_vector( 1-1 downto 0 );
  signal logical4_y_net : std_logic_vector( 1-1 downto 0 );
  signal add_gen_op_net : std_logic_vector( 13-1 downto 0 );
begin
  add <= slice2_y_net;
  dout <= delay6_q_net;
  we_o <= logical6_y_net;
  status <= concat_y_net;
  data_choice_y_net <= din;
  we_choice_y_net <= we;
  register6_q_net <= go;
  never_op_net <= cont;
  edge_op_y_net <= init;
  clk_net <= clk_1;
  ce_net <= ce_1;
  edge_detect : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x50 
  port map (
    in_x0 => slice3_y_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    out_x0 => edge_op_y_net_x0
  );
  concat : entity xil_defaultlib.sysgen_concat_fc8edfac0e 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    in0 => shift_op_net,
    in1 => inverter_op_net,
    in2 => delay1_q_net,
    y => concat_y_net
  );
  convert : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 1,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 19,
    latency => 0,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => register5_q_net,
    clk => clk_net,
    ce => ce_net,
    dout => convert_dout_net
  );
  delay : entity xil_defaultlib.sysgen_delay_e0740ee3f9 
  port map (
    clr => '0',
    d => delay4_q_net,
    clk => clk_net,
    ce => ce_net,
    q => delay_q_net
  );
  delay1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 12
  )
  port map (
    en => '1',
    rst => '1',
    d => slice1_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay1_q_net
  );
  delay3 : entity xil_defaultlib.sysgen_delay_e0740ee3f9 
  port map (
    clr => '0',
    d => never_op_net,
    clk => clk_net,
    ce => ce_net,
    q => delay3_q_net
  );
  delay4 : entity xil_defaultlib.sysgen_delay_e0740ee3f9 
  port map (
    clr => '0',
    d => edge_op_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay4_q_net
  );
  delay6 : entity xil_defaultlib.sysgen_delay_5ec362a23c 
  port map (
    clr => '0',
    d => data_choice_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay6_q_net
  );
  inverter : entity xil_defaultlib.sysgen_inverter_918b6bc6d0 
  port map (
    clr => '0',
    ip => register5_q_net,
    clk => clk_net,
    ce => ce_net,
    op => inverter_op_net
  );
  inverter1 : entity xil_defaultlib.sysgen_inverter_6233897471 
  port map (
    clr => '0',
    ip => edge_op_y_net_x0,
    clk => clk_net,
    ce => ce_net,
    op => inverter1_op_net
  );
  logical1 : entity xil_defaultlib.sysgen_logical_2486129911 
  port map (
    clr => '0',
    d0 => we_choice_y_net,
    d1 => register6_q_net,
    clk => clk_net,
    ce => ce_net,
    y => logical1_y_net
  );
  logical4 : entity xil_defaultlib.sysgen_logical_d7dc12cf31 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => delay3_q_net,
    d1 => inverter1_op_net,
    y => logical4_y_net
  );
  logical6 : entity xil_defaultlib.sysgen_logical_c05fefc67b 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => register5_q_net,
    d1 => logical4_y_net,
    d2 => logical1_y_net,
    y => logical6_y_net
  );
  register5 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlregister 
  generic map (
    d_width => 1,
    init_value => b"1"
  )
  port map (
    d => delay3_q_net,
    rst => delay_q_net,
    en => edge_op_y_net_x0,
    clk => clk_net,
    ce => ce_net,
    q => register5_q_net
  );
  shift : entity xil_defaultlib.sysgen_shift_5af4fe0a99 
  port map (
    clr => '0',
    ip => convert_dout_net,
    clk => clk_net,
    ce => ce_net,
    op => shift_op_net
  );
  add_gen : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlcounter_free 
  generic map (
    core_name0 => "rfdc_multi_eight_adcs_2048gsps_mts_c_counter_binary_v12_0_i1",
    op_arith => xlUnsigned,
    op_width => 13
  )
  port map (
    clr => '0',
    rst => delay4_q_net,
    en => logical6_y_net,
    clk => clk_net,
    ce => ce_net,
    op => add_gen_op_net
  );
  slice1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 0,
    new_msb => 11,
    x_width => 13,
    y_width => 12
  )
  port map (
    x => add_gen_op_net,
    y => slice1_y_net
  );
  slice2 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 2,
    new_msb => 11,
    x_width => 13,
    y_width => 10
  )
  port map (
    x => add_gen_op_net,
    y => slice2_y_net
  );
  slice3 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 12,
    new_msb => 12,
    x_width => 13,
    y_width => 1
  )
  port map (
    x => add_gen_op_net,
    y => slice3_y_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot3_01/ss/basic_ctrl/dram_munge
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_dram_munge_x24 is
  port (
    din : in std_logic_vector( 32-1 downto 0 );
    we : in std_logic_vector( 1-1 downto 0 );
    init : in std_logic_vector( 1-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    dout : out std_logic_vector( 32-1 downto 0 );
    we_o : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_dram_munge_x24;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_dram_munge_x24 is 
  signal data_choice_y_net : std_logic_vector( 32-1 downto 0 );
  signal we_choice_y_net : std_logic_vector( 1-1 downto 0 );
  signal cast_dout_net : std_logic_vector( 32-1 downto 0 );
  signal mux1_y_net_x0 : std_logic_vector( 1-1 downto 0 );
  signal edge_op_y_net : std_logic_vector( 1-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal concat_y_net : std_logic_vector( 80-1 downto 0 );
  signal constant_op_net : std_logic_vector( 8-1 downto 0 );
  signal register_q_net : std_logic_vector( 32-1 downto 0 );
  signal register1_q_net : std_logic_vector( 32-1 downto 0 );
  signal concat1_y_net : std_logic_vector( 80-1 downto 0 );
  signal register2_q_net : std_logic_vector( 32-1 downto 0 );
  signal register3_q_net : std_logic_vector( 32-1 downto 0 );
  signal delay_q_net : std_logic_vector( 1-1 downto 0 );
  signal logical_y_net : std_logic_vector( 1-1 downto 0 );
  signal delay1_q_net : std_logic_vector( 1-1 downto 0 );
  signal logical1_y_net : std_logic_vector( 1-1 downto 0 );
  signal relational3_op_net : std_logic_vector( 1-1 downto 0 );
  signal mux1_y_net : std_logic_vector( 80-1 downto 0 );
  signal dout_count_op_net : std_logic_vector( 1-1 downto 0 );
  signal relational_op_net : std_logic_vector( 1-1 downto 0 );
  signal relational1_op_net : std_logic_vector( 1-1 downto 0 );
  signal relational2_op_net : std_logic_vector( 1-1 downto 0 );
  signal input_count_op_net : std_logic_vector( 2-1 downto 0 );
  signal con0_op_net : std_logic_vector( 2-1 downto 0 );
  signal con1_op_net : std_logic_vector( 2-1 downto 0 );
  signal con2_op_net : std_logic_vector( 2-1 downto 0 );
  signal con3_op_net : std_logic_vector( 2-1 downto 0 );
  signal dram_op_net : std_logic_vector( 1-1 downto 0 );
begin
  dout <= data_choice_y_net;
  we_o <= we_choice_y_net;
  cast_dout_net <= din;
  mux1_y_net_x0 <= we;
  edge_op_y_net <= init;
  clk_net <= clk_1;
  ce_net <= ce_1;
  concat : entity xil_defaultlib.sysgen_concat_e7487baac7 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    in0 => constant_op_net,
    in1 => register_q_net,
    in2 => constant_op_net,
    in3 => register1_q_net,
    y => concat_y_net
  );
  concat1 : entity xil_defaultlib.sysgen_concat_e7487baac7 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    in0 => constant_op_net,
    in1 => register2_q_net,
    in2 => constant_op_net,
    in3 => register3_q_net,
    y => concat1_y_net
  );
  constant_x0 : entity xil_defaultlib.sysgen_constant_869e31f04d 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => constant_op_net
  );
  delay : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 1
  )
  port map (
    en => '1',
    rst => '1',
    d => logical_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay_q_net
  );
  delay1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 1
  )
  port map (
    en => '1',
    rst => '1',
    d => logical1_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay1_q_net
  );
  logical : entity xil_defaultlib.sysgen_logical_2486129911 
  port map (
    clr => '0',
    d0 => relational3_op_net,
    d1 => mux1_y_net_x0,
    clk => clk_net,
    ce => ce_net,
    y => logical_y_net
  );
  logical1 : entity xil_defaultlib.sysgen_logical_d7dc12cf31 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => logical_y_net,
    d1 => delay_q_net,
    y => logical1_y_net
  );
  mux1 : entity xil_defaultlib.sysgen_mux_71ee2b1026 
  port map (
    clr => '0',
    sel => dout_count_op_net,
    d0 => concat_y_net,
    d1 => concat1_y_net,
    clk => clk_net,
    ce => ce_net,
    y => mux1_y_net
  );
  register_x0 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlregister 
  generic map (
    d_width => 32,
    init_value => b"00000000000000000000000000000000"
  )
  port map (
    rst => "0",
    d => cast_dout_net,
    en => relational_op_net,
    clk => clk_net,
    ce => ce_net,
    q => register_q_net
  );
  register1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlregister 
  generic map (
    d_width => 32,
    init_value => b"00000000000000000000000000000000"
  )
  port map (
    rst => "0",
    d => cast_dout_net,
    en => relational1_op_net,
    clk => clk_net,
    ce => ce_net,
    q => register1_q_net
  );
  register2 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlregister 
  generic map (
    d_width => 32,
    init_value => b"00000000000000000000000000000000"
  )
  port map (
    rst => "0",
    d => cast_dout_net,
    en => relational2_op_net,
    clk => clk_net,
    ce => ce_net,
    q => register2_q_net
  );
  register3 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlregister 
  generic map (
    d_width => 32,
    init_value => b"00000000000000000000000000000000"
  )
  port map (
    rst => "0",
    d => cast_dout_net,
    en => relational3_op_net,
    clk => clk_net,
    ce => ce_net,
    q => register3_q_net
  );
  relational : entity xil_defaultlib.sysgen_relational_e5d6b5eaca 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    a => input_count_op_net,
    b => con0_op_net,
    op => relational_op_net
  );
  relational1 : entity xil_defaultlib.sysgen_relational_e5d6b5eaca 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    a => input_count_op_net,
    b => con1_op_net,
    op => relational1_op_net
  );
  relational2 : entity xil_defaultlib.sysgen_relational_e5d6b5eaca 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    a => input_count_op_net,
    b => con2_op_net,
    op => relational2_op_net
  );
  relational3 : entity xil_defaultlib.sysgen_relational_e5d6b5eaca 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    a => input_count_op_net,
    b => con3_op_net,
    op => relational3_op_net
  );
  con0 : entity xil_defaultlib.sysgen_constant_b58c3a1535 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => con0_op_net
  );
  con1 : entity xil_defaultlib.sysgen_constant_d3f27a6354 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => con1_op_net
  );
  con2 : entity xil_defaultlib.sysgen_constant_2fa4689d4e 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => con2_op_net
  );
  con3 : entity xil_defaultlib.sysgen_constant_31bab66ba6 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => con3_op_net
  );
  data_choice : entity xil_defaultlib.sysgen_mux_d624c1af44 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    sel => dram_op_net,
    d0 => cast_dout_net,
    d1 => mux1_y_net,
    y => data_choice_y_net
  );
  dout_count : entity xil_defaultlib.sysgen_counter_a9c1c293c2 
  port map (
    clr => '0',
    rst => edge_op_y_net,
    en => logical1_y_net,
    clk => clk_net,
    ce => ce_net,
    op => dout_count_op_net
  );
  dram : entity xil_defaultlib.sysgen_constant_a7b8778750 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => dram_op_net
  );
  input_count : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlcounter_free 
  generic map (
    core_name0 => "rfdc_multi_eight_adcs_2048gsps_mts_c_counter_binary_v12_0_i2",
    op_arith => xlUnsigned,
    op_width => 2
  )
  port map (
    clr => '0',
    rst => edge_op_y_net,
    en => mux1_y_net_x0,
    clk => clk_net,
    ce => ce_net,
    op => input_count_op_net
  );
  we_choice : entity xil_defaultlib.sysgen_mux_4874190f11 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    sel => dram_op_net,
    d0 => mux1_y_net_x0,
    d1 => delay1_q_net,
    y => we_choice_y_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot3_01/ss/basic_ctrl/edge_detect
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x51 is
  port (
    in_x0 : in std_logic_vector( 1-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    out_x0 : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x51;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x51 is 
  signal edge_op_y_net : std_logic_vector( 1-1 downto 0 );
  signal delay1_q_net : std_logic_vector( 1-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal delay_q_net : std_logic_vector( 1-1 downto 0 );
  signal inverter_op_net : std_logic_vector( 1-1 downto 0 );
begin
  out_x0 <= edge_op_y_net;
  delay1_q_net <= in_x0;
  clk_net <= clk_1;
  ce_net <= ce_1;
  delay : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 1
  )
  port map (
    en => '1',
    rst => '1',
    d => delay1_q_net,
    clk => clk_net,
    ce => ce_net,
    q => delay_q_net
  );
  inverter : entity xil_defaultlib.sysgen_inverter_6233897471 
  port map (
    clr => '0',
    ip => delay1_q_net,
    clk => clk_net,
    ce => ce_net,
    op => inverter_op_net
  );
  edge_op : entity xil_defaultlib.sysgen_logical_0f1aa1e2d7 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => inverter_op_net,
    d1 => delay_q_net,
    y => edge_op_y_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot3_01/ss/basic_ctrl
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_basic_ctrl_x24 is
  port (
    din : in std_logic_vector( 32-1 downto 0 );
    we : in std_logic_vector( 1-1 downto 0 );
    trig : in std_logic_vector( 1-1 downto 0 );
    ctrl : in std_logic_vector( 32-1 downto 0 );
    stopi : in std_logic_vector( 1-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    dout : out std_logic_vector( 32-1 downto 0 );
    we_o : out std_logic_vector( 1-1 downto 0 );
    go : out std_logic_vector( 1-1 downto 0 );
    init : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_basic_ctrl_x24;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_basic_ctrl_x24 is 
  signal data_choice_y_net : std_logic_vector( 32-1 downto 0 );
  signal we_choice_y_net : std_logic_vector( 1-1 downto 0 );
  signal register6_q_net : std_logic_vector( 1-1 downto 0 );
  signal edge_op_y_net_x0 : std_logic_vector( 1-1 downto 0 );
  signal cast_dout_net : std_logic_vector( 32-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc3_sync_net : std_logic_vector( 1-1 downto 0 );
  signal edge_op_y_net : std_logic_vector( 1-1 downto 0 );
  signal concatenate_y_net : std_logic_vector( 32-1 downto 0 );
  signal never_op_net : std_logic_vector( 1-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal mux1_y_net : std_logic_vector( 1-1 downto 0 );
  signal delay1_q_net : std_logic_vector( 1-1 downto 0 );
  signal constant_op_net : std_logic_vector( 1-1 downto 0 );
  signal constant1_op_net : std_logic_vector( 1-1 downto 0 );
  signal constant2_op_net : std_logic_vector( 1-1 downto 0 );
  signal enable_y_net : std_logic_vector( 1-1 downto 0 );
  signal delay2_q_net : std_logic_vector( 1-1 downto 0 );
  signal trig_src_y_net : std_logic_vector( 1-1 downto 0 );
  signal delay3_q_net : std_logic_vector( 1-1 downto 0 );
  signal valid_src_y_net : std_logic_vector( 1-1 downto 0 );
  signal inverter_op_net : std_logic_vector( 1-1 downto 0 );
  signal logical_y_net : std_logic_vector( 1-1 downto 0 );
  signal mux2_y_net : std_logic_vector( 1-1 downto 0 );
  signal register1_q_net : std_logic_vector( 1-1 downto 0 );
begin
  dout <= data_choice_y_net;
  we_o <= we_choice_y_net;
  go <= register6_q_net;
  init <= edge_op_y_net_x0;
  cast_dout_net <= din;
  rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc3_sync_net <= we;
  edge_op_y_net <= trig;
  concatenate_y_net <= ctrl;
  never_op_net <= stopi;
  clk_net <= clk_1;
  ce_net <= ce_1;
  dram_munge : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_dram_munge_x24 
  port map (
    din => cast_dout_net,
    we => mux1_y_net,
    init => edge_op_y_net_x0,
    clk_1 => clk_net,
    ce_1 => ce_net,
    dout => data_choice_y_net,
    we_o => we_choice_y_net
  );
  edge_detect : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x51 
  port map (
    in_x0 => delay1_q_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    out_x0 => edge_op_y_net_x0
  );
  constant_x0 : entity xil_defaultlib.sysgen_constant_c95a0b5efb 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => constant_op_net
  );
  constant1 : entity xil_defaultlib.sysgen_constant_c95a0b5efb 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => constant1_op_net
  );
  constant2 : entity xil_defaultlib.sysgen_constant_c95a0b5efb 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => constant2_op_net
  );
  delay1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 1
  )
  port map (
    en => '1',
    rst => '1',
    d => enable_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay1_q_net
  );
  delay2 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 1
  )
  port map (
    en => '1',
    rst => '1',
    d => trig_src_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay2_q_net
  );
  delay3 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 1
  )
  port map (
    en => '1',
    rst => '1',
    d => valid_src_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay3_q_net
  );
  inverter : entity xil_defaultlib.sysgen_inverter_6233897471 
  port map (
    clr => '0',
    ip => edge_op_y_net_x0,
    clk => clk_net,
    ce => ce_net,
    op => inverter_op_net
  );
  logical : entity xil_defaultlib.sysgen_logical_d26e5cda59 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => mux2_y_net,
    d1 => inverter_op_net,
    y => logical_y_net
  );
  mux1 : entity xil_defaultlib.sysgen_mux_4874190f11 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    sel => delay3_q_net,
    d0 => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc3_sync_net,
    d1 => constant2_op_net,
    y => mux1_y_net
  );
  mux2 : entity xil_defaultlib.sysgen_mux_4874190f11 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    sel => delay2_q_net,
    d0 => edge_op_y_net,
    d1 => constant1_op_net,
    y => mux2_y_net
  );
  register1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlregister 
  generic map (
    d_width => 1,
    init_value => b"0"
  )
  port map (
    d => constant_op_net,
    rst => logical_y_net,
    en => edge_op_y_net_x0,
    clk => clk_net,
    ce => ce_net,
    q => register1_q_net
  );
  register6 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlregister 
  generic map (
    d_width => 1,
    init_value => b"0"
  )
  port map (
    d => mux2_y_net,
    rst => edge_op_y_net_x0,
    en => register1_q_net,
    clk => clk_net,
    ce => ce_net,
    q => register6_q_net
  );
  enable : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 0,
    new_msb => 0,
    x_width => 32,
    y_width => 1
  )
  port map (
    x => concatenate_y_net,
    y => enable_y_net
  );
  trig_src : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 1,
    new_msb => 1,
    x_width => 32,
    y_width => 1
  )
  port map (
    x => concatenate_y_net,
    y => trig_src_y_net
  );
  valid_src : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 2,
    new_msb => 2,
    x_width => 32,
    y_width => 1
  )
  port map (
    x => concatenate_y_net,
    y => valid_src_y_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot3_01/ss/bram/calc_add
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_calc_add_x24 is
  port (
    in_x0 : in std_logic_vector( 10-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    out_x0 : out std_logic_vector( 10-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_calc_add_x24;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_calc_add_x24 is 
  signal mux_y_net : std_logic_vector( 10-1 downto 0 );
  signal add_del_q_net : std_logic_vector( 10-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal add_sub_s_net : std_logic_vector( 1-1 downto 0 );
  signal const_op_net : std_logic_vector( 1-1 downto 0 );
  signal lsw_y_net : std_logic_vector( 1-1 downto 0 );
  signal concat_y_net : std_logic_vector( 10-1 downto 0 );
  signal msw_y_net : std_logic_vector( 9-1 downto 0 );
  signal convert_addr_dout_net : std_logic_vector( 10-1 downto 0 );
  signal manipulate_op_net : std_logic_vector( 1-1 downto 0 );
begin
  out_x0 <= mux_y_net;
  add_del_q_net <= in_x0;
  clk_net <= clk_1;
  ce_net <= ce_1;
  add_sub : entity xil_defaultlib.sysgen_addsub_fd3b6c715c 
  port map (
    clr => '0',
    a => const_op_net,
    b => lsw_y_net,
    clk => clk_net,
    ce => ce_net,
    s => add_sub_s_net
  );
  concat : entity xil_defaultlib.sysgen_concat_f4b90dfa16 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    in0 => msw_y_net,
    in1 => add_sub_s_net,
    y => concat_y_net
  );
  const : entity xil_defaultlib.sysgen_constant_a7b8778750 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => const_op_net
  );
  convert_addr : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 10,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 10,
    latency => 0,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => add_del_q_net,
    clk => clk_net,
    ce => ce_net,
    dout => convert_addr_dout_net
  );
  lsw : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 0,
    new_msb => 0,
    x_width => 10,
    y_width => 1
  )
  port map (
    x => convert_addr_dout_net,
    y => lsw_y_net
  );
  manipulate : entity xil_defaultlib.sysgen_constant_a7b8778750 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => manipulate_op_net
  );
  msw : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 1,
    new_msb => 9,
    x_width => 10,
    y_width => 9
  )
  port map (
    x => convert_addr_dout_net,
    y => msw_y_net
  );
  mux : entity xil_defaultlib.sysgen_mux_4417594854 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    sel => manipulate_op_net,
    d0 => convert_addr_dout_net,
    d1 => concat_y_net,
    y => mux_y_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot3_01/ss/bram/munge_in
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_munge_in_x24 is
  port (
    din : in std_logic_vector( 32-1 downto 0 );
    dout : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_munge_in_x24;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_munge_in_x24 is 
  signal reinterpret_out_output_port_net : std_logic_vector( 32-1 downto 0 );
  signal dat_del_q_net : std_logic_vector( 32-1 downto 0 );
begin
  dout <= reinterpret_out_output_port_net;
  dat_del_q_net <= din;
  reinterpret_out : entity xil_defaultlib.sysgen_reinterpret_52bb84f12b 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => dat_del_q_net,
    output_port => reinterpret_out_output_port_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot3_01/ss/bram
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_bram_x24 is
  port (
    addr : in std_logic_vector( 10-1 downto 0 );
    data_in : in std_logic_vector( 32-1 downto 0 );
    we : in std_logic_vector( 1-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_01_ss_bram_addr : out std_logic_vector( 10-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_01_ss_bram_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_01_ss_bram_we : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_bram_x24;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_bram_x24 is 
  signal add_del_q_net : std_logic_vector( 10-1 downto 0 );
  signal dat_del_q_net : std_logic_vector( 32-1 downto 0 );
  signal we_del_q_net : std_logic_vector( 1-1 downto 0 );
  signal convert_addr_dout_net : std_logic_vector( 10-1 downto 0 );
  signal convert_din1_dout_net : std_logic_vector( 32-1 downto 0 );
  signal convert_we_dout_net : std_logic_vector( 1-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal mux_y_net : std_logic_vector( 10-1 downto 0 );
  signal reinterpret_out_output_port_net : std_logic_vector( 32-1 downto 0 );
begin
  add_del_q_net <= addr;
  dat_del_q_net <= data_in;
  we_del_q_net <= we;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_01_ss_bram_addr <= convert_addr_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_01_ss_bram_data_in <= convert_din1_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_01_ss_bram_we <= convert_we_dout_net;
  clk_net <= clk_1;
  ce_net <= ce_1;
  calc_add : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_calc_add_x24 
  port map (
    in_x0 => add_del_q_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    out_x0 => mux_y_net
  );
  munge_in : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_munge_in_x24 
  port map (
    din => dat_del_q_net,
    dout => reinterpret_out_output_port_net
  );
  convert_addr : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 10,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 10,
    latency => 0,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => mux_y_net,
    clk => clk_net,
    ce => ce_net,
    dout => convert_addr_dout_net
  );
  convert_din1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 32,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 32,
    latency => 0,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => reinterpret_out_output_port_net,
    clk => clk_net,
    ce => ce_net,
    dout => convert_din1_dout_net
  );
  convert_we : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 1,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 1,
    latency => 0,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => we_del_q_net,
    clk => clk_net,
    ce => ce_net,
    dout => convert_we_dout_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot3_01/ss/ctrl
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_ctrl_x23 is
  port (
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_01_ss_ctrl_user_data_out : in std_logic_vector( 32-1 downto 0 );
    in_reg : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_ctrl_x23;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_ctrl_x23 is 
  signal reint1_output_port_net : std_logic_vector( 32-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_01_ss_ctrl_user_data_out_net : std_logic_vector( 32-1 downto 0 );
  signal io_delay_q_net : std_logic_vector( 32-1 downto 0 );
  signal slice_reg_y_net : std_logic_vector( 32-1 downto 0 );
begin
  in_reg <= reint1_output_port_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_01_ss_ctrl_user_data_out_net <= rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_01_ss_ctrl_user_data_out;
  io_delay : entity xil_defaultlib.sysgen_delay_34e314c510 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d => rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_01_ss_ctrl_user_data_out_net,
    q => io_delay_q_net
  );
  slice_reg : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 0,
    new_msb => 31,
    x_width => 32,
    y_width => 32
  )
  port map (
    x => io_delay_q_net,
    y => slice_reg_y_net
  );
  reint1 : entity xil_defaultlib.sysgen_reinterpret_52bb84f12b 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => slice_reg_y_net,
    output_port => reint1_output_port_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot3_01/ss/ctrl_combine
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_ctrl_combine_x22 is
  port (
    in1 : in std_logic_vector( 28-1 downto 0 );
    in2 : in std_logic_vector( 1-1 downto 0 );
    in3 : in std_logic_vector( 2-1 downto 0 );
    in4 : in std_logic_vector( 1-1 downto 0 );
    bus_out : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_ctrl_combine_x22;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_ctrl_combine_x22 is 
  signal concatenate_y_net : std_logic_vector( 32-1 downto 0 );
  signal reinterpret4_output_port_net_x0 : std_logic_vector( 28-1 downto 0 );
  signal circ_or_y_net : std_logic_vector( 1-1 downto 0 );
  signal reinterpret2_output_port_net : std_logic_vector( 2-1 downto 0 );
  signal arm_or_y_net : std_logic_vector( 1-1 downto 0 );
  signal reinterpret1_output_port_net : std_logic_vector( 28-1 downto 0 );
  signal reinterpret2_output_port_net_x0 : std_logic_vector( 1-1 downto 0 );
  signal reinterpret3_output_port_net : std_logic_vector( 2-1 downto 0 );
  signal reinterpret4_output_port_net : std_logic_vector( 1-1 downto 0 );
begin
  bus_out <= concatenate_y_net;
  reinterpret4_output_port_net_x0 <= in1;
  circ_or_y_net <= in2;
  reinterpret2_output_port_net <= in3;
  arm_or_y_net <= in4;
  concatenate : entity xil_defaultlib.sysgen_concat_8611e618a5 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    in0 => reinterpret1_output_port_net,
    in1 => reinterpret2_output_port_net_x0,
    in2 => reinterpret3_output_port_net,
    in3 => reinterpret4_output_port_net,
    y => concatenate_y_net
  );
  reinterpret1 : entity xil_defaultlib.sysgen_reinterpret_f7e0b72e82 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => reinterpret4_output_port_net_x0,
    output_port => reinterpret1_output_port_net
  );
  reinterpret2 : entity xil_defaultlib.sysgen_reinterpret_317b92931a 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => circ_or_y_net,
    output_port => reinterpret2_output_port_net_x0
  );
  reinterpret3 : entity xil_defaultlib.sysgen_reinterpret_5dc9f217bd 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => reinterpret2_output_port_net,
    output_port => reinterpret3_output_port_net
  );
  reinterpret4 : entity xil_defaultlib.sysgen_reinterpret_317b92931a 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => arm_or_y_net,
    output_port => reinterpret4_output_port_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot3_01/ss/ctrl_split
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_ctrl_split_x23 is
  port (
    bus_in : in std_logic_vector( 32-1 downto 0 );
    msb_out4 : out std_logic_vector( 28-1 downto 0 );
    out3 : out std_logic_vector( 1-1 downto 0 );
    out2 : out std_logic_vector( 2-1 downto 0 );
    lsb_out1 : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_ctrl_split_x23;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_ctrl_split_x23 is 
  signal reinterpret4_output_port_net : std_logic_vector( 28-1 downto 0 );
  signal slice3_y_net : std_logic_vector( 1-1 downto 0 );
  signal reinterpret2_output_port_net : std_logic_vector( 2-1 downto 0 );
  signal slice1_y_net : std_logic_vector( 1-1 downto 0 );
  signal reint1_output_port_net : std_logic_vector( 32-1 downto 0 );
  signal slice2_y_net : std_logic_vector( 2-1 downto 0 );
  signal slice4_y_net : std_logic_vector( 28-1 downto 0 );
begin
  msb_out4 <= reinterpret4_output_port_net;
  out3 <= slice3_y_net;
  out2 <= reinterpret2_output_port_net;
  lsb_out1 <= slice1_y_net;
  reint1_output_port_net <= bus_in;
  reinterpret2 : entity xil_defaultlib.sysgen_reinterpret_5dc9f217bd 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => slice2_y_net,
    output_port => reinterpret2_output_port_net
  );
  reinterpret4 : entity xil_defaultlib.sysgen_reinterpret_f7e0b72e82 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => slice4_y_net,
    output_port => reinterpret4_output_port_net
  );
  slice1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 0,
    new_msb => 0,
    x_width => 32,
    y_width => 1
  )
  port map (
    x => reint1_output_port_net,
    y => slice1_y_net
  );
  slice2 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 1,
    new_msb => 2,
    x_width => 32,
    y_width => 2
  )
  port map (
    x => reint1_output_port_net,
    y => slice2_y_net
  );
  slice3 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 3,
    new_msb => 3,
    x_width => 32,
    y_width => 1
  )
  port map (
    x => reint1_output_port_net,
    y => slice3_y_net
  );
  slice4 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 4,
    new_msb => 31,
    x_width => 32,
    y_width => 28
  )
  port map (
    x => reint1_output_port_net,
    y => slice4_y_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot3_01/ss/status
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_status_x22 is
  port (
    out_reg : in std_logic_vector( 32-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_01_ss_status_user_data_in : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_status_x22;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_status_x22 is 
  signal concat_y_net : std_logic_vector( 32-1 downto 0 );
  signal cast_gw_dout_net : std_logic_vector( 32-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal io_delay_q_net : std_logic_vector( 32-1 downto 0 );
  signal reint1_output_port_net : std_logic_vector( 32-1 downto 0 );
  signal assert_reg_dout_net : std_logic_vector( 32-1 downto 0 );
begin
  concat_y_net <= out_reg;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_01_ss_status_user_data_in <= cast_gw_dout_net;
  clk_net <= clk_1;
  ce_net <= ce_1;
  io_delay : entity xil_defaultlib.sysgen_delay_34e314c510 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d => reint1_output_port_net,
    q => io_delay_q_net
  );
  cast_gw : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 32,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 32,
    latency => 1,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => io_delay_q_net,
    clk => clk_net,
    ce => ce_net,
    dout => cast_gw_dout_net
  );
  assert_reg : entity xil_defaultlib.xlpassthrough 
  generic map (
    din_width => 32,
    dout_width => 32
  )
  port map (
    din => concat_y_net,
    dout => assert_reg_dout_net
  );
  reint1 : entity xil_defaultlib.sysgen_reinterpret_52bb84f12b 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => assert_reg_dout_net,
    output_port => reint1_output_port_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot3_01/ss
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_ss_x24 is
  port (
    din : in std_logic_vector( 32-1 downto 0 );
    we : in std_logic_vector( 1-1 downto 0 );
    trig : in std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_01_ss_ctrl_user_data_out : in std_logic_vector( 32-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    arm_out : out std_logic_vector( 1-1 downto 0 );
    goto_94783849_we1 : out std_logic_vector( 1-1 downto 0 );
    goto_94783849_we4 : out std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_01_ss_bram_addr : out std_logic_vector( 10-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_01_ss_bram_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_01_ss_bram_we : out std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_01_ss_status_user_data_in : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_ss_x24;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_ss_x24 is 
  signal arm_or_y_net : std_logic_vector( 1-1 downto 0 );
  signal concatenate_y_net : std_logic_vector( 32-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc3_sync_net : std_logic_vector( 1-1 downto 0 );
  signal edge_op_y_net_x0 : std_logic_vector( 1-1 downto 0 );
  signal we_choice_y_net : std_logic_vector( 1-1 downto 0 );
  signal logical6_y_net : std_logic_vector( 1-1 downto 0 );
  signal convert_addr_dout_net : std_logic_vector( 10-1 downto 0 );
  signal convert_din1_dout_net : std_logic_vector( 32-1 downto 0 );
  signal convert_we_dout_net : std_logic_vector( 1-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_01_ss_ctrl_user_data_out_net : std_logic_vector( 32-1 downto 0 );
  signal cast_gw_dout_net : std_logic_vector( 32-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal slice2_y_net : std_logic_vector( 10-1 downto 0 );
  signal delay6_q_net : std_logic_vector( 32-1 downto 0 );
  signal concat_y_net : std_logic_vector( 32-1 downto 0 );
  signal data_choice_y_net : std_logic_vector( 32-1 downto 0 );
  signal register6_q_net : std_logic_vector( 1-1 downto 0 );
  signal never_op_net : std_logic_vector( 1-1 downto 0 );
  signal edge_op_y_net_x1 : std_logic_vector( 1-1 downto 0 );
  signal cast_dout_net : std_logic_vector( 32-1 downto 0 );
  signal concatenate_y_net_x0 : std_logic_vector( 32-1 downto 0 );
  signal add_del_q_net : std_logic_vector( 10-1 downto 0 );
  signal dat_del_q_net : std_logic_vector( 32-1 downto 0 );
  signal we_del_q_net : std_logic_vector( 1-1 downto 0 );
  signal reint1_output_port_net : std_logic_vector( 32-1 downto 0 );
  signal reinterpret4_output_port_net : std_logic_vector( 28-1 downto 0 );
  signal circ_or_y_net : std_logic_vector( 1-1 downto 0 );
  signal reinterpret2_output_port_net : std_logic_vector( 2-1 downto 0 );
  signal slice3_y_net : std_logic_vector( 1-1 downto 0 );
  signal slice1_y_net : std_logic_vector( 1-1 downto 0 );
  signal arm_op_net : std_logic_vector( 1-1 downto 0 );
  signal ri_output_port_net : std_logic_vector( 32-1 downto 0 );
  signal circ_op_net : std_logic_vector( 1-1 downto 0 );
begin
  arm_out <= arm_or_y_net;
  concatenate_y_net <= din;
  rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc3_sync_net <= we;
  edge_op_y_net_x0 <= trig;
  goto_94783849_we1 <= we_choice_y_net;
  goto_94783849_we4 <= logical6_y_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_01_ss_bram_addr <= convert_addr_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_01_ss_bram_data_in <= convert_din1_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_01_ss_bram_we <= convert_we_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_01_ss_ctrl_user_data_out_net <= rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_01_ss_ctrl_user_data_out;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_01_ss_status_user_data_in <= cast_gw_dout_net;
  clk_net <= clk_1;
  ce_net <= ce_1;
  add_gen : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_add_gen_x24 
  port map (
    din => data_choice_y_net,
    we => we_choice_y_net,
    go => register6_q_net,
    cont => never_op_net,
    init => edge_op_y_net_x1,
    clk_1 => clk_net,
    ce_1 => ce_net,
    add => slice2_y_net,
    dout => delay6_q_net,
    we_o => logical6_y_net,
    status => concat_y_net
  );
  basic_ctrl : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_basic_ctrl_x24 
  port map (
    din => cast_dout_net,
    we => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc3_sync_net,
    trig => edge_op_y_net_x0,
    ctrl => concatenate_y_net_x0,
    stopi => never_op_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    dout => data_choice_y_net,
    we_o => we_choice_y_net,
    go => register6_q_net,
    init => edge_op_y_net_x1
  );
  bram : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_bram_x24 
  port map (
    addr => add_del_q_net,
    data_in => dat_del_q_net,
    we => we_del_q_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_01_ss_bram_addr => convert_addr_dout_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_01_ss_bram_data_in => convert_din1_dout_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_01_ss_bram_we => convert_we_dout_net
  );
  ctrl : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_ctrl_x23 
  port map (
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_01_ss_ctrl_user_data_out => rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_01_ss_ctrl_user_data_out_net,
    in_reg => reint1_output_port_net
  );
  ctrl_combine : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_ctrl_combine_x22 
  port map (
    in1 => reinterpret4_output_port_net,
    in2 => circ_or_y_net,
    in3 => reinterpret2_output_port_net,
    in4 => arm_or_y_net,
    bus_out => concatenate_y_net_x0
  );
  ctrl_split : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_ctrl_split_x23 
  port map (
    bus_in => reint1_output_port_net,
    msb_out4 => reinterpret4_output_port_net,
    out3 => slice3_y_net,
    out2 => reinterpret2_output_port_net,
    lsb_out1 => slice1_y_net
  );
  status : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_status_x22 
  port map (
    out_reg => concat_y_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_01_ss_status_user_data_in => cast_gw_dout_net
  );
  add_del : entity xil_defaultlib.sysgen_delay_4e9264ffdf 
  port map (
    clr => '0',
    d => slice2_y_net,
    clk => clk_net,
    ce => ce_net,
    q => add_del_q_net
  );
  arm : entity xil_defaultlib.sysgen_constant_a7b8778750 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => arm_op_net
  );
  arm_or : entity xil_defaultlib.sysgen_logical_d7dc12cf31 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => slice1_y_net,
    d1 => arm_op_net,
    y => arm_or_y_net
  );
  cast : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 32,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 32,
    latency => 0,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => ri_output_port_net,
    clk => clk_net,
    ce => ce_net,
    dout => cast_dout_net
  );
  circ : entity xil_defaultlib.sysgen_constant_a7b8778750 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => circ_op_net
  );
  circ_or : entity xil_defaultlib.sysgen_logical_d7dc12cf31 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => slice3_y_net,
    d1 => circ_op_net,
    y => circ_or_y_net
  );
  dat_del : entity xil_defaultlib.sysgen_delay_5ec362a23c 
  port map (
    clr => '0',
    d => delay6_q_net,
    clk => clk_net,
    ce => ce_net,
    q => dat_del_q_net
  );
  never : entity xil_defaultlib.sysgen_constant_a7b8778750 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => never_op_net
  );
  ri : entity xil_defaultlib.sysgen_reinterpret_52bb84f12b 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => concatenate_y_net,
    output_port => ri_output_port_net
  );
  we_del : entity xil_defaultlib.sysgen_delay_e0740ee3f9 
  port map (
    clr => '0',
    d => logical6_y_net,
    clk => clk_net,
    ce => ce_net,
    q => we_del_q_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot3_01
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_01 is
  port (
    in_d0 : in std_logic_vector( 16-1 downto 0 );
    in_d1 : in std_logic_vector( 16-1 downto 0 );
    we : in std_logic_vector( 1-1 downto 0 );
    trig : in std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_01_ss_ctrl_user_data_out : in std_logic_vector( 32-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    arm_out : out std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_01_ss_bram_addr : out std_logic_vector( 10-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_01_ss_bram_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_01_ss_bram_we : out std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_01_ss_status_user_data_in : out std_logic_vector( 32-1 downto 0 );
    goto_94783849_we1 : out std_logic_vector( 1-1 downto 0 );
    goto_94783849_we4 : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_01;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_01 is 
  signal arm_or_y_net : std_logic_vector( 1-1 downto 0 );
  signal slice30_y_net : std_logic_vector( 16-1 downto 0 );
  signal slice29_y_net : std_logic_vector( 16-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc3_sync_net : std_logic_vector( 1-1 downto 0 );
  signal edge_op_y_net : std_logic_vector( 1-1 downto 0 );
  signal convert_addr_dout_net : std_logic_vector( 10-1 downto 0 );
  signal convert_din1_dout_net : std_logic_vector( 32-1 downto 0 );
  signal convert_we_dout_net : std_logic_vector( 1-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_01_ss_ctrl_user_data_out_net : std_logic_vector( 32-1 downto 0 );
  signal cast_gw_dout_net : std_logic_vector( 32-1 downto 0 );
  signal we_choice_y_net : std_logic_vector( 1-1 downto 0 );
  signal logical6_y_net : std_logic_vector( 1-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal concatenate_y_net : std_logic_vector( 32-1 downto 0 );
  signal assert_d0_dout_net : std_logic_vector( 16-1 downto 0 );
  signal assert_d1_dout_net : std_logic_vector( 16-1 downto 0 );
begin
  arm_out <= arm_or_y_net;
  slice30_y_net <= in_d0;
  slice29_y_net <= in_d1;
  rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc3_sync_net <= we;
  edge_op_y_net <= trig;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_01_ss_bram_addr <= convert_addr_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_01_ss_bram_data_in <= convert_din1_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_01_ss_bram_we <= convert_we_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_01_ss_ctrl_user_data_out_net <= rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_01_ss_ctrl_user_data_out;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_01_ss_status_user_data_in <= cast_gw_dout_net;
  goto_94783849_we1 <= we_choice_y_net;
  goto_94783849_we4 <= logical6_y_net;
  clk_net <= clk_1;
  ce_net <= ce_1;
  buscreate : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_buscreate_x24 
  port map (
    in1 => assert_d0_dout_net,
    in2 => assert_d1_dout_net,
    bus_out => concatenate_y_net
  );
  ss : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_ss_x24 
  port map (
    din => concatenate_y_net,
    we => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc3_sync_net,
    trig => edge_op_y_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_01_ss_ctrl_user_data_out => rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_01_ss_ctrl_user_data_out_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    arm_out => arm_or_y_net,
    goto_94783849_we1 => we_choice_y_net,
    goto_94783849_we4 => logical6_y_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_01_ss_bram_addr => convert_addr_dout_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_01_ss_bram_data_in => convert_din1_dout_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_01_ss_bram_we => convert_we_dout_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_01_ss_status_user_data_in => cast_gw_dout_net
  );
  assert_d0 : entity xil_defaultlib.xlpassthrough 
  generic map (
    din_width => 16,
    dout_width => 16
  )
  port map (
    din => slice30_y_net,
    dout => assert_d0_dout_net
  );
  assert_d1 : entity xil_defaultlib.xlpassthrough 
  generic map (
    din_width => 16,
    dout_width => 16
  )
  port map (
    din => slice29_y_net,
    dout => assert_d1_dout_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot3_23/buscreate
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_buscreate_x23 is
  port (
    in1 : in std_logic_vector( 16-1 downto 0 );
    in2 : in std_logic_vector( 16-1 downto 0 );
    bus_out : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_buscreate_x23;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_buscreate_x23 is 
  signal concatenate_y_net : std_logic_vector( 32-1 downto 0 );
  signal assert_d0_dout_net : std_logic_vector( 16-1 downto 0 );
  signal assert_d1_dout_net : std_logic_vector( 16-1 downto 0 );
  signal reinterpret1_output_port_net : std_logic_vector( 16-1 downto 0 );
  signal reinterpret2_output_port_net : std_logic_vector( 16-1 downto 0 );
begin
  bus_out <= concatenate_y_net;
  assert_d0_dout_net <= in1;
  assert_d1_dout_net <= in2;
  concatenate : entity xil_defaultlib.sysgen_concat_37649e01d1 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    in0 => reinterpret1_output_port_net,
    in1 => reinterpret2_output_port_net,
    y => concatenate_y_net
  );
  reinterpret1 : entity xil_defaultlib.sysgen_reinterpret_03c8cdbbc1 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => assert_d0_dout_net,
    output_port => reinterpret1_output_port_net
  );
  reinterpret2 : entity xil_defaultlib.sysgen_reinterpret_03c8cdbbc1 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => assert_d1_dout_net,
    output_port => reinterpret2_output_port_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot3_23/ss/add_gen/edge_detect
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x48 is
  port (
    in_x0 : in std_logic_vector( 1-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    out_x0 : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x48;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x48 is 
  signal edge_op_y_net : std_logic_vector( 1-1 downto 0 );
  signal slice3_y_net : std_logic_vector( 1-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal delay_q_net : std_logic_vector( 1-1 downto 0 );
  signal inverter_op_net : std_logic_vector( 1-1 downto 0 );
begin
  out_x0 <= edge_op_y_net;
  slice3_y_net <= in_x0;
  clk_net <= clk_1;
  ce_net <= ce_1;
  delay : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 1
  )
  port map (
    en => '1',
    rst => '1',
    d => slice3_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay_q_net
  );
  inverter : entity xil_defaultlib.sysgen_inverter_6233897471 
  port map (
    clr => '0',
    ip => slice3_y_net,
    clk => clk_net,
    ce => ce_net,
    op => inverter_op_net
  );
  edge_op : entity xil_defaultlib.sysgen_logical_9cc14fefba 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => inverter_op_net,
    d1 => delay_q_net,
    y => edge_op_y_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot3_23/ss/add_gen
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_add_gen_x23 is
  port (
    din : in std_logic_vector( 32-1 downto 0 );
    we : in std_logic_vector( 1-1 downto 0 );
    go : in std_logic_vector( 1-1 downto 0 );
    cont : in std_logic_vector( 1-1 downto 0 );
    init : in std_logic_vector( 1-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    add : out std_logic_vector( 10-1 downto 0 );
    dout : out std_logic_vector( 32-1 downto 0 );
    we_o : out std_logic_vector( 1-1 downto 0 );
    status : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_add_gen_x23;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_add_gen_x23 is 
  signal slice2_y_net : std_logic_vector( 10-1 downto 0 );
  signal delay6_q_net : std_logic_vector( 32-1 downto 0 );
  signal logical6_y_net : std_logic_vector( 1-1 downto 0 );
  signal concat_y_net : std_logic_vector( 32-1 downto 0 );
  signal data_choice_y_net : std_logic_vector( 32-1 downto 0 );
  signal we_choice_y_net : std_logic_vector( 1-1 downto 0 );
  signal register6_q_net : std_logic_vector( 1-1 downto 0 );
  signal never_op_net : std_logic_vector( 1-1 downto 0 );
  signal edge_op_y_net : std_logic_vector( 1-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal edge_op_y_net_x0 : std_logic_vector( 1-1 downto 0 );
  signal slice3_y_net : std_logic_vector( 1-1 downto 0 );
  signal shift_op_net : std_logic_vector( 19-1 downto 0 );
  signal inverter_op_net : std_logic_vector( 1-1 downto 0 );
  signal delay1_q_net : std_logic_vector( 12-1 downto 0 );
  signal convert_dout_net : std_logic_vector( 19-1 downto 0 );
  signal register5_q_net : std_logic_vector( 1-1 downto 0 );
  signal delay_q_net : std_logic_vector( 1-1 downto 0 );
  signal delay4_q_net : std_logic_vector( 1-1 downto 0 );
  signal slice1_y_net : std_logic_vector( 12-1 downto 0 );
  signal delay3_q_net : std_logic_vector( 1-1 downto 0 );
  signal inverter1_op_net : std_logic_vector( 1-1 downto 0 );
  signal logical1_y_net : std_logic_vector( 1-1 downto 0 );
  signal logical4_y_net : std_logic_vector( 1-1 downto 0 );
  signal add_gen_op_net : std_logic_vector( 13-1 downto 0 );
begin
  add <= slice2_y_net;
  dout <= delay6_q_net;
  we_o <= logical6_y_net;
  status <= concat_y_net;
  data_choice_y_net <= din;
  we_choice_y_net <= we;
  register6_q_net <= go;
  never_op_net <= cont;
  edge_op_y_net <= init;
  clk_net <= clk_1;
  ce_net <= ce_1;
  edge_detect : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x48 
  port map (
    in_x0 => slice3_y_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    out_x0 => edge_op_y_net_x0
  );
  concat : entity xil_defaultlib.sysgen_concat_fc8edfac0e 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    in0 => shift_op_net,
    in1 => inverter_op_net,
    in2 => delay1_q_net,
    y => concat_y_net
  );
  convert : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 1,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 19,
    latency => 0,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => register5_q_net,
    clk => clk_net,
    ce => ce_net,
    dout => convert_dout_net
  );
  delay : entity xil_defaultlib.sysgen_delay_e0740ee3f9 
  port map (
    clr => '0',
    d => delay4_q_net,
    clk => clk_net,
    ce => ce_net,
    q => delay_q_net
  );
  delay1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 12
  )
  port map (
    en => '1',
    rst => '1',
    d => slice1_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay1_q_net
  );
  delay3 : entity xil_defaultlib.sysgen_delay_e0740ee3f9 
  port map (
    clr => '0',
    d => never_op_net,
    clk => clk_net,
    ce => ce_net,
    q => delay3_q_net
  );
  delay4 : entity xil_defaultlib.sysgen_delay_e0740ee3f9 
  port map (
    clr => '0',
    d => edge_op_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay4_q_net
  );
  delay6 : entity xil_defaultlib.sysgen_delay_5ec362a23c 
  port map (
    clr => '0',
    d => data_choice_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay6_q_net
  );
  inverter : entity xil_defaultlib.sysgen_inverter_918b6bc6d0 
  port map (
    clr => '0',
    ip => register5_q_net,
    clk => clk_net,
    ce => ce_net,
    op => inverter_op_net
  );
  inverter1 : entity xil_defaultlib.sysgen_inverter_6233897471 
  port map (
    clr => '0',
    ip => edge_op_y_net_x0,
    clk => clk_net,
    ce => ce_net,
    op => inverter1_op_net
  );
  logical1 : entity xil_defaultlib.sysgen_logical_2486129911 
  port map (
    clr => '0',
    d0 => we_choice_y_net,
    d1 => register6_q_net,
    clk => clk_net,
    ce => ce_net,
    y => logical1_y_net
  );
  logical4 : entity xil_defaultlib.sysgen_logical_d7dc12cf31 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => delay3_q_net,
    d1 => inverter1_op_net,
    y => logical4_y_net
  );
  logical6 : entity xil_defaultlib.sysgen_logical_c05fefc67b 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => register5_q_net,
    d1 => logical4_y_net,
    d2 => logical1_y_net,
    y => logical6_y_net
  );
  register5 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlregister 
  generic map (
    d_width => 1,
    init_value => b"1"
  )
  port map (
    d => delay3_q_net,
    rst => delay_q_net,
    en => edge_op_y_net_x0,
    clk => clk_net,
    ce => ce_net,
    q => register5_q_net
  );
  shift : entity xil_defaultlib.sysgen_shift_5af4fe0a99 
  port map (
    clr => '0',
    ip => convert_dout_net,
    clk => clk_net,
    ce => ce_net,
    op => shift_op_net
  );
  add_gen : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlcounter_free 
  generic map (
    core_name0 => "rfdc_multi_eight_adcs_2048gsps_mts_c_counter_binary_v12_0_i1",
    op_arith => xlUnsigned,
    op_width => 13
  )
  port map (
    clr => '0',
    rst => delay4_q_net,
    en => logical6_y_net,
    clk => clk_net,
    ce => ce_net,
    op => add_gen_op_net
  );
  slice1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 0,
    new_msb => 11,
    x_width => 13,
    y_width => 12
  )
  port map (
    x => add_gen_op_net,
    y => slice1_y_net
  );
  slice2 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 2,
    new_msb => 11,
    x_width => 13,
    y_width => 10
  )
  port map (
    x => add_gen_op_net,
    y => slice2_y_net
  );
  slice3 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 12,
    new_msb => 12,
    x_width => 13,
    y_width => 1
  )
  port map (
    x => add_gen_op_net,
    y => slice3_y_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot3_23/ss/basic_ctrl/dram_munge
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_dram_munge_x23 is
  port (
    din : in std_logic_vector( 32-1 downto 0 );
    we : in std_logic_vector( 1-1 downto 0 );
    init : in std_logic_vector( 1-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    dout : out std_logic_vector( 32-1 downto 0 );
    we_o : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_dram_munge_x23;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_dram_munge_x23 is 
  signal data_choice_y_net : std_logic_vector( 32-1 downto 0 );
  signal we_choice_y_net : std_logic_vector( 1-1 downto 0 );
  signal cast_dout_net : std_logic_vector( 32-1 downto 0 );
  signal mux1_y_net_x0 : std_logic_vector( 1-1 downto 0 );
  signal edge_op_y_net : std_logic_vector( 1-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal concat_y_net : std_logic_vector( 80-1 downto 0 );
  signal constant_op_net : std_logic_vector( 8-1 downto 0 );
  signal register_q_net : std_logic_vector( 32-1 downto 0 );
  signal register1_q_net : std_logic_vector( 32-1 downto 0 );
  signal concat1_y_net : std_logic_vector( 80-1 downto 0 );
  signal register2_q_net : std_logic_vector( 32-1 downto 0 );
  signal register3_q_net : std_logic_vector( 32-1 downto 0 );
  signal delay_q_net : std_logic_vector( 1-1 downto 0 );
  signal logical_y_net : std_logic_vector( 1-1 downto 0 );
  signal delay1_q_net : std_logic_vector( 1-1 downto 0 );
  signal logical1_y_net : std_logic_vector( 1-1 downto 0 );
  signal relational3_op_net : std_logic_vector( 1-1 downto 0 );
  signal mux1_y_net : std_logic_vector( 80-1 downto 0 );
  signal dout_count_op_net : std_logic_vector( 1-1 downto 0 );
  signal relational_op_net : std_logic_vector( 1-1 downto 0 );
  signal relational1_op_net : std_logic_vector( 1-1 downto 0 );
  signal relational2_op_net : std_logic_vector( 1-1 downto 0 );
  signal input_count_op_net : std_logic_vector( 2-1 downto 0 );
  signal con0_op_net : std_logic_vector( 2-1 downto 0 );
  signal con1_op_net : std_logic_vector( 2-1 downto 0 );
  signal con2_op_net : std_logic_vector( 2-1 downto 0 );
  signal con3_op_net : std_logic_vector( 2-1 downto 0 );
  signal dram_op_net : std_logic_vector( 1-1 downto 0 );
begin
  dout <= data_choice_y_net;
  we_o <= we_choice_y_net;
  cast_dout_net <= din;
  mux1_y_net_x0 <= we;
  edge_op_y_net <= init;
  clk_net <= clk_1;
  ce_net <= ce_1;
  concat : entity xil_defaultlib.sysgen_concat_e7487baac7 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    in0 => constant_op_net,
    in1 => register_q_net,
    in2 => constant_op_net,
    in3 => register1_q_net,
    y => concat_y_net
  );
  concat1 : entity xil_defaultlib.sysgen_concat_e7487baac7 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    in0 => constant_op_net,
    in1 => register2_q_net,
    in2 => constant_op_net,
    in3 => register3_q_net,
    y => concat1_y_net
  );
  constant_x0 : entity xil_defaultlib.sysgen_constant_869e31f04d 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => constant_op_net
  );
  delay : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 1
  )
  port map (
    en => '1',
    rst => '1',
    d => logical_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay_q_net
  );
  delay1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 1
  )
  port map (
    en => '1',
    rst => '1',
    d => logical1_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay1_q_net
  );
  logical : entity xil_defaultlib.sysgen_logical_2486129911 
  port map (
    clr => '0',
    d0 => relational3_op_net,
    d1 => mux1_y_net_x0,
    clk => clk_net,
    ce => ce_net,
    y => logical_y_net
  );
  logical1 : entity xil_defaultlib.sysgen_logical_d7dc12cf31 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => logical_y_net,
    d1 => delay_q_net,
    y => logical1_y_net
  );
  mux1 : entity xil_defaultlib.sysgen_mux_71ee2b1026 
  port map (
    clr => '0',
    sel => dout_count_op_net,
    d0 => concat_y_net,
    d1 => concat1_y_net,
    clk => clk_net,
    ce => ce_net,
    y => mux1_y_net
  );
  register_x0 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlregister 
  generic map (
    d_width => 32,
    init_value => b"00000000000000000000000000000000"
  )
  port map (
    rst => "0",
    d => cast_dout_net,
    en => relational_op_net,
    clk => clk_net,
    ce => ce_net,
    q => register_q_net
  );
  register1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlregister 
  generic map (
    d_width => 32,
    init_value => b"00000000000000000000000000000000"
  )
  port map (
    rst => "0",
    d => cast_dout_net,
    en => relational1_op_net,
    clk => clk_net,
    ce => ce_net,
    q => register1_q_net
  );
  register2 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlregister 
  generic map (
    d_width => 32,
    init_value => b"00000000000000000000000000000000"
  )
  port map (
    rst => "0",
    d => cast_dout_net,
    en => relational2_op_net,
    clk => clk_net,
    ce => ce_net,
    q => register2_q_net
  );
  register3 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlregister 
  generic map (
    d_width => 32,
    init_value => b"00000000000000000000000000000000"
  )
  port map (
    rst => "0",
    d => cast_dout_net,
    en => relational3_op_net,
    clk => clk_net,
    ce => ce_net,
    q => register3_q_net
  );
  relational : entity xil_defaultlib.sysgen_relational_e5d6b5eaca 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    a => input_count_op_net,
    b => con0_op_net,
    op => relational_op_net
  );
  relational1 : entity xil_defaultlib.sysgen_relational_e5d6b5eaca 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    a => input_count_op_net,
    b => con1_op_net,
    op => relational1_op_net
  );
  relational2 : entity xil_defaultlib.sysgen_relational_e5d6b5eaca 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    a => input_count_op_net,
    b => con2_op_net,
    op => relational2_op_net
  );
  relational3 : entity xil_defaultlib.sysgen_relational_e5d6b5eaca 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    a => input_count_op_net,
    b => con3_op_net,
    op => relational3_op_net
  );
  con0 : entity xil_defaultlib.sysgen_constant_b58c3a1535 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => con0_op_net
  );
  con1 : entity xil_defaultlib.sysgen_constant_d3f27a6354 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => con1_op_net
  );
  con2 : entity xil_defaultlib.sysgen_constant_2fa4689d4e 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => con2_op_net
  );
  con3 : entity xil_defaultlib.sysgen_constant_31bab66ba6 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => con3_op_net
  );
  data_choice : entity xil_defaultlib.sysgen_mux_d624c1af44 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    sel => dram_op_net,
    d0 => cast_dout_net,
    d1 => mux1_y_net,
    y => data_choice_y_net
  );
  dout_count : entity xil_defaultlib.sysgen_counter_a9c1c293c2 
  port map (
    clr => '0',
    rst => edge_op_y_net,
    en => logical1_y_net,
    clk => clk_net,
    ce => ce_net,
    op => dout_count_op_net
  );
  dram : entity xil_defaultlib.sysgen_constant_a7b8778750 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => dram_op_net
  );
  input_count : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlcounter_free 
  generic map (
    core_name0 => "rfdc_multi_eight_adcs_2048gsps_mts_c_counter_binary_v12_0_i2",
    op_arith => xlUnsigned,
    op_width => 2
  )
  port map (
    clr => '0',
    rst => edge_op_y_net,
    en => mux1_y_net_x0,
    clk => clk_net,
    ce => ce_net,
    op => input_count_op_net
  );
  we_choice : entity xil_defaultlib.sysgen_mux_4874190f11 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    sel => dram_op_net,
    d0 => mux1_y_net_x0,
    d1 => delay1_q_net,
    y => we_choice_y_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot3_23/ss/basic_ctrl/edge_detect
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x49 is
  port (
    in_x0 : in std_logic_vector( 1-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    out_x0 : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x49;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x49 is 
  signal edge_op_y_net : std_logic_vector( 1-1 downto 0 );
  signal delay1_q_net : std_logic_vector( 1-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal delay_q_net : std_logic_vector( 1-1 downto 0 );
  signal inverter_op_net : std_logic_vector( 1-1 downto 0 );
begin
  out_x0 <= edge_op_y_net;
  delay1_q_net <= in_x0;
  clk_net <= clk_1;
  ce_net <= ce_1;
  delay : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 1
  )
  port map (
    en => '1',
    rst => '1',
    d => delay1_q_net,
    clk => clk_net,
    ce => ce_net,
    q => delay_q_net
  );
  inverter : entity xil_defaultlib.sysgen_inverter_6233897471 
  port map (
    clr => '0',
    ip => delay1_q_net,
    clk => clk_net,
    ce => ce_net,
    op => inverter_op_net
  );
  edge_op : entity xil_defaultlib.sysgen_logical_0f1aa1e2d7 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => inverter_op_net,
    d1 => delay_q_net,
    y => edge_op_y_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot3_23/ss/basic_ctrl
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_basic_ctrl_x23 is
  port (
    din : in std_logic_vector( 32-1 downto 0 );
    we : in std_logic_vector( 1-1 downto 0 );
    trig : in std_logic_vector( 1-1 downto 0 );
    ctrl : in std_logic_vector( 32-1 downto 0 );
    stopi : in std_logic_vector( 1-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    dout : out std_logic_vector( 32-1 downto 0 );
    we_o : out std_logic_vector( 1-1 downto 0 );
    go : out std_logic_vector( 1-1 downto 0 );
    init : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_basic_ctrl_x23;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_basic_ctrl_x23 is 
  signal data_choice_y_net : std_logic_vector( 32-1 downto 0 );
  signal we_choice_y_net : std_logic_vector( 1-1 downto 0 );
  signal register6_q_net : std_logic_vector( 1-1 downto 0 );
  signal edge_op_y_net_x0 : std_logic_vector( 1-1 downto 0 );
  signal cast_dout_net : std_logic_vector( 32-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc3_sync_net : std_logic_vector( 1-1 downto 0 );
  signal edge_op_y_net : std_logic_vector( 1-1 downto 0 );
  signal concatenate_y_net : std_logic_vector( 32-1 downto 0 );
  signal never_op_net : std_logic_vector( 1-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal mux1_y_net : std_logic_vector( 1-1 downto 0 );
  signal delay1_q_net : std_logic_vector( 1-1 downto 0 );
  signal constant_op_net : std_logic_vector( 1-1 downto 0 );
  signal constant1_op_net : std_logic_vector( 1-1 downto 0 );
  signal constant2_op_net : std_logic_vector( 1-1 downto 0 );
  signal enable_y_net : std_logic_vector( 1-1 downto 0 );
  signal delay2_q_net : std_logic_vector( 1-1 downto 0 );
  signal trig_src_y_net : std_logic_vector( 1-1 downto 0 );
  signal delay3_q_net : std_logic_vector( 1-1 downto 0 );
  signal valid_src_y_net : std_logic_vector( 1-1 downto 0 );
  signal inverter_op_net : std_logic_vector( 1-1 downto 0 );
  signal logical_y_net : std_logic_vector( 1-1 downto 0 );
  signal mux2_y_net : std_logic_vector( 1-1 downto 0 );
  signal register1_q_net : std_logic_vector( 1-1 downto 0 );
begin
  dout <= data_choice_y_net;
  we_o <= we_choice_y_net;
  go <= register6_q_net;
  init <= edge_op_y_net_x0;
  cast_dout_net <= din;
  rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc3_sync_net <= we;
  edge_op_y_net <= trig;
  concatenate_y_net <= ctrl;
  never_op_net <= stopi;
  clk_net <= clk_1;
  ce_net <= ce_1;
  dram_munge : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_dram_munge_x23 
  port map (
    din => cast_dout_net,
    we => mux1_y_net,
    init => edge_op_y_net_x0,
    clk_1 => clk_net,
    ce_1 => ce_net,
    dout => data_choice_y_net,
    we_o => we_choice_y_net
  );
  edge_detect : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x49 
  port map (
    in_x0 => delay1_q_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    out_x0 => edge_op_y_net_x0
  );
  constant_x0 : entity xil_defaultlib.sysgen_constant_c95a0b5efb 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => constant_op_net
  );
  constant1 : entity xil_defaultlib.sysgen_constant_c95a0b5efb 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => constant1_op_net
  );
  constant2 : entity xil_defaultlib.sysgen_constant_c95a0b5efb 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => constant2_op_net
  );
  delay1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 1
  )
  port map (
    en => '1',
    rst => '1',
    d => enable_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay1_q_net
  );
  delay2 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 1
  )
  port map (
    en => '1',
    rst => '1',
    d => trig_src_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay2_q_net
  );
  delay3 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 1
  )
  port map (
    en => '1',
    rst => '1',
    d => valid_src_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay3_q_net
  );
  inverter : entity xil_defaultlib.sysgen_inverter_6233897471 
  port map (
    clr => '0',
    ip => edge_op_y_net_x0,
    clk => clk_net,
    ce => ce_net,
    op => inverter_op_net
  );
  logical : entity xil_defaultlib.sysgen_logical_d26e5cda59 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => mux2_y_net,
    d1 => inverter_op_net,
    y => logical_y_net
  );
  mux1 : entity xil_defaultlib.sysgen_mux_4874190f11 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    sel => delay3_q_net,
    d0 => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc3_sync_net,
    d1 => constant2_op_net,
    y => mux1_y_net
  );
  mux2 : entity xil_defaultlib.sysgen_mux_4874190f11 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    sel => delay2_q_net,
    d0 => edge_op_y_net,
    d1 => constant1_op_net,
    y => mux2_y_net
  );
  register1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlregister 
  generic map (
    d_width => 1,
    init_value => b"0"
  )
  port map (
    d => constant_op_net,
    rst => logical_y_net,
    en => edge_op_y_net_x0,
    clk => clk_net,
    ce => ce_net,
    q => register1_q_net
  );
  register6 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlregister 
  generic map (
    d_width => 1,
    init_value => b"0"
  )
  port map (
    d => mux2_y_net,
    rst => edge_op_y_net_x0,
    en => register1_q_net,
    clk => clk_net,
    ce => ce_net,
    q => register6_q_net
  );
  enable : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 0,
    new_msb => 0,
    x_width => 32,
    y_width => 1
  )
  port map (
    x => concatenate_y_net,
    y => enable_y_net
  );
  trig_src : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 1,
    new_msb => 1,
    x_width => 32,
    y_width => 1
  )
  port map (
    x => concatenate_y_net,
    y => trig_src_y_net
  );
  valid_src : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 2,
    new_msb => 2,
    x_width => 32,
    y_width => 1
  )
  port map (
    x => concatenate_y_net,
    y => valid_src_y_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot3_23/ss/bram/calc_add
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_calc_add_x23 is
  port (
    in_x0 : in std_logic_vector( 10-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    out_x0 : out std_logic_vector( 10-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_calc_add_x23;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_calc_add_x23 is 
  signal mux_y_net : std_logic_vector( 10-1 downto 0 );
  signal add_del_q_net : std_logic_vector( 10-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal add_sub_s_net : std_logic_vector( 1-1 downto 0 );
  signal const_op_net : std_logic_vector( 1-1 downto 0 );
  signal lsw_y_net : std_logic_vector( 1-1 downto 0 );
  signal concat_y_net : std_logic_vector( 10-1 downto 0 );
  signal msw_y_net : std_logic_vector( 9-1 downto 0 );
  signal convert_addr_dout_net : std_logic_vector( 10-1 downto 0 );
  signal manipulate_op_net : std_logic_vector( 1-1 downto 0 );
begin
  out_x0 <= mux_y_net;
  add_del_q_net <= in_x0;
  clk_net <= clk_1;
  ce_net <= ce_1;
  add_sub : entity xil_defaultlib.sysgen_addsub_fd3b6c715c 
  port map (
    clr => '0',
    a => const_op_net,
    b => lsw_y_net,
    clk => clk_net,
    ce => ce_net,
    s => add_sub_s_net
  );
  concat : entity xil_defaultlib.sysgen_concat_f4b90dfa16 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    in0 => msw_y_net,
    in1 => add_sub_s_net,
    y => concat_y_net
  );
  const : entity xil_defaultlib.sysgen_constant_a7b8778750 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => const_op_net
  );
  convert_addr : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 10,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 10,
    latency => 0,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => add_del_q_net,
    clk => clk_net,
    ce => ce_net,
    dout => convert_addr_dout_net
  );
  lsw : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 0,
    new_msb => 0,
    x_width => 10,
    y_width => 1
  )
  port map (
    x => convert_addr_dout_net,
    y => lsw_y_net
  );
  manipulate : entity xil_defaultlib.sysgen_constant_a7b8778750 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => manipulate_op_net
  );
  msw : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 1,
    new_msb => 9,
    x_width => 10,
    y_width => 9
  )
  port map (
    x => convert_addr_dout_net,
    y => msw_y_net
  );
  mux : entity xil_defaultlib.sysgen_mux_4417594854 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    sel => manipulate_op_net,
    d0 => convert_addr_dout_net,
    d1 => concat_y_net,
    y => mux_y_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot3_23/ss/bram/munge_in
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_munge_in_x23 is
  port (
    din : in std_logic_vector( 32-1 downto 0 );
    dout : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_munge_in_x23;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_munge_in_x23 is 
  signal reinterpret_out_output_port_net : std_logic_vector( 32-1 downto 0 );
  signal dat_del_q_net : std_logic_vector( 32-1 downto 0 );
begin
  dout <= reinterpret_out_output_port_net;
  dat_del_q_net <= din;
  reinterpret_out : entity xil_defaultlib.sysgen_reinterpret_52bb84f12b 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => dat_del_q_net,
    output_port => reinterpret_out_output_port_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot3_23/ss/bram
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_bram_x23 is
  port (
    addr : in std_logic_vector( 10-1 downto 0 );
    data_in : in std_logic_vector( 32-1 downto 0 );
    we : in std_logic_vector( 1-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_23_ss_bram_addr : out std_logic_vector( 10-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_23_ss_bram_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_23_ss_bram_we : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_bram_x23;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_bram_x23 is 
  signal add_del_q_net : std_logic_vector( 10-1 downto 0 );
  signal dat_del_q_net : std_logic_vector( 32-1 downto 0 );
  signal we_del_q_net : std_logic_vector( 1-1 downto 0 );
  signal convert_addr_dout_net : std_logic_vector( 10-1 downto 0 );
  signal convert_din1_dout_net : std_logic_vector( 32-1 downto 0 );
  signal convert_we_dout_net : std_logic_vector( 1-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal mux_y_net : std_logic_vector( 10-1 downto 0 );
  signal reinterpret_out_output_port_net : std_logic_vector( 32-1 downto 0 );
begin
  add_del_q_net <= addr;
  dat_del_q_net <= data_in;
  we_del_q_net <= we;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_23_ss_bram_addr <= convert_addr_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_23_ss_bram_data_in <= convert_din1_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_23_ss_bram_we <= convert_we_dout_net;
  clk_net <= clk_1;
  ce_net <= ce_1;
  calc_add : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_calc_add_x23 
  port map (
    in_x0 => add_del_q_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    out_x0 => mux_y_net
  );
  munge_in : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_munge_in_x23 
  port map (
    din => dat_del_q_net,
    dout => reinterpret_out_output_port_net
  );
  convert_addr : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 10,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 10,
    latency => 0,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => mux_y_net,
    clk => clk_net,
    ce => ce_net,
    dout => convert_addr_dout_net
  );
  convert_din1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 32,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 32,
    latency => 0,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => reinterpret_out_output_port_net,
    clk => clk_net,
    ce => ce_net,
    dout => convert_din1_dout_net
  );
  convert_we : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 1,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 1,
    latency => 0,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => we_del_q_net,
    clk => clk_net,
    ce => ce_net,
    dout => convert_we_dout_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot3_23/ss/ctrl
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_ctrl_x22 is
  port (
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_23_ss_ctrl_user_data_out : in std_logic_vector( 32-1 downto 0 );
    in_reg : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_ctrl_x22;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_ctrl_x22 is 
  signal reint1_output_port_net : std_logic_vector( 32-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_23_ss_ctrl_user_data_out_net : std_logic_vector( 32-1 downto 0 );
  signal io_delay_q_net : std_logic_vector( 32-1 downto 0 );
  signal slice_reg_y_net : std_logic_vector( 32-1 downto 0 );
begin
  in_reg <= reint1_output_port_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_23_ss_ctrl_user_data_out_net <= rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_23_ss_ctrl_user_data_out;
  io_delay : entity xil_defaultlib.sysgen_delay_34e314c510 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d => rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_23_ss_ctrl_user_data_out_net,
    q => io_delay_q_net
  );
  slice_reg : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 0,
    new_msb => 31,
    x_width => 32,
    y_width => 32
  )
  port map (
    x => io_delay_q_net,
    y => slice_reg_y_net
  );
  reint1 : entity xil_defaultlib.sysgen_reinterpret_52bb84f12b 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => slice_reg_y_net,
    output_port => reint1_output_port_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot3_23/ss/ctrl_combine
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_ctrl_combine_x23 is
  port (
    in1 : in std_logic_vector( 28-1 downto 0 );
    in2 : in std_logic_vector( 1-1 downto 0 );
    in3 : in std_logic_vector( 2-1 downto 0 );
    in4 : in std_logic_vector( 1-1 downto 0 );
    bus_out : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_ctrl_combine_x23;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_ctrl_combine_x23 is 
  signal concatenate_y_net : std_logic_vector( 32-1 downto 0 );
  signal reinterpret4_output_port_net_x0 : std_logic_vector( 28-1 downto 0 );
  signal circ_or_y_net : std_logic_vector( 1-1 downto 0 );
  signal reinterpret2_output_port_net : std_logic_vector( 2-1 downto 0 );
  signal arm_or_y_net : std_logic_vector( 1-1 downto 0 );
  signal reinterpret1_output_port_net : std_logic_vector( 28-1 downto 0 );
  signal reinterpret2_output_port_net_x0 : std_logic_vector( 1-1 downto 0 );
  signal reinterpret3_output_port_net : std_logic_vector( 2-1 downto 0 );
  signal reinterpret4_output_port_net : std_logic_vector( 1-1 downto 0 );
begin
  bus_out <= concatenate_y_net;
  reinterpret4_output_port_net_x0 <= in1;
  circ_or_y_net <= in2;
  reinterpret2_output_port_net <= in3;
  arm_or_y_net <= in4;
  concatenate : entity xil_defaultlib.sysgen_concat_8611e618a5 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    in0 => reinterpret1_output_port_net,
    in1 => reinterpret2_output_port_net_x0,
    in2 => reinterpret3_output_port_net,
    in3 => reinterpret4_output_port_net,
    y => concatenate_y_net
  );
  reinterpret1 : entity xil_defaultlib.sysgen_reinterpret_f7e0b72e82 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => reinterpret4_output_port_net_x0,
    output_port => reinterpret1_output_port_net
  );
  reinterpret2 : entity xil_defaultlib.sysgen_reinterpret_317b92931a 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => circ_or_y_net,
    output_port => reinterpret2_output_port_net_x0
  );
  reinterpret3 : entity xil_defaultlib.sysgen_reinterpret_5dc9f217bd 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => reinterpret2_output_port_net,
    output_port => reinterpret3_output_port_net
  );
  reinterpret4 : entity xil_defaultlib.sysgen_reinterpret_317b92931a 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => arm_or_y_net,
    output_port => reinterpret4_output_port_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot3_23/ss/ctrl_split
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_ctrl_split_x25 is
  port (
    bus_in : in std_logic_vector( 32-1 downto 0 );
    msb_out4 : out std_logic_vector( 28-1 downto 0 );
    out3 : out std_logic_vector( 1-1 downto 0 );
    out2 : out std_logic_vector( 2-1 downto 0 );
    lsb_out1 : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_ctrl_split_x25;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_ctrl_split_x25 is 
  signal reinterpret4_output_port_net : std_logic_vector( 28-1 downto 0 );
  signal slice3_y_net : std_logic_vector( 1-1 downto 0 );
  signal reinterpret2_output_port_net : std_logic_vector( 2-1 downto 0 );
  signal slice1_y_net : std_logic_vector( 1-1 downto 0 );
  signal reint1_output_port_net : std_logic_vector( 32-1 downto 0 );
  signal slice2_y_net : std_logic_vector( 2-1 downto 0 );
  signal slice4_y_net : std_logic_vector( 28-1 downto 0 );
begin
  msb_out4 <= reinterpret4_output_port_net;
  out3 <= slice3_y_net;
  out2 <= reinterpret2_output_port_net;
  lsb_out1 <= slice1_y_net;
  reint1_output_port_net <= bus_in;
  reinterpret2 : entity xil_defaultlib.sysgen_reinterpret_5dc9f217bd 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => slice2_y_net,
    output_port => reinterpret2_output_port_net
  );
  reinterpret4 : entity xil_defaultlib.sysgen_reinterpret_f7e0b72e82 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => slice4_y_net,
    output_port => reinterpret4_output_port_net
  );
  slice1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 0,
    new_msb => 0,
    x_width => 32,
    y_width => 1
  )
  port map (
    x => reint1_output_port_net,
    y => slice1_y_net
  );
  slice2 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 1,
    new_msb => 2,
    x_width => 32,
    y_width => 2
  )
  port map (
    x => reint1_output_port_net,
    y => slice2_y_net
  );
  slice3 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 3,
    new_msb => 3,
    x_width => 32,
    y_width => 1
  )
  port map (
    x => reint1_output_port_net,
    y => slice3_y_net
  );
  slice4 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 4,
    new_msb => 31,
    x_width => 32,
    y_width => 28
  )
  port map (
    x => reint1_output_port_net,
    y => slice4_y_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot3_23/ss/status
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_status_x26 is
  port (
    out_reg : in std_logic_vector( 32-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_23_ss_status_user_data_in : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_status_x26;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_status_x26 is 
  signal concat_y_net : std_logic_vector( 32-1 downto 0 );
  signal cast_gw_dout_net : std_logic_vector( 32-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal io_delay_q_net : std_logic_vector( 32-1 downto 0 );
  signal reint1_output_port_net : std_logic_vector( 32-1 downto 0 );
  signal assert_reg_dout_net : std_logic_vector( 32-1 downto 0 );
begin
  concat_y_net <= out_reg;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_23_ss_status_user_data_in <= cast_gw_dout_net;
  clk_net <= clk_1;
  ce_net <= ce_1;
  io_delay : entity xil_defaultlib.sysgen_delay_34e314c510 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d => reint1_output_port_net,
    q => io_delay_q_net
  );
  cast_gw : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 32,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 32,
    latency => 1,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => io_delay_q_net,
    clk => clk_net,
    ce => ce_net,
    dout => cast_gw_dout_net
  );
  assert_reg : entity xil_defaultlib.xlpassthrough 
  generic map (
    din_width => 32,
    dout_width => 32
  )
  port map (
    din => concat_y_net,
    dout => assert_reg_dout_net
  );
  reint1 : entity xil_defaultlib.sysgen_reinterpret_52bb84f12b 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => assert_reg_dout_net,
    output_port => reint1_output_port_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot3_23/ss
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_ss_x23 is
  port (
    din : in std_logic_vector( 32-1 downto 0 );
    we : in std_logic_vector( 1-1 downto 0 );
    trig : in std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_23_ss_ctrl_user_data_out : in std_logic_vector( 32-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    arm_out : out std_logic_vector( 1-1 downto 0 );
    goto_96690473_we1 : out std_logic_vector( 1-1 downto 0 );
    goto_96690473_we4 : out std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_23_ss_bram_addr : out std_logic_vector( 10-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_23_ss_bram_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_23_ss_bram_we : out std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_23_ss_status_user_data_in : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_ss_x23;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_ss_x23 is 
  signal arm_or_y_net : std_logic_vector( 1-1 downto 0 );
  signal concatenate_y_net : std_logic_vector( 32-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc3_sync_net : std_logic_vector( 1-1 downto 0 );
  signal edge_op_y_net_x0 : std_logic_vector( 1-1 downto 0 );
  signal we_choice_y_net : std_logic_vector( 1-1 downto 0 );
  signal logical6_y_net : std_logic_vector( 1-1 downto 0 );
  signal convert_addr_dout_net : std_logic_vector( 10-1 downto 0 );
  signal convert_din1_dout_net : std_logic_vector( 32-1 downto 0 );
  signal convert_we_dout_net : std_logic_vector( 1-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_23_ss_ctrl_user_data_out_net : std_logic_vector( 32-1 downto 0 );
  signal cast_gw_dout_net : std_logic_vector( 32-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal slice2_y_net : std_logic_vector( 10-1 downto 0 );
  signal delay6_q_net : std_logic_vector( 32-1 downto 0 );
  signal concat_y_net : std_logic_vector( 32-1 downto 0 );
  signal data_choice_y_net : std_logic_vector( 32-1 downto 0 );
  signal register6_q_net : std_logic_vector( 1-1 downto 0 );
  signal never_op_net : std_logic_vector( 1-1 downto 0 );
  signal edge_op_y_net_x1 : std_logic_vector( 1-1 downto 0 );
  signal cast_dout_net : std_logic_vector( 32-1 downto 0 );
  signal concatenate_y_net_x0 : std_logic_vector( 32-1 downto 0 );
  signal add_del_q_net : std_logic_vector( 10-1 downto 0 );
  signal dat_del_q_net : std_logic_vector( 32-1 downto 0 );
  signal we_del_q_net : std_logic_vector( 1-1 downto 0 );
  signal reint1_output_port_net : std_logic_vector( 32-1 downto 0 );
  signal reinterpret4_output_port_net : std_logic_vector( 28-1 downto 0 );
  signal circ_or_y_net : std_logic_vector( 1-1 downto 0 );
  signal reinterpret2_output_port_net : std_logic_vector( 2-1 downto 0 );
  signal slice3_y_net : std_logic_vector( 1-1 downto 0 );
  signal slice1_y_net : std_logic_vector( 1-1 downto 0 );
  signal arm_op_net : std_logic_vector( 1-1 downto 0 );
  signal ri_output_port_net : std_logic_vector( 32-1 downto 0 );
  signal circ_op_net : std_logic_vector( 1-1 downto 0 );
begin
  arm_out <= arm_or_y_net;
  concatenate_y_net <= din;
  rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc3_sync_net <= we;
  edge_op_y_net_x0 <= trig;
  goto_96690473_we1 <= we_choice_y_net;
  goto_96690473_we4 <= logical6_y_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_23_ss_bram_addr <= convert_addr_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_23_ss_bram_data_in <= convert_din1_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_23_ss_bram_we <= convert_we_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_23_ss_ctrl_user_data_out_net <= rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_23_ss_ctrl_user_data_out;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_23_ss_status_user_data_in <= cast_gw_dout_net;
  clk_net <= clk_1;
  ce_net <= ce_1;
  add_gen : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_add_gen_x23 
  port map (
    din => data_choice_y_net,
    we => we_choice_y_net,
    go => register6_q_net,
    cont => never_op_net,
    init => edge_op_y_net_x1,
    clk_1 => clk_net,
    ce_1 => ce_net,
    add => slice2_y_net,
    dout => delay6_q_net,
    we_o => logical6_y_net,
    status => concat_y_net
  );
  basic_ctrl : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_basic_ctrl_x23 
  port map (
    din => cast_dout_net,
    we => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc3_sync_net,
    trig => edge_op_y_net_x0,
    ctrl => concatenate_y_net_x0,
    stopi => never_op_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    dout => data_choice_y_net,
    we_o => we_choice_y_net,
    go => register6_q_net,
    init => edge_op_y_net_x1
  );
  bram : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_bram_x23 
  port map (
    addr => add_del_q_net,
    data_in => dat_del_q_net,
    we => we_del_q_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_23_ss_bram_addr => convert_addr_dout_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_23_ss_bram_data_in => convert_din1_dout_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_23_ss_bram_we => convert_we_dout_net
  );
  ctrl : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_ctrl_x22 
  port map (
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_23_ss_ctrl_user_data_out => rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_23_ss_ctrl_user_data_out_net,
    in_reg => reint1_output_port_net
  );
  ctrl_combine : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_ctrl_combine_x23 
  port map (
    in1 => reinterpret4_output_port_net,
    in2 => circ_or_y_net,
    in3 => reinterpret2_output_port_net,
    in4 => arm_or_y_net,
    bus_out => concatenate_y_net_x0
  );
  ctrl_split : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_ctrl_split_x25 
  port map (
    bus_in => reint1_output_port_net,
    msb_out4 => reinterpret4_output_port_net,
    out3 => slice3_y_net,
    out2 => reinterpret2_output_port_net,
    lsb_out1 => slice1_y_net
  );
  status : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_status_x26 
  port map (
    out_reg => concat_y_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_23_ss_status_user_data_in => cast_gw_dout_net
  );
  add_del : entity xil_defaultlib.sysgen_delay_4e9264ffdf 
  port map (
    clr => '0',
    d => slice2_y_net,
    clk => clk_net,
    ce => ce_net,
    q => add_del_q_net
  );
  arm : entity xil_defaultlib.sysgen_constant_a7b8778750 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => arm_op_net
  );
  arm_or : entity xil_defaultlib.sysgen_logical_d7dc12cf31 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => slice1_y_net,
    d1 => arm_op_net,
    y => arm_or_y_net
  );
  cast : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 32,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 32,
    latency => 0,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => ri_output_port_net,
    clk => clk_net,
    ce => ce_net,
    dout => cast_dout_net
  );
  circ : entity xil_defaultlib.sysgen_constant_a7b8778750 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => circ_op_net
  );
  circ_or : entity xil_defaultlib.sysgen_logical_d7dc12cf31 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => slice3_y_net,
    d1 => circ_op_net,
    y => circ_or_y_net
  );
  dat_del : entity xil_defaultlib.sysgen_delay_5ec362a23c 
  port map (
    clr => '0',
    d => delay6_q_net,
    clk => clk_net,
    ce => ce_net,
    q => dat_del_q_net
  );
  never : entity xil_defaultlib.sysgen_constant_a7b8778750 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => never_op_net
  );
  ri : entity xil_defaultlib.sysgen_reinterpret_52bb84f12b 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => concatenate_y_net,
    output_port => ri_output_port_net
  );
  we_del : entity xil_defaultlib.sysgen_delay_e0740ee3f9 
  port map (
    clr => '0',
    d => logical6_y_net,
    clk => clk_net,
    ce => ce_net,
    q => we_del_q_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot3_23
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_23 is
  port (
    in_d0 : in std_logic_vector( 16-1 downto 0 );
    in_d1 : in std_logic_vector( 16-1 downto 0 );
    we : in std_logic_vector( 1-1 downto 0 );
    trig : in std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_23_ss_ctrl_user_data_out : in std_logic_vector( 32-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    arm_out : out std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_23_ss_bram_addr : out std_logic_vector( 10-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_23_ss_bram_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_23_ss_bram_we : out std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_23_ss_status_user_data_in : out std_logic_vector( 32-1 downto 0 );
    goto_96690473_we1 : out std_logic_vector( 1-1 downto 0 );
    goto_96690473_we4 : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_23;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_23 is 
  signal arm_or_y_net : std_logic_vector( 1-1 downto 0 );
  signal slice31_y_net : std_logic_vector( 16-1 downto 0 );
  signal slice28_y_net : std_logic_vector( 16-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc3_sync_net : std_logic_vector( 1-1 downto 0 );
  signal edge_op_y_net : std_logic_vector( 1-1 downto 0 );
  signal convert_addr_dout_net : std_logic_vector( 10-1 downto 0 );
  signal convert_din1_dout_net : std_logic_vector( 32-1 downto 0 );
  signal convert_we_dout_net : std_logic_vector( 1-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_23_ss_ctrl_user_data_out_net : std_logic_vector( 32-1 downto 0 );
  signal cast_gw_dout_net : std_logic_vector( 32-1 downto 0 );
  signal we_choice_y_net : std_logic_vector( 1-1 downto 0 );
  signal logical6_y_net : std_logic_vector( 1-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal concatenate_y_net : std_logic_vector( 32-1 downto 0 );
  signal assert_d0_dout_net : std_logic_vector( 16-1 downto 0 );
  signal assert_d1_dout_net : std_logic_vector( 16-1 downto 0 );
begin
  arm_out <= arm_or_y_net;
  slice31_y_net <= in_d0;
  slice28_y_net <= in_d1;
  rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc3_sync_net <= we;
  edge_op_y_net <= trig;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_23_ss_bram_addr <= convert_addr_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_23_ss_bram_data_in <= convert_din1_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_23_ss_bram_we <= convert_we_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_23_ss_ctrl_user_data_out_net <= rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_23_ss_ctrl_user_data_out;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_23_ss_status_user_data_in <= cast_gw_dout_net;
  goto_96690473_we1 <= we_choice_y_net;
  goto_96690473_we4 <= logical6_y_net;
  clk_net <= clk_1;
  ce_net <= ce_1;
  buscreate : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_buscreate_x23 
  port map (
    in1 => assert_d0_dout_net,
    in2 => assert_d1_dout_net,
    bus_out => concatenate_y_net
  );
  ss : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_ss_x23 
  port map (
    din => concatenate_y_net,
    we => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc3_sync_net,
    trig => edge_op_y_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_23_ss_ctrl_user_data_out => rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_23_ss_ctrl_user_data_out_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    arm_out => arm_or_y_net,
    goto_96690473_we1 => we_choice_y_net,
    goto_96690473_we4 => logical6_y_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_23_ss_bram_addr => convert_addr_dout_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_23_ss_bram_data_in => convert_din1_dout_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_23_ss_bram_we => convert_we_dout_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_23_ss_status_user_data_in => cast_gw_dout_net
  );
  assert_d0 : entity xil_defaultlib.xlpassthrough 
  generic map (
    din_width => 16,
    dout_width => 16
  )
  port map (
    din => slice31_y_net,
    dout => assert_d0_dout_net
  );
  assert_d1 : entity xil_defaultlib.xlpassthrough 
  generic map (
    din_width => 16,
    dout_width => 16
  )
  port map (
    din => slice28_y_net,
    dout => assert_d1_dout_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot3_45/buscreate
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_buscreate_x26 is
  port (
    in1 : in std_logic_vector( 16-1 downto 0 );
    in2 : in std_logic_vector( 16-1 downto 0 );
    bus_out : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_buscreate_x26;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_buscreate_x26 is 
  signal concatenate_y_net : std_logic_vector( 32-1 downto 0 );
  signal assert_d0_dout_net : std_logic_vector( 16-1 downto 0 );
  signal assert_d1_dout_net : std_logic_vector( 16-1 downto 0 );
  signal reinterpret1_output_port_net : std_logic_vector( 16-1 downto 0 );
  signal reinterpret2_output_port_net : std_logic_vector( 16-1 downto 0 );
begin
  bus_out <= concatenate_y_net;
  assert_d0_dout_net <= in1;
  assert_d1_dout_net <= in2;
  concatenate : entity xil_defaultlib.sysgen_concat_37649e01d1 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    in0 => reinterpret1_output_port_net,
    in1 => reinterpret2_output_port_net,
    y => concatenate_y_net
  );
  reinterpret1 : entity xil_defaultlib.sysgen_reinterpret_03c8cdbbc1 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => assert_d0_dout_net,
    output_port => reinterpret1_output_port_net
  );
  reinterpret2 : entity xil_defaultlib.sysgen_reinterpret_03c8cdbbc1 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => assert_d1_dout_net,
    output_port => reinterpret2_output_port_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot3_45/ss/add_gen/edge_detect
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x54 is
  port (
    in_x0 : in std_logic_vector( 1-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    out_x0 : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x54;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x54 is 
  signal edge_op_y_net : std_logic_vector( 1-1 downto 0 );
  signal slice3_y_net : std_logic_vector( 1-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal delay_q_net : std_logic_vector( 1-1 downto 0 );
  signal inverter_op_net : std_logic_vector( 1-1 downto 0 );
begin
  out_x0 <= edge_op_y_net;
  slice3_y_net <= in_x0;
  clk_net <= clk_1;
  ce_net <= ce_1;
  delay : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 1
  )
  port map (
    en => '1',
    rst => '1',
    d => slice3_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay_q_net
  );
  inverter : entity xil_defaultlib.sysgen_inverter_6233897471 
  port map (
    clr => '0',
    ip => slice3_y_net,
    clk => clk_net,
    ce => ce_net,
    op => inverter_op_net
  );
  edge_op : entity xil_defaultlib.sysgen_logical_9cc14fefba 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => inverter_op_net,
    d1 => delay_q_net,
    y => edge_op_y_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot3_45/ss/add_gen
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_add_gen_x26 is
  port (
    din : in std_logic_vector( 32-1 downto 0 );
    we : in std_logic_vector( 1-1 downto 0 );
    go : in std_logic_vector( 1-1 downto 0 );
    cont : in std_logic_vector( 1-1 downto 0 );
    init : in std_logic_vector( 1-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    add : out std_logic_vector( 10-1 downto 0 );
    dout : out std_logic_vector( 32-1 downto 0 );
    we_o : out std_logic_vector( 1-1 downto 0 );
    status : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_add_gen_x26;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_add_gen_x26 is 
  signal slice2_y_net : std_logic_vector( 10-1 downto 0 );
  signal delay6_q_net : std_logic_vector( 32-1 downto 0 );
  signal logical6_y_net : std_logic_vector( 1-1 downto 0 );
  signal concat_y_net : std_logic_vector( 32-1 downto 0 );
  signal data_choice_y_net : std_logic_vector( 32-1 downto 0 );
  signal we_choice_y_net : std_logic_vector( 1-1 downto 0 );
  signal register6_q_net : std_logic_vector( 1-1 downto 0 );
  signal never_op_net : std_logic_vector( 1-1 downto 0 );
  signal edge_op_y_net : std_logic_vector( 1-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal edge_op_y_net_x0 : std_logic_vector( 1-1 downto 0 );
  signal slice3_y_net : std_logic_vector( 1-1 downto 0 );
  signal shift_op_net : std_logic_vector( 19-1 downto 0 );
  signal inverter_op_net : std_logic_vector( 1-1 downto 0 );
  signal delay1_q_net : std_logic_vector( 12-1 downto 0 );
  signal convert_dout_net : std_logic_vector( 19-1 downto 0 );
  signal register5_q_net : std_logic_vector( 1-1 downto 0 );
  signal delay_q_net : std_logic_vector( 1-1 downto 0 );
  signal delay4_q_net : std_logic_vector( 1-1 downto 0 );
  signal slice1_y_net : std_logic_vector( 12-1 downto 0 );
  signal delay3_q_net : std_logic_vector( 1-1 downto 0 );
  signal inverter1_op_net : std_logic_vector( 1-1 downto 0 );
  signal logical1_y_net : std_logic_vector( 1-1 downto 0 );
  signal logical4_y_net : std_logic_vector( 1-1 downto 0 );
  signal add_gen_op_net : std_logic_vector( 13-1 downto 0 );
begin
  add <= slice2_y_net;
  dout <= delay6_q_net;
  we_o <= logical6_y_net;
  status <= concat_y_net;
  data_choice_y_net <= din;
  we_choice_y_net <= we;
  register6_q_net <= go;
  never_op_net <= cont;
  edge_op_y_net <= init;
  clk_net <= clk_1;
  ce_net <= ce_1;
  edge_detect : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x54 
  port map (
    in_x0 => slice3_y_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    out_x0 => edge_op_y_net_x0
  );
  concat : entity xil_defaultlib.sysgen_concat_fc8edfac0e 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    in0 => shift_op_net,
    in1 => inverter_op_net,
    in2 => delay1_q_net,
    y => concat_y_net
  );
  convert : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 1,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 19,
    latency => 0,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => register5_q_net,
    clk => clk_net,
    ce => ce_net,
    dout => convert_dout_net
  );
  delay : entity xil_defaultlib.sysgen_delay_e0740ee3f9 
  port map (
    clr => '0',
    d => delay4_q_net,
    clk => clk_net,
    ce => ce_net,
    q => delay_q_net
  );
  delay1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 12
  )
  port map (
    en => '1',
    rst => '1',
    d => slice1_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay1_q_net
  );
  delay3 : entity xil_defaultlib.sysgen_delay_e0740ee3f9 
  port map (
    clr => '0',
    d => never_op_net,
    clk => clk_net,
    ce => ce_net,
    q => delay3_q_net
  );
  delay4 : entity xil_defaultlib.sysgen_delay_e0740ee3f9 
  port map (
    clr => '0',
    d => edge_op_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay4_q_net
  );
  delay6 : entity xil_defaultlib.sysgen_delay_5ec362a23c 
  port map (
    clr => '0',
    d => data_choice_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay6_q_net
  );
  inverter : entity xil_defaultlib.sysgen_inverter_918b6bc6d0 
  port map (
    clr => '0',
    ip => register5_q_net,
    clk => clk_net,
    ce => ce_net,
    op => inverter_op_net
  );
  inverter1 : entity xil_defaultlib.sysgen_inverter_6233897471 
  port map (
    clr => '0',
    ip => edge_op_y_net_x0,
    clk => clk_net,
    ce => ce_net,
    op => inverter1_op_net
  );
  logical1 : entity xil_defaultlib.sysgen_logical_2486129911 
  port map (
    clr => '0',
    d0 => we_choice_y_net,
    d1 => register6_q_net,
    clk => clk_net,
    ce => ce_net,
    y => logical1_y_net
  );
  logical4 : entity xil_defaultlib.sysgen_logical_d7dc12cf31 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => delay3_q_net,
    d1 => inverter1_op_net,
    y => logical4_y_net
  );
  logical6 : entity xil_defaultlib.sysgen_logical_c05fefc67b 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => register5_q_net,
    d1 => logical4_y_net,
    d2 => logical1_y_net,
    y => logical6_y_net
  );
  register5 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlregister 
  generic map (
    d_width => 1,
    init_value => b"1"
  )
  port map (
    d => delay3_q_net,
    rst => delay_q_net,
    en => edge_op_y_net_x0,
    clk => clk_net,
    ce => ce_net,
    q => register5_q_net
  );
  shift : entity xil_defaultlib.sysgen_shift_5af4fe0a99 
  port map (
    clr => '0',
    ip => convert_dout_net,
    clk => clk_net,
    ce => ce_net,
    op => shift_op_net
  );
  add_gen : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlcounter_free 
  generic map (
    core_name0 => "rfdc_multi_eight_adcs_2048gsps_mts_c_counter_binary_v12_0_i1",
    op_arith => xlUnsigned,
    op_width => 13
  )
  port map (
    clr => '0',
    rst => delay4_q_net,
    en => logical6_y_net,
    clk => clk_net,
    ce => ce_net,
    op => add_gen_op_net
  );
  slice1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 0,
    new_msb => 11,
    x_width => 13,
    y_width => 12
  )
  port map (
    x => add_gen_op_net,
    y => slice1_y_net
  );
  slice2 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 2,
    new_msb => 11,
    x_width => 13,
    y_width => 10
  )
  port map (
    x => add_gen_op_net,
    y => slice2_y_net
  );
  slice3 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 12,
    new_msb => 12,
    x_width => 13,
    y_width => 1
  )
  port map (
    x => add_gen_op_net,
    y => slice3_y_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot3_45/ss/basic_ctrl/dram_munge
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_dram_munge_x26 is
  port (
    din : in std_logic_vector( 32-1 downto 0 );
    we : in std_logic_vector( 1-1 downto 0 );
    init : in std_logic_vector( 1-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    dout : out std_logic_vector( 32-1 downto 0 );
    we_o : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_dram_munge_x26;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_dram_munge_x26 is 
  signal data_choice_y_net : std_logic_vector( 32-1 downto 0 );
  signal we_choice_y_net : std_logic_vector( 1-1 downto 0 );
  signal cast_dout_net : std_logic_vector( 32-1 downto 0 );
  signal mux1_y_net_x0 : std_logic_vector( 1-1 downto 0 );
  signal edge_op_y_net : std_logic_vector( 1-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal concat_y_net : std_logic_vector( 80-1 downto 0 );
  signal constant_op_net : std_logic_vector( 8-1 downto 0 );
  signal register_q_net : std_logic_vector( 32-1 downto 0 );
  signal register1_q_net : std_logic_vector( 32-1 downto 0 );
  signal concat1_y_net : std_logic_vector( 80-1 downto 0 );
  signal register2_q_net : std_logic_vector( 32-1 downto 0 );
  signal register3_q_net : std_logic_vector( 32-1 downto 0 );
  signal delay_q_net : std_logic_vector( 1-1 downto 0 );
  signal logical_y_net : std_logic_vector( 1-1 downto 0 );
  signal delay1_q_net : std_logic_vector( 1-1 downto 0 );
  signal logical1_y_net : std_logic_vector( 1-1 downto 0 );
  signal relational3_op_net : std_logic_vector( 1-1 downto 0 );
  signal mux1_y_net : std_logic_vector( 80-1 downto 0 );
  signal dout_count_op_net : std_logic_vector( 1-1 downto 0 );
  signal relational_op_net : std_logic_vector( 1-1 downto 0 );
  signal relational1_op_net : std_logic_vector( 1-1 downto 0 );
  signal relational2_op_net : std_logic_vector( 1-1 downto 0 );
  signal input_count_op_net : std_logic_vector( 2-1 downto 0 );
  signal con0_op_net : std_logic_vector( 2-1 downto 0 );
  signal con1_op_net : std_logic_vector( 2-1 downto 0 );
  signal con2_op_net : std_logic_vector( 2-1 downto 0 );
  signal con3_op_net : std_logic_vector( 2-1 downto 0 );
  signal dram_op_net : std_logic_vector( 1-1 downto 0 );
begin
  dout <= data_choice_y_net;
  we_o <= we_choice_y_net;
  cast_dout_net <= din;
  mux1_y_net_x0 <= we;
  edge_op_y_net <= init;
  clk_net <= clk_1;
  ce_net <= ce_1;
  concat : entity xil_defaultlib.sysgen_concat_e7487baac7 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    in0 => constant_op_net,
    in1 => register_q_net,
    in2 => constant_op_net,
    in3 => register1_q_net,
    y => concat_y_net
  );
  concat1 : entity xil_defaultlib.sysgen_concat_e7487baac7 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    in0 => constant_op_net,
    in1 => register2_q_net,
    in2 => constant_op_net,
    in3 => register3_q_net,
    y => concat1_y_net
  );
  constant_x0 : entity xil_defaultlib.sysgen_constant_869e31f04d 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => constant_op_net
  );
  delay : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 1
  )
  port map (
    en => '1',
    rst => '1',
    d => logical_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay_q_net
  );
  delay1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 1
  )
  port map (
    en => '1',
    rst => '1',
    d => logical1_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay1_q_net
  );
  logical : entity xil_defaultlib.sysgen_logical_2486129911 
  port map (
    clr => '0',
    d0 => relational3_op_net,
    d1 => mux1_y_net_x0,
    clk => clk_net,
    ce => ce_net,
    y => logical_y_net
  );
  logical1 : entity xil_defaultlib.sysgen_logical_d7dc12cf31 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => logical_y_net,
    d1 => delay_q_net,
    y => logical1_y_net
  );
  mux1 : entity xil_defaultlib.sysgen_mux_71ee2b1026 
  port map (
    clr => '0',
    sel => dout_count_op_net,
    d0 => concat_y_net,
    d1 => concat1_y_net,
    clk => clk_net,
    ce => ce_net,
    y => mux1_y_net
  );
  register_x0 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlregister 
  generic map (
    d_width => 32,
    init_value => b"00000000000000000000000000000000"
  )
  port map (
    rst => "0",
    d => cast_dout_net,
    en => relational_op_net,
    clk => clk_net,
    ce => ce_net,
    q => register_q_net
  );
  register1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlregister 
  generic map (
    d_width => 32,
    init_value => b"00000000000000000000000000000000"
  )
  port map (
    rst => "0",
    d => cast_dout_net,
    en => relational1_op_net,
    clk => clk_net,
    ce => ce_net,
    q => register1_q_net
  );
  register2 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlregister 
  generic map (
    d_width => 32,
    init_value => b"00000000000000000000000000000000"
  )
  port map (
    rst => "0",
    d => cast_dout_net,
    en => relational2_op_net,
    clk => clk_net,
    ce => ce_net,
    q => register2_q_net
  );
  register3 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlregister 
  generic map (
    d_width => 32,
    init_value => b"00000000000000000000000000000000"
  )
  port map (
    rst => "0",
    d => cast_dout_net,
    en => relational3_op_net,
    clk => clk_net,
    ce => ce_net,
    q => register3_q_net
  );
  relational : entity xil_defaultlib.sysgen_relational_e5d6b5eaca 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    a => input_count_op_net,
    b => con0_op_net,
    op => relational_op_net
  );
  relational1 : entity xil_defaultlib.sysgen_relational_e5d6b5eaca 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    a => input_count_op_net,
    b => con1_op_net,
    op => relational1_op_net
  );
  relational2 : entity xil_defaultlib.sysgen_relational_e5d6b5eaca 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    a => input_count_op_net,
    b => con2_op_net,
    op => relational2_op_net
  );
  relational3 : entity xil_defaultlib.sysgen_relational_e5d6b5eaca 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    a => input_count_op_net,
    b => con3_op_net,
    op => relational3_op_net
  );
  con0 : entity xil_defaultlib.sysgen_constant_b58c3a1535 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => con0_op_net
  );
  con1 : entity xil_defaultlib.sysgen_constant_d3f27a6354 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => con1_op_net
  );
  con2 : entity xil_defaultlib.sysgen_constant_2fa4689d4e 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => con2_op_net
  );
  con3 : entity xil_defaultlib.sysgen_constant_31bab66ba6 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => con3_op_net
  );
  data_choice : entity xil_defaultlib.sysgen_mux_d624c1af44 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    sel => dram_op_net,
    d0 => cast_dout_net,
    d1 => mux1_y_net,
    y => data_choice_y_net
  );
  dout_count : entity xil_defaultlib.sysgen_counter_a9c1c293c2 
  port map (
    clr => '0',
    rst => edge_op_y_net,
    en => logical1_y_net,
    clk => clk_net,
    ce => ce_net,
    op => dout_count_op_net
  );
  dram : entity xil_defaultlib.sysgen_constant_a7b8778750 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => dram_op_net
  );
  input_count : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlcounter_free 
  generic map (
    core_name0 => "rfdc_multi_eight_adcs_2048gsps_mts_c_counter_binary_v12_0_i2",
    op_arith => xlUnsigned,
    op_width => 2
  )
  port map (
    clr => '0',
    rst => edge_op_y_net,
    en => mux1_y_net_x0,
    clk => clk_net,
    ce => ce_net,
    op => input_count_op_net
  );
  we_choice : entity xil_defaultlib.sysgen_mux_4874190f11 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    sel => dram_op_net,
    d0 => mux1_y_net_x0,
    d1 => delay1_q_net,
    y => we_choice_y_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot3_45/ss/basic_ctrl/edge_detect
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x55 is
  port (
    in_x0 : in std_logic_vector( 1-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    out_x0 : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x55;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x55 is 
  signal edge_op_y_net : std_logic_vector( 1-1 downto 0 );
  signal delay1_q_net : std_logic_vector( 1-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal delay_q_net : std_logic_vector( 1-1 downto 0 );
  signal inverter_op_net : std_logic_vector( 1-1 downto 0 );
begin
  out_x0 <= edge_op_y_net;
  delay1_q_net <= in_x0;
  clk_net <= clk_1;
  ce_net <= ce_1;
  delay : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 1
  )
  port map (
    en => '1',
    rst => '1',
    d => delay1_q_net,
    clk => clk_net,
    ce => ce_net,
    q => delay_q_net
  );
  inverter : entity xil_defaultlib.sysgen_inverter_6233897471 
  port map (
    clr => '0',
    ip => delay1_q_net,
    clk => clk_net,
    ce => ce_net,
    op => inverter_op_net
  );
  edge_op : entity xil_defaultlib.sysgen_logical_0f1aa1e2d7 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => inverter_op_net,
    d1 => delay_q_net,
    y => edge_op_y_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot3_45/ss/basic_ctrl
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_basic_ctrl_x26 is
  port (
    din : in std_logic_vector( 32-1 downto 0 );
    we : in std_logic_vector( 1-1 downto 0 );
    trig : in std_logic_vector( 1-1 downto 0 );
    ctrl : in std_logic_vector( 32-1 downto 0 );
    stopi : in std_logic_vector( 1-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    dout : out std_logic_vector( 32-1 downto 0 );
    we_o : out std_logic_vector( 1-1 downto 0 );
    go : out std_logic_vector( 1-1 downto 0 );
    init : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_basic_ctrl_x26;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_basic_ctrl_x26 is 
  signal data_choice_y_net : std_logic_vector( 32-1 downto 0 );
  signal we_choice_y_net : std_logic_vector( 1-1 downto 0 );
  signal register6_q_net : std_logic_vector( 1-1 downto 0 );
  signal edge_op_y_net_x0 : std_logic_vector( 1-1 downto 0 );
  signal cast_dout_net : std_logic_vector( 32-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc3_sync_net : std_logic_vector( 1-1 downto 0 );
  signal edge_op_y_net : std_logic_vector( 1-1 downto 0 );
  signal concatenate_y_net : std_logic_vector( 32-1 downto 0 );
  signal never_op_net : std_logic_vector( 1-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal mux1_y_net : std_logic_vector( 1-1 downto 0 );
  signal delay1_q_net : std_logic_vector( 1-1 downto 0 );
  signal constant_op_net : std_logic_vector( 1-1 downto 0 );
  signal constant1_op_net : std_logic_vector( 1-1 downto 0 );
  signal constant2_op_net : std_logic_vector( 1-1 downto 0 );
  signal enable_y_net : std_logic_vector( 1-1 downto 0 );
  signal delay2_q_net : std_logic_vector( 1-1 downto 0 );
  signal trig_src_y_net : std_logic_vector( 1-1 downto 0 );
  signal delay3_q_net : std_logic_vector( 1-1 downto 0 );
  signal valid_src_y_net : std_logic_vector( 1-1 downto 0 );
  signal inverter_op_net : std_logic_vector( 1-1 downto 0 );
  signal logical_y_net : std_logic_vector( 1-1 downto 0 );
  signal mux2_y_net : std_logic_vector( 1-1 downto 0 );
  signal register1_q_net : std_logic_vector( 1-1 downto 0 );
begin
  dout <= data_choice_y_net;
  we_o <= we_choice_y_net;
  go <= register6_q_net;
  init <= edge_op_y_net_x0;
  cast_dout_net <= din;
  rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc3_sync_net <= we;
  edge_op_y_net <= trig;
  concatenate_y_net <= ctrl;
  never_op_net <= stopi;
  clk_net <= clk_1;
  ce_net <= ce_1;
  dram_munge : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_dram_munge_x26 
  port map (
    din => cast_dout_net,
    we => mux1_y_net,
    init => edge_op_y_net_x0,
    clk_1 => clk_net,
    ce_1 => ce_net,
    dout => data_choice_y_net,
    we_o => we_choice_y_net
  );
  edge_detect : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x55 
  port map (
    in_x0 => delay1_q_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    out_x0 => edge_op_y_net_x0
  );
  constant_x0 : entity xil_defaultlib.sysgen_constant_c95a0b5efb 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => constant_op_net
  );
  constant1 : entity xil_defaultlib.sysgen_constant_c95a0b5efb 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => constant1_op_net
  );
  constant2 : entity xil_defaultlib.sysgen_constant_c95a0b5efb 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => constant2_op_net
  );
  delay1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 1
  )
  port map (
    en => '1',
    rst => '1',
    d => enable_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay1_q_net
  );
  delay2 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 1
  )
  port map (
    en => '1',
    rst => '1',
    d => trig_src_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay2_q_net
  );
  delay3 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 1
  )
  port map (
    en => '1',
    rst => '1',
    d => valid_src_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay3_q_net
  );
  inverter : entity xil_defaultlib.sysgen_inverter_6233897471 
  port map (
    clr => '0',
    ip => edge_op_y_net_x0,
    clk => clk_net,
    ce => ce_net,
    op => inverter_op_net
  );
  logical : entity xil_defaultlib.sysgen_logical_d26e5cda59 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => mux2_y_net,
    d1 => inverter_op_net,
    y => logical_y_net
  );
  mux1 : entity xil_defaultlib.sysgen_mux_4874190f11 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    sel => delay3_q_net,
    d0 => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc3_sync_net,
    d1 => constant2_op_net,
    y => mux1_y_net
  );
  mux2 : entity xil_defaultlib.sysgen_mux_4874190f11 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    sel => delay2_q_net,
    d0 => edge_op_y_net,
    d1 => constant1_op_net,
    y => mux2_y_net
  );
  register1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlregister 
  generic map (
    d_width => 1,
    init_value => b"0"
  )
  port map (
    d => constant_op_net,
    rst => logical_y_net,
    en => edge_op_y_net_x0,
    clk => clk_net,
    ce => ce_net,
    q => register1_q_net
  );
  register6 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlregister 
  generic map (
    d_width => 1,
    init_value => b"0"
  )
  port map (
    d => mux2_y_net,
    rst => edge_op_y_net_x0,
    en => register1_q_net,
    clk => clk_net,
    ce => ce_net,
    q => register6_q_net
  );
  enable : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 0,
    new_msb => 0,
    x_width => 32,
    y_width => 1
  )
  port map (
    x => concatenate_y_net,
    y => enable_y_net
  );
  trig_src : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 1,
    new_msb => 1,
    x_width => 32,
    y_width => 1
  )
  port map (
    x => concatenate_y_net,
    y => trig_src_y_net
  );
  valid_src : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 2,
    new_msb => 2,
    x_width => 32,
    y_width => 1
  )
  port map (
    x => concatenate_y_net,
    y => valid_src_y_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot3_45/ss/bram/calc_add
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_calc_add_x26 is
  port (
    in_x0 : in std_logic_vector( 10-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    out_x0 : out std_logic_vector( 10-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_calc_add_x26;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_calc_add_x26 is 
  signal mux_y_net : std_logic_vector( 10-1 downto 0 );
  signal add_del_q_net : std_logic_vector( 10-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal add_sub_s_net : std_logic_vector( 1-1 downto 0 );
  signal const_op_net : std_logic_vector( 1-1 downto 0 );
  signal lsw_y_net : std_logic_vector( 1-1 downto 0 );
  signal concat_y_net : std_logic_vector( 10-1 downto 0 );
  signal msw_y_net : std_logic_vector( 9-1 downto 0 );
  signal convert_addr_dout_net : std_logic_vector( 10-1 downto 0 );
  signal manipulate_op_net : std_logic_vector( 1-1 downto 0 );
begin
  out_x0 <= mux_y_net;
  add_del_q_net <= in_x0;
  clk_net <= clk_1;
  ce_net <= ce_1;
  add_sub : entity xil_defaultlib.sysgen_addsub_fd3b6c715c 
  port map (
    clr => '0',
    a => const_op_net,
    b => lsw_y_net,
    clk => clk_net,
    ce => ce_net,
    s => add_sub_s_net
  );
  concat : entity xil_defaultlib.sysgen_concat_f4b90dfa16 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    in0 => msw_y_net,
    in1 => add_sub_s_net,
    y => concat_y_net
  );
  const : entity xil_defaultlib.sysgen_constant_a7b8778750 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => const_op_net
  );
  convert_addr : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 10,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 10,
    latency => 0,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => add_del_q_net,
    clk => clk_net,
    ce => ce_net,
    dout => convert_addr_dout_net
  );
  lsw : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 0,
    new_msb => 0,
    x_width => 10,
    y_width => 1
  )
  port map (
    x => convert_addr_dout_net,
    y => lsw_y_net
  );
  manipulate : entity xil_defaultlib.sysgen_constant_a7b8778750 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => manipulate_op_net
  );
  msw : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 1,
    new_msb => 9,
    x_width => 10,
    y_width => 9
  )
  port map (
    x => convert_addr_dout_net,
    y => msw_y_net
  );
  mux : entity xil_defaultlib.sysgen_mux_4417594854 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    sel => manipulate_op_net,
    d0 => convert_addr_dout_net,
    d1 => concat_y_net,
    y => mux_y_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot3_45/ss/bram/munge_in
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_munge_in_x26 is
  port (
    din : in std_logic_vector( 32-1 downto 0 );
    dout : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_munge_in_x26;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_munge_in_x26 is 
  signal reinterpret_out_output_port_net : std_logic_vector( 32-1 downto 0 );
  signal dat_del_q_net : std_logic_vector( 32-1 downto 0 );
begin
  dout <= reinterpret_out_output_port_net;
  dat_del_q_net <= din;
  reinterpret_out : entity xil_defaultlib.sysgen_reinterpret_52bb84f12b 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => dat_del_q_net,
    output_port => reinterpret_out_output_port_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot3_45/ss/bram
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_bram_x26 is
  port (
    addr : in std_logic_vector( 10-1 downto 0 );
    data_in : in std_logic_vector( 32-1 downto 0 );
    we : in std_logic_vector( 1-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_45_ss_bram_addr : out std_logic_vector( 10-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_45_ss_bram_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_45_ss_bram_we : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_bram_x26;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_bram_x26 is 
  signal add_del_q_net : std_logic_vector( 10-1 downto 0 );
  signal dat_del_q_net : std_logic_vector( 32-1 downto 0 );
  signal we_del_q_net : std_logic_vector( 1-1 downto 0 );
  signal convert_addr_dout_net : std_logic_vector( 10-1 downto 0 );
  signal convert_din1_dout_net : std_logic_vector( 32-1 downto 0 );
  signal convert_we_dout_net : std_logic_vector( 1-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal mux_y_net : std_logic_vector( 10-1 downto 0 );
  signal reinterpret_out_output_port_net : std_logic_vector( 32-1 downto 0 );
begin
  add_del_q_net <= addr;
  dat_del_q_net <= data_in;
  we_del_q_net <= we;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_45_ss_bram_addr <= convert_addr_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_45_ss_bram_data_in <= convert_din1_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_45_ss_bram_we <= convert_we_dout_net;
  clk_net <= clk_1;
  ce_net <= ce_1;
  calc_add : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_calc_add_x26 
  port map (
    in_x0 => add_del_q_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    out_x0 => mux_y_net
  );
  munge_in : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_munge_in_x26 
  port map (
    din => dat_del_q_net,
    dout => reinterpret_out_output_port_net
  );
  convert_addr : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 10,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 10,
    latency => 0,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => mux_y_net,
    clk => clk_net,
    ce => ce_net,
    dout => convert_addr_dout_net
  );
  convert_din1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 32,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 32,
    latency => 0,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => reinterpret_out_output_port_net,
    clk => clk_net,
    ce => ce_net,
    dout => convert_din1_dout_net
  );
  convert_we : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 1,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 1,
    latency => 0,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => we_del_q_net,
    clk => clk_net,
    ce => ce_net,
    dout => convert_we_dout_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot3_45/ss/ctrl
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_ctrl_x26 is
  port (
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_45_ss_ctrl_user_data_out : in std_logic_vector( 32-1 downto 0 );
    in_reg : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_ctrl_x26;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_ctrl_x26 is 
  signal reint1_output_port_net : std_logic_vector( 32-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_45_ss_ctrl_user_data_out_net : std_logic_vector( 32-1 downto 0 );
  signal io_delay_q_net : std_logic_vector( 32-1 downto 0 );
  signal slice_reg_y_net : std_logic_vector( 32-1 downto 0 );
begin
  in_reg <= reint1_output_port_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_45_ss_ctrl_user_data_out_net <= rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_45_ss_ctrl_user_data_out;
  io_delay : entity xil_defaultlib.sysgen_delay_34e314c510 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d => rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_45_ss_ctrl_user_data_out_net,
    q => io_delay_q_net
  );
  slice_reg : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 0,
    new_msb => 31,
    x_width => 32,
    y_width => 32
  )
  port map (
    x => io_delay_q_net,
    y => slice_reg_y_net
  );
  reint1 : entity xil_defaultlib.sysgen_reinterpret_52bb84f12b 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => slice_reg_y_net,
    output_port => reint1_output_port_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot3_45/ss/ctrl_combine
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_ctrl_combine_x25 is
  port (
    in1 : in std_logic_vector( 28-1 downto 0 );
    in2 : in std_logic_vector( 1-1 downto 0 );
    in3 : in std_logic_vector( 2-1 downto 0 );
    in4 : in std_logic_vector( 1-1 downto 0 );
    bus_out : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_ctrl_combine_x25;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_ctrl_combine_x25 is 
  signal concatenate_y_net : std_logic_vector( 32-1 downto 0 );
  signal reinterpret4_output_port_net_x0 : std_logic_vector( 28-1 downto 0 );
  signal circ_or_y_net : std_logic_vector( 1-1 downto 0 );
  signal reinterpret2_output_port_net : std_logic_vector( 2-1 downto 0 );
  signal arm_or_y_net : std_logic_vector( 1-1 downto 0 );
  signal reinterpret1_output_port_net : std_logic_vector( 28-1 downto 0 );
  signal reinterpret2_output_port_net_x0 : std_logic_vector( 1-1 downto 0 );
  signal reinterpret3_output_port_net : std_logic_vector( 2-1 downto 0 );
  signal reinterpret4_output_port_net : std_logic_vector( 1-1 downto 0 );
begin
  bus_out <= concatenate_y_net;
  reinterpret4_output_port_net_x0 <= in1;
  circ_or_y_net <= in2;
  reinterpret2_output_port_net <= in3;
  arm_or_y_net <= in4;
  concatenate : entity xil_defaultlib.sysgen_concat_8611e618a5 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    in0 => reinterpret1_output_port_net,
    in1 => reinterpret2_output_port_net_x0,
    in2 => reinterpret3_output_port_net,
    in3 => reinterpret4_output_port_net,
    y => concatenate_y_net
  );
  reinterpret1 : entity xil_defaultlib.sysgen_reinterpret_f7e0b72e82 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => reinterpret4_output_port_net_x0,
    output_port => reinterpret1_output_port_net
  );
  reinterpret2 : entity xil_defaultlib.sysgen_reinterpret_317b92931a 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => circ_or_y_net,
    output_port => reinterpret2_output_port_net_x0
  );
  reinterpret3 : entity xil_defaultlib.sysgen_reinterpret_5dc9f217bd 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => reinterpret2_output_port_net,
    output_port => reinterpret3_output_port_net
  );
  reinterpret4 : entity xil_defaultlib.sysgen_reinterpret_317b92931a 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => arm_or_y_net,
    output_port => reinterpret4_output_port_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot3_45/ss/ctrl_split
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_ctrl_split_x26 is
  port (
    bus_in : in std_logic_vector( 32-1 downto 0 );
    msb_out4 : out std_logic_vector( 28-1 downto 0 );
    out3 : out std_logic_vector( 1-1 downto 0 );
    out2 : out std_logic_vector( 2-1 downto 0 );
    lsb_out1 : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_ctrl_split_x26;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_ctrl_split_x26 is 
  signal reinterpret4_output_port_net : std_logic_vector( 28-1 downto 0 );
  signal slice3_y_net : std_logic_vector( 1-1 downto 0 );
  signal reinterpret2_output_port_net : std_logic_vector( 2-1 downto 0 );
  signal slice1_y_net : std_logic_vector( 1-1 downto 0 );
  signal reint1_output_port_net : std_logic_vector( 32-1 downto 0 );
  signal slice2_y_net : std_logic_vector( 2-1 downto 0 );
  signal slice4_y_net : std_logic_vector( 28-1 downto 0 );
begin
  msb_out4 <= reinterpret4_output_port_net;
  out3 <= slice3_y_net;
  out2 <= reinterpret2_output_port_net;
  lsb_out1 <= slice1_y_net;
  reint1_output_port_net <= bus_in;
  reinterpret2 : entity xil_defaultlib.sysgen_reinterpret_5dc9f217bd 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => slice2_y_net,
    output_port => reinterpret2_output_port_net
  );
  reinterpret4 : entity xil_defaultlib.sysgen_reinterpret_f7e0b72e82 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => slice4_y_net,
    output_port => reinterpret4_output_port_net
  );
  slice1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 0,
    new_msb => 0,
    x_width => 32,
    y_width => 1
  )
  port map (
    x => reint1_output_port_net,
    y => slice1_y_net
  );
  slice2 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 1,
    new_msb => 2,
    x_width => 32,
    y_width => 2
  )
  port map (
    x => reint1_output_port_net,
    y => slice2_y_net
  );
  slice3 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 3,
    new_msb => 3,
    x_width => 32,
    y_width => 1
  )
  port map (
    x => reint1_output_port_net,
    y => slice3_y_net
  );
  slice4 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 4,
    new_msb => 31,
    x_width => 32,
    y_width => 28
  )
  port map (
    x => reint1_output_port_net,
    y => slice4_y_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot3_45/ss/status
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_status_x24 is
  port (
    out_reg : in std_logic_vector( 32-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_45_ss_status_user_data_in : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_status_x24;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_status_x24 is 
  signal concat_y_net : std_logic_vector( 32-1 downto 0 );
  signal cast_gw_dout_net : std_logic_vector( 32-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal io_delay_q_net : std_logic_vector( 32-1 downto 0 );
  signal reint1_output_port_net : std_logic_vector( 32-1 downto 0 );
  signal assert_reg_dout_net : std_logic_vector( 32-1 downto 0 );
begin
  concat_y_net <= out_reg;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_45_ss_status_user_data_in <= cast_gw_dout_net;
  clk_net <= clk_1;
  ce_net <= ce_1;
  io_delay : entity xil_defaultlib.sysgen_delay_34e314c510 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d => reint1_output_port_net,
    q => io_delay_q_net
  );
  cast_gw : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 32,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 32,
    latency => 1,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => io_delay_q_net,
    clk => clk_net,
    ce => ce_net,
    dout => cast_gw_dout_net
  );
  assert_reg : entity xil_defaultlib.xlpassthrough 
  generic map (
    din_width => 32,
    dout_width => 32
  )
  port map (
    din => concat_y_net,
    dout => assert_reg_dout_net
  );
  reint1 : entity xil_defaultlib.sysgen_reinterpret_52bb84f12b 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => assert_reg_dout_net,
    output_port => reint1_output_port_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot3_45/ss
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_ss_x26 is
  port (
    din : in std_logic_vector( 32-1 downto 0 );
    we : in std_logic_vector( 1-1 downto 0 );
    trig : in std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_45_ss_ctrl_user_data_out : in std_logic_vector( 32-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    arm_out : out std_logic_vector( 1-1 downto 0 );
    goto_98597097_we1 : out std_logic_vector( 1-1 downto 0 );
    goto_98597097_we4 : out std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_45_ss_bram_addr : out std_logic_vector( 10-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_45_ss_bram_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_45_ss_bram_we : out std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_45_ss_status_user_data_in : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_ss_x26;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_ss_x26 is 
  signal arm_or_y_net : std_logic_vector( 1-1 downto 0 );
  signal concatenate_y_net : std_logic_vector( 32-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc3_sync_net : std_logic_vector( 1-1 downto 0 );
  signal edge_op_y_net_x0 : std_logic_vector( 1-1 downto 0 );
  signal we_choice_y_net : std_logic_vector( 1-1 downto 0 );
  signal logical6_y_net : std_logic_vector( 1-1 downto 0 );
  signal convert_addr_dout_net : std_logic_vector( 10-1 downto 0 );
  signal convert_din1_dout_net : std_logic_vector( 32-1 downto 0 );
  signal convert_we_dout_net : std_logic_vector( 1-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_45_ss_ctrl_user_data_out_net : std_logic_vector( 32-1 downto 0 );
  signal cast_gw_dout_net : std_logic_vector( 32-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal slice2_y_net : std_logic_vector( 10-1 downto 0 );
  signal delay6_q_net : std_logic_vector( 32-1 downto 0 );
  signal concat_y_net : std_logic_vector( 32-1 downto 0 );
  signal data_choice_y_net : std_logic_vector( 32-1 downto 0 );
  signal register6_q_net : std_logic_vector( 1-1 downto 0 );
  signal never_op_net : std_logic_vector( 1-1 downto 0 );
  signal edge_op_y_net_x1 : std_logic_vector( 1-1 downto 0 );
  signal cast_dout_net : std_logic_vector( 32-1 downto 0 );
  signal concatenate_y_net_x0 : std_logic_vector( 32-1 downto 0 );
  signal add_del_q_net : std_logic_vector( 10-1 downto 0 );
  signal dat_del_q_net : std_logic_vector( 32-1 downto 0 );
  signal we_del_q_net : std_logic_vector( 1-1 downto 0 );
  signal reint1_output_port_net : std_logic_vector( 32-1 downto 0 );
  signal reinterpret4_output_port_net : std_logic_vector( 28-1 downto 0 );
  signal circ_or_y_net : std_logic_vector( 1-1 downto 0 );
  signal reinterpret2_output_port_net : std_logic_vector( 2-1 downto 0 );
  signal slice3_y_net : std_logic_vector( 1-1 downto 0 );
  signal slice1_y_net : std_logic_vector( 1-1 downto 0 );
  signal arm_op_net : std_logic_vector( 1-1 downto 0 );
  signal ri_output_port_net : std_logic_vector( 32-1 downto 0 );
  signal circ_op_net : std_logic_vector( 1-1 downto 0 );
begin
  arm_out <= arm_or_y_net;
  concatenate_y_net <= din;
  rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc3_sync_net <= we;
  edge_op_y_net_x0 <= trig;
  goto_98597097_we1 <= we_choice_y_net;
  goto_98597097_we4 <= logical6_y_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_45_ss_bram_addr <= convert_addr_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_45_ss_bram_data_in <= convert_din1_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_45_ss_bram_we <= convert_we_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_45_ss_ctrl_user_data_out_net <= rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_45_ss_ctrl_user_data_out;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_45_ss_status_user_data_in <= cast_gw_dout_net;
  clk_net <= clk_1;
  ce_net <= ce_1;
  add_gen : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_add_gen_x26 
  port map (
    din => data_choice_y_net,
    we => we_choice_y_net,
    go => register6_q_net,
    cont => never_op_net,
    init => edge_op_y_net_x1,
    clk_1 => clk_net,
    ce_1 => ce_net,
    add => slice2_y_net,
    dout => delay6_q_net,
    we_o => logical6_y_net,
    status => concat_y_net
  );
  basic_ctrl : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_basic_ctrl_x26 
  port map (
    din => cast_dout_net,
    we => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc3_sync_net,
    trig => edge_op_y_net_x0,
    ctrl => concatenate_y_net_x0,
    stopi => never_op_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    dout => data_choice_y_net,
    we_o => we_choice_y_net,
    go => register6_q_net,
    init => edge_op_y_net_x1
  );
  bram : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_bram_x26 
  port map (
    addr => add_del_q_net,
    data_in => dat_del_q_net,
    we => we_del_q_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_45_ss_bram_addr => convert_addr_dout_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_45_ss_bram_data_in => convert_din1_dout_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_45_ss_bram_we => convert_we_dout_net
  );
  ctrl : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_ctrl_x26 
  port map (
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_45_ss_ctrl_user_data_out => rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_45_ss_ctrl_user_data_out_net,
    in_reg => reint1_output_port_net
  );
  ctrl_combine : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_ctrl_combine_x25 
  port map (
    in1 => reinterpret4_output_port_net,
    in2 => circ_or_y_net,
    in3 => reinterpret2_output_port_net,
    in4 => arm_or_y_net,
    bus_out => concatenate_y_net_x0
  );
  ctrl_split : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_ctrl_split_x26 
  port map (
    bus_in => reint1_output_port_net,
    msb_out4 => reinterpret4_output_port_net,
    out3 => slice3_y_net,
    out2 => reinterpret2_output_port_net,
    lsb_out1 => slice1_y_net
  );
  status : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_status_x24 
  port map (
    out_reg => concat_y_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_45_ss_status_user_data_in => cast_gw_dout_net
  );
  add_del : entity xil_defaultlib.sysgen_delay_4e9264ffdf 
  port map (
    clr => '0',
    d => slice2_y_net,
    clk => clk_net,
    ce => ce_net,
    q => add_del_q_net
  );
  arm : entity xil_defaultlib.sysgen_constant_a7b8778750 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => arm_op_net
  );
  arm_or : entity xil_defaultlib.sysgen_logical_d7dc12cf31 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => slice1_y_net,
    d1 => arm_op_net,
    y => arm_or_y_net
  );
  cast : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 32,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 32,
    latency => 0,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => ri_output_port_net,
    clk => clk_net,
    ce => ce_net,
    dout => cast_dout_net
  );
  circ : entity xil_defaultlib.sysgen_constant_a7b8778750 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => circ_op_net
  );
  circ_or : entity xil_defaultlib.sysgen_logical_d7dc12cf31 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => slice3_y_net,
    d1 => circ_op_net,
    y => circ_or_y_net
  );
  dat_del : entity xil_defaultlib.sysgen_delay_5ec362a23c 
  port map (
    clr => '0',
    d => delay6_q_net,
    clk => clk_net,
    ce => ce_net,
    q => dat_del_q_net
  );
  never : entity xil_defaultlib.sysgen_constant_a7b8778750 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => never_op_net
  );
  ri : entity xil_defaultlib.sysgen_reinterpret_52bb84f12b 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => concatenate_y_net,
    output_port => ri_output_port_net
  );
  we_del : entity xil_defaultlib.sysgen_delay_e0740ee3f9 
  port map (
    clr => '0',
    d => logical6_y_net,
    clk => clk_net,
    ce => ce_net,
    q => we_del_q_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot3_45
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_45 is
  port (
    in_d0 : in std_logic_vector( 16-1 downto 0 );
    in_d1 : in std_logic_vector( 16-1 downto 0 );
    we : in std_logic_vector( 1-1 downto 0 );
    trig : in std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_45_ss_ctrl_user_data_out : in std_logic_vector( 32-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    arm_out : out std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_45_ss_bram_addr : out std_logic_vector( 10-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_45_ss_bram_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_45_ss_bram_we : out std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_45_ss_status_user_data_in : out std_logic_vector( 32-1 downto 0 );
    goto_98597097_we1 : out std_logic_vector( 1-1 downto 0 );
    goto_98597097_we4 : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_45;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_45 is 
  signal arm_or_y_net : std_logic_vector( 1-1 downto 0 );
  signal slice24_y_net : std_logic_vector( 16-1 downto 0 );
  signal slice27_y_net : std_logic_vector( 16-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc3_sync_net : std_logic_vector( 1-1 downto 0 );
  signal edge_op_y_net : std_logic_vector( 1-1 downto 0 );
  signal convert_addr_dout_net : std_logic_vector( 10-1 downto 0 );
  signal convert_din1_dout_net : std_logic_vector( 32-1 downto 0 );
  signal convert_we_dout_net : std_logic_vector( 1-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_45_ss_ctrl_user_data_out_net : std_logic_vector( 32-1 downto 0 );
  signal cast_gw_dout_net : std_logic_vector( 32-1 downto 0 );
  signal we_choice_y_net : std_logic_vector( 1-1 downto 0 );
  signal logical6_y_net : std_logic_vector( 1-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal concatenate_y_net : std_logic_vector( 32-1 downto 0 );
  signal assert_d0_dout_net : std_logic_vector( 16-1 downto 0 );
  signal assert_d1_dout_net : std_logic_vector( 16-1 downto 0 );
begin
  arm_out <= arm_or_y_net;
  slice24_y_net <= in_d0;
  slice27_y_net <= in_d1;
  rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc3_sync_net <= we;
  edge_op_y_net <= trig;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_45_ss_bram_addr <= convert_addr_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_45_ss_bram_data_in <= convert_din1_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_45_ss_bram_we <= convert_we_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_45_ss_ctrl_user_data_out_net <= rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_45_ss_ctrl_user_data_out;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_45_ss_status_user_data_in <= cast_gw_dout_net;
  goto_98597097_we1 <= we_choice_y_net;
  goto_98597097_we4 <= logical6_y_net;
  clk_net <= clk_1;
  ce_net <= ce_1;
  buscreate : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_buscreate_x26 
  port map (
    in1 => assert_d0_dout_net,
    in2 => assert_d1_dout_net,
    bus_out => concatenate_y_net
  );
  ss : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_ss_x26 
  port map (
    din => concatenate_y_net,
    we => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc3_sync_net,
    trig => edge_op_y_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_45_ss_ctrl_user_data_out => rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_45_ss_ctrl_user_data_out_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    arm_out => arm_or_y_net,
    goto_98597097_we1 => we_choice_y_net,
    goto_98597097_we4 => logical6_y_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_45_ss_bram_addr => convert_addr_dout_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_45_ss_bram_data_in => convert_din1_dout_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_45_ss_bram_we => convert_we_dout_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_45_ss_status_user_data_in => cast_gw_dout_net
  );
  assert_d0 : entity xil_defaultlib.xlpassthrough 
  generic map (
    din_width => 16,
    dout_width => 16
  )
  port map (
    din => slice24_y_net,
    dout => assert_d0_dout_net
  );
  assert_d1 : entity xil_defaultlib.xlpassthrough 
  generic map (
    din_width => 16,
    dout_width => 16
  )
  port map (
    din => slice27_y_net,
    dout => assert_d1_dout_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot3_67/buscreate
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_buscreate_x25 is
  port (
    in1 : in std_logic_vector( 16-1 downto 0 );
    in2 : in std_logic_vector( 16-1 downto 0 );
    bus_out : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_buscreate_x25;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_buscreate_x25 is 
  signal concatenate_y_net : std_logic_vector( 32-1 downto 0 );
  signal assert_d0_dout_net : std_logic_vector( 16-1 downto 0 );
  signal assert_d1_dout_net : std_logic_vector( 16-1 downto 0 );
  signal reinterpret1_output_port_net : std_logic_vector( 16-1 downto 0 );
  signal reinterpret2_output_port_net : std_logic_vector( 16-1 downto 0 );
begin
  bus_out <= concatenate_y_net;
  assert_d0_dout_net <= in1;
  assert_d1_dout_net <= in2;
  concatenate : entity xil_defaultlib.sysgen_concat_37649e01d1 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    in0 => reinterpret1_output_port_net,
    in1 => reinterpret2_output_port_net,
    y => concatenate_y_net
  );
  reinterpret1 : entity xil_defaultlib.sysgen_reinterpret_03c8cdbbc1 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => assert_d0_dout_net,
    output_port => reinterpret1_output_port_net
  );
  reinterpret2 : entity xil_defaultlib.sysgen_reinterpret_03c8cdbbc1 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => assert_d1_dout_net,
    output_port => reinterpret2_output_port_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot3_67/ss/add_gen/edge_detect
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x53 is
  port (
    in_x0 : in std_logic_vector( 1-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    out_x0 : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x53;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x53 is 
  signal edge_op_y_net : std_logic_vector( 1-1 downto 0 );
  signal slice3_y_net : std_logic_vector( 1-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal delay_q_net : std_logic_vector( 1-1 downto 0 );
  signal inverter_op_net : std_logic_vector( 1-1 downto 0 );
begin
  out_x0 <= edge_op_y_net;
  slice3_y_net <= in_x0;
  clk_net <= clk_1;
  ce_net <= ce_1;
  delay : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 1
  )
  port map (
    en => '1',
    rst => '1',
    d => slice3_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay_q_net
  );
  inverter : entity xil_defaultlib.sysgen_inverter_6233897471 
  port map (
    clr => '0',
    ip => slice3_y_net,
    clk => clk_net,
    ce => ce_net,
    op => inverter_op_net
  );
  edge_op : entity xil_defaultlib.sysgen_logical_9cc14fefba 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => inverter_op_net,
    d1 => delay_q_net,
    y => edge_op_y_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot3_67/ss/add_gen
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_add_gen_x25 is
  port (
    din : in std_logic_vector( 32-1 downto 0 );
    we : in std_logic_vector( 1-1 downto 0 );
    go : in std_logic_vector( 1-1 downto 0 );
    cont : in std_logic_vector( 1-1 downto 0 );
    init : in std_logic_vector( 1-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    add : out std_logic_vector( 10-1 downto 0 );
    dout : out std_logic_vector( 32-1 downto 0 );
    we_o : out std_logic_vector( 1-1 downto 0 );
    status : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_add_gen_x25;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_add_gen_x25 is 
  signal slice2_y_net : std_logic_vector( 10-1 downto 0 );
  signal delay6_q_net : std_logic_vector( 32-1 downto 0 );
  signal logical6_y_net : std_logic_vector( 1-1 downto 0 );
  signal concat_y_net : std_logic_vector( 32-1 downto 0 );
  signal data_choice_y_net : std_logic_vector( 32-1 downto 0 );
  signal we_choice_y_net : std_logic_vector( 1-1 downto 0 );
  signal register6_q_net : std_logic_vector( 1-1 downto 0 );
  signal never_op_net : std_logic_vector( 1-1 downto 0 );
  signal edge_op_y_net : std_logic_vector( 1-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal edge_op_y_net_x0 : std_logic_vector( 1-1 downto 0 );
  signal slice3_y_net : std_logic_vector( 1-1 downto 0 );
  signal shift_op_net : std_logic_vector( 19-1 downto 0 );
  signal inverter_op_net : std_logic_vector( 1-1 downto 0 );
  signal delay1_q_net : std_logic_vector( 12-1 downto 0 );
  signal convert_dout_net : std_logic_vector( 19-1 downto 0 );
  signal register5_q_net : std_logic_vector( 1-1 downto 0 );
  signal delay_q_net : std_logic_vector( 1-1 downto 0 );
  signal delay4_q_net : std_logic_vector( 1-1 downto 0 );
  signal slice1_y_net : std_logic_vector( 12-1 downto 0 );
  signal delay3_q_net : std_logic_vector( 1-1 downto 0 );
  signal inverter1_op_net : std_logic_vector( 1-1 downto 0 );
  signal logical1_y_net : std_logic_vector( 1-1 downto 0 );
  signal logical4_y_net : std_logic_vector( 1-1 downto 0 );
  signal add_gen_op_net : std_logic_vector( 13-1 downto 0 );
begin
  add <= slice2_y_net;
  dout <= delay6_q_net;
  we_o <= logical6_y_net;
  status <= concat_y_net;
  data_choice_y_net <= din;
  we_choice_y_net <= we;
  register6_q_net <= go;
  never_op_net <= cont;
  edge_op_y_net <= init;
  clk_net <= clk_1;
  ce_net <= ce_1;
  edge_detect : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x53 
  port map (
    in_x0 => slice3_y_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    out_x0 => edge_op_y_net_x0
  );
  concat : entity xil_defaultlib.sysgen_concat_fc8edfac0e 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    in0 => shift_op_net,
    in1 => inverter_op_net,
    in2 => delay1_q_net,
    y => concat_y_net
  );
  convert : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 1,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 19,
    latency => 0,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => register5_q_net,
    clk => clk_net,
    ce => ce_net,
    dout => convert_dout_net
  );
  delay : entity xil_defaultlib.sysgen_delay_e0740ee3f9 
  port map (
    clr => '0',
    d => delay4_q_net,
    clk => clk_net,
    ce => ce_net,
    q => delay_q_net
  );
  delay1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 12
  )
  port map (
    en => '1',
    rst => '1',
    d => slice1_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay1_q_net
  );
  delay3 : entity xil_defaultlib.sysgen_delay_e0740ee3f9 
  port map (
    clr => '0',
    d => never_op_net,
    clk => clk_net,
    ce => ce_net,
    q => delay3_q_net
  );
  delay4 : entity xil_defaultlib.sysgen_delay_e0740ee3f9 
  port map (
    clr => '0',
    d => edge_op_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay4_q_net
  );
  delay6 : entity xil_defaultlib.sysgen_delay_5ec362a23c 
  port map (
    clr => '0',
    d => data_choice_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay6_q_net
  );
  inverter : entity xil_defaultlib.sysgen_inverter_918b6bc6d0 
  port map (
    clr => '0',
    ip => register5_q_net,
    clk => clk_net,
    ce => ce_net,
    op => inverter_op_net
  );
  inverter1 : entity xil_defaultlib.sysgen_inverter_6233897471 
  port map (
    clr => '0',
    ip => edge_op_y_net_x0,
    clk => clk_net,
    ce => ce_net,
    op => inverter1_op_net
  );
  logical1 : entity xil_defaultlib.sysgen_logical_2486129911 
  port map (
    clr => '0',
    d0 => we_choice_y_net,
    d1 => register6_q_net,
    clk => clk_net,
    ce => ce_net,
    y => logical1_y_net
  );
  logical4 : entity xil_defaultlib.sysgen_logical_d7dc12cf31 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => delay3_q_net,
    d1 => inverter1_op_net,
    y => logical4_y_net
  );
  logical6 : entity xil_defaultlib.sysgen_logical_c05fefc67b 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => register5_q_net,
    d1 => logical4_y_net,
    d2 => logical1_y_net,
    y => logical6_y_net
  );
  register5 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlregister 
  generic map (
    d_width => 1,
    init_value => b"1"
  )
  port map (
    d => delay3_q_net,
    rst => delay_q_net,
    en => edge_op_y_net_x0,
    clk => clk_net,
    ce => ce_net,
    q => register5_q_net
  );
  shift : entity xil_defaultlib.sysgen_shift_5af4fe0a99 
  port map (
    clr => '0',
    ip => convert_dout_net,
    clk => clk_net,
    ce => ce_net,
    op => shift_op_net
  );
  add_gen : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlcounter_free 
  generic map (
    core_name0 => "rfdc_multi_eight_adcs_2048gsps_mts_c_counter_binary_v12_0_i1",
    op_arith => xlUnsigned,
    op_width => 13
  )
  port map (
    clr => '0',
    rst => delay4_q_net,
    en => logical6_y_net,
    clk => clk_net,
    ce => ce_net,
    op => add_gen_op_net
  );
  slice1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 0,
    new_msb => 11,
    x_width => 13,
    y_width => 12
  )
  port map (
    x => add_gen_op_net,
    y => slice1_y_net
  );
  slice2 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 2,
    new_msb => 11,
    x_width => 13,
    y_width => 10
  )
  port map (
    x => add_gen_op_net,
    y => slice2_y_net
  );
  slice3 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 12,
    new_msb => 12,
    x_width => 13,
    y_width => 1
  )
  port map (
    x => add_gen_op_net,
    y => slice3_y_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot3_67/ss/basic_ctrl/dram_munge
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_dram_munge_x25 is
  port (
    din : in std_logic_vector( 32-1 downto 0 );
    we : in std_logic_vector( 1-1 downto 0 );
    init : in std_logic_vector( 1-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    dout : out std_logic_vector( 32-1 downto 0 );
    we_o : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_dram_munge_x25;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_dram_munge_x25 is 
  signal data_choice_y_net : std_logic_vector( 32-1 downto 0 );
  signal we_choice_y_net : std_logic_vector( 1-1 downto 0 );
  signal cast_dout_net : std_logic_vector( 32-1 downto 0 );
  signal mux1_y_net_x0 : std_logic_vector( 1-1 downto 0 );
  signal edge_op_y_net : std_logic_vector( 1-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal concat_y_net : std_logic_vector( 80-1 downto 0 );
  signal constant_op_net : std_logic_vector( 8-1 downto 0 );
  signal register_q_net : std_logic_vector( 32-1 downto 0 );
  signal register1_q_net : std_logic_vector( 32-1 downto 0 );
  signal concat1_y_net : std_logic_vector( 80-1 downto 0 );
  signal register2_q_net : std_logic_vector( 32-1 downto 0 );
  signal register3_q_net : std_logic_vector( 32-1 downto 0 );
  signal delay_q_net : std_logic_vector( 1-1 downto 0 );
  signal logical_y_net : std_logic_vector( 1-1 downto 0 );
  signal delay1_q_net : std_logic_vector( 1-1 downto 0 );
  signal logical1_y_net : std_logic_vector( 1-1 downto 0 );
  signal relational3_op_net : std_logic_vector( 1-1 downto 0 );
  signal mux1_y_net : std_logic_vector( 80-1 downto 0 );
  signal dout_count_op_net : std_logic_vector( 1-1 downto 0 );
  signal relational_op_net : std_logic_vector( 1-1 downto 0 );
  signal relational1_op_net : std_logic_vector( 1-1 downto 0 );
  signal relational2_op_net : std_logic_vector( 1-1 downto 0 );
  signal input_count_op_net : std_logic_vector( 2-1 downto 0 );
  signal con0_op_net : std_logic_vector( 2-1 downto 0 );
  signal con1_op_net : std_logic_vector( 2-1 downto 0 );
  signal con2_op_net : std_logic_vector( 2-1 downto 0 );
  signal con3_op_net : std_logic_vector( 2-1 downto 0 );
  signal dram_op_net : std_logic_vector( 1-1 downto 0 );
begin
  dout <= data_choice_y_net;
  we_o <= we_choice_y_net;
  cast_dout_net <= din;
  mux1_y_net_x0 <= we;
  edge_op_y_net <= init;
  clk_net <= clk_1;
  ce_net <= ce_1;
  concat : entity xil_defaultlib.sysgen_concat_e7487baac7 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    in0 => constant_op_net,
    in1 => register_q_net,
    in2 => constant_op_net,
    in3 => register1_q_net,
    y => concat_y_net
  );
  concat1 : entity xil_defaultlib.sysgen_concat_e7487baac7 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    in0 => constant_op_net,
    in1 => register2_q_net,
    in2 => constant_op_net,
    in3 => register3_q_net,
    y => concat1_y_net
  );
  constant_x0 : entity xil_defaultlib.sysgen_constant_869e31f04d 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => constant_op_net
  );
  delay : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 1
  )
  port map (
    en => '1',
    rst => '1',
    d => logical_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay_q_net
  );
  delay1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 1
  )
  port map (
    en => '1',
    rst => '1',
    d => logical1_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay1_q_net
  );
  logical : entity xil_defaultlib.sysgen_logical_2486129911 
  port map (
    clr => '0',
    d0 => relational3_op_net,
    d1 => mux1_y_net_x0,
    clk => clk_net,
    ce => ce_net,
    y => logical_y_net
  );
  logical1 : entity xil_defaultlib.sysgen_logical_d7dc12cf31 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => logical_y_net,
    d1 => delay_q_net,
    y => logical1_y_net
  );
  mux1 : entity xil_defaultlib.sysgen_mux_71ee2b1026 
  port map (
    clr => '0',
    sel => dout_count_op_net,
    d0 => concat_y_net,
    d1 => concat1_y_net,
    clk => clk_net,
    ce => ce_net,
    y => mux1_y_net
  );
  register_x0 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlregister 
  generic map (
    d_width => 32,
    init_value => b"00000000000000000000000000000000"
  )
  port map (
    rst => "0",
    d => cast_dout_net,
    en => relational_op_net,
    clk => clk_net,
    ce => ce_net,
    q => register_q_net
  );
  register1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlregister 
  generic map (
    d_width => 32,
    init_value => b"00000000000000000000000000000000"
  )
  port map (
    rst => "0",
    d => cast_dout_net,
    en => relational1_op_net,
    clk => clk_net,
    ce => ce_net,
    q => register1_q_net
  );
  register2 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlregister 
  generic map (
    d_width => 32,
    init_value => b"00000000000000000000000000000000"
  )
  port map (
    rst => "0",
    d => cast_dout_net,
    en => relational2_op_net,
    clk => clk_net,
    ce => ce_net,
    q => register2_q_net
  );
  register3 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlregister 
  generic map (
    d_width => 32,
    init_value => b"00000000000000000000000000000000"
  )
  port map (
    rst => "0",
    d => cast_dout_net,
    en => relational3_op_net,
    clk => clk_net,
    ce => ce_net,
    q => register3_q_net
  );
  relational : entity xil_defaultlib.sysgen_relational_e5d6b5eaca 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    a => input_count_op_net,
    b => con0_op_net,
    op => relational_op_net
  );
  relational1 : entity xil_defaultlib.sysgen_relational_e5d6b5eaca 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    a => input_count_op_net,
    b => con1_op_net,
    op => relational1_op_net
  );
  relational2 : entity xil_defaultlib.sysgen_relational_e5d6b5eaca 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    a => input_count_op_net,
    b => con2_op_net,
    op => relational2_op_net
  );
  relational3 : entity xil_defaultlib.sysgen_relational_e5d6b5eaca 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    a => input_count_op_net,
    b => con3_op_net,
    op => relational3_op_net
  );
  con0 : entity xil_defaultlib.sysgen_constant_b58c3a1535 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => con0_op_net
  );
  con1 : entity xil_defaultlib.sysgen_constant_d3f27a6354 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => con1_op_net
  );
  con2 : entity xil_defaultlib.sysgen_constant_2fa4689d4e 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => con2_op_net
  );
  con3 : entity xil_defaultlib.sysgen_constant_31bab66ba6 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => con3_op_net
  );
  data_choice : entity xil_defaultlib.sysgen_mux_d624c1af44 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    sel => dram_op_net,
    d0 => cast_dout_net,
    d1 => mux1_y_net,
    y => data_choice_y_net
  );
  dout_count : entity xil_defaultlib.sysgen_counter_a9c1c293c2 
  port map (
    clr => '0',
    rst => edge_op_y_net,
    en => logical1_y_net,
    clk => clk_net,
    ce => ce_net,
    op => dout_count_op_net
  );
  dram : entity xil_defaultlib.sysgen_constant_a7b8778750 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => dram_op_net
  );
  input_count : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlcounter_free 
  generic map (
    core_name0 => "rfdc_multi_eight_adcs_2048gsps_mts_c_counter_binary_v12_0_i2",
    op_arith => xlUnsigned,
    op_width => 2
  )
  port map (
    clr => '0',
    rst => edge_op_y_net,
    en => mux1_y_net_x0,
    clk => clk_net,
    ce => ce_net,
    op => input_count_op_net
  );
  we_choice : entity xil_defaultlib.sysgen_mux_4874190f11 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    sel => dram_op_net,
    d0 => mux1_y_net_x0,
    d1 => delay1_q_net,
    y => we_choice_y_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot3_67/ss/basic_ctrl/edge_detect
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x52 is
  port (
    in_x0 : in std_logic_vector( 1-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    out_x0 : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x52;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x52 is 
  signal edge_op_y_net : std_logic_vector( 1-1 downto 0 );
  signal delay1_q_net : std_logic_vector( 1-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal delay_q_net : std_logic_vector( 1-1 downto 0 );
  signal inverter_op_net : std_logic_vector( 1-1 downto 0 );
begin
  out_x0 <= edge_op_y_net;
  delay1_q_net <= in_x0;
  clk_net <= clk_1;
  ce_net <= ce_1;
  delay : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 1
  )
  port map (
    en => '1',
    rst => '1',
    d => delay1_q_net,
    clk => clk_net,
    ce => ce_net,
    q => delay_q_net
  );
  inverter : entity xil_defaultlib.sysgen_inverter_6233897471 
  port map (
    clr => '0',
    ip => delay1_q_net,
    clk => clk_net,
    ce => ce_net,
    op => inverter_op_net
  );
  edge_op : entity xil_defaultlib.sysgen_logical_0f1aa1e2d7 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => inverter_op_net,
    d1 => delay_q_net,
    y => edge_op_y_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot3_67/ss/basic_ctrl
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_basic_ctrl_x25 is
  port (
    din : in std_logic_vector( 32-1 downto 0 );
    we : in std_logic_vector( 1-1 downto 0 );
    trig : in std_logic_vector( 1-1 downto 0 );
    ctrl : in std_logic_vector( 32-1 downto 0 );
    stopi : in std_logic_vector( 1-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    dout : out std_logic_vector( 32-1 downto 0 );
    we_o : out std_logic_vector( 1-1 downto 0 );
    go : out std_logic_vector( 1-1 downto 0 );
    init : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_basic_ctrl_x25;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_basic_ctrl_x25 is 
  signal data_choice_y_net : std_logic_vector( 32-1 downto 0 );
  signal we_choice_y_net : std_logic_vector( 1-1 downto 0 );
  signal register6_q_net : std_logic_vector( 1-1 downto 0 );
  signal edge_op_y_net_x0 : std_logic_vector( 1-1 downto 0 );
  signal cast_dout_net : std_logic_vector( 32-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc3_sync_net : std_logic_vector( 1-1 downto 0 );
  signal edge_op_y_net : std_logic_vector( 1-1 downto 0 );
  signal concatenate_y_net : std_logic_vector( 32-1 downto 0 );
  signal never_op_net : std_logic_vector( 1-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal mux1_y_net : std_logic_vector( 1-1 downto 0 );
  signal delay1_q_net : std_logic_vector( 1-1 downto 0 );
  signal constant_op_net : std_logic_vector( 1-1 downto 0 );
  signal constant1_op_net : std_logic_vector( 1-1 downto 0 );
  signal constant2_op_net : std_logic_vector( 1-1 downto 0 );
  signal enable_y_net : std_logic_vector( 1-1 downto 0 );
  signal delay2_q_net : std_logic_vector( 1-1 downto 0 );
  signal trig_src_y_net : std_logic_vector( 1-1 downto 0 );
  signal delay3_q_net : std_logic_vector( 1-1 downto 0 );
  signal valid_src_y_net : std_logic_vector( 1-1 downto 0 );
  signal inverter_op_net : std_logic_vector( 1-1 downto 0 );
  signal logical_y_net : std_logic_vector( 1-1 downto 0 );
  signal mux2_y_net : std_logic_vector( 1-1 downto 0 );
  signal register1_q_net : std_logic_vector( 1-1 downto 0 );
begin
  dout <= data_choice_y_net;
  we_o <= we_choice_y_net;
  go <= register6_q_net;
  init <= edge_op_y_net_x0;
  cast_dout_net <= din;
  rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc3_sync_net <= we;
  edge_op_y_net <= trig;
  concatenate_y_net <= ctrl;
  never_op_net <= stopi;
  clk_net <= clk_1;
  ce_net <= ce_1;
  dram_munge : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_dram_munge_x25 
  port map (
    din => cast_dout_net,
    we => mux1_y_net,
    init => edge_op_y_net_x0,
    clk_1 => clk_net,
    ce_1 => ce_net,
    dout => data_choice_y_net,
    we_o => we_choice_y_net
  );
  edge_detect : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x52 
  port map (
    in_x0 => delay1_q_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    out_x0 => edge_op_y_net_x0
  );
  constant_x0 : entity xil_defaultlib.sysgen_constant_c95a0b5efb 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => constant_op_net
  );
  constant1 : entity xil_defaultlib.sysgen_constant_c95a0b5efb 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => constant1_op_net
  );
  constant2 : entity xil_defaultlib.sysgen_constant_c95a0b5efb 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => constant2_op_net
  );
  delay1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 1
  )
  port map (
    en => '1',
    rst => '1',
    d => enable_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay1_q_net
  );
  delay2 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 1
  )
  port map (
    en => '1',
    rst => '1',
    d => trig_src_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay2_q_net
  );
  delay3 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 1
  )
  port map (
    en => '1',
    rst => '1',
    d => valid_src_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay3_q_net
  );
  inverter : entity xil_defaultlib.sysgen_inverter_6233897471 
  port map (
    clr => '0',
    ip => edge_op_y_net_x0,
    clk => clk_net,
    ce => ce_net,
    op => inverter_op_net
  );
  logical : entity xil_defaultlib.sysgen_logical_d26e5cda59 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => mux2_y_net,
    d1 => inverter_op_net,
    y => logical_y_net
  );
  mux1 : entity xil_defaultlib.sysgen_mux_4874190f11 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    sel => delay3_q_net,
    d0 => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc3_sync_net,
    d1 => constant2_op_net,
    y => mux1_y_net
  );
  mux2 : entity xil_defaultlib.sysgen_mux_4874190f11 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    sel => delay2_q_net,
    d0 => edge_op_y_net,
    d1 => constant1_op_net,
    y => mux2_y_net
  );
  register1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlregister 
  generic map (
    d_width => 1,
    init_value => b"0"
  )
  port map (
    d => constant_op_net,
    rst => logical_y_net,
    en => edge_op_y_net_x0,
    clk => clk_net,
    ce => ce_net,
    q => register1_q_net
  );
  register6 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlregister 
  generic map (
    d_width => 1,
    init_value => b"0"
  )
  port map (
    d => mux2_y_net,
    rst => edge_op_y_net_x0,
    en => register1_q_net,
    clk => clk_net,
    ce => ce_net,
    q => register6_q_net
  );
  enable : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 0,
    new_msb => 0,
    x_width => 32,
    y_width => 1
  )
  port map (
    x => concatenate_y_net,
    y => enable_y_net
  );
  trig_src : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 1,
    new_msb => 1,
    x_width => 32,
    y_width => 1
  )
  port map (
    x => concatenate_y_net,
    y => trig_src_y_net
  );
  valid_src : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 2,
    new_msb => 2,
    x_width => 32,
    y_width => 1
  )
  port map (
    x => concatenate_y_net,
    y => valid_src_y_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot3_67/ss/bram/calc_add
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_calc_add_x25 is
  port (
    in_x0 : in std_logic_vector( 10-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    out_x0 : out std_logic_vector( 10-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_calc_add_x25;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_calc_add_x25 is 
  signal mux_y_net : std_logic_vector( 10-1 downto 0 );
  signal add_del_q_net : std_logic_vector( 10-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal add_sub_s_net : std_logic_vector( 1-1 downto 0 );
  signal const_op_net : std_logic_vector( 1-1 downto 0 );
  signal lsw_y_net : std_logic_vector( 1-1 downto 0 );
  signal concat_y_net : std_logic_vector( 10-1 downto 0 );
  signal msw_y_net : std_logic_vector( 9-1 downto 0 );
  signal convert_addr_dout_net : std_logic_vector( 10-1 downto 0 );
  signal manipulate_op_net : std_logic_vector( 1-1 downto 0 );
begin
  out_x0 <= mux_y_net;
  add_del_q_net <= in_x0;
  clk_net <= clk_1;
  ce_net <= ce_1;
  add_sub : entity xil_defaultlib.sysgen_addsub_fd3b6c715c 
  port map (
    clr => '0',
    a => const_op_net,
    b => lsw_y_net,
    clk => clk_net,
    ce => ce_net,
    s => add_sub_s_net
  );
  concat : entity xil_defaultlib.sysgen_concat_f4b90dfa16 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    in0 => msw_y_net,
    in1 => add_sub_s_net,
    y => concat_y_net
  );
  const : entity xil_defaultlib.sysgen_constant_a7b8778750 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => const_op_net
  );
  convert_addr : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 10,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 10,
    latency => 0,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => add_del_q_net,
    clk => clk_net,
    ce => ce_net,
    dout => convert_addr_dout_net
  );
  lsw : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 0,
    new_msb => 0,
    x_width => 10,
    y_width => 1
  )
  port map (
    x => convert_addr_dout_net,
    y => lsw_y_net
  );
  manipulate : entity xil_defaultlib.sysgen_constant_a7b8778750 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => manipulate_op_net
  );
  msw : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 1,
    new_msb => 9,
    x_width => 10,
    y_width => 9
  )
  port map (
    x => convert_addr_dout_net,
    y => msw_y_net
  );
  mux : entity xil_defaultlib.sysgen_mux_4417594854 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    sel => manipulate_op_net,
    d0 => convert_addr_dout_net,
    d1 => concat_y_net,
    y => mux_y_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot3_67/ss/bram/munge_in
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_munge_in_x25 is
  port (
    din : in std_logic_vector( 32-1 downto 0 );
    dout : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_munge_in_x25;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_munge_in_x25 is 
  signal reinterpret_out_output_port_net : std_logic_vector( 32-1 downto 0 );
  signal dat_del_q_net : std_logic_vector( 32-1 downto 0 );
begin
  dout <= reinterpret_out_output_port_net;
  dat_del_q_net <= din;
  reinterpret_out : entity xil_defaultlib.sysgen_reinterpret_52bb84f12b 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => dat_del_q_net,
    output_port => reinterpret_out_output_port_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot3_67/ss/bram
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_bram_x25 is
  port (
    addr : in std_logic_vector( 10-1 downto 0 );
    data_in : in std_logic_vector( 32-1 downto 0 );
    we : in std_logic_vector( 1-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_67_ss_bram_addr : out std_logic_vector( 10-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_67_ss_bram_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_67_ss_bram_we : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_bram_x25;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_bram_x25 is 
  signal add_del_q_net : std_logic_vector( 10-1 downto 0 );
  signal dat_del_q_net : std_logic_vector( 32-1 downto 0 );
  signal we_del_q_net : std_logic_vector( 1-1 downto 0 );
  signal convert_addr_dout_net : std_logic_vector( 10-1 downto 0 );
  signal convert_din1_dout_net : std_logic_vector( 32-1 downto 0 );
  signal convert_we_dout_net : std_logic_vector( 1-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal mux_y_net : std_logic_vector( 10-1 downto 0 );
  signal reinterpret_out_output_port_net : std_logic_vector( 32-1 downto 0 );
begin
  add_del_q_net <= addr;
  dat_del_q_net <= data_in;
  we_del_q_net <= we;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_67_ss_bram_addr <= convert_addr_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_67_ss_bram_data_in <= convert_din1_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_67_ss_bram_we <= convert_we_dout_net;
  clk_net <= clk_1;
  ce_net <= ce_1;
  calc_add : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_calc_add_x25 
  port map (
    in_x0 => add_del_q_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    out_x0 => mux_y_net
  );
  munge_in : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_munge_in_x25 
  port map (
    din => dat_del_q_net,
    dout => reinterpret_out_output_port_net
  );
  convert_addr : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 10,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 10,
    latency => 0,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => mux_y_net,
    clk => clk_net,
    ce => ce_net,
    dout => convert_addr_dout_net
  );
  convert_din1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 32,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 32,
    latency => 0,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => reinterpret_out_output_port_net,
    clk => clk_net,
    ce => ce_net,
    dout => convert_din1_dout_net
  );
  convert_we : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 1,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 1,
    latency => 0,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => we_del_q_net,
    clk => clk_net,
    ce => ce_net,
    dout => convert_we_dout_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot3_67/ss/ctrl
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_ctrl_x24 is
  port (
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_67_ss_ctrl_user_data_out : in std_logic_vector( 32-1 downto 0 );
    in_reg : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_ctrl_x24;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_ctrl_x24 is 
  signal reint1_output_port_net : std_logic_vector( 32-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_67_ss_ctrl_user_data_out_net : std_logic_vector( 32-1 downto 0 );
  signal io_delay_q_net : std_logic_vector( 32-1 downto 0 );
  signal slice_reg_y_net : std_logic_vector( 32-1 downto 0 );
begin
  in_reg <= reint1_output_port_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_67_ss_ctrl_user_data_out_net <= rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_67_ss_ctrl_user_data_out;
  io_delay : entity xil_defaultlib.sysgen_delay_34e314c510 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d => rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_67_ss_ctrl_user_data_out_net,
    q => io_delay_q_net
  );
  slice_reg : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 0,
    new_msb => 31,
    x_width => 32,
    y_width => 32
  )
  port map (
    x => io_delay_q_net,
    y => slice_reg_y_net
  );
  reint1 : entity xil_defaultlib.sysgen_reinterpret_52bb84f12b 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => slice_reg_y_net,
    output_port => reint1_output_port_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot3_67/ss/ctrl_combine
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_ctrl_combine_x24 is
  port (
    in1 : in std_logic_vector( 28-1 downto 0 );
    in2 : in std_logic_vector( 1-1 downto 0 );
    in3 : in std_logic_vector( 2-1 downto 0 );
    in4 : in std_logic_vector( 1-1 downto 0 );
    bus_out : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_ctrl_combine_x24;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_ctrl_combine_x24 is 
  signal concatenate_y_net : std_logic_vector( 32-1 downto 0 );
  signal reinterpret4_output_port_net_x0 : std_logic_vector( 28-1 downto 0 );
  signal circ_or_y_net : std_logic_vector( 1-1 downto 0 );
  signal reinterpret2_output_port_net : std_logic_vector( 2-1 downto 0 );
  signal arm_or_y_net : std_logic_vector( 1-1 downto 0 );
  signal reinterpret1_output_port_net : std_logic_vector( 28-1 downto 0 );
  signal reinterpret2_output_port_net_x0 : std_logic_vector( 1-1 downto 0 );
  signal reinterpret3_output_port_net : std_logic_vector( 2-1 downto 0 );
  signal reinterpret4_output_port_net : std_logic_vector( 1-1 downto 0 );
begin
  bus_out <= concatenate_y_net;
  reinterpret4_output_port_net_x0 <= in1;
  circ_or_y_net <= in2;
  reinterpret2_output_port_net <= in3;
  arm_or_y_net <= in4;
  concatenate : entity xil_defaultlib.sysgen_concat_8611e618a5 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    in0 => reinterpret1_output_port_net,
    in1 => reinterpret2_output_port_net_x0,
    in2 => reinterpret3_output_port_net,
    in3 => reinterpret4_output_port_net,
    y => concatenate_y_net
  );
  reinterpret1 : entity xil_defaultlib.sysgen_reinterpret_f7e0b72e82 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => reinterpret4_output_port_net_x0,
    output_port => reinterpret1_output_port_net
  );
  reinterpret2 : entity xil_defaultlib.sysgen_reinterpret_317b92931a 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => circ_or_y_net,
    output_port => reinterpret2_output_port_net_x0
  );
  reinterpret3 : entity xil_defaultlib.sysgen_reinterpret_5dc9f217bd 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => reinterpret2_output_port_net,
    output_port => reinterpret3_output_port_net
  );
  reinterpret4 : entity xil_defaultlib.sysgen_reinterpret_317b92931a 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => arm_or_y_net,
    output_port => reinterpret4_output_port_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot3_67/ss/ctrl_split
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_ctrl_split_x22 is
  port (
    bus_in : in std_logic_vector( 32-1 downto 0 );
    msb_out4 : out std_logic_vector( 28-1 downto 0 );
    out3 : out std_logic_vector( 1-1 downto 0 );
    out2 : out std_logic_vector( 2-1 downto 0 );
    lsb_out1 : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_ctrl_split_x22;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_ctrl_split_x22 is 
  signal reinterpret4_output_port_net : std_logic_vector( 28-1 downto 0 );
  signal slice3_y_net : std_logic_vector( 1-1 downto 0 );
  signal reinterpret2_output_port_net : std_logic_vector( 2-1 downto 0 );
  signal slice1_y_net : std_logic_vector( 1-1 downto 0 );
  signal reint1_output_port_net : std_logic_vector( 32-1 downto 0 );
  signal slice2_y_net : std_logic_vector( 2-1 downto 0 );
  signal slice4_y_net : std_logic_vector( 28-1 downto 0 );
begin
  msb_out4 <= reinterpret4_output_port_net;
  out3 <= slice3_y_net;
  out2 <= reinterpret2_output_port_net;
  lsb_out1 <= slice1_y_net;
  reint1_output_port_net <= bus_in;
  reinterpret2 : entity xil_defaultlib.sysgen_reinterpret_5dc9f217bd 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => slice2_y_net,
    output_port => reinterpret2_output_port_net
  );
  reinterpret4 : entity xil_defaultlib.sysgen_reinterpret_f7e0b72e82 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => slice4_y_net,
    output_port => reinterpret4_output_port_net
  );
  slice1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 0,
    new_msb => 0,
    x_width => 32,
    y_width => 1
  )
  port map (
    x => reint1_output_port_net,
    y => slice1_y_net
  );
  slice2 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 1,
    new_msb => 2,
    x_width => 32,
    y_width => 2
  )
  port map (
    x => reint1_output_port_net,
    y => slice2_y_net
  );
  slice3 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 3,
    new_msb => 3,
    x_width => 32,
    y_width => 1
  )
  port map (
    x => reint1_output_port_net,
    y => slice3_y_net
  );
  slice4 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 4,
    new_msb => 31,
    x_width => 32,
    y_width => 28
  )
  port map (
    x => reint1_output_port_net,
    y => slice4_y_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot3_67/ss/status
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_status_x25 is
  port (
    out_reg : in std_logic_vector( 32-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_67_ss_status_user_data_in : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_status_x25;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_status_x25 is 
  signal concat_y_net : std_logic_vector( 32-1 downto 0 );
  signal cast_gw_dout_net : std_logic_vector( 32-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal io_delay_q_net : std_logic_vector( 32-1 downto 0 );
  signal reint1_output_port_net : std_logic_vector( 32-1 downto 0 );
  signal assert_reg_dout_net : std_logic_vector( 32-1 downto 0 );
begin
  concat_y_net <= out_reg;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_67_ss_status_user_data_in <= cast_gw_dout_net;
  clk_net <= clk_1;
  ce_net <= ce_1;
  io_delay : entity xil_defaultlib.sysgen_delay_34e314c510 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d => reint1_output_port_net,
    q => io_delay_q_net
  );
  cast_gw : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 32,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 32,
    latency => 1,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => io_delay_q_net,
    clk => clk_net,
    ce => ce_net,
    dout => cast_gw_dout_net
  );
  assert_reg : entity xil_defaultlib.xlpassthrough 
  generic map (
    din_width => 32,
    dout_width => 32
  )
  port map (
    din => concat_y_net,
    dout => assert_reg_dout_net
  );
  reint1 : entity xil_defaultlib.sysgen_reinterpret_52bb84f12b 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => assert_reg_dout_net,
    output_port => reint1_output_port_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot3_67/ss
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_ss_x25 is
  port (
    din : in std_logic_vector( 32-1 downto 0 );
    we : in std_logic_vector( 1-1 downto 0 );
    trig : in std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_67_ss_ctrl_user_data_out : in std_logic_vector( 32-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    arm_out : out std_logic_vector( 1-1 downto 0 );
    goto_100503721_we1 : out std_logic_vector( 1-1 downto 0 );
    goto_100503721_we4 : out std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_67_ss_bram_addr : out std_logic_vector( 10-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_67_ss_bram_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_67_ss_bram_we : out std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_67_ss_status_user_data_in : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_ss_x25;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_ss_x25 is 
  signal arm_or_y_net : std_logic_vector( 1-1 downto 0 );
  signal concatenate_y_net : std_logic_vector( 32-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc3_sync_net : std_logic_vector( 1-1 downto 0 );
  signal edge_op_y_net_x0 : std_logic_vector( 1-1 downto 0 );
  signal we_choice_y_net : std_logic_vector( 1-1 downto 0 );
  signal logical6_y_net : std_logic_vector( 1-1 downto 0 );
  signal convert_addr_dout_net : std_logic_vector( 10-1 downto 0 );
  signal convert_din1_dout_net : std_logic_vector( 32-1 downto 0 );
  signal convert_we_dout_net : std_logic_vector( 1-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_67_ss_ctrl_user_data_out_net : std_logic_vector( 32-1 downto 0 );
  signal cast_gw_dout_net : std_logic_vector( 32-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal slice2_y_net : std_logic_vector( 10-1 downto 0 );
  signal delay6_q_net : std_logic_vector( 32-1 downto 0 );
  signal concat_y_net : std_logic_vector( 32-1 downto 0 );
  signal data_choice_y_net : std_logic_vector( 32-1 downto 0 );
  signal register6_q_net : std_logic_vector( 1-1 downto 0 );
  signal never_op_net : std_logic_vector( 1-1 downto 0 );
  signal edge_op_y_net_x1 : std_logic_vector( 1-1 downto 0 );
  signal cast_dout_net : std_logic_vector( 32-1 downto 0 );
  signal concatenate_y_net_x0 : std_logic_vector( 32-1 downto 0 );
  signal add_del_q_net : std_logic_vector( 10-1 downto 0 );
  signal dat_del_q_net : std_logic_vector( 32-1 downto 0 );
  signal we_del_q_net : std_logic_vector( 1-1 downto 0 );
  signal reint1_output_port_net : std_logic_vector( 32-1 downto 0 );
  signal reinterpret4_output_port_net : std_logic_vector( 28-1 downto 0 );
  signal circ_or_y_net : std_logic_vector( 1-1 downto 0 );
  signal reinterpret2_output_port_net : std_logic_vector( 2-1 downto 0 );
  signal slice3_y_net : std_logic_vector( 1-1 downto 0 );
  signal slice1_y_net : std_logic_vector( 1-1 downto 0 );
  signal arm_op_net : std_logic_vector( 1-1 downto 0 );
  signal ri_output_port_net : std_logic_vector( 32-1 downto 0 );
  signal circ_op_net : std_logic_vector( 1-1 downto 0 );
begin
  arm_out <= arm_or_y_net;
  concatenate_y_net <= din;
  rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc3_sync_net <= we;
  edge_op_y_net_x0 <= trig;
  goto_100503721_we1 <= we_choice_y_net;
  goto_100503721_we4 <= logical6_y_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_67_ss_bram_addr <= convert_addr_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_67_ss_bram_data_in <= convert_din1_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_67_ss_bram_we <= convert_we_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_67_ss_ctrl_user_data_out_net <= rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_67_ss_ctrl_user_data_out;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_67_ss_status_user_data_in <= cast_gw_dout_net;
  clk_net <= clk_1;
  ce_net <= ce_1;
  add_gen : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_add_gen_x25 
  port map (
    din => data_choice_y_net,
    we => we_choice_y_net,
    go => register6_q_net,
    cont => never_op_net,
    init => edge_op_y_net_x1,
    clk_1 => clk_net,
    ce_1 => ce_net,
    add => slice2_y_net,
    dout => delay6_q_net,
    we_o => logical6_y_net,
    status => concat_y_net
  );
  basic_ctrl : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_basic_ctrl_x25 
  port map (
    din => cast_dout_net,
    we => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc3_sync_net,
    trig => edge_op_y_net_x0,
    ctrl => concatenate_y_net_x0,
    stopi => never_op_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    dout => data_choice_y_net,
    we_o => we_choice_y_net,
    go => register6_q_net,
    init => edge_op_y_net_x1
  );
  bram : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_bram_x25 
  port map (
    addr => add_del_q_net,
    data_in => dat_del_q_net,
    we => we_del_q_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_67_ss_bram_addr => convert_addr_dout_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_67_ss_bram_data_in => convert_din1_dout_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_67_ss_bram_we => convert_we_dout_net
  );
  ctrl : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_ctrl_x24 
  port map (
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_67_ss_ctrl_user_data_out => rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_67_ss_ctrl_user_data_out_net,
    in_reg => reint1_output_port_net
  );
  ctrl_combine : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_ctrl_combine_x24 
  port map (
    in1 => reinterpret4_output_port_net,
    in2 => circ_or_y_net,
    in3 => reinterpret2_output_port_net,
    in4 => arm_or_y_net,
    bus_out => concatenate_y_net_x0
  );
  ctrl_split : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_ctrl_split_x22 
  port map (
    bus_in => reint1_output_port_net,
    msb_out4 => reinterpret4_output_port_net,
    out3 => slice3_y_net,
    out2 => reinterpret2_output_port_net,
    lsb_out1 => slice1_y_net
  );
  status : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_status_x25 
  port map (
    out_reg => concat_y_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_67_ss_status_user_data_in => cast_gw_dout_net
  );
  add_del : entity xil_defaultlib.sysgen_delay_4e9264ffdf 
  port map (
    clr => '0',
    d => slice2_y_net,
    clk => clk_net,
    ce => ce_net,
    q => add_del_q_net
  );
  arm : entity xil_defaultlib.sysgen_constant_a7b8778750 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => arm_op_net
  );
  arm_or : entity xil_defaultlib.sysgen_logical_d7dc12cf31 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => slice1_y_net,
    d1 => arm_op_net,
    y => arm_or_y_net
  );
  cast : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 32,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 32,
    latency => 0,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => ri_output_port_net,
    clk => clk_net,
    ce => ce_net,
    dout => cast_dout_net
  );
  circ : entity xil_defaultlib.sysgen_constant_a7b8778750 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => circ_op_net
  );
  circ_or : entity xil_defaultlib.sysgen_logical_d7dc12cf31 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => slice3_y_net,
    d1 => circ_op_net,
    y => circ_or_y_net
  );
  dat_del : entity xil_defaultlib.sysgen_delay_5ec362a23c 
  port map (
    clr => '0',
    d => delay6_q_net,
    clk => clk_net,
    ce => ce_net,
    q => dat_del_q_net
  );
  never : entity xil_defaultlib.sysgen_constant_a7b8778750 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => never_op_net
  );
  ri : entity xil_defaultlib.sysgen_reinterpret_52bb84f12b 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => concatenate_y_net,
    output_port => ri_output_port_net
  );
  we_del : entity xil_defaultlib.sysgen_delay_e0740ee3f9 
  port map (
    clr => '0',
    d => logical6_y_net,
    clk => clk_net,
    ce => ce_net,
    q => we_del_q_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot3_67
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_67 is
  port (
    in_d0 : in std_logic_vector( 16-1 downto 0 );
    in_d1 : in std_logic_vector( 16-1 downto 0 );
    we : in std_logic_vector( 1-1 downto 0 );
    trig : in std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_67_ss_ctrl_user_data_out : in std_logic_vector( 32-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    arm_out : out std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_67_ss_bram_addr : out std_logic_vector( 10-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_67_ss_bram_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_67_ss_bram_we : out std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_67_ss_status_user_data_in : out std_logic_vector( 32-1 downto 0 );
    goto_100503721_we1 : out std_logic_vector( 1-1 downto 0 );
    goto_100503721_we4 : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_67;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_67 is 
  signal arm_or_y_net : std_logic_vector( 1-1 downto 0 );
  signal slice25_y_net : std_logic_vector( 16-1 downto 0 );
  signal slice26_y_net : std_logic_vector( 16-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc3_sync_net : std_logic_vector( 1-1 downto 0 );
  signal edge_op_y_net : std_logic_vector( 1-1 downto 0 );
  signal convert_addr_dout_net : std_logic_vector( 10-1 downto 0 );
  signal convert_din1_dout_net : std_logic_vector( 32-1 downto 0 );
  signal convert_we_dout_net : std_logic_vector( 1-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_67_ss_ctrl_user_data_out_net : std_logic_vector( 32-1 downto 0 );
  signal cast_gw_dout_net : std_logic_vector( 32-1 downto 0 );
  signal we_choice_y_net : std_logic_vector( 1-1 downto 0 );
  signal logical6_y_net : std_logic_vector( 1-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal concatenate_y_net : std_logic_vector( 32-1 downto 0 );
  signal assert_d0_dout_net : std_logic_vector( 16-1 downto 0 );
  signal assert_d1_dout_net : std_logic_vector( 16-1 downto 0 );
begin
  arm_out <= arm_or_y_net;
  slice25_y_net <= in_d0;
  slice26_y_net <= in_d1;
  rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc3_sync_net <= we;
  edge_op_y_net <= trig;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_67_ss_bram_addr <= convert_addr_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_67_ss_bram_data_in <= convert_din1_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_67_ss_bram_we <= convert_we_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_67_ss_ctrl_user_data_out_net <= rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_67_ss_ctrl_user_data_out;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_67_ss_status_user_data_in <= cast_gw_dout_net;
  goto_100503721_we1 <= we_choice_y_net;
  goto_100503721_we4 <= logical6_y_net;
  clk_net <= clk_1;
  ce_net <= ce_1;
  buscreate : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_buscreate_x25 
  port map (
    in1 => assert_d0_dout_net,
    in2 => assert_d1_dout_net,
    bus_out => concatenate_y_net
  );
  ss : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_ss_x25 
  port map (
    din => concatenate_y_net,
    we => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc3_sync_net,
    trig => edge_op_y_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_67_ss_ctrl_user_data_out => rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_67_ss_ctrl_user_data_out_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    arm_out => arm_or_y_net,
    goto_100503721_we1 => we_choice_y_net,
    goto_100503721_we4 => logical6_y_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_67_ss_bram_addr => convert_addr_dout_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_67_ss_bram_data_in => convert_din1_dout_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_67_ss_bram_we => convert_we_dout_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_67_ss_status_user_data_in => cast_gw_dout_net
  );
  assert_d0 : entity xil_defaultlib.xlpassthrough 
  generic map (
    din_width => 16,
    dout_width => 16
  )
  port map (
    din => slice25_y_net,
    dout => assert_d0_dout_net
  );
  assert_d1 : entity xil_defaultlib.xlpassthrough 
  generic map (
    din_width => 16,
    dout_width => 16
  )
  port map (
    din => slice26_y_net,
    dout => assert_d1_dout_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot4_01/buscreate
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_buscreate_x4 is
  port (
    in1 : in std_logic_vector( 16-1 downto 0 );
    in2 : in std_logic_vector( 16-1 downto 0 );
    bus_out : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_buscreate_x4;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_buscreate_x4 is 
  signal concatenate_y_net : std_logic_vector( 32-1 downto 0 );
  signal assert_d0_dout_net : std_logic_vector( 16-1 downto 0 );
  signal assert_d1_dout_net : std_logic_vector( 16-1 downto 0 );
  signal reinterpret1_output_port_net : std_logic_vector( 16-1 downto 0 );
  signal reinterpret2_output_port_net : std_logic_vector( 16-1 downto 0 );
begin
  bus_out <= concatenate_y_net;
  assert_d0_dout_net <= in1;
  assert_d1_dout_net <= in2;
  concatenate : entity xil_defaultlib.sysgen_concat_37649e01d1 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    in0 => reinterpret1_output_port_net,
    in1 => reinterpret2_output_port_net,
    y => concatenate_y_net
  );
  reinterpret1 : entity xil_defaultlib.sysgen_reinterpret_03c8cdbbc1 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => assert_d0_dout_net,
    output_port => reinterpret1_output_port_net
  );
  reinterpret2 : entity xil_defaultlib.sysgen_reinterpret_03c8cdbbc1 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => assert_d1_dout_net,
    output_port => reinterpret2_output_port_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot4_01/ss/add_gen/edge_detect
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x10 is
  port (
    in_x0 : in std_logic_vector( 1-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    out_x0 : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x10;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x10 is 
  signal edge_op_y_net : std_logic_vector( 1-1 downto 0 );
  signal slice3_y_net : std_logic_vector( 1-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal delay_q_net : std_logic_vector( 1-1 downto 0 );
  signal inverter_op_net : std_logic_vector( 1-1 downto 0 );
begin
  out_x0 <= edge_op_y_net;
  slice3_y_net <= in_x0;
  clk_net <= clk_1;
  ce_net <= ce_1;
  delay : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 1
  )
  port map (
    en => '1',
    rst => '1',
    d => slice3_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay_q_net
  );
  inverter : entity xil_defaultlib.sysgen_inverter_6233897471 
  port map (
    clr => '0',
    ip => slice3_y_net,
    clk => clk_net,
    ce => ce_net,
    op => inverter_op_net
  );
  edge_op : entity xil_defaultlib.sysgen_logical_9cc14fefba 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => inverter_op_net,
    d1 => delay_q_net,
    y => edge_op_y_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot4_01/ss/add_gen
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_add_gen_x4 is
  port (
    din : in std_logic_vector( 32-1 downto 0 );
    we : in std_logic_vector( 1-1 downto 0 );
    go : in std_logic_vector( 1-1 downto 0 );
    cont : in std_logic_vector( 1-1 downto 0 );
    init : in std_logic_vector( 1-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    add : out std_logic_vector( 10-1 downto 0 );
    dout : out std_logic_vector( 32-1 downto 0 );
    we_o : out std_logic_vector( 1-1 downto 0 );
    status : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_add_gen_x4;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_add_gen_x4 is 
  signal slice2_y_net : std_logic_vector( 10-1 downto 0 );
  signal delay6_q_net : std_logic_vector( 32-1 downto 0 );
  signal logical6_y_net : std_logic_vector( 1-1 downto 0 );
  signal concat_y_net : std_logic_vector( 32-1 downto 0 );
  signal data_choice_y_net : std_logic_vector( 32-1 downto 0 );
  signal we_choice_y_net : std_logic_vector( 1-1 downto 0 );
  signal register6_q_net : std_logic_vector( 1-1 downto 0 );
  signal never_op_net : std_logic_vector( 1-1 downto 0 );
  signal edge_op_y_net : std_logic_vector( 1-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal edge_op_y_net_x0 : std_logic_vector( 1-1 downto 0 );
  signal slice3_y_net : std_logic_vector( 1-1 downto 0 );
  signal shift_op_net : std_logic_vector( 19-1 downto 0 );
  signal inverter_op_net : std_logic_vector( 1-1 downto 0 );
  signal delay1_q_net : std_logic_vector( 12-1 downto 0 );
  signal convert_dout_net : std_logic_vector( 19-1 downto 0 );
  signal register5_q_net : std_logic_vector( 1-1 downto 0 );
  signal delay_q_net : std_logic_vector( 1-1 downto 0 );
  signal delay4_q_net : std_logic_vector( 1-1 downto 0 );
  signal slice1_y_net : std_logic_vector( 12-1 downto 0 );
  signal delay3_q_net : std_logic_vector( 1-1 downto 0 );
  signal inverter1_op_net : std_logic_vector( 1-1 downto 0 );
  signal logical1_y_net : std_logic_vector( 1-1 downto 0 );
  signal logical4_y_net : std_logic_vector( 1-1 downto 0 );
  signal add_gen_op_net : std_logic_vector( 13-1 downto 0 );
begin
  add <= slice2_y_net;
  dout <= delay6_q_net;
  we_o <= logical6_y_net;
  status <= concat_y_net;
  data_choice_y_net <= din;
  we_choice_y_net <= we;
  register6_q_net <= go;
  never_op_net <= cont;
  edge_op_y_net <= init;
  clk_net <= clk_1;
  ce_net <= ce_1;
  edge_detect : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x10 
  port map (
    in_x0 => slice3_y_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    out_x0 => edge_op_y_net_x0
  );
  concat : entity xil_defaultlib.sysgen_concat_fc8edfac0e 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    in0 => shift_op_net,
    in1 => inverter_op_net,
    in2 => delay1_q_net,
    y => concat_y_net
  );
  convert : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 1,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 19,
    latency => 0,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => register5_q_net,
    clk => clk_net,
    ce => ce_net,
    dout => convert_dout_net
  );
  delay : entity xil_defaultlib.sysgen_delay_e0740ee3f9 
  port map (
    clr => '0',
    d => delay4_q_net,
    clk => clk_net,
    ce => ce_net,
    q => delay_q_net
  );
  delay1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 12
  )
  port map (
    en => '1',
    rst => '1',
    d => slice1_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay1_q_net
  );
  delay3 : entity xil_defaultlib.sysgen_delay_e0740ee3f9 
  port map (
    clr => '0',
    d => never_op_net,
    clk => clk_net,
    ce => ce_net,
    q => delay3_q_net
  );
  delay4 : entity xil_defaultlib.sysgen_delay_e0740ee3f9 
  port map (
    clr => '0',
    d => edge_op_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay4_q_net
  );
  delay6 : entity xil_defaultlib.sysgen_delay_5ec362a23c 
  port map (
    clr => '0',
    d => data_choice_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay6_q_net
  );
  inverter : entity xil_defaultlib.sysgen_inverter_918b6bc6d0 
  port map (
    clr => '0',
    ip => register5_q_net,
    clk => clk_net,
    ce => ce_net,
    op => inverter_op_net
  );
  inverter1 : entity xil_defaultlib.sysgen_inverter_6233897471 
  port map (
    clr => '0',
    ip => edge_op_y_net_x0,
    clk => clk_net,
    ce => ce_net,
    op => inverter1_op_net
  );
  logical1 : entity xil_defaultlib.sysgen_logical_2486129911 
  port map (
    clr => '0',
    d0 => we_choice_y_net,
    d1 => register6_q_net,
    clk => clk_net,
    ce => ce_net,
    y => logical1_y_net
  );
  logical4 : entity xil_defaultlib.sysgen_logical_d7dc12cf31 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => delay3_q_net,
    d1 => inverter1_op_net,
    y => logical4_y_net
  );
  logical6 : entity xil_defaultlib.sysgen_logical_c05fefc67b 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => register5_q_net,
    d1 => logical4_y_net,
    d2 => logical1_y_net,
    y => logical6_y_net
  );
  register5 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlregister 
  generic map (
    d_width => 1,
    init_value => b"1"
  )
  port map (
    d => delay3_q_net,
    rst => delay_q_net,
    en => edge_op_y_net_x0,
    clk => clk_net,
    ce => ce_net,
    q => register5_q_net
  );
  shift : entity xil_defaultlib.sysgen_shift_5af4fe0a99 
  port map (
    clr => '0',
    ip => convert_dout_net,
    clk => clk_net,
    ce => ce_net,
    op => shift_op_net
  );
  add_gen : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlcounter_free 
  generic map (
    core_name0 => "rfdc_multi_eight_adcs_2048gsps_mts_c_counter_binary_v12_0_i1",
    op_arith => xlUnsigned,
    op_width => 13
  )
  port map (
    clr => '0',
    rst => delay4_q_net,
    en => logical6_y_net,
    clk => clk_net,
    ce => ce_net,
    op => add_gen_op_net
  );
  slice1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 0,
    new_msb => 11,
    x_width => 13,
    y_width => 12
  )
  port map (
    x => add_gen_op_net,
    y => slice1_y_net
  );
  slice2 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 2,
    new_msb => 11,
    x_width => 13,
    y_width => 10
  )
  port map (
    x => add_gen_op_net,
    y => slice2_y_net
  );
  slice3 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 12,
    new_msb => 12,
    x_width => 13,
    y_width => 1
  )
  port map (
    x => add_gen_op_net,
    y => slice3_y_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot4_01/ss/basic_ctrl/dram_munge
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_dram_munge_x4 is
  port (
    din : in std_logic_vector( 32-1 downto 0 );
    we : in std_logic_vector( 1-1 downto 0 );
    init : in std_logic_vector( 1-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    dout : out std_logic_vector( 32-1 downto 0 );
    we_o : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_dram_munge_x4;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_dram_munge_x4 is 
  signal data_choice_y_net : std_logic_vector( 32-1 downto 0 );
  signal we_choice_y_net : std_logic_vector( 1-1 downto 0 );
  signal cast_dout_net : std_logic_vector( 32-1 downto 0 );
  signal mux1_y_net_x0 : std_logic_vector( 1-1 downto 0 );
  signal edge_op_y_net : std_logic_vector( 1-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal concat_y_net : std_logic_vector( 80-1 downto 0 );
  signal constant_op_net : std_logic_vector( 8-1 downto 0 );
  signal register_q_net : std_logic_vector( 32-1 downto 0 );
  signal register1_q_net : std_logic_vector( 32-1 downto 0 );
  signal concat1_y_net : std_logic_vector( 80-1 downto 0 );
  signal register2_q_net : std_logic_vector( 32-1 downto 0 );
  signal register3_q_net : std_logic_vector( 32-1 downto 0 );
  signal delay_q_net : std_logic_vector( 1-1 downto 0 );
  signal logical_y_net : std_logic_vector( 1-1 downto 0 );
  signal delay1_q_net : std_logic_vector( 1-1 downto 0 );
  signal logical1_y_net : std_logic_vector( 1-1 downto 0 );
  signal relational3_op_net : std_logic_vector( 1-1 downto 0 );
  signal mux1_y_net : std_logic_vector( 80-1 downto 0 );
  signal dout_count_op_net : std_logic_vector( 1-1 downto 0 );
  signal relational_op_net : std_logic_vector( 1-1 downto 0 );
  signal relational1_op_net : std_logic_vector( 1-1 downto 0 );
  signal relational2_op_net : std_logic_vector( 1-1 downto 0 );
  signal input_count_op_net : std_logic_vector( 2-1 downto 0 );
  signal con0_op_net : std_logic_vector( 2-1 downto 0 );
  signal con1_op_net : std_logic_vector( 2-1 downto 0 );
  signal con2_op_net : std_logic_vector( 2-1 downto 0 );
  signal con3_op_net : std_logic_vector( 2-1 downto 0 );
  signal dram_op_net : std_logic_vector( 1-1 downto 0 );
begin
  dout <= data_choice_y_net;
  we_o <= we_choice_y_net;
  cast_dout_net <= din;
  mux1_y_net_x0 <= we;
  edge_op_y_net <= init;
  clk_net <= clk_1;
  ce_net <= ce_1;
  concat : entity xil_defaultlib.sysgen_concat_e7487baac7 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    in0 => constant_op_net,
    in1 => register_q_net,
    in2 => constant_op_net,
    in3 => register1_q_net,
    y => concat_y_net
  );
  concat1 : entity xil_defaultlib.sysgen_concat_e7487baac7 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    in0 => constant_op_net,
    in1 => register2_q_net,
    in2 => constant_op_net,
    in3 => register3_q_net,
    y => concat1_y_net
  );
  constant_x0 : entity xil_defaultlib.sysgen_constant_869e31f04d 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => constant_op_net
  );
  delay : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 1
  )
  port map (
    en => '1',
    rst => '1',
    d => logical_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay_q_net
  );
  delay1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 1
  )
  port map (
    en => '1',
    rst => '1',
    d => logical1_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay1_q_net
  );
  logical : entity xil_defaultlib.sysgen_logical_2486129911 
  port map (
    clr => '0',
    d0 => relational3_op_net,
    d1 => mux1_y_net_x0,
    clk => clk_net,
    ce => ce_net,
    y => logical_y_net
  );
  logical1 : entity xil_defaultlib.sysgen_logical_d7dc12cf31 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => logical_y_net,
    d1 => delay_q_net,
    y => logical1_y_net
  );
  mux1 : entity xil_defaultlib.sysgen_mux_71ee2b1026 
  port map (
    clr => '0',
    sel => dout_count_op_net,
    d0 => concat_y_net,
    d1 => concat1_y_net,
    clk => clk_net,
    ce => ce_net,
    y => mux1_y_net
  );
  register_x0 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlregister 
  generic map (
    d_width => 32,
    init_value => b"00000000000000000000000000000000"
  )
  port map (
    rst => "0",
    d => cast_dout_net,
    en => relational_op_net,
    clk => clk_net,
    ce => ce_net,
    q => register_q_net
  );
  register1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlregister 
  generic map (
    d_width => 32,
    init_value => b"00000000000000000000000000000000"
  )
  port map (
    rst => "0",
    d => cast_dout_net,
    en => relational1_op_net,
    clk => clk_net,
    ce => ce_net,
    q => register1_q_net
  );
  register2 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlregister 
  generic map (
    d_width => 32,
    init_value => b"00000000000000000000000000000000"
  )
  port map (
    rst => "0",
    d => cast_dout_net,
    en => relational2_op_net,
    clk => clk_net,
    ce => ce_net,
    q => register2_q_net
  );
  register3 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlregister 
  generic map (
    d_width => 32,
    init_value => b"00000000000000000000000000000000"
  )
  port map (
    rst => "0",
    d => cast_dout_net,
    en => relational3_op_net,
    clk => clk_net,
    ce => ce_net,
    q => register3_q_net
  );
  relational : entity xil_defaultlib.sysgen_relational_e5d6b5eaca 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    a => input_count_op_net,
    b => con0_op_net,
    op => relational_op_net
  );
  relational1 : entity xil_defaultlib.sysgen_relational_e5d6b5eaca 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    a => input_count_op_net,
    b => con1_op_net,
    op => relational1_op_net
  );
  relational2 : entity xil_defaultlib.sysgen_relational_e5d6b5eaca 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    a => input_count_op_net,
    b => con2_op_net,
    op => relational2_op_net
  );
  relational3 : entity xil_defaultlib.sysgen_relational_e5d6b5eaca 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    a => input_count_op_net,
    b => con3_op_net,
    op => relational3_op_net
  );
  con0 : entity xil_defaultlib.sysgen_constant_b58c3a1535 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => con0_op_net
  );
  con1 : entity xil_defaultlib.sysgen_constant_d3f27a6354 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => con1_op_net
  );
  con2 : entity xil_defaultlib.sysgen_constant_2fa4689d4e 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => con2_op_net
  );
  con3 : entity xil_defaultlib.sysgen_constant_31bab66ba6 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => con3_op_net
  );
  data_choice : entity xil_defaultlib.sysgen_mux_d624c1af44 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    sel => dram_op_net,
    d0 => cast_dout_net,
    d1 => mux1_y_net,
    y => data_choice_y_net
  );
  dout_count : entity xil_defaultlib.sysgen_counter_a9c1c293c2 
  port map (
    clr => '0',
    rst => edge_op_y_net,
    en => logical1_y_net,
    clk => clk_net,
    ce => ce_net,
    op => dout_count_op_net
  );
  dram : entity xil_defaultlib.sysgen_constant_a7b8778750 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => dram_op_net
  );
  input_count : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlcounter_free 
  generic map (
    core_name0 => "rfdc_multi_eight_adcs_2048gsps_mts_c_counter_binary_v12_0_i2",
    op_arith => xlUnsigned,
    op_width => 2
  )
  port map (
    clr => '0',
    rst => edge_op_y_net,
    en => mux1_y_net_x0,
    clk => clk_net,
    ce => ce_net,
    op => input_count_op_net
  );
  we_choice : entity xil_defaultlib.sysgen_mux_4874190f11 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    sel => dram_op_net,
    d0 => mux1_y_net_x0,
    d1 => delay1_q_net,
    y => we_choice_y_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot4_01/ss/basic_ctrl/edge_detect
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x9 is
  port (
    in_x0 : in std_logic_vector( 1-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    out_x0 : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x9;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x9 is 
  signal edge_op_y_net : std_logic_vector( 1-1 downto 0 );
  signal delay1_q_net : std_logic_vector( 1-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal delay_q_net : std_logic_vector( 1-1 downto 0 );
  signal inverter_op_net : std_logic_vector( 1-1 downto 0 );
begin
  out_x0 <= edge_op_y_net;
  delay1_q_net <= in_x0;
  clk_net <= clk_1;
  ce_net <= ce_1;
  delay : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 1
  )
  port map (
    en => '1',
    rst => '1',
    d => delay1_q_net,
    clk => clk_net,
    ce => ce_net,
    q => delay_q_net
  );
  inverter : entity xil_defaultlib.sysgen_inverter_6233897471 
  port map (
    clr => '0',
    ip => delay1_q_net,
    clk => clk_net,
    ce => ce_net,
    op => inverter_op_net
  );
  edge_op : entity xil_defaultlib.sysgen_logical_0f1aa1e2d7 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => inverter_op_net,
    d1 => delay_q_net,
    y => edge_op_y_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot4_01/ss/basic_ctrl
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_basic_ctrl_x4 is
  port (
    din : in std_logic_vector( 32-1 downto 0 );
    we : in std_logic_vector( 1-1 downto 0 );
    trig : in std_logic_vector( 1-1 downto 0 );
    ctrl : in std_logic_vector( 32-1 downto 0 );
    stopi : in std_logic_vector( 1-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    dout : out std_logic_vector( 32-1 downto 0 );
    we_o : out std_logic_vector( 1-1 downto 0 );
    go : out std_logic_vector( 1-1 downto 0 );
    init : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_basic_ctrl_x4;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_basic_ctrl_x4 is 
  signal data_choice_y_net : std_logic_vector( 32-1 downto 0 );
  signal we_choice_y_net : std_logic_vector( 1-1 downto 0 );
  signal register6_q_net : std_logic_vector( 1-1 downto 0 );
  signal edge_op_y_net_x0 : std_logic_vector( 1-1 downto 0 );
  signal cast_dout_net : std_logic_vector( 32-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc4_sync_net : std_logic_vector( 1-1 downto 0 );
  signal edge_op_y_net : std_logic_vector( 1-1 downto 0 );
  signal concatenate_y_net : std_logic_vector( 32-1 downto 0 );
  signal never_op_net : std_logic_vector( 1-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal mux1_y_net : std_logic_vector( 1-1 downto 0 );
  signal delay1_q_net : std_logic_vector( 1-1 downto 0 );
  signal constant_op_net : std_logic_vector( 1-1 downto 0 );
  signal constant1_op_net : std_logic_vector( 1-1 downto 0 );
  signal constant2_op_net : std_logic_vector( 1-1 downto 0 );
  signal enable_y_net : std_logic_vector( 1-1 downto 0 );
  signal delay2_q_net : std_logic_vector( 1-1 downto 0 );
  signal trig_src_y_net : std_logic_vector( 1-1 downto 0 );
  signal delay3_q_net : std_logic_vector( 1-1 downto 0 );
  signal valid_src_y_net : std_logic_vector( 1-1 downto 0 );
  signal inverter_op_net : std_logic_vector( 1-1 downto 0 );
  signal logical_y_net : std_logic_vector( 1-1 downto 0 );
  signal mux2_y_net : std_logic_vector( 1-1 downto 0 );
  signal register1_q_net : std_logic_vector( 1-1 downto 0 );
begin
  dout <= data_choice_y_net;
  we_o <= we_choice_y_net;
  go <= register6_q_net;
  init <= edge_op_y_net_x0;
  cast_dout_net <= din;
  rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc4_sync_net <= we;
  edge_op_y_net <= trig;
  concatenate_y_net <= ctrl;
  never_op_net <= stopi;
  clk_net <= clk_1;
  ce_net <= ce_1;
  dram_munge : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_dram_munge_x4 
  port map (
    din => cast_dout_net,
    we => mux1_y_net,
    init => edge_op_y_net_x0,
    clk_1 => clk_net,
    ce_1 => ce_net,
    dout => data_choice_y_net,
    we_o => we_choice_y_net
  );
  edge_detect : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x9 
  port map (
    in_x0 => delay1_q_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    out_x0 => edge_op_y_net_x0
  );
  constant_x0 : entity xil_defaultlib.sysgen_constant_c95a0b5efb 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => constant_op_net
  );
  constant1 : entity xil_defaultlib.sysgen_constant_c95a0b5efb 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => constant1_op_net
  );
  constant2 : entity xil_defaultlib.sysgen_constant_c95a0b5efb 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => constant2_op_net
  );
  delay1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 1
  )
  port map (
    en => '1',
    rst => '1',
    d => enable_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay1_q_net
  );
  delay2 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 1
  )
  port map (
    en => '1',
    rst => '1',
    d => trig_src_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay2_q_net
  );
  delay3 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 1
  )
  port map (
    en => '1',
    rst => '1',
    d => valid_src_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay3_q_net
  );
  inverter : entity xil_defaultlib.sysgen_inverter_6233897471 
  port map (
    clr => '0',
    ip => edge_op_y_net_x0,
    clk => clk_net,
    ce => ce_net,
    op => inverter_op_net
  );
  logical : entity xil_defaultlib.sysgen_logical_d26e5cda59 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => mux2_y_net,
    d1 => inverter_op_net,
    y => logical_y_net
  );
  mux1 : entity xil_defaultlib.sysgen_mux_4874190f11 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    sel => delay3_q_net,
    d0 => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc4_sync_net,
    d1 => constant2_op_net,
    y => mux1_y_net
  );
  mux2 : entity xil_defaultlib.sysgen_mux_4874190f11 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    sel => delay2_q_net,
    d0 => edge_op_y_net,
    d1 => constant1_op_net,
    y => mux2_y_net
  );
  register1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlregister 
  generic map (
    d_width => 1,
    init_value => b"0"
  )
  port map (
    d => constant_op_net,
    rst => logical_y_net,
    en => edge_op_y_net_x0,
    clk => clk_net,
    ce => ce_net,
    q => register1_q_net
  );
  register6 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlregister 
  generic map (
    d_width => 1,
    init_value => b"0"
  )
  port map (
    d => mux2_y_net,
    rst => edge_op_y_net_x0,
    en => register1_q_net,
    clk => clk_net,
    ce => ce_net,
    q => register6_q_net
  );
  enable : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 0,
    new_msb => 0,
    x_width => 32,
    y_width => 1
  )
  port map (
    x => concatenate_y_net,
    y => enable_y_net
  );
  trig_src : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 1,
    new_msb => 1,
    x_width => 32,
    y_width => 1
  )
  port map (
    x => concatenate_y_net,
    y => trig_src_y_net
  );
  valid_src : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 2,
    new_msb => 2,
    x_width => 32,
    y_width => 1
  )
  port map (
    x => concatenate_y_net,
    y => valid_src_y_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot4_01/ss/bram/calc_add
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_calc_add_x4 is
  port (
    in_x0 : in std_logic_vector( 10-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    out_x0 : out std_logic_vector( 10-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_calc_add_x4;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_calc_add_x4 is 
  signal mux_y_net : std_logic_vector( 10-1 downto 0 );
  signal add_del_q_net : std_logic_vector( 10-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal add_sub_s_net : std_logic_vector( 1-1 downto 0 );
  signal const_op_net : std_logic_vector( 1-1 downto 0 );
  signal lsw_y_net : std_logic_vector( 1-1 downto 0 );
  signal concat_y_net : std_logic_vector( 10-1 downto 0 );
  signal msw_y_net : std_logic_vector( 9-1 downto 0 );
  signal convert_addr_dout_net : std_logic_vector( 10-1 downto 0 );
  signal manipulate_op_net : std_logic_vector( 1-1 downto 0 );
begin
  out_x0 <= mux_y_net;
  add_del_q_net <= in_x0;
  clk_net <= clk_1;
  ce_net <= ce_1;
  add_sub : entity xil_defaultlib.sysgen_addsub_fd3b6c715c 
  port map (
    clr => '0',
    a => const_op_net,
    b => lsw_y_net,
    clk => clk_net,
    ce => ce_net,
    s => add_sub_s_net
  );
  concat : entity xil_defaultlib.sysgen_concat_f4b90dfa16 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    in0 => msw_y_net,
    in1 => add_sub_s_net,
    y => concat_y_net
  );
  const : entity xil_defaultlib.sysgen_constant_a7b8778750 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => const_op_net
  );
  convert_addr : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 10,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 10,
    latency => 0,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => add_del_q_net,
    clk => clk_net,
    ce => ce_net,
    dout => convert_addr_dout_net
  );
  lsw : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 0,
    new_msb => 0,
    x_width => 10,
    y_width => 1
  )
  port map (
    x => convert_addr_dout_net,
    y => lsw_y_net
  );
  manipulate : entity xil_defaultlib.sysgen_constant_a7b8778750 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => manipulate_op_net
  );
  msw : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 1,
    new_msb => 9,
    x_width => 10,
    y_width => 9
  )
  port map (
    x => convert_addr_dout_net,
    y => msw_y_net
  );
  mux : entity xil_defaultlib.sysgen_mux_4417594854 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    sel => manipulate_op_net,
    d0 => convert_addr_dout_net,
    d1 => concat_y_net,
    y => mux_y_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot4_01/ss/bram/munge_in
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_munge_in_x4 is
  port (
    din : in std_logic_vector( 32-1 downto 0 );
    dout : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_munge_in_x4;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_munge_in_x4 is 
  signal reinterpret_out_output_port_net : std_logic_vector( 32-1 downto 0 );
  signal dat_del_q_net : std_logic_vector( 32-1 downto 0 );
begin
  dout <= reinterpret_out_output_port_net;
  dat_del_q_net <= din;
  reinterpret_out : entity xil_defaultlib.sysgen_reinterpret_52bb84f12b 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => dat_del_q_net,
    output_port => reinterpret_out_output_port_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot4_01/ss/bram
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_bram_x4 is
  port (
    addr : in std_logic_vector( 10-1 downto 0 );
    data_in : in std_logic_vector( 32-1 downto 0 );
    we : in std_logic_vector( 1-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_01_ss_bram_addr : out std_logic_vector( 10-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_01_ss_bram_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_01_ss_bram_we : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_bram_x4;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_bram_x4 is 
  signal add_del_q_net : std_logic_vector( 10-1 downto 0 );
  signal dat_del_q_net : std_logic_vector( 32-1 downto 0 );
  signal we_del_q_net : std_logic_vector( 1-1 downto 0 );
  signal convert_addr_dout_net : std_logic_vector( 10-1 downto 0 );
  signal convert_din1_dout_net : std_logic_vector( 32-1 downto 0 );
  signal convert_we_dout_net : std_logic_vector( 1-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal mux_y_net : std_logic_vector( 10-1 downto 0 );
  signal reinterpret_out_output_port_net : std_logic_vector( 32-1 downto 0 );
begin
  add_del_q_net <= addr;
  dat_del_q_net <= data_in;
  we_del_q_net <= we;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_01_ss_bram_addr <= convert_addr_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_01_ss_bram_data_in <= convert_din1_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_01_ss_bram_we <= convert_we_dout_net;
  clk_net <= clk_1;
  ce_net <= ce_1;
  calc_add : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_calc_add_x4 
  port map (
    in_x0 => add_del_q_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    out_x0 => mux_y_net
  );
  munge_in : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_munge_in_x4 
  port map (
    din => dat_del_q_net,
    dout => reinterpret_out_output_port_net
  );
  convert_addr : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 10,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 10,
    latency => 0,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => mux_y_net,
    clk => clk_net,
    ce => ce_net,
    dout => convert_addr_dout_net
  );
  convert_din1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 32,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 32,
    latency => 0,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => reinterpret_out_output_port_net,
    clk => clk_net,
    ce => ce_net,
    dout => convert_din1_dout_net
  );
  convert_we : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 1,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 1,
    latency => 0,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => we_del_q_net,
    clk => clk_net,
    ce => ce_net,
    dout => convert_we_dout_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot4_01/ss/ctrl
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_ctrl_x4 is
  port (
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_01_ss_ctrl_user_data_out : in std_logic_vector( 32-1 downto 0 );
    in_reg : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_ctrl_x4;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_ctrl_x4 is 
  signal reint1_output_port_net : std_logic_vector( 32-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_01_ss_ctrl_user_data_out_net : std_logic_vector( 32-1 downto 0 );
  signal io_delay_q_net : std_logic_vector( 32-1 downto 0 );
  signal slice_reg_y_net : std_logic_vector( 32-1 downto 0 );
begin
  in_reg <= reint1_output_port_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_01_ss_ctrl_user_data_out_net <= rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_01_ss_ctrl_user_data_out;
  io_delay : entity xil_defaultlib.sysgen_delay_34e314c510 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d => rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_01_ss_ctrl_user_data_out_net,
    q => io_delay_q_net
  );
  slice_reg : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 0,
    new_msb => 31,
    x_width => 32,
    y_width => 32
  )
  port map (
    x => io_delay_q_net,
    y => slice_reg_y_net
  );
  reint1 : entity xil_defaultlib.sysgen_reinterpret_52bb84f12b 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => slice_reg_y_net,
    output_port => reint1_output_port_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot4_01/ss/ctrl_combine
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_ctrl_combine_x4 is
  port (
    in1 : in std_logic_vector( 28-1 downto 0 );
    in2 : in std_logic_vector( 1-1 downto 0 );
    in3 : in std_logic_vector( 2-1 downto 0 );
    in4 : in std_logic_vector( 1-1 downto 0 );
    bus_out : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_ctrl_combine_x4;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_ctrl_combine_x4 is 
  signal concatenate_y_net : std_logic_vector( 32-1 downto 0 );
  signal reinterpret4_output_port_net_x0 : std_logic_vector( 28-1 downto 0 );
  signal circ_or_y_net : std_logic_vector( 1-1 downto 0 );
  signal reinterpret2_output_port_net : std_logic_vector( 2-1 downto 0 );
  signal arm_or_y_net : std_logic_vector( 1-1 downto 0 );
  signal reinterpret1_output_port_net : std_logic_vector( 28-1 downto 0 );
  signal reinterpret2_output_port_net_x0 : std_logic_vector( 1-1 downto 0 );
  signal reinterpret3_output_port_net : std_logic_vector( 2-1 downto 0 );
  signal reinterpret4_output_port_net : std_logic_vector( 1-1 downto 0 );
begin
  bus_out <= concatenate_y_net;
  reinterpret4_output_port_net_x0 <= in1;
  circ_or_y_net <= in2;
  reinterpret2_output_port_net <= in3;
  arm_or_y_net <= in4;
  concatenate : entity xil_defaultlib.sysgen_concat_8611e618a5 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    in0 => reinterpret1_output_port_net,
    in1 => reinterpret2_output_port_net_x0,
    in2 => reinterpret3_output_port_net,
    in3 => reinterpret4_output_port_net,
    y => concatenate_y_net
  );
  reinterpret1 : entity xil_defaultlib.sysgen_reinterpret_f7e0b72e82 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => reinterpret4_output_port_net_x0,
    output_port => reinterpret1_output_port_net
  );
  reinterpret2 : entity xil_defaultlib.sysgen_reinterpret_317b92931a 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => circ_or_y_net,
    output_port => reinterpret2_output_port_net_x0
  );
  reinterpret3 : entity xil_defaultlib.sysgen_reinterpret_5dc9f217bd 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => reinterpret2_output_port_net,
    output_port => reinterpret3_output_port_net
  );
  reinterpret4 : entity xil_defaultlib.sysgen_reinterpret_317b92931a 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => arm_or_y_net,
    output_port => reinterpret4_output_port_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot4_01/ss/ctrl_split
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_ctrl_split_x4 is
  port (
    bus_in : in std_logic_vector( 32-1 downto 0 );
    msb_out4 : out std_logic_vector( 28-1 downto 0 );
    out3 : out std_logic_vector( 1-1 downto 0 );
    out2 : out std_logic_vector( 2-1 downto 0 );
    lsb_out1 : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_ctrl_split_x4;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_ctrl_split_x4 is 
  signal reinterpret4_output_port_net : std_logic_vector( 28-1 downto 0 );
  signal slice3_y_net : std_logic_vector( 1-1 downto 0 );
  signal reinterpret2_output_port_net : std_logic_vector( 2-1 downto 0 );
  signal slice1_y_net : std_logic_vector( 1-1 downto 0 );
  signal reint1_output_port_net : std_logic_vector( 32-1 downto 0 );
  signal slice2_y_net : std_logic_vector( 2-1 downto 0 );
  signal slice4_y_net : std_logic_vector( 28-1 downto 0 );
begin
  msb_out4 <= reinterpret4_output_port_net;
  out3 <= slice3_y_net;
  out2 <= reinterpret2_output_port_net;
  lsb_out1 <= slice1_y_net;
  reint1_output_port_net <= bus_in;
  reinterpret2 : entity xil_defaultlib.sysgen_reinterpret_5dc9f217bd 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => slice2_y_net,
    output_port => reinterpret2_output_port_net
  );
  reinterpret4 : entity xil_defaultlib.sysgen_reinterpret_f7e0b72e82 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => slice4_y_net,
    output_port => reinterpret4_output_port_net
  );
  slice1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 0,
    new_msb => 0,
    x_width => 32,
    y_width => 1
  )
  port map (
    x => reint1_output_port_net,
    y => slice1_y_net
  );
  slice2 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 1,
    new_msb => 2,
    x_width => 32,
    y_width => 2
  )
  port map (
    x => reint1_output_port_net,
    y => slice2_y_net
  );
  slice3 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 3,
    new_msb => 3,
    x_width => 32,
    y_width => 1
  )
  port map (
    x => reint1_output_port_net,
    y => slice3_y_net
  );
  slice4 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 4,
    new_msb => 31,
    x_width => 32,
    y_width => 28
  )
  port map (
    x => reint1_output_port_net,
    y => slice4_y_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot4_01/ss/status
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_status_x3 is
  port (
    out_reg : in std_logic_vector( 32-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_01_ss_status_user_data_in : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_status_x3;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_status_x3 is 
  signal concat_y_net : std_logic_vector( 32-1 downto 0 );
  signal cast_gw_dout_net : std_logic_vector( 32-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal io_delay_q_net : std_logic_vector( 32-1 downto 0 );
  signal reint1_output_port_net : std_logic_vector( 32-1 downto 0 );
  signal assert_reg_dout_net : std_logic_vector( 32-1 downto 0 );
begin
  concat_y_net <= out_reg;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_01_ss_status_user_data_in <= cast_gw_dout_net;
  clk_net <= clk_1;
  ce_net <= ce_1;
  io_delay : entity xil_defaultlib.sysgen_delay_34e314c510 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d => reint1_output_port_net,
    q => io_delay_q_net
  );
  cast_gw : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 32,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 32,
    latency => 1,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => io_delay_q_net,
    clk => clk_net,
    ce => ce_net,
    dout => cast_gw_dout_net
  );
  assert_reg : entity xil_defaultlib.xlpassthrough 
  generic map (
    din_width => 32,
    dout_width => 32
  )
  port map (
    din => concat_y_net,
    dout => assert_reg_dout_net
  );
  reint1 : entity xil_defaultlib.sysgen_reinterpret_52bb84f12b 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => assert_reg_dout_net,
    output_port => reint1_output_port_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot4_01/ss
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_ss_x5 is
  port (
    din : in std_logic_vector( 32-1 downto 0 );
    we : in std_logic_vector( 1-1 downto 0 );
    trig : in std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_01_ss_ctrl_user_data_out : in std_logic_vector( 32-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    arm_out : out std_logic_vector( 1-1 downto 0 );
    goto_42763434_we1 : out std_logic_vector( 1-1 downto 0 );
    goto_42763434_we4 : out std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_01_ss_bram_addr : out std_logic_vector( 10-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_01_ss_bram_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_01_ss_bram_we : out std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_01_ss_status_user_data_in : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_ss_x5;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_ss_x5 is 
  signal arm_or_y_net : std_logic_vector( 1-1 downto 0 );
  signal concatenate_y_net : std_logic_vector( 32-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc4_sync_net : std_logic_vector( 1-1 downto 0 );
  signal edge_op_y_net_x0 : std_logic_vector( 1-1 downto 0 );
  signal we_choice_y_net : std_logic_vector( 1-1 downto 0 );
  signal logical6_y_net : std_logic_vector( 1-1 downto 0 );
  signal convert_addr_dout_net : std_logic_vector( 10-1 downto 0 );
  signal convert_din1_dout_net : std_logic_vector( 32-1 downto 0 );
  signal convert_we_dout_net : std_logic_vector( 1-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_01_ss_ctrl_user_data_out_net : std_logic_vector( 32-1 downto 0 );
  signal cast_gw_dout_net : std_logic_vector( 32-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal slice2_y_net : std_logic_vector( 10-1 downto 0 );
  signal delay6_q_net : std_logic_vector( 32-1 downto 0 );
  signal concat_y_net : std_logic_vector( 32-1 downto 0 );
  signal data_choice_y_net : std_logic_vector( 32-1 downto 0 );
  signal register6_q_net : std_logic_vector( 1-1 downto 0 );
  signal never_op_net : std_logic_vector( 1-1 downto 0 );
  signal edge_op_y_net_x1 : std_logic_vector( 1-1 downto 0 );
  signal cast_dout_net : std_logic_vector( 32-1 downto 0 );
  signal concatenate_y_net_x0 : std_logic_vector( 32-1 downto 0 );
  signal add_del_q_net : std_logic_vector( 10-1 downto 0 );
  signal dat_del_q_net : std_logic_vector( 32-1 downto 0 );
  signal we_del_q_net : std_logic_vector( 1-1 downto 0 );
  signal reint1_output_port_net : std_logic_vector( 32-1 downto 0 );
  signal reinterpret4_output_port_net : std_logic_vector( 28-1 downto 0 );
  signal circ_or_y_net : std_logic_vector( 1-1 downto 0 );
  signal reinterpret2_output_port_net : std_logic_vector( 2-1 downto 0 );
  signal slice3_y_net : std_logic_vector( 1-1 downto 0 );
  signal slice1_y_net : std_logic_vector( 1-1 downto 0 );
  signal arm_op_net : std_logic_vector( 1-1 downto 0 );
  signal ri_output_port_net : std_logic_vector( 32-1 downto 0 );
  signal circ_op_net : std_logic_vector( 1-1 downto 0 );
begin
  arm_out <= arm_or_y_net;
  concatenate_y_net <= din;
  rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc4_sync_net <= we;
  edge_op_y_net_x0 <= trig;
  goto_42763434_we1 <= we_choice_y_net;
  goto_42763434_we4 <= logical6_y_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_01_ss_bram_addr <= convert_addr_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_01_ss_bram_data_in <= convert_din1_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_01_ss_bram_we <= convert_we_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_01_ss_ctrl_user_data_out_net <= rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_01_ss_ctrl_user_data_out;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_01_ss_status_user_data_in <= cast_gw_dout_net;
  clk_net <= clk_1;
  ce_net <= ce_1;
  add_gen : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_add_gen_x4 
  port map (
    din => data_choice_y_net,
    we => we_choice_y_net,
    go => register6_q_net,
    cont => never_op_net,
    init => edge_op_y_net_x1,
    clk_1 => clk_net,
    ce_1 => ce_net,
    add => slice2_y_net,
    dout => delay6_q_net,
    we_o => logical6_y_net,
    status => concat_y_net
  );
  basic_ctrl : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_basic_ctrl_x4 
  port map (
    din => cast_dout_net,
    we => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc4_sync_net,
    trig => edge_op_y_net_x0,
    ctrl => concatenate_y_net_x0,
    stopi => never_op_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    dout => data_choice_y_net,
    we_o => we_choice_y_net,
    go => register6_q_net,
    init => edge_op_y_net_x1
  );
  bram : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_bram_x4 
  port map (
    addr => add_del_q_net,
    data_in => dat_del_q_net,
    we => we_del_q_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_01_ss_bram_addr => convert_addr_dout_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_01_ss_bram_data_in => convert_din1_dout_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_01_ss_bram_we => convert_we_dout_net
  );
  ctrl : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_ctrl_x4 
  port map (
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_01_ss_ctrl_user_data_out => rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_01_ss_ctrl_user_data_out_net,
    in_reg => reint1_output_port_net
  );
  ctrl_combine : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_ctrl_combine_x4 
  port map (
    in1 => reinterpret4_output_port_net,
    in2 => circ_or_y_net,
    in3 => reinterpret2_output_port_net,
    in4 => arm_or_y_net,
    bus_out => concatenate_y_net_x0
  );
  ctrl_split : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_ctrl_split_x4 
  port map (
    bus_in => reint1_output_port_net,
    msb_out4 => reinterpret4_output_port_net,
    out3 => slice3_y_net,
    out2 => reinterpret2_output_port_net,
    lsb_out1 => slice1_y_net
  );
  status : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_status_x3 
  port map (
    out_reg => concat_y_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_01_ss_status_user_data_in => cast_gw_dout_net
  );
  add_del : entity xil_defaultlib.sysgen_delay_4e9264ffdf 
  port map (
    clr => '0',
    d => slice2_y_net,
    clk => clk_net,
    ce => ce_net,
    q => add_del_q_net
  );
  arm : entity xil_defaultlib.sysgen_constant_a7b8778750 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => arm_op_net
  );
  arm_or : entity xil_defaultlib.sysgen_logical_d7dc12cf31 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => slice1_y_net,
    d1 => arm_op_net,
    y => arm_or_y_net
  );
  cast : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 32,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 32,
    latency => 0,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => ri_output_port_net,
    clk => clk_net,
    ce => ce_net,
    dout => cast_dout_net
  );
  circ : entity xil_defaultlib.sysgen_constant_a7b8778750 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => circ_op_net
  );
  circ_or : entity xil_defaultlib.sysgen_logical_d7dc12cf31 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => slice3_y_net,
    d1 => circ_op_net,
    y => circ_or_y_net
  );
  dat_del : entity xil_defaultlib.sysgen_delay_5ec362a23c 
  port map (
    clr => '0',
    d => delay6_q_net,
    clk => clk_net,
    ce => ce_net,
    q => dat_del_q_net
  );
  never : entity xil_defaultlib.sysgen_constant_a7b8778750 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => never_op_net
  );
  ri : entity xil_defaultlib.sysgen_reinterpret_52bb84f12b 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => concatenate_y_net,
    output_port => ri_output_port_net
  );
  we_del : entity xil_defaultlib.sysgen_delay_e0740ee3f9 
  port map (
    clr => '0',
    d => logical6_y_net,
    clk => clk_net,
    ce => ce_net,
    q => we_del_q_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot4_01
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_01 is
  port (
    in_d0 : in std_logic_vector( 16-1 downto 0 );
    in_d1 : in std_logic_vector( 16-1 downto 0 );
    we : in std_logic_vector( 1-1 downto 0 );
    trig : in std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_01_ss_ctrl_user_data_out : in std_logic_vector( 32-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    arm_out : out std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_01_ss_bram_addr : out std_logic_vector( 10-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_01_ss_bram_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_01_ss_bram_we : out std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_01_ss_status_user_data_in : out std_logic_vector( 32-1 downto 0 );
    goto_42763434_we1 : out std_logic_vector( 1-1 downto 0 );
    goto_42763434_we4 : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_01;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_01 is 
  signal arm_or_y_net : std_logic_vector( 1-1 downto 0 );
  signal slice32_y_net : std_logic_vector( 16-1 downto 0 );
  signal slice61_y_net : std_logic_vector( 16-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc4_sync_net : std_logic_vector( 1-1 downto 0 );
  signal edge_op_y_net : std_logic_vector( 1-1 downto 0 );
  signal convert_addr_dout_net : std_logic_vector( 10-1 downto 0 );
  signal convert_din1_dout_net : std_logic_vector( 32-1 downto 0 );
  signal convert_we_dout_net : std_logic_vector( 1-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_01_ss_ctrl_user_data_out_net : std_logic_vector( 32-1 downto 0 );
  signal cast_gw_dout_net : std_logic_vector( 32-1 downto 0 );
  signal we_choice_y_net : std_logic_vector( 1-1 downto 0 );
  signal logical6_y_net : std_logic_vector( 1-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal concatenate_y_net : std_logic_vector( 32-1 downto 0 );
  signal assert_d0_dout_net : std_logic_vector( 16-1 downto 0 );
  signal assert_d1_dout_net : std_logic_vector( 16-1 downto 0 );
begin
  arm_out <= arm_or_y_net;
  slice32_y_net <= in_d0;
  slice61_y_net <= in_d1;
  rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc4_sync_net <= we;
  edge_op_y_net <= trig;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_01_ss_bram_addr <= convert_addr_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_01_ss_bram_data_in <= convert_din1_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_01_ss_bram_we <= convert_we_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_01_ss_ctrl_user_data_out_net <= rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_01_ss_ctrl_user_data_out;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_01_ss_status_user_data_in <= cast_gw_dout_net;
  goto_42763434_we1 <= we_choice_y_net;
  goto_42763434_we4 <= logical6_y_net;
  clk_net <= clk_1;
  ce_net <= ce_1;
  buscreate : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_buscreate_x4 
  port map (
    in1 => assert_d0_dout_net,
    in2 => assert_d1_dout_net,
    bus_out => concatenate_y_net
  );
  ss : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_ss_x5 
  port map (
    din => concatenate_y_net,
    we => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc4_sync_net,
    trig => edge_op_y_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_01_ss_ctrl_user_data_out => rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_01_ss_ctrl_user_data_out_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    arm_out => arm_or_y_net,
    goto_42763434_we1 => we_choice_y_net,
    goto_42763434_we4 => logical6_y_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_01_ss_bram_addr => convert_addr_dout_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_01_ss_bram_data_in => convert_din1_dout_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_01_ss_bram_we => convert_we_dout_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_01_ss_status_user_data_in => cast_gw_dout_net
  );
  assert_d0 : entity xil_defaultlib.xlpassthrough 
  generic map (
    din_width => 16,
    dout_width => 16
  )
  port map (
    din => slice32_y_net,
    dout => assert_d0_dout_net
  );
  assert_d1 : entity xil_defaultlib.xlpassthrough 
  generic map (
    din_width => 16,
    dout_width => 16
  )
  port map (
    din => slice61_y_net,
    dout => assert_d1_dout_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot4_23/buscreate
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_buscreate_x3 is
  port (
    in1 : in std_logic_vector( 16-1 downto 0 );
    in2 : in std_logic_vector( 16-1 downto 0 );
    bus_out : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_buscreate_x3;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_buscreate_x3 is 
  signal concatenate_y_net : std_logic_vector( 32-1 downto 0 );
  signal assert_d0_dout_net : std_logic_vector( 16-1 downto 0 );
  signal assert_d1_dout_net : std_logic_vector( 16-1 downto 0 );
  signal reinterpret1_output_port_net : std_logic_vector( 16-1 downto 0 );
  signal reinterpret2_output_port_net : std_logic_vector( 16-1 downto 0 );
begin
  bus_out <= concatenate_y_net;
  assert_d0_dout_net <= in1;
  assert_d1_dout_net <= in2;
  concatenate : entity xil_defaultlib.sysgen_concat_37649e01d1 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    in0 => reinterpret1_output_port_net,
    in1 => reinterpret2_output_port_net,
    y => concatenate_y_net
  );
  reinterpret1 : entity xil_defaultlib.sysgen_reinterpret_03c8cdbbc1 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => assert_d0_dout_net,
    output_port => reinterpret1_output_port_net
  );
  reinterpret2 : entity xil_defaultlib.sysgen_reinterpret_03c8cdbbc1 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => assert_d1_dout_net,
    output_port => reinterpret2_output_port_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot4_23/ss/add_gen/edge_detect
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x7 is
  port (
    in_x0 : in std_logic_vector( 1-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    out_x0 : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x7;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x7 is 
  signal edge_op_y_net : std_logic_vector( 1-1 downto 0 );
  signal slice3_y_net : std_logic_vector( 1-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal delay_q_net : std_logic_vector( 1-1 downto 0 );
  signal inverter_op_net : std_logic_vector( 1-1 downto 0 );
begin
  out_x0 <= edge_op_y_net;
  slice3_y_net <= in_x0;
  clk_net <= clk_1;
  ce_net <= ce_1;
  delay : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 1
  )
  port map (
    en => '1',
    rst => '1',
    d => slice3_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay_q_net
  );
  inverter : entity xil_defaultlib.sysgen_inverter_6233897471 
  port map (
    clr => '0',
    ip => slice3_y_net,
    clk => clk_net,
    ce => ce_net,
    op => inverter_op_net
  );
  edge_op : entity xil_defaultlib.sysgen_logical_9cc14fefba 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => inverter_op_net,
    d1 => delay_q_net,
    y => edge_op_y_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot4_23/ss/add_gen
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_add_gen_x3 is
  port (
    din : in std_logic_vector( 32-1 downto 0 );
    we : in std_logic_vector( 1-1 downto 0 );
    go : in std_logic_vector( 1-1 downto 0 );
    cont : in std_logic_vector( 1-1 downto 0 );
    init : in std_logic_vector( 1-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    add : out std_logic_vector( 10-1 downto 0 );
    dout : out std_logic_vector( 32-1 downto 0 );
    we_o : out std_logic_vector( 1-1 downto 0 );
    status : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_add_gen_x3;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_add_gen_x3 is 
  signal slice2_y_net : std_logic_vector( 10-1 downto 0 );
  signal delay6_q_net : std_logic_vector( 32-1 downto 0 );
  signal logical6_y_net : std_logic_vector( 1-1 downto 0 );
  signal concat_y_net : std_logic_vector( 32-1 downto 0 );
  signal data_choice_y_net : std_logic_vector( 32-1 downto 0 );
  signal we_choice_y_net : std_logic_vector( 1-1 downto 0 );
  signal register6_q_net : std_logic_vector( 1-1 downto 0 );
  signal never_op_net : std_logic_vector( 1-1 downto 0 );
  signal edge_op_y_net : std_logic_vector( 1-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal edge_op_y_net_x0 : std_logic_vector( 1-1 downto 0 );
  signal slice3_y_net : std_logic_vector( 1-1 downto 0 );
  signal shift_op_net : std_logic_vector( 19-1 downto 0 );
  signal inverter_op_net : std_logic_vector( 1-1 downto 0 );
  signal delay1_q_net : std_logic_vector( 12-1 downto 0 );
  signal convert_dout_net : std_logic_vector( 19-1 downto 0 );
  signal register5_q_net : std_logic_vector( 1-1 downto 0 );
  signal delay_q_net : std_logic_vector( 1-1 downto 0 );
  signal delay4_q_net : std_logic_vector( 1-1 downto 0 );
  signal slice1_y_net : std_logic_vector( 12-1 downto 0 );
  signal delay3_q_net : std_logic_vector( 1-1 downto 0 );
  signal inverter1_op_net : std_logic_vector( 1-1 downto 0 );
  signal logical1_y_net : std_logic_vector( 1-1 downto 0 );
  signal logical4_y_net : std_logic_vector( 1-1 downto 0 );
  signal add_gen_op_net : std_logic_vector( 13-1 downto 0 );
begin
  add <= slice2_y_net;
  dout <= delay6_q_net;
  we_o <= logical6_y_net;
  status <= concat_y_net;
  data_choice_y_net <= din;
  we_choice_y_net <= we;
  register6_q_net <= go;
  never_op_net <= cont;
  edge_op_y_net <= init;
  clk_net <= clk_1;
  ce_net <= ce_1;
  edge_detect : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x7 
  port map (
    in_x0 => slice3_y_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    out_x0 => edge_op_y_net_x0
  );
  concat : entity xil_defaultlib.sysgen_concat_fc8edfac0e 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    in0 => shift_op_net,
    in1 => inverter_op_net,
    in2 => delay1_q_net,
    y => concat_y_net
  );
  convert : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 1,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 19,
    latency => 0,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => register5_q_net,
    clk => clk_net,
    ce => ce_net,
    dout => convert_dout_net
  );
  delay : entity xil_defaultlib.sysgen_delay_e0740ee3f9 
  port map (
    clr => '0',
    d => delay4_q_net,
    clk => clk_net,
    ce => ce_net,
    q => delay_q_net
  );
  delay1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 12
  )
  port map (
    en => '1',
    rst => '1',
    d => slice1_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay1_q_net
  );
  delay3 : entity xil_defaultlib.sysgen_delay_e0740ee3f9 
  port map (
    clr => '0',
    d => never_op_net,
    clk => clk_net,
    ce => ce_net,
    q => delay3_q_net
  );
  delay4 : entity xil_defaultlib.sysgen_delay_e0740ee3f9 
  port map (
    clr => '0',
    d => edge_op_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay4_q_net
  );
  delay6 : entity xil_defaultlib.sysgen_delay_5ec362a23c 
  port map (
    clr => '0',
    d => data_choice_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay6_q_net
  );
  inverter : entity xil_defaultlib.sysgen_inverter_918b6bc6d0 
  port map (
    clr => '0',
    ip => register5_q_net,
    clk => clk_net,
    ce => ce_net,
    op => inverter_op_net
  );
  inverter1 : entity xil_defaultlib.sysgen_inverter_6233897471 
  port map (
    clr => '0',
    ip => edge_op_y_net_x0,
    clk => clk_net,
    ce => ce_net,
    op => inverter1_op_net
  );
  logical1 : entity xil_defaultlib.sysgen_logical_2486129911 
  port map (
    clr => '0',
    d0 => we_choice_y_net,
    d1 => register6_q_net,
    clk => clk_net,
    ce => ce_net,
    y => logical1_y_net
  );
  logical4 : entity xil_defaultlib.sysgen_logical_d7dc12cf31 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => delay3_q_net,
    d1 => inverter1_op_net,
    y => logical4_y_net
  );
  logical6 : entity xil_defaultlib.sysgen_logical_c05fefc67b 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => register5_q_net,
    d1 => logical4_y_net,
    d2 => logical1_y_net,
    y => logical6_y_net
  );
  register5 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlregister 
  generic map (
    d_width => 1,
    init_value => b"1"
  )
  port map (
    d => delay3_q_net,
    rst => delay_q_net,
    en => edge_op_y_net_x0,
    clk => clk_net,
    ce => ce_net,
    q => register5_q_net
  );
  shift : entity xil_defaultlib.sysgen_shift_5af4fe0a99 
  port map (
    clr => '0',
    ip => convert_dout_net,
    clk => clk_net,
    ce => ce_net,
    op => shift_op_net
  );
  add_gen : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlcounter_free 
  generic map (
    core_name0 => "rfdc_multi_eight_adcs_2048gsps_mts_c_counter_binary_v12_0_i1",
    op_arith => xlUnsigned,
    op_width => 13
  )
  port map (
    clr => '0',
    rst => delay4_q_net,
    en => logical6_y_net,
    clk => clk_net,
    ce => ce_net,
    op => add_gen_op_net
  );
  slice1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 0,
    new_msb => 11,
    x_width => 13,
    y_width => 12
  )
  port map (
    x => add_gen_op_net,
    y => slice1_y_net
  );
  slice2 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 2,
    new_msb => 11,
    x_width => 13,
    y_width => 10
  )
  port map (
    x => add_gen_op_net,
    y => slice2_y_net
  );
  slice3 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 12,
    new_msb => 12,
    x_width => 13,
    y_width => 1
  )
  port map (
    x => add_gen_op_net,
    y => slice3_y_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot4_23/ss/basic_ctrl/dram_munge
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_dram_munge_x3 is
  port (
    din : in std_logic_vector( 32-1 downto 0 );
    we : in std_logic_vector( 1-1 downto 0 );
    init : in std_logic_vector( 1-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    dout : out std_logic_vector( 32-1 downto 0 );
    we_o : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_dram_munge_x3;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_dram_munge_x3 is 
  signal data_choice_y_net : std_logic_vector( 32-1 downto 0 );
  signal we_choice_y_net : std_logic_vector( 1-1 downto 0 );
  signal cast_dout_net : std_logic_vector( 32-1 downto 0 );
  signal mux1_y_net_x0 : std_logic_vector( 1-1 downto 0 );
  signal edge_op_y_net : std_logic_vector( 1-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal concat_y_net : std_logic_vector( 80-1 downto 0 );
  signal constant_op_net : std_logic_vector( 8-1 downto 0 );
  signal register_q_net : std_logic_vector( 32-1 downto 0 );
  signal register1_q_net : std_logic_vector( 32-1 downto 0 );
  signal concat1_y_net : std_logic_vector( 80-1 downto 0 );
  signal register2_q_net : std_logic_vector( 32-1 downto 0 );
  signal register3_q_net : std_logic_vector( 32-1 downto 0 );
  signal delay_q_net : std_logic_vector( 1-1 downto 0 );
  signal logical_y_net : std_logic_vector( 1-1 downto 0 );
  signal delay1_q_net : std_logic_vector( 1-1 downto 0 );
  signal logical1_y_net : std_logic_vector( 1-1 downto 0 );
  signal relational3_op_net : std_logic_vector( 1-1 downto 0 );
  signal mux1_y_net : std_logic_vector( 80-1 downto 0 );
  signal dout_count_op_net : std_logic_vector( 1-1 downto 0 );
  signal relational_op_net : std_logic_vector( 1-1 downto 0 );
  signal relational1_op_net : std_logic_vector( 1-1 downto 0 );
  signal relational2_op_net : std_logic_vector( 1-1 downto 0 );
  signal input_count_op_net : std_logic_vector( 2-1 downto 0 );
  signal con0_op_net : std_logic_vector( 2-1 downto 0 );
  signal con1_op_net : std_logic_vector( 2-1 downto 0 );
  signal con2_op_net : std_logic_vector( 2-1 downto 0 );
  signal con3_op_net : std_logic_vector( 2-1 downto 0 );
  signal dram_op_net : std_logic_vector( 1-1 downto 0 );
begin
  dout <= data_choice_y_net;
  we_o <= we_choice_y_net;
  cast_dout_net <= din;
  mux1_y_net_x0 <= we;
  edge_op_y_net <= init;
  clk_net <= clk_1;
  ce_net <= ce_1;
  concat : entity xil_defaultlib.sysgen_concat_e7487baac7 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    in0 => constant_op_net,
    in1 => register_q_net,
    in2 => constant_op_net,
    in3 => register1_q_net,
    y => concat_y_net
  );
  concat1 : entity xil_defaultlib.sysgen_concat_e7487baac7 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    in0 => constant_op_net,
    in1 => register2_q_net,
    in2 => constant_op_net,
    in3 => register3_q_net,
    y => concat1_y_net
  );
  constant_x0 : entity xil_defaultlib.sysgen_constant_869e31f04d 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => constant_op_net
  );
  delay : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 1
  )
  port map (
    en => '1',
    rst => '1',
    d => logical_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay_q_net
  );
  delay1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 1
  )
  port map (
    en => '1',
    rst => '1',
    d => logical1_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay1_q_net
  );
  logical : entity xil_defaultlib.sysgen_logical_2486129911 
  port map (
    clr => '0',
    d0 => relational3_op_net,
    d1 => mux1_y_net_x0,
    clk => clk_net,
    ce => ce_net,
    y => logical_y_net
  );
  logical1 : entity xil_defaultlib.sysgen_logical_d7dc12cf31 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => logical_y_net,
    d1 => delay_q_net,
    y => logical1_y_net
  );
  mux1 : entity xil_defaultlib.sysgen_mux_71ee2b1026 
  port map (
    clr => '0',
    sel => dout_count_op_net,
    d0 => concat_y_net,
    d1 => concat1_y_net,
    clk => clk_net,
    ce => ce_net,
    y => mux1_y_net
  );
  register_x0 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlregister 
  generic map (
    d_width => 32,
    init_value => b"00000000000000000000000000000000"
  )
  port map (
    rst => "0",
    d => cast_dout_net,
    en => relational_op_net,
    clk => clk_net,
    ce => ce_net,
    q => register_q_net
  );
  register1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlregister 
  generic map (
    d_width => 32,
    init_value => b"00000000000000000000000000000000"
  )
  port map (
    rst => "0",
    d => cast_dout_net,
    en => relational1_op_net,
    clk => clk_net,
    ce => ce_net,
    q => register1_q_net
  );
  register2 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlregister 
  generic map (
    d_width => 32,
    init_value => b"00000000000000000000000000000000"
  )
  port map (
    rst => "0",
    d => cast_dout_net,
    en => relational2_op_net,
    clk => clk_net,
    ce => ce_net,
    q => register2_q_net
  );
  register3 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlregister 
  generic map (
    d_width => 32,
    init_value => b"00000000000000000000000000000000"
  )
  port map (
    rst => "0",
    d => cast_dout_net,
    en => relational3_op_net,
    clk => clk_net,
    ce => ce_net,
    q => register3_q_net
  );
  relational : entity xil_defaultlib.sysgen_relational_e5d6b5eaca 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    a => input_count_op_net,
    b => con0_op_net,
    op => relational_op_net
  );
  relational1 : entity xil_defaultlib.sysgen_relational_e5d6b5eaca 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    a => input_count_op_net,
    b => con1_op_net,
    op => relational1_op_net
  );
  relational2 : entity xil_defaultlib.sysgen_relational_e5d6b5eaca 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    a => input_count_op_net,
    b => con2_op_net,
    op => relational2_op_net
  );
  relational3 : entity xil_defaultlib.sysgen_relational_e5d6b5eaca 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    a => input_count_op_net,
    b => con3_op_net,
    op => relational3_op_net
  );
  con0 : entity xil_defaultlib.sysgen_constant_b58c3a1535 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => con0_op_net
  );
  con1 : entity xil_defaultlib.sysgen_constant_d3f27a6354 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => con1_op_net
  );
  con2 : entity xil_defaultlib.sysgen_constant_2fa4689d4e 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => con2_op_net
  );
  con3 : entity xil_defaultlib.sysgen_constant_31bab66ba6 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => con3_op_net
  );
  data_choice : entity xil_defaultlib.sysgen_mux_d624c1af44 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    sel => dram_op_net,
    d0 => cast_dout_net,
    d1 => mux1_y_net,
    y => data_choice_y_net
  );
  dout_count : entity xil_defaultlib.sysgen_counter_a9c1c293c2 
  port map (
    clr => '0',
    rst => edge_op_y_net,
    en => logical1_y_net,
    clk => clk_net,
    ce => ce_net,
    op => dout_count_op_net
  );
  dram : entity xil_defaultlib.sysgen_constant_a7b8778750 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => dram_op_net
  );
  input_count : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlcounter_free 
  generic map (
    core_name0 => "rfdc_multi_eight_adcs_2048gsps_mts_c_counter_binary_v12_0_i2",
    op_arith => xlUnsigned,
    op_width => 2
  )
  port map (
    clr => '0',
    rst => edge_op_y_net,
    en => mux1_y_net_x0,
    clk => clk_net,
    ce => ce_net,
    op => input_count_op_net
  );
  we_choice : entity xil_defaultlib.sysgen_mux_4874190f11 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    sel => dram_op_net,
    d0 => mux1_y_net_x0,
    d1 => delay1_q_net,
    y => we_choice_y_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot4_23/ss/basic_ctrl/edge_detect
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x8 is
  port (
    in_x0 : in std_logic_vector( 1-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    out_x0 : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x8;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x8 is 
  signal edge_op_y_net : std_logic_vector( 1-1 downto 0 );
  signal delay1_q_net : std_logic_vector( 1-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal delay_q_net : std_logic_vector( 1-1 downto 0 );
  signal inverter_op_net : std_logic_vector( 1-1 downto 0 );
begin
  out_x0 <= edge_op_y_net;
  delay1_q_net <= in_x0;
  clk_net <= clk_1;
  ce_net <= ce_1;
  delay : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 1
  )
  port map (
    en => '1',
    rst => '1',
    d => delay1_q_net,
    clk => clk_net,
    ce => ce_net,
    q => delay_q_net
  );
  inverter : entity xil_defaultlib.sysgen_inverter_6233897471 
  port map (
    clr => '0',
    ip => delay1_q_net,
    clk => clk_net,
    ce => ce_net,
    op => inverter_op_net
  );
  edge_op : entity xil_defaultlib.sysgen_logical_0f1aa1e2d7 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => inverter_op_net,
    d1 => delay_q_net,
    y => edge_op_y_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot4_23/ss/basic_ctrl
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_basic_ctrl_x3 is
  port (
    din : in std_logic_vector( 32-1 downto 0 );
    we : in std_logic_vector( 1-1 downto 0 );
    trig : in std_logic_vector( 1-1 downto 0 );
    ctrl : in std_logic_vector( 32-1 downto 0 );
    stopi : in std_logic_vector( 1-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    dout : out std_logic_vector( 32-1 downto 0 );
    we_o : out std_logic_vector( 1-1 downto 0 );
    go : out std_logic_vector( 1-1 downto 0 );
    init : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_basic_ctrl_x3;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_basic_ctrl_x3 is 
  signal data_choice_y_net : std_logic_vector( 32-1 downto 0 );
  signal we_choice_y_net : std_logic_vector( 1-1 downto 0 );
  signal register6_q_net : std_logic_vector( 1-1 downto 0 );
  signal edge_op_y_net_x0 : std_logic_vector( 1-1 downto 0 );
  signal cast_dout_net : std_logic_vector( 32-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc4_sync_net : std_logic_vector( 1-1 downto 0 );
  signal edge_op_y_net : std_logic_vector( 1-1 downto 0 );
  signal concatenate_y_net : std_logic_vector( 32-1 downto 0 );
  signal never_op_net : std_logic_vector( 1-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal mux1_y_net : std_logic_vector( 1-1 downto 0 );
  signal delay1_q_net : std_logic_vector( 1-1 downto 0 );
  signal constant_op_net : std_logic_vector( 1-1 downto 0 );
  signal constant1_op_net : std_logic_vector( 1-1 downto 0 );
  signal constant2_op_net : std_logic_vector( 1-1 downto 0 );
  signal enable_y_net : std_logic_vector( 1-1 downto 0 );
  signal delay2_q_net : std_logic_vector( 1-1 downto 0 );
  signal trig_src_y_net : std_logic_vector( 1-1 downto 0 );
  signal delay3_q_net : std_logic_vector( 1-1 downto 0 );
  signal valid_src_y_net : std_logic_vector( 1-1 downto 0 );
  signal inverter_op_net : std_logic_vector( 1-1 downto 0 );
  signal logical_y_net : std_logic_vector( 1-1 downto 0 );
  signal mux2_y_net : std_logic_vector( 1-1 downto 0 );
  signal register1_q_net : std_logic_vector( 1-1 downto 0 );
begin
  dout <= data_choice_y_net;
  we_o <= we_choice_y_net;
  go <= register6_q_net;
  init <= edge_op_y_net_x0;
  cast_dout_net <= din;
  rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc4_sync_net <= we;
  edge_op_y_net <= trig;
  concatenate_y_net <= ctrl;
  never_op_net <= stopi;
  clk_net <= clk_1;
  ce_net <= ce_1;
  dram_munge : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_dram_munge_x3 
  port map (
    din => cast_dout_net,
    we => mux1_y_net,
    init => edge_op_y_net_x0,
    clk_1 => clk_net,
    ce_1 => ce_net,
    dout => data_choice_y_net,
    we_o => we_choice_y_net
  );
  edge_detect : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x8 
  port map (
    in_x0 => delay1_q_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    out_x0 => edge_op_y_net_x0
  );
  constant_x0 : entity xil_defaultlib.sysgen_constant_c95a0b5efb 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => constant_op_net
  );
  constant1 : entity xil_defaultlib.sysgen_constant_c95a0b5efb 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => constant1_op_net
  );
  constant2 : entity xil_defaultlib.sysgen_constant_c95a0b5efb 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => constant2_op_net
  );
  delay1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 1
  )
  port map (
    en => '1',
    rst => '1',
    d => enable_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay1_q_net
  );
  delay2 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 1
  )
  port map (
    en => '1',
    rst => '1',
    d => trig_src_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay2_q_net
  );
  delay3 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 1
  )
  port map (
    en => '1',
    rst => '1',
    d => valid_src_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay3_q_net
  );
  inverter : entity xil_defaultlib.sysgen_inverter_6233897471 
  port map (
    clr => '0',
    ip => edge_op_y_net_x0,
    clk => clk_net,
    ce => ce_net,
    op => inverter_op_net
  );
  logical : entity xil_defaultlib.sysgen_logical_d26e5cda59 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => mux2_y_net,
    d1 => inverter_op_net,
    y => logical_y_net
  );
  mux1 : entity xil_defaultlib.sysgen_mux_4874190f11 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    sel => delay3_q_net,
    d0 => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc4_sync_net,
    d1 => constant2_op_net,
    y => mux1_y_net
  );
  mux2 : entity xil_defaultlib.sysgen_mux_4874190f11 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    sel => delay2_q_net,
    d0 => edge_op_y_net,
    d1 => constant1_op_net,
    y => mux2_y_net
  );
  register1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlregister 
  generic map (
    d_width => 1,
    init_value => b"0"
  )
  port map (
    d => constant_op_net,
    rst => logical_y_net,
    en => edge_op_y_net_x0,
    clk => clk_net,
    ce => ce_net,
    q => register1_q_net
  );
  register6 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlregister 
  generic map (
    d_width => 1,
    init_value => b"0"
  )
  port map (
    d => mux2_y_net,
    rst => edge_op_y_net_x0,
    en => register1_q_net,
    clk => clk_net,
    ce => ce_net,
    q => register6_q_net
  );
  enable : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 0,
    new_msb => 0,
    x_width => 32,
    y_width => 1
  )
  port map (
    x => concatenate_y_net,
    y => enable_y_net
  );
  trig_src : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 1,
    new_msb => 1,
    x_width => 32,
    y_width => 1
  )
  port map (
    x => concatenate_y_net,
    y => trig_src_y_net
  );
  valid_src : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 2,
    new_msb => 2,
    x_width => 32,
    y_width => 1
  )
  port map (
    x => concatenate_y_net,
    y => valid_src_y_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot4_23/ss/bram/calc_add
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_calc_add_x3 is
  port (
    in_x0 : in std_logic_vector( 10-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    out_x0 : out std_logic_vector( 10-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_calc_add_x3;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_calc_add_x3 is 
  signal mux_y_net : std_logic_vector( 10-1 downto 0 );
  signal add_del_q_net : std_logic_vector( 10-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal add_sub_s_net : std_logic_vector( 1-1 downto 0 );
  signal const_op_net : std_logic_vector( 1-1 downto 0 );
  signal lsw_y_net : std_logic_vector( 1-1 downto 0 );
  signal concat_y_net : std_logic_vector( 10-1 downto 0 );
  signal msw_y_net : std_logic_vector( 9-1 downto 0 );
  signal convert_addr_dout_net : std_logic_vector( 10-1 downto 0 );
  signal manipulate_op_net : std_logic_vector( 1-1 downto 0 );
begin
  out_x0 <= mux_y_net;
  add_del_q_net <= in_x0;
  clk_net <= clk_1;
  ce_net <= ce_1;
  add_sub : entity xil_defaultlib.sysgen_addsub_fd3b6c715c 
  port map (
    clr => '0',
    a => const_op_net,
    b => lsw_y_net,
    clk => clk_net,
    ce => ce_net,
    s => add_sub_s_net
  );
  concat : entity xil_defaultlib.sysgen_concat_f4b90dfa16 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    in0 => msw_y_net,
    in1 => add_sub_s_net,
    y => concat_y_net
  );
  const : entity xil_defaultlib.sysgen_constant_a7b8778750 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => const_op_net
  );
  convert_addr : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 10,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 10,
    latency => 0,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => add_del_q_net,
    clk => clk_net,
    ce => ce_net,
    dout => convert_addr_dout_net
  );
  lsw : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 0,
    new_msb => 0,
    x_width => 10,
    y_width => 1
  )
  port map (
    x => convert_addr_dout_net,
    y => lsw_y_net
  );
  manipulate : entity xil_defaultlib.sysgen_constant_a7b8778750 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => manipulate_op_net
  );
  msw : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 1,
    new_msb => 9,
    x_width => 10,
    y_width => 9
  )
  port map (
    x => convert_addr_dout_net,
    y => msw_y_net
  );
  mux : entity xil_defaultlib.sysgen_mux_4417594854 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    sel => manipulate_op_net,
    d0 => convert_addr_dout_net,
    d1 => concat_y_net,
    y => mux_y_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot4_23/ss/bram/munge_in
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_munge_in_x3 is
  port (
    din : in std_logic_vector( 32-1 downto 0 );
    dout : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_munge_in_x3;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_munge_in_x3 is 
  signal reinterpret_out_output_port_net : std_logic_vector( 32-1 downto 0 );
  signal dat_del_q_net : std_logic_vector( 32-1 downto 0 );
begin
  dout <= reinterpret_out_output_port_net;
  dat_del_q_net <= din;
  reinterpret_out : entity xil_defaultlib.sysgen_reinterpret_52bb84f12b 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => dat_del_q_net,
    output_port => reinterpret_out_output_port_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot4_23/ss/bram
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_bram_x3 is
  port (
    addr : in std_logic_vector( 10-1 downto 0 );
    data_in : in std_logic_vector( 32-1 downto 0 );
    we : in std_logic_vector( 1-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_23_ss_bram_addr : out std_logic_vector( 10-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_23_ss_bram_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_23_ss_bram_we : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_bram_x3;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_bram_x3 is 
  signal add_del_q_net : std_logic_vector( 10-1 downto 0 );
  signal dat_del_q_net : std_logic_vector( 32-1 downto 0 );
  signal we_del_q_net : std_logic_vector( 1-1 downto 0 );
  signal convert_addr_dout_net : std_logic_vector( 10-1 downto 0 );
  signal convert_din1_dout_net : std_logic_vector( 32-1 downto 0 );
  signal convert_we_dout_net : std_logic_vector( 1-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal mux_y_net : std_logic_vector( 10-1 downto 0 );
  signal reinterpret_out_output_port_net : std_logic_vector( 32-1 downto 0 );
begin
  add_del_q_net <= addr;
  dat_del_q_net <= data_in;
  we_del_q_net <= we;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_23_ss_bram_addr <= convert_addr_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_23_ss_bram_data_in <= convert_din1_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_23_ss_bram_we <= convert_we_dout_net;
  clk_net <= clk_1;
  ce_net <= ce_1;
  calc_add : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_calc_add_x3 
  port map (
    in_x0 => add_del_q_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    out_x0 => mux_y_net
  );
  munge_in : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_munge_in_x3 
  port map (
    din => dat_del_q_net,
    dout => reinterpret_out_output_port_net
  );
  convert_addr : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 10,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 10,
    latency => 0,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => mux_y_net,
    clk => clk_net,
    ce => ce_net,
    dout => convert_addr_dout_net
  );
  convert_din1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 32,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 32,
    latency => 0,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => reinterpret_out_output_port_net,
    clk => clk_net,
    ce => ce_net,
    dout => convert_din1_dout_net
  );
  convert_we : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 1,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 1,
    latency => 0,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => we_del_q_net,
    clk => clk_net,
    ce => ce_net,
    dout => convert_we_dout_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot4_23/ss/ctrl
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_ctrl_x3 is
  port (
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_23_ss_ctrl_user_data_out : in std_logic_vector( 32-1 downto 0 );
    in_reg : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_ctrl_x3;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_ctrl_x3 is 
  signal reint1_output_port_net : std_logic_vector( 32-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_23_ss_ctrl_user_data_out_net : std_logic_vector( 32-1 downto 0 );
  signal io_delay_q_net : std_logic_vector( 32-1 downto 0 );
  signal slice_reg_y_net : std_logic_vector( 32-1 downto 0 );
begin
  in_reg <= reint1_output_port_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_23_ss_ctrl_user_data_out_net <= rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_23_ss_ctrl_user_data_out;
  io_delay : entity xil_defaultlib.sysgen_delay_34e314c510 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d => rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_23_ss_ctrl_user_data_out_net,
    q => io_delay_q_net
  );
  slice_reg : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 0,
    new_msb => 31,
    x_width => 32,
    y_width => 32
  )
  port map (
    x => io_delay_q_net,
    y => slice_reg_y_net
  );
  reint1 : entity xil_defaultlib.sysgen_reinterpret_52bb84f12b 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => slice_reg_y_net,
    output_port => reint1_output_port_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot4_23/ss/ctrl_combine
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_ctrl_combine_x3 is
  port (
    in1 : in std_logic_vector( 28-1 downto 0 );
    in2 : in std_logic_vector( 1-1 downto 0 );
    in3 : in std_logic_vector( 2-1 downto 0 );
    in4 : in std_logic_vector( 1-1 downto 0 );
    bus_out : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_ctrl_combine_x3;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_ctrl_combine_x3 is 
  signal concatenate_y_net : std_logic_vector( 32-1 downto 0 );
  signal reinterpret4_output_port_net_x0 : std_logic_vector( 28-1 downto 0 );
  signal circ_or_y_net : std_logic_vector( 1-1 downto 0 );
  signal reinterpret2_output_port_net : std_logic_vector( 2-1 downto 0 );
  signal arm_or_y_net : std_logic_vector( 1-1 downto 0 );
  signal reinterpret1_output_port_net : std_logic_vector( 28-1 downto 0 );
  signal reinterpret2_output_port_net_x0 : std_logic_vector( 1-1 downto 0 );
  signal reinterpret3_output_port_net : std_logic_vector( 2-1 downto 0 );
  signal reinterpret4_output_port_net : std_logic_vector( 1-1 downto 0 );
begin
  bus_out <= concatenate_y_net;
  reinterpret4_output_port_net_x0 <= in1;
  circ_or_y_net <= in2;
  reinterpret2_output_port_net <= in3;
  arm_or_y_net <= in4;
  concatenate : entity xil_defaultlib.sysgen_concat_8611e618a5 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    in0 => reinterpret1_output_port_net,
    in1 => reinterpret2_output_port_net_x0,
    in2 => reinterpret3_output_port_net,
    in3 => reinterpret4_output_port_net,
    y => concatenate_y_net
  );
  reinterpret1 : entity xil_defaultlib.sysgen_reinterpret_f7e0b72e82 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => reinterpret4_output_port_net_x0,
    output_port => reinterpret1_output_port_net
  );
  reinterpret2 : entity xil_defaultlib.sysgen_reinterpret_317b92931a 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => circ_or_y_net,
    output_port => reinterpret2_output_port_net_x0
  );
  reinterpret3 : entity xil_defaultlib.sysgen_reinterpret_5dc9f217bd 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => reinterpret2_output_port_net,
    output_port => reinterpret3_output_port_net
  );
  reinterpret4 : entity xil_defaultlib.sysgen_reinterpret_317b92931a 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => arm_or_y_net,
    output_port => reinterpret4_output_port_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot4_23/ss/ctrl_split
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_ctrl_split_x3 is
  port (
    bus_in : in std_logic_vector( 32-1 downto 0 );
    msb_out4 : out std_logic_vector( 28-1 downto 0 );
    out3 : out std_logic_vector( 1-1 downto 0 );
    out2 : out std_logic_vector( 2-1 downto 0 );
    lsb_out1 : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_ctrl_split_x3;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_ctrl_split_x3 is 
  signal reinterpret4_output_port_net : std_logic_vector( 28-1 downto 0 );
  signal slice3_y_net : std_logic_vector( 1-1 downto 0 );
  signal reinterpret2_output_port_net : std_logic_vector( 2-1 downto 0 );
  signal slice1_y_net : std_logic_vector( 1-1 downto 0 );
  signal reint1_output_port_net : std_logic_vector( 32-1 downto 0 );
  signal slice2_y_net : std_logic_vector( 2-1 downto 0 );
  signal slice4_y_net : std_logic_vector( 28-1 downto 0 );
begin
  msb_out4 <= reinterpret4_output_port_net;
  out3 <= slice3_y_net;
  out2 <= reinterpret2_output_port_net;
  lsb_out1 <= slice1_y_net;
  reint1_output_port_net <= bus_in;
  reinterpret2 : entity xil_defaultlib.sysgen_reinterpret_5dc9f217bd 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => slice2_y_net,
    output_port => reinterpret2_output_port_net
  );
  reinterpret4 : entity xil_defaultlib.sysgen_reinterpret_f7e0b72e82 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => slice4_y_net,
    output_port => reinterpret4_output_port_net
  );
  slice1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 0,
    new_msb => 0,
    x_width => 32,
    y_width => 1
  )
  port map (
    x => reint1_output_port_net,
    y => slice1_y_net
  );
  slice2 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 1,
    new_msb => 2,
    x_width => 32,
    y_width => 2
  )
  port map (
    x => reint1_output_port_net,
    y => slice2_y_net
  );
  slice3 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 3,
    new_msb => 3,
    x_width => 32,
    y_width => 1
  )
  port map (
    x => reint1_output_port_net,
    y => slice3_y_net
  );
  slice4 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 4,
    new_msb => 31,
    x_width => 32,
    y_width => 28
  )
  port map (
    x => reint1_output_port_net,
    y => slice4_y_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot4_23/ss/status
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_status_x4 is
  port (
    out_reg : in std_logic_vector( 32-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_23_ss_status_user_data_in : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_status_x4;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_status_x4 is 
  signal concat_y_net : std_logic_vector( 32-1 downto 0 );
  signal cast_gw_dout_net : std_logic_vector( 32-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal io_delay_q_net : std_logic_vector( 32-1 downto 0 );
  signal reint1_output_port_net : std_logic_vector( 32-1 downto 0 );
  signal assert_reg_dout_net : std_logic_vector( 32-1 downto 0 );
begin
  concat_y_net <= out_reg;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_23_ss_status_user_data_in <= cast_gw_dout_net;
  clk_net <= clk_1;
  ce_net <= ce_1;
  io_delay : entity xil_defaultlib.sysgen_delay_34e314c510 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d => reint1_output_port_net,
    q => io_delay_q_net
  );
  cast_gw : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 32,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 32,
    latency => 1,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => io_delay_q_net,
    clk => clk_net,
    ce => ce_net,
    dout => cast_gw_dout_net
  );
  assert_reg : entity xil_defaultlib.xlpassthrough 
  generic map (
    din_width => 32,
    dout_width => 32
  )
  port map (
    din => concat_y_net,
    dout => assert_reg_dout_net
  );
  reint1 : entity xil_defaultlib.sysgen_reinterpret_52bb84f12b 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => assert_reg_dout_net,
    output_port => reint1_output_port_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot4_23/ss
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_ss_x4 is
  port (
    din : in std_logic_vector( 32-1 downto 0 );
    we : in std_logic_vector( 1-1 downto 0 );
    trig : in std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_23_ss_ctrl_user_data_out : in std_logic_vector( 32-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    arm_out : out std_logic_vector( 1-1 downto 0 );
    goto_44670058_we1 : out std_logic_vector( 1-1 downto 0 );
    goto_44670058_we4 : out std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_23_ss_bram_addr : out std_logic_vector( 10-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_23_ss_bram_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_23_ss_bram_we : out std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_23_ss_status_user_data_in : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_ss_x4;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_ss_x4 is 
  signal arm_or_y_net : std_logic_vector( 1-1 downto 0 );
  signal concatenate_y_net : std_logic_vector( 32-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc4_sync_net : std_logic_vector( 1-1 downto 0 );
  signal edge_op_y_net_x0 : std_logic_vector( 1-1 downto 0 );
  signal we_choice_y_net : std_logic_vector( 1-1 downto 0 );
  signal logical6_y_net : std_logic_vector( 1-1 downto 0 );
  signal convert_addr_dout_net : std_logic_vector( 10-1 downto 0 );
  signal convert_din1_dout_net : std_logic_vector( 32-1 downto 0 );
  signal convert_we_dout_net : std_logic_vector( 1-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_23_ss_ctrl_user_data_out_net : std_logic_vector( 32-1 downto 0 );
  signal cast_gw_dout_net : std_logic_vector( 32-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal slice2_y_net : std_logic_vector( 10-1 downto 0 );
  signal delay6_q_net : std_logic_vector( 32-1 downto 0 );
  signal concat_y_net : std_logic_vector( 32-1 downto 0 );
  signal data_choice_y_net : std_logic_vector( 32-1 downto 0 );
  signal register6_q_net : std_logic_vector( 1-1 downto 0 );
  signal never_op_net : std_logic_vector( 1-1 downto 0 );
  signal edge_op_y_net_x1 : std_logic_vector( 1-1 downto 0 );
  signal cast_dout_net : std_logic_vector( 32-1 downto 0 );
  signal concatenate_y_net_x0 : std_logic_vector( 32-1 downto 0 );
  signal add_del_q_net : std_logic_vector( 10-1 downto 0 );
  signal dat_del_q_net : std_logic_vector( 32-1 downto 0 );
  signal we_del_q_net : std_logic_vector( 1-1 downto 0 );
  signal reint1_output_port_net : std_logic_vector( 32-1 downto 0 );
  signal reinterpret4_output_port_net : std_logic_vector( 28-1 downto 0 );
  signal circ_or_y_net : std_logic_vector( 1-1 downto 0 );
  signal reinterpret2_output_port_net : std_logic_vector( 2-1 downto 0 );
  signal slice3_y_net : std_logic_vector( 1-1 downto 0 );
  signal slice1_y_net : std_logic_vector( 1-1 downto 0 );
  signal arm_op_net : std_logic_vector( 1-1 downto 0 );
  signal ri_output_port_net : std_logic_vector( 32-1 downto 0 );
  signal circ_op_net : std_logic_vector( 1-1 downto 0 );
begin
  arm_out <= arm_or_y_net;
  concatenate_y_net <= din;
  rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc4_sync_net <= we;
  edge_op_y_net_x0 <= trig;
  goto_44670058_we1 <= we_choice_y_net;
  goto_44670058_we4 <= logical6_y_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_23_ss_bram_addr <= convert_addr_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_23_ss_bram_data_in <= convert_din1_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_23_ss_bram_we <= convert_we_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_23_ss_ctrl_user_data_out_net <= rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_23_ss_ctrl_user_data_out;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_23_ss_status_user_data_in <= cast_gw_dout_net;
  clk_net <= clk_1;
  ce_net <= ce_1;
  add_gen : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_add_gen_x3 
  port map (
    din => data_choice_y_net,
    we => we_choice_y_net,
    go => register6_q_net,
    cont => never_op_net,
    init => edge_op_y_net_x1,
    clk_1 => clk_net,
    ce_1 => ce_net,
    add => slice2_y_net,
    dout => delay6_q_net,
    we_o => logical6_y_net,
    status => concat_y_net
  );
  basic_ctrl : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_basic_ctrl_x3 
  port map (
    din => cast_dout_net,
    we => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc4_sync_net,
    trig => edge_op_y_net_x0,
    ctrl => concatenate_y_net_x0,
    stopi => never_op_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    dout => data_choice_y_net,
    we_o => we_choice_y_net,
    go => register6_q_net,
    init => edge_op_y_net_x1
  );
  bram : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_bram_x3 
  port map (
    addr => add_del_q_net,
    data_in => dat_del_q_net,
    we => we_del_q_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_23_ss_bram_addr => convert_addr_dout_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_23_ss_bram_data_in => convert_din1_dout_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_23_ss_bram_we => convert_we_dout_net
  );
  ctrl : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_ctrl_x3 
  port map (
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_23_ss_ctrl_user_data_out => rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_23_ss_ctrl_user_data_out_net,
    in_reg => reint1_output_port_net
  );
  ctrl_combine : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_ctrl_combine_x3 
  port map (
    in1 => reinterpret4_output_port_net,
    in2 => circ_or_y_net,
    in3 => reinterpret2_output_port_net,
    in4 => arm_or_y_net,
    bus_out => concatenate_y_net_x0
  );
  ctrl_split : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_ctrl_split_x3 
  port map (
    bus_in => reint1_output_port_net,
    msb_out4 => reinterpret4_output_port_net,
    out3 => slice3_y_net,
    out2 => reinterpret2_output_port_net,
    lsb_out1 => slice1_y_net
  );
  status : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_status_x4 
  port map (
    out_reg => concat_y_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_23_ss_status_user_data_in => cast_gw_dout_net
  );
  add_del : entity xil_defaultlib.sysgen_delay_4e9264ffdf 
  port map (
    clr => '0',
    d => slice2_y_net,
    clk => clk_net,
    ce => ce_net,
    q => add_del_q_net
  );
  arm : entity xil_defaultlib.sysgen_constant_a7b8778750 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => arm_op_net
  );
  arm_or : entity xil_defaultlib.sysgen_logical_d7dc12cf31 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => slice1_y_net,
    d1 => arm_op_net,
    y => arm_or_y_net
  );
  cast : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 32,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 32,
    latency => 0,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => ri_output_port_net,
    clk => clk_net,
    ce => ce_net,
    dout => cast_dout_net
  );
  circ : entity xil_defaultlib.sysgen_constant_a7b8778750 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => circ_op_net
  );
  circ_or : entity xil_defaultlib.sysgen_logical_d7dc12cf31 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => slice3_y_net,
    d1 => circ_op_net,
    y => circ_or_y_net
  );
  dat_del : entity xil_defaultlib.sysgen_delay_5ec362a23c 
  port map (
    clr => '0',
    d => delay6_q_net,
    clk => clk_net,
    ce => ce_net,
    q => dat_del_q_net
  );
  never : entity xil_defaultlib.sysgen_constant_a7b8778750 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => never_op_net
  );
  ri : entity xil_defaultlib.sysgen_reinterpret_52bb84f12b 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => concatenate_y_net,
    output_port => ri_output_port_net
  );
  we_del : entity xil_defaultlib.sysgen_delay_e0740ee3f9 
  port map (
    clr => '0',
    d => logical6_y_net,
    clk => clk_net,
    ce => ce_net,
    q => we_del_q_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot4_23
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_23 is
  port (
    in_d0 : in std_logic_vector( 16-1 downto 0 );
    in_d1 : in std_logic_vector( 16-1 downto 0 );
    we : in std_logic_vector( 1-1 downto 0 );
    trig : in std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_23_ss_ctrl_user_data_out : in std_logic_vector( 32-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    arm_out : out std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_23_ss_bram_addr : out std_logic_vector( 10-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_23_ss_bram_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_23_ss_bram_we : out std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_23_ss_status_user_data_in : out std_logic_vector( 32-1 downto 0 );
    goto_44670058_we1 : out std_logic_vector( 1-1 downto 0 );
    goto_44670058_we4 : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_23;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_23 is 
  signal arm_or_y_net : std_logic_vector( 1-1 downto 0 );
  signal slice33_y_net : std_logic_vector( 16-1 downto 0 );
  signal slice60_y_net : std_logic_vector( 16-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc4_sync_net : std_logic_vector( 1-1 downto 0 );
  signal edge_op_y_net : std_logic_vector( 1-1 downto 0 );
  signal convert_addr_dout_net : std_logic_vector( 10-1 downto 0 );
  signal convert_din1_dout_net : std_logic_vector( 32-1 downto 0 );
  signal convert_we_dout_net : std_logic_vector( 1-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_23_ss_ctrl_user_data_out_net : std_logic_vector( 32-1 downto 0 );
  signal cast_gw_dout_net : std_logic_vector( 32-1 downto 0 );
  signal we_choice_y_net : std_logic_vector( 1-1 downto 0 );
  signal logical6_y_net : std_logic_vector( 1-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal concatenate_y_net : std_logic_vector( 32-1 downto 0 );
  signal assert_d0_dout_net : std_logic_vector( 16-1 downto 0 );
  signal assert_d1_dout_net : std_logic_vector( 16-1 downto 0 );
begin
  arm_out <= arm_or_y_net;
  slice33_y_net <= in_d0;
  slice60_y_net <= in_d1;
  rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc4_sync_net <= we;
  edge_op_y_net <= trig;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_23_ss_bram_addr <= convert_addr_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_23_ss_bram_data_in <= convert_din1_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_23_ss_bram_we <= convert_we_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_23_ss_ctrl_user_data_out_net <= rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_23_ss_ctrl_user_data_out;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_23_ss_status_user_data_in <= cast_gw_dout_net;
  goto_44670058_we1 <= we_choice_y_net;
  goto_44670058_we4 <= logical6_y_net;
  clk_net <= clk_1;
  ce_net <= ce_1;
  buscreate : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_buscreate_x3 
  port map (
    in1 => assert_d0_dout_net,
    in2 => assert_d1_dout_net,
    bus_out => concatenate_y_net
  );
  ss : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_ss_x4 
  port map (
    din => concatenate_y_net,
    we => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc4_sync_net,
    trig => edge_op_y_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_23_ss_ctrl_user_data_out => rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_23_ss_ctrl_user_data_out_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    arm_out => arm_or_y_net,
    goto_44670058_we1 => we_choice_y_net,
    goto_44670058_we4 => logical6_y_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_23_ss_bram_addr => convert_addr_dout_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_23_ss_bram_data_in => convert_din1_dout_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_23_ss_bram_we => convert_we_dout_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_23_ss_status_user_data_in => cast_gw_dout_net
  );
  assert_d0 : entity xil_defaultlib.xlpassthrough 
  generic map (
    din_width => 16,
    dout_width => 16
  )
  port map (
    din => slice33_y_net,
    dout => assert_d0_dout_net
  );
  assert_d1 : entity xil_defaultlib.xlpassthrough 
  generic map (
    din_width => 16,
    dout_width => 16
  )
  port map (
    din => slice60_y_net,
    dout => assert_d1_dout_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot4_45/buscreate
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_buscreate_x6 is
  port (
    in1 : in std_logic_vector( 16-1 downto 0 );
    in2 : in std_logic_vector( 16-1 downto 0 );
    bus_out : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_buscreate_x6;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_buscreate_x6 is 
  signal concatenate_y_net : std_logic_vector( 32-1 downto 0 );
  signal assert_d0_dout_net : std_logic_vector( 16-1 downto 0 );
  signal assert_d1_dout_net : std_logic_vector( 16-1 downto 0 );
  signal reinterpret1_output_port_net : std_logic_vector( 16-1 downto 0 );
  signal reinterpret2_output_port_net : std_logic_vector( 16-1 downto 0 );
begin
  bus_out <= concatenate_y_net;
  assert_d0_dout_net <= in1;
  assert_d1_dout_net <= in2;
  concatenate : entity xil_defaultlib.sysgen_concat_37649e01d1 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    in0 => reinterpret1_output_port_net,
    in1 => reinterpret2_output_port_net,
    y => concatenate_y_net
  );
  reinterpret1 : entity xil_defaultlib.sysgen_reinterpret_03c8cdbbc1 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => assert_d0_dout_net,
    output_port => reinterpret1_output_port_net
  );
  reinterpret2 : entity xil_defaultlib.sysgen_reinterpret_03c8cdbbc1 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => assert_d1_dout_net,
    output_port => reinterpret2_output_port_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot4_45/ss/add_gen/edge_detect
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x13 is
  port (
    in_x0 : in std_logic_vector( 1-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    out_x0 : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x13;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x13 is 
  signal edge_op_y_net : std_logic_vector( 1-1 downto 0 );
  signal slice3_y_net : std_logic_vector( 1-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal delay_q_net : std_logic_vector( 1-1 downto 0 );
  signal inverter_op_net : std_logic_vector( 1-1 downto 0 );
begin
  out_x0 <= edge_op_y_net;
  slice3_y_net <= in_x0;
  clk_net <= clk_1;
  ce_net <= ce_1;
  delay : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 1
  )
  port map (
    en => '1',
    rst => '1',
    d => slice3_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay_q_net
  );
  inverter : entity xil_defaultlib.sysgen_inverter_6233897471 
  port map (
    clr => '0',
    ip => slice3_y_net,
    clk => clk_net,
    ce => ce_net,
    op => inverter_op_net
  );
  edge_op : entity xil_defaultlib.sysgen_logical_9cc14fefba 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => inverter_op_net,
    d1 => delay_q_net,
    y => edge_op_y_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot4_45/ss/add_gen
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_add_gen_x6 is
  port (
    din : in std_logic_vector( 32-1 downto 0 );
    we : in std_logic_vector( 1-1 downto 0 );
    go : in std_logic_vector( 1-1 downto 0 );
    cont : in std_logic_vector( 1-1 downto 0 );
    init : in std_logic_vector( 1-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    add : out std_logic_vector( 10-1 downto 0 );
    dout : out std_logic_vector( 32-1 downto 0 );
    we_o : out std_logic_vector( 1-1 downto 0 );
    status : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_add_gen_x6;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_add_gen_x6 is 
  signal slice2_y_net : std_logic_vector( 10-1 downto 0 );
  signal delay6_q_net : std_logic_vector( 32-1 downto 0 );
  signal logical6_y_net : std_logic_vector( 1-1 downto 0 );
  signal concat_y_net : std_logic_vector( 32-1 downto 0 );
  signal data_choice_y_net : std_logic_vector( 32-1 downto 0 );
  signal we_choice_y_net : std_logic_vector( 1-1 downto 0 );
  signal register6_q_net : std_logic_vector( 1-1 downto 0 );
  signal never_op_net : std_logic_vector( 1-1 downto 0 );
  signal edge_op_y_net : std_logic_vector( 1-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal edge_op_y_net_x0 : std_logic_vector( 1-1 downto 0 );
  signal slice3_y_net : std_logic_vector( 1-1 downto 0 );
  signal shift_op_net : std_logic_vector( 19-1 downto 0 );
  signal inverter_op_net : std_logic_vector( 1-1 downto 0 );
  signal delay1_q_net : std_logic_vector( 12-1 downto 0 );
  signal convert_dout_net : std_logic_vector( 19-1 downto 0 );
  signal register5_q_net : std_logic_vector( 1-1 downto 0 );
  signal delay_q_net : std_logic_vector( 1-1 downto 0 );
  signal delay4_q_net : std_logic_vector( 1-1 downto 0 );
  signal slice1_y_net : std_logic_vector( 12-1 downto 0 );
  signal delay3_q_net : std_logic_vector( 1-1 downto 0 );
  signal inverter1_op_net : std_logic_vector( 1-1 downto 0 );
  signal logical1_y_net : std_logic_vector( 1-1 downto 0 );
  signal logical4_y_net : std_logic_vector( 1-1 downto 0 );
  signal add_gen_op_net : std_logic_vector( 13-1 downto 0 );
begin
  add <= slice2_y_net;
  dout <= delay6_q_net;
  we_o <= logical6_y_net;
  status <= concat_y_net;
  data_choice_y_net <= din;
  we_choice_y_net <= we;
  register6_q_net <= go;
  never_op_net <= cont;
  edge_op_y_net <= init;
  clk_net <= clk_1;
  ce_net <= ce_1;
  edge_detect : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x13 
  port map (
    in_x0 => slice3_y_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    out_x0 => edge_op_y_net_x0
  );
  concat : entity xil_defaultlib.sysgen_concat_fc8edfac0e 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    in0 => shift_op_net,
    in1 => inverter_op_net,
    in2 => delay1_q_net,
    y => concat_y_net
  );
  convert : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 1,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 19,
    latency => 0,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => register5_q_net,
    clk => clk_net,
    ce => ce_net,
    dout => convert_dout_net
  );
  delay : entity xil_defaultlib.sysgen_delay_e0740ee3f9 
  port map (
    clr => '0',
    d => delay4_q_net,
    clk => clk_net,
    ce => ce_net,
    q => delay_q_net
  );
  delay1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 12
  )
  port map (
    en => '1',
    rst => '1',
    d => slice1_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay1_q_net
  );
  delay3 : entity xil_defaultlib.sysgen_delay_e0740ee3f9 
  port map (
    clr => '0',
    d => never_op_net,
    clk => clk_net,
    ce => ce_net,
    q => delay3_q_net
  );
  delay4 : entity xil_defaultlib.sysgen_delay_e0740ee3f9 
  port map (
    clr => '0',
    d => edge_op_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay4_q_net
  );
  delay6 : entity xil_defaultlib.sysgen_delay_5ec362a23c 
  port map (
    clr => '0',
    d => data_choice_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay6_q_net
  );
  inverter : entity xil_defaultlib.sysgen_inverter_918b6bc6d0 
  port map (
    clr => '0',
    ip => register5_q_net,
    clk => clk_net,
    ce => ce_net,
    op => inverter_op_net
  );
  inverter1 : entity xil_defaultlib.sysgen_inverter_6233897471 
  port map (
    clr => '0',
    ip => edge_op_y_net_x0,
    clk => clk_net,
    ce => ce_net,
    op => inverter1_op_net
  );
  logical1 : entity xil_defaultlib.sysgen_logical_2486129911 
  port map (
    clr => '0',
    d0 => we_choice_y_net,
    d1 => register6_q_net,
    clk => clk_net,
    ce => ce_net,
    y => logical1_y_net
  );
  logical4 : entity xil_defaultlib.sysgen_logical_d7dc12cf31 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => delay3_q_net,
    d1 => inverter1_op_net,
    y => logical4_y_net
  );
  logical6 : entity xil_defaultlib.sysgen_logical_c05fefc67b 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => register5_q_net,
    d1 => logical4_y_net,
    d2 => logical1_y_net,
    y => logical6_y_net
  );
  register5 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlregister 
  generic map (
    d_width => 1,
    init_value => b"1"
  )
  port map (
    d => delay3_q_net,
    rst => delay_q_net,
    en => edge_op_y_net_x0,
    clk => clk_net,
    ce => ce_net,
    q => register5_q_net
  );
  shift : entity xil_defaultlib.sysgen_shift_5af4fe0a99 
  port map (
    clr => '0',
    ip => convert_dout_net,
    clk => clk_net,
    ce => ce_net,
    op => shift_op_net
  );
  add_gen : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlcounter_free 
  generic map (
    core_name0 => "rfdc_multi_eight_adcs_2048gsps_mts_c_counter_binary_v12_0_i1",
    op_arith => xlUnsigned,
    op_width => 13
  )
  port map (
    clr => '0',
    rst => delay4_q_net,
    en => logical6_y_net,
    clk => clk_net,
    ce => ce_net,
    op => add_gen_op_net
  );
  slice1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 0,
    new_msb => 11,
    x_width => 13,
    y_width => 12
  )
  port map (
    x => add_gen_op_net,
    y => slice1_y_net
  );
  slice2 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 2,
    new_msb => 11,
    x_width => 13,
    y_width => 10
  )
  port map (
    x => add_gen_op_net,
    y => slice2_y_net
  );
  slice3 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 12,
    new_msb => 12,
    x_width => 13,
    y_width => 1
  )
  port map (
    x => add_gen_op_net,
    y => slice3_y_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot4_45/ss/basic_ctrl/dram_munge
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_dram_munge_x6 is
  port (
    din : in std_logic_vector( 32-1 downto 0 );
    we : in std_logic_vector( 1-1 downto 0 );
    init : in std_logic_vector( 1-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    dout : out std_logic_vector( 32-1 downto 0 );
    we_o : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_dram_munge_x6;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_dram_munge_x6 is 
  signal data_choice_y_net : std_logic_vector( 32-1 downto 0 );
  signal we_choice_y_net : std_logic_vector( 1-1 downto 0 );
  signal cast_dout_net : std_logic_vector( 32-1 downto 0 );
  signal mux1_y_net_x0 : std_logic_vector( 1-1 downto 0 );
  signal edge_op_y_net : std_logic_vector( 1-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal concat_y_net : std_logic_vector( 80-1 downto 0 );
  signal constant_op_net : std_logic_vector( 8-1 downto 0 );
  signal register_q_net : std_logic_vector( 32-1 downto 0 );
  signal register1_q_net : std_logic_vector( 32-1 downto 0 );
  signal concat1_y_net : std_logic_vector( 80-1 downto 0 );
  signal register2_q_net : std_logic_vector( 32-1 downto 0 );
  signal register3_q_net : std_logic_vector( 32-1 downto 0 );
  signal delay_q_net : std_logic_vector( 1-1 downto 0 );
  signal logical_y_net : std_logic_vector( 1-1 downto 0 );
  signal delay1_q_net : std_logic_vector( 1-1 downto 0 );
  signal logical1_y_net : std_logic_vector( 1-1 downto 0 );
  signal relational3_op_net : std_logic_vector( 1-1 downto 0 );
  signal mux1_y_net : std_logic_vector( 80-1 downto 0 );
  signal dout_count_op_net : std_logic_vector( 1-1 downto 0 );
  signal relational_op_net : std_logic_vector( 1-1 downto 0 );
  signal relational1_op_net : std_logic_vector( 1-1 downto 0 );
  signal relational2_op_net : std_logic_vector( 1-1 downto 0 );
  signal input_count_op_net : std_logic_vector( 2-1 downto 0 );
  signal con0_op_net : std_logic_vector( 2-1 downto 0 );
  signal con1_op_net : std_logic_vector( 2-1 downto 0 );
  signal con2_op_net : std_logic_vector( 2-1 downto 0 );
  signal con3_op_net : std_logic_vector( 2-1 downto 0 );
  signal dram_op_net : std_logic_vector( 1-1 downto 0 );
begin
  dout <= data_choice_y_net;
  we_o <= we_choice_y_net;
  cast_dout_net <= din;
  mux1_y_net_x0 <= we;
  edge_op_y_net <= init;
  clk_net <= clk_1;
  ce_net <= ce_1;
  concat : entity xil_defaultlib.sysgen_concat_e7487baac7 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    in0 => constant_op_net,
    in1 => register_q_net,
    in2 => constant_op_net,
    in3 => register1_q_net,
    y => concat_y_net
  );
  concat1 : entity xil_defaultlib.sysgen_concat_e7487baac7 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    in0 => constant_op_net,
    in1 => register2_q_net,
    in2 => constant_op_net,
    in3 => register3_q_net,
    y => concat1_y_net
  );
  constant_x0 : entity xil_defaultlib.sysgen_constant_869e31f04d 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => constant_op_net
  );
  delay : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 1
  )
  port map (
    en => '1',
    rst => '1',
    d => logical_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay_q_net
  );
  delay1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 1
  )
  port map (
    en => '1',
    rst => '1',
    d => logical1_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay1_q_net
  );
  logical : entity xil_defaultlib.sysgen_logical_2486129911 
  port map (
    clr => '0',
    d0 => relational3_op_net,
    d1 => mux1_y_net_x0,
    clk => clk_net,
    ce => ce_net,
    y => logical_y_net
  );
  logical1 : entity xil_defaultlib.sysgen_logical_d7dc12cf31 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => logical_y_net,
    d1 => delay_q_net,
    y => logical1_y_net
  );
  mux1 : entity xil_defaultlib.sysgen_mux_71ee2b1026 
  port map (
    clr => '0',
    sel => dout_count_op_net,
    d0 => concat_y_net,
    d1 => concat1_y_net,
    clk => clk_net,
    ce => ce_net,
    y => mux1_y_net
  );
  register_x0 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlregister 
  generic map (
    d_width => 32,
    init_value => b"00000000000000000000000000000000"
  )
  port map (
    rst => "0",
    d => cast_dout_net,
    en => relational_op_net,
    clk => clk_net,
    ce => ce_net,
    q => register_q_net
  );
  register1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlregister 
  generic map (
    d_width => 32,
    init_value => b"00000000000000000000000000000000"
  )
  port map (
    rst => "0",
    d => cast_dout_net,
    en => relational1_op_net,
    clk => clk_net,
    ce => ce_net,
    q => register1_q_net
  );
  register2 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlregister 
  generic map (
    d_width => 32,
    init_value => b"00000000000000000000000000000000"
  )
  port map (
    rst => "0",
    d => cast_dout_net,
    en => relational2_op_net,
    clk => clk_net,
    ce => ce_net,
    q => register2_q_net
  );
  register3 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlregister 
  generic map (
    d_width => 32,
    init_value => b"00000000000000000000000000000000"
  )
  port map (
    rst => "0",
    d => cast_dout_net,
    en => relational3_op_net,
    clk => clk_net,
    ce => ce_net,
    q => register3_q_net
  );
  relational : entity xil_defaultlib.sysgen_relational_e5d6b5eaca 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    a => input_count_op_net,
    b => con0_op_net,
    op => relational_op_net
  );
  relational1 : entity xil_defaultlib.sysgen_relational_e5d6b5eaca 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    a => input_count_op_net,
    b => con1_op_net,
    op => relational1_op_net
  );
  relational2 : entity xil_defaultlib.sysgen_relational_e5d6b5eaca 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    a => input_count_op_net,
    b => con2_op_net,
    op => relational2_op_net
  );
  relational3 : entity xil_defaultlib.sysgen_relational_e5d6b5eaca 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    a => input_count_op_net,
    b => con3_op_net,
    op => relational3_op_net
  );
  con0 : entity xil_defaultlib.sysgen_constant_b58c3a1535 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => con0_op_net
  );
  con1 : entity xil_defaultlib.sysgen_constant_d3f27a6354 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => con1_op_net
  );
  con2 : entity xil_defaultlib.sysgen_constant_2fa4689d4e 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => con2_op_net
  );
  con3 : entity xil_defaultlib.sysgen_constant_31bab66ba6 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => con3_op_net
  );
  data_choice : entity xil_defaultlib.sysgen_mux_d624c1af44 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    sel => dram_op_net,
    d0 => cast_dout_net,
    d1 => mux1_y_net,
    y => data_choice_y_net
  );
  dout_count : entity xil_defaultlib.sysgen_counter_a9c1c293c2 
  port map (
    clr => '0',
    rst => edge_op_y_net,
    en => logical1_y_net,
    clk => clk_net,
    ce => ce_net,
    op => dout_count_op_net
  );
  dram : entity xil_defaultlib.sysgen_constant_a7b8778750 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => dram_op_net
  );
  input_count : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlcounter_free 
  generic map (
    core_name0 => "rfdc_multi_eight_adcs_2048gsps_mts_c_counter_binary_v12_0_i2",
    op_arith => xlUnsigned,
    op_width => 2
  )
  port map (
    clr => '0',
    rst => edge_op_y_net,
    en => mux1_y_net_x0,
    clk => clk_net,
    ce => ce_net,
    op => input_count_op_net
  );
  we_choice : entity xil_defaultlib.sysgen_mux_4874190f11 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    sel => dram_op_net,
    d0 => mux1_y_net_x0,
    d1 => delay1_q_net,
    y => we_choice_y_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot4_45/ss/basic_ctrl/edge_detect
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x14 is
  port (
    in_x0 : in std_logic_vector( 1-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    out_x0 : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x14;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x14 is 
  signal edge_op_y_net : std_logic_vector( 1-1 downto 0 );
  signal delay1_q_net : std_logic_vector( 1-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal delay_q_net : std_logic_vector( 1-1 downto 0 );
  signal inverter_op_net : std_logic_vector( 1-1 downto 0 );
begin
  out_x0 <= edge_op_y_net;
  delay1_q_net <= in_x0;
  clk_net <= clk_1;
  ce_net <= ce_1;
  delay : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 1
  )
  port map (
    en => '1',
    rst => '1',
    d => delay1_q_net,
    clk => clk_net,
    ce => ce_net,
    q => delay_q_net
  );
  inverter : entity xil_defaultlib.sysgen_inverter_6233897471 
  port map (
    clr => '0',
    ip => delay1_q_net,
    clk => clk_net,
    ce => ce_net,
    op => inverter_op_net
  );
  edge_op : entity xil_defaultlib.sysgen_logical_0f1aa1e2d7 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => inverter_op_net,
    d1 => delay_q_net,
    y => edge_op_y_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot4_45/ss/basic_ctrl
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_basic_ctrl_x6 is
  port (
    din : in std_logic_vector( 32-1 downto 0 );
    we : in std_logic_vector( 1-1 downto 0 );
    trig : in std_logic_vector( 1-1 downto 0 );
    ctrl : in std_logic_vector( 32-1 downto 0 );
    stopi : in std_logic_vector( 1-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    dout : out std_logic_vector( 32-1 downto 0 );
    we_o : out std_logic_vector( 1-1 downto 0 );
    go : out std_logic_vector( 1-1 downto 0 );
    init : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_basic_ctrl_x6;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_basic_ctrl_x6 is 
  signal data_choice_y_net : std_logic_vector( 32-1 downto 0 );
  signal we_choice_y_net : std_logic_vector( 1-1 downto 0 );
  signal register6_q_net : std_logic_vector( 1-1 downto 0 );
  signal edge_op_y_net_x0 : std_logic_vector( 1-1 downto 0 );
  signal cast_dout_net : std_logic_vector( 32-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc4_sync_net : std_logic_vector( 1-1 downto 0 );
  signal edge_op_y_net : std_logic_vector( 1-1 downto 0 );
  signal concatenate_y_net : std_logic_vector( 32-1 downto 0 );
  signal never_op_net : std_logic_vector( 1-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal mux1_y_net : std_logic_vector( 1-1 downto 0 );
  signal delay1_q_net : std_logic_vector( 1-1 downto 0 );
  signal constant_op_net : std_logic_vector( 1-1 downto 0 );
  signal constant1_op_net : std_logic_vector( 1-1 downto 0 );
  signal constant2_op_net : std_logic_vector( 1-1 downto 0 );
  signal enable_y_net : std_logic_vector( 1-1 downto 0 );
  signal delay2_q_net : std_logic_vector( 1-1 downto 0 );
  signal trig_src_y_net : std_logic_vector( 1-1 downto 0 );
  signal delay3_q_net : std_logic_vector( 1-1 downto 0 );
  signal valid_src_y_net : std_logic_vector( 1-1 downto 0 );
  signal inverter_op_net : std_logic_vector( 1-1 downto 0 );
  signal logical_y_net : std_logic_vector( 1-1 downto 0 );
  signal mux2_y_net : std_logic_vector( 1-1 downto 0 );
  signal register1_q_net : std_logic_vector( 1-1 downto 0 );
begin
  dout <= data_choice_y_net;
  we_o <= we_choice_y_net;
  go <= register6_q_net;
  init <= edge_op_y_net_x0;
  cast_dout_net <= din;
  rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc4_sync_net <= we;
  edge_op_y_net <= trig;
  concatenate_y_net <= ctrl;
  never_op_net <= stopi;
  clk_net <= clk_1;
  ce_net <= ce_1;
  dram_munge : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_dram_munge_x6 
  port map (
    din => cast_dout_net,
    we => mux1_y_net,
    init => edge_op_y_net_x0,
    clk_1 => clk_net,
    ce_1 => ce_net,
    dout => data_choice_y_net,
    we_o => we_choice_y_net
  );
  edge_detect : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x14 
  port map (
    in_x0 => delay1_q_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    out_x0 => edge_op_y_net_x0
  );
  constant_x0 : entity xil_defaultlib.sysgen_constant_c95a0b5efb 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => constant_op_net
  );
  constant1 : entity xil_defaultlib.sysgen_constant_c95a0b5efb 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => constant1_op_net
  );
  constant2 : entity xil_defaultlib.sysgen_constant_c95a0b5efb 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => constant2_op_net
  );
  delay1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 1
  )
  port map (
    en => '1',
    rst => '1',
    d => enable_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay1_q_net
  );
  delay2 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 1
  )
  port map (
    en => '1',
    rst => '1',
    d => trig_src_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay2_q_net
  );
  delay3 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 1
  )
  port map (
    en => '1',
    rst => '1',
    d => valid_src_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay3_q_net
  );
  inverter : entity xil_defaultlib.sysgen_inverter_6233897471 
  port map (
    clr => '0',
    ip => edge_op_y_net_x0,
    clk => clk_net,
    ce => ce_net,
    op => inverter_op_net
  );
  logical : entity xil_defaultlib.sysgen_logical_d26e5cda59 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => mux2_y_net,
    d1 => inverter_op_net,
    y => logical_y_net
  );
  mux1 : entity xil_defaultlib.sysgen_mux_4874190f11 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    sel => delay3_q_net,
    d0 => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc4_sync_net,
    d1 => constant2_op_net,
    y => mux1_y_net
  );
  mux2 : entity xil_defaultlib.sysgen_mux_4874190f11 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    sel => delay2_q_net,
    d0 => edge_op_y_net,
    d1 => constant1_op_net,
    y => mux2_y_net
  );
  register1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlregister 
  generic map (
    d_width => 1,
    init_value => b"0"
  )
  port map (
    d => constant_op_net,
    rst => logical_y_net,
    en => edge_op_y_net_x0,
    clk => clk_net,
    ce => ce_net,
    q => register1_q_net
  );
  register6 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlregister 
  generic map (
    d_width => 1,
    init_value => b"0"
  )
  port map (
    d => mux2_y_net,
    rst => edge_op_y_net_x0,
    en => register1_q_net,
    clk => clk_net,
    ce => ce_net,
    q => register6_q_net
  );
  enable : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 0,
    new_msb => 0,
    x_width => 32,
    y_width => 1
  )
  port map (
    x => concatenate_y_net,
    y => enable_y_net
  );
  trig_src : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 1,
    new_msb => 1,
    x_width => 32,
    y_width => 1
  )
  port map (
    x => concatenate_y_net,
    y => trig_src_y_net
  );
  valid_src : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 2,
    new_msb => 2,
    x_width => 32,
    y_width => 1
  )
  port map (
    x => concatenate_y_net,
    y => valid_src_y_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot4_45/ss/bram/calc_add
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_calc_add_x6 is
  port (
    in_x0 : in std_logic_vector( 10-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    out_x0 : out std_logic_vector( 10-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_calc_add_x6;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_calc_add_x6 is 
  signal mux_y_net : std_logic_vector( 10-1 downto 0 );
  signal add_del_q_net : std_logic_vector( 10-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal add_sub_s_net : std_logic_vector( 1-1 downto 0 );
  signal const_op_net : std_logic_vector( 1-1 downto 0 );
  signal lsw_y_net : std_logic_vector( 1-1 downto 0 );
  signal concat_y_net : std_logic_vector( 10-1 downto 0 );
  signal msw_y_net : std_logic_vector( 9-1 downto 0 );
  signal convert_addr_dout_net : std_logic_vector( 10-1 downto 0 );
  signal manipulate_op_net : std_logic_vector( 1-1 downto 0 );
begin
  out_x0 <= mux_y_net;
  add_del_q_net <= in_x0;
  clk_net <= clk_1;
  ce_net <= ce_1;
  add_sub : entity xil_defaultlib.sysgen_addsub_fd3b6c715c 
  port map (
    clr => '0',
    a => const_op_net,
    b => lsw_y_net,
    clk => clk_net,
    ce => ce_net,
    s => add_sub_s_net
  );
  concat : entity xil_defaultlib.sysgen_concat_f4b90dfa16 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    in0 => msw_y_net,
    in1 => add_sub_s_net,
    y => concat_y_net
  );
  const : entity xil_defaultlib.sysgen_constant_a7b8778750 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => const_op_net
  );
  convert_addr : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 10,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 10,
    latency => 0,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => add_del_q_net,
    clk => clk_net,
    ce => ce_net,
    dout => convert_addr_dout_net
  );
  lsw : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 0,
    new_msb => 0,
    x_width => 10,
    y_width => 1
  )
  port map (
    x => convert_addr_dout_net,
    y => lsw_y_net
  );
  manipulate : entity xil_defaultlib.sysgen_constant_a7b8778750 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => manipulate_op_net
  );
  msw : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 1,
    new_msb => 9,
    x_width => 10,
    y_width => 9
  )
  port map (
    x => convert_addr_dout_net,
    y => msw_y_net
  );
  mux : entity xil_defaultlib.sysgen_mux_4417594854 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    sel => manipulate_op_net,
    d0 => convert_addr_dout_net,
    d1 => concat_y_net,
    y => mux_y_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot4_45/ss/bram/munge_in
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_munge_in_x6 is
  port (
    din : in std_logic_vector( 32-1 downto 0 );
    dout : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_munge_in_x6;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_munge_in_x6 is 
  signal reinterpret_out_output_port_net : std_logic_vector( 32-1 downto 0 );
  signal dat_del_q_net : std_logic_vector( 32-1 downto 0 );
begin
  dout <= reinterpret_out_output_port_net;
  dat_del_q_net <= din;
  reinterpret_out : entity xil_defaultlib.sysgen_reinterpret_52bb84f12b 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => dat_del_q_net,
    output_port => reinterpret_out_output_port_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot4_45/ss/bram
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_bram_x6 is
  port (
    addr : in std_logic_vector( 10-1 downto 0 );
    data_in : in std_logic_vector( 32-1 downto 0 );
    we : in std_logic_vector( 1-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_45_ss_bram_addr : out std_logic_vector( 10-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_45_ss_bram_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_45_ss_bram_we : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_bram_x6;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_bram_x6 is 
  signal add_del_q_net : std_logic_vector( 10-1 downto 0 );
  signal dat_del_q_net : std_logic_vector( 32-1 downto 0 );
  signal we_del_q_net : std_logic_vector( 1-1 downto 0 );
  signal convert_addr_dout_net : std_logic_vector( 10-1 downto 0 );
  signal convert_din1_dout_net : std_logic_vector( 32-1 downto 0 );
  signal convert_we_dout_net : std_logic_vector( 1-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal mux_y_net : std_logic_vector( 10-1 downto 0 );
  signal reinterpret_out_output_port_net : std_logic_vector( 32-1 downto 0 );
begin
  add_del_q_net <= addr;
  dat_del_q_net <= data_in;
  we_del_q_net <= we;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_45_ss_bram_addr <= convert_addr_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_45_ss_bram_data_in <= convert_din1_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_45_ss_bram_we <= convert_we_dout_net;
  clk_net <= clk_1;
  ce_net <= ce_1;
  calc_add : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_calc_add_x6 
  port map (
    in_x0 => add_del_q_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    out_x0 => mux_y_net
  );
  munge_in : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_munge_in_x6 
  port map (
    din => dat_del_q_net,
    dout => reinterpret_out_output_port_net
  );
  convert_addr : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 10,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 10,
    latency => 0,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => mux_y_net,
    clk => clk_net,
    ce => ce_net,
    dout => convert_addr_dout_net
  );
  convert_din1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 32,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 32,
    latency => 0,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => reinterpret_out_output_port_net,
    clk => clk_net,
    ce => ce_net,
    dout => convert_din1_dout_net
  );
  convert_we : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 1,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 1,
    latency => 0,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => we_del_q_net,
    clk => clk_net,
    ce => ce_net,
    dout => convert_we_dout_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot4_45/ss/ctrl
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_ctrl_x6 is
  port (
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_45_ss_ctrl_user_data_out : in std_logic_vector( 32-1 downto 0 );
    in_reg : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_ctrl_x6;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_ctrl_x6 is 
  signal reint1_output_port_net : std_logic_vector( 32-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_45_ss_ctrl_user_data_out_net : std_logic_vector( 32-1 downto 0 );
  signal io_delay_q_net : std_logic_vector( 32-1 downto 0 );
  signal slice_reg_y_net : std_logic_vector( 32-1 downto 0 );
begin
  in_reg <= reint1_output_port_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_45_ss_ctrl_user_data_out_net <= rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_45_ss_ctrl_user_data_out;
  io_delay : entity xil_defaultlib.sysgen_delay_34e314c510 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d => rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_45_ss_ctrl_user_data_out_net,
    q => io_delay_q_net
  );
  slice_reg : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 0,
    new_msb => 31,
    x_width => 32,
    y_width => 32
  )
  port map (
    x => io_delay_q_net,
    y => slice_reg_y_net
  );
  reint1 : entity xil_defaultlib.sysgen_reinterpret_52bb84f12b 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => slice_reg_y_net,
    output_port => reint1_output_port_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot4_45/ss/ctrl_combine
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_ctrl_combine_x6 is
  port (
    in1 : in std_logic_vector( 28-1 downto 0 );
    in2 : in std_logic_vector( 1-1 downto 0 );
    in3 : in std_logic_vector( 2-1 downto 0 );
    in4 : in std_logic_vector( 1-1 downto 0 );
    bus_out : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_ctrl_combine_x6;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_ctrl_combine_x6 is 
  signal concatenate_y_net : std_logic_vector( 32-1 downto 0 );
  signal reinterpret4_output_port_net_x0 : std_logic_vector( 28-1 downto 0 );
  signal circ_or_y_net : std_logic_vector( 1-1 downto 0 );
  signal reinterpret2_output_port_net : std_logic_vector( 2-1 downto 0 );
  signal arm_or_y_net : std_logic_vector( 1-1 downto 0 );
  signal reinterpret1_output_port_net : std_logic_vector( 28-1 downto 0 );
  signal reinterpret2_output_port_net_x0 : std_logic_vector( 1-1 downto 0 );
  signal reinterpret3_output_port_net : std_logic_vector( 2-1 downto 0 );
  signal reinterpret4_output_port_net : std_logic_vector( 1-1 downto 0 );
begin
  bus_out <= concatenate_y_net;
  reinterpret4_output_port_net_x0 <= in1;
  circ_or_y_net <= in2;
  reinterpret2_output_port_net <= in3;
  arm_or_y_net <= in4;
  concatenate : entity xil_defaultlib.sysgen_concat_8611e618a5 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    in0 => reinterpret1_output_port_net,
    in1 => reinterpret2_output_port_net_x0,
    in2 => reinterpret3_output_port_net,
    in3 => reinterpret4_output_port_net,
    y => concatenate_y_net
  );
  reinterpret1 : entity xil_defaultlib.sysgen_reinterpret_f7e0b72e82 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => reinterpret4_output_port_net_x0,
    output_port => reinterpret1_output_port_net
  );
  reinterpret2 : entity xil_defaultlib.sysgen_reinterpret_317b92931a 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => circ_or_y_net,
    output_port => reinterpret2_output_port_net_x0
  );
  reinterpret3 : entity xil_defaultlib.sysgen_reinterpret_5dc9f217bd 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => reinterpret2_output_port_net,
    output_port => reinterpret3_output_port_net
  );
  reinterpret4 : entity xil_defaultlib.sysgen_reinterpret_317b92931a 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => arm_or_y_net,
    output_port => reinterpret4_output_port_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot4_45/ss/ctrl_split
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_ctrl_split_x6 is
  port (
    bus_in : in std_logic_vector( 32-1 downto 0 );
    msb_out4 : out std_logic_vector( 28-1 downto 0 );
    out3 : out std_logic_vector( 1-1 downto 0 );
    out2 : out std_logic_vector( 2-1 downto 0 );
    lsb_out1 : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_ctrl_split_x6;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_ctrl_split_x6 is 
  signal reinterpret4_output_port_net : std_logic_vector( 28-1 downto 0 );
  signal slice3_y_net : std_logic_vector( 1-1 downto 0 );
  signal reinterpret2_output_port_net : std_logic_vector( 2-1 downto 0 );
  signal slice1_y_net : std_logic_vector( 1-1 downto 0 );
  signal reint1_output_port_net : std_logic_vector( 32-1 downto 0 );
  signal slice2_y_net : std_logic_vector( 2-1 downto 0 );
  signal slice4_y_net : std_logic_vector( 28-1 downto 0 );
begin
  msb_out4 <= reinterpret4_output_port_net;
  out3 <= slice3_y_net;
  out2 <= reinterpret2_output_port_net;
  lsb_out1 <= slice1_y_net;
  reint1_output_port_net <= bus_in;
  reinterpret2 : entity xil_defaultlib.sysgen_reinterpret_5dc9f217bd 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => slice2_y_net,
    output_port => reinterpret2_output_port_net
  );
  reinterpret4 : entity xil_defaultlib.sysgen_reinterpret_f7e0b72e82 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => slice4_y_net,
    output_port => reinterpret4_output_port_net
  );
  slice1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 0,
    new_msb => 0,
    x_width => 32,
    y_width => 1
  )
  port map (
    x => reint1_output_port_net,
    y => slice1_y_net
  );
  slice2 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 1,
    new_msb => 2,
    x_width => 32,
    y_width => 2
  )
  port map (
    x => reint1_output_port_net,
    y => slice2_y_net
  );
  slice3 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 3,
    new_msb => 3,
    x_width => 32,
    y_width => 1
  )
  port map (
    x => reint1_output_port_net,
    y => slice3_y_net
  );
  slice4 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 4,
    new_msb => 31,
    x_width => 32,
    y_width => 28
  )
  port map (
    x => reint1_output_port_net,
    y => slice4_y_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot4_45/ss/status
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_status_x6 is
  port (
    out_reg : in std_logic_vector( 32-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_45_ss_status_user_data_in : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_status_x6;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_status_x6 is 
  signal concat_y_net : std_logic_vector( 32-1 downto 0 );
  signal cast_gw_dout_net : std_logic_vector( 32-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal io_delay_q_net : std_logic_vector( 32-1 downto 0 );
  signal reint1_output_port_net : std_logic_vector( 32-1 downto 0 );
  signal assert_reg_dout_net : std_logic_vector( 32-1 downto 0 );
begin
  concat_y_net <= out_reg;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_45_ss_status_user_data_in <= cast_gw_dout_net;
  clk_net <= clk_1;
  ce_net <= ce_1;
  io_delay : entity xil_defaultlib.sysgen_delay_34e314c510 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d => reint1_output_port_net,
    q => io_delay_q_net
  );
  cast_gw : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 32,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 32,
    latency => 1,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => io_delay_q_net,
    clk => clk_net,
    ce => ce_net,
    dout => cast_gw_dout_net
  );
  assert_reg : entity xil_defaultlib.xlpassthrough 
  generic map (
    din_width => 32,
    dout_width => 32
  )
  port map (
    din => concat_y_net,
    dout => assert_reg_dout_net
  );
  reint1 : entity xil_defaultlib.sysgen_reinterpret_52bb84f12b 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => assert_reg_dout_net,
    output_port => reint1_output_port_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot4_45/ss
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_ss_x7 is
  port (
    din : in std_logic_vector( 32-1 downto 0 );
    we : in std_logic_vector( 1-1 downto 0 );
    trig : in std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_45_ss_ctrl_user_data_out : in std_logic_vector( 32-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    arm_out : out std_logic_vector( 1-1 downto 0 );
    goto_46576682_we1 : out std_logic_vector( 1-1 downto 0 );
    goto_46576682_we4 : out std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_45_ss_bram_addr : out std_logic_vector( 10-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_45_ss_bram_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_45_ss_bram_we : out std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_45_ss_status_user_data_in : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_ss_x7;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_ss_x7 is 
  signal arm_or_y_net : std_logic_vector( 1-1 downto 0 );
  signal concatenate_y_net : std_logic_vector( 32-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc4_sync_net : std_logic_vector( 1-1 downto 0 );
  signal edge_op_y_net_x0 : std_logic_vector( 1-1 downto 0 );
  signal we_choice_y_net : std_logic_vector( 1-1 downto 0 );
  signal logical6_y_net : std_logic_vector( 1-1 downto 0 );
  signal convert_addr_dout_net : std_logic_vector( 10-1 downto 0 );
  signal convert_din1_dout_net : std_logic_vector( 32-1 downto 0 );
  signal convert_we_dout_net : std_logic_vector( 1-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_45_ss_ctrl_user_data_out_net : std_logic_vector( 32-1 downto 0 );
  signal cast_gw_dout_net : std_logic_vector( 32-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal slice2_y_net : std_logic_vector( 10-1 downto 0 );
  signal delay6_q_net : std_logic_vector( 32-1 downto 0 );
  signal concat_y_net : std_logic_vector( 32-1 downto 0 );
  signal data_choice_y_net : std_logic_vector( 32-1 downto 0 );
  signal register6_q_net : std_logic_vector( 1-1 downto 0 );
  signal never_op_net : std_logic_vector( 1-1 downto 0 );
  signal edge_op_y_net_x1 : std_logic_vector( 1-1 downto 0 );
  signal cast_dout_net : std_logic_vector( 32-1 downto 0 );
  signal concatenate_y_net_x0 : std_logic_vector( 32-1 downto 0 );
  signal add_del_q_net : std_logic_vector( 10-1 downto 0 );
  signal dat_del_q_net : std_logic_vector( 32-1 downto 0 );
  signal we_del_q_net : std_logic_vector( 1-1 downto 0 );
  signal reint1_output_port_net : std_logic_vector( 32-1 downto 0 );
  signal reinterpret4_output_port_net : std_logic_vector( 28-1 downto 0 );
  signal circ_or_y_net : std_logic_vector( 1-1 downto 0 );
  signal reinterpret2_output_port_net : std_logic_vector( 2-1 downto 0 );
  signal slice3_y_net : std_logic_vector( 1-1 downto 0 );
  signal slice1_y_net : std_logic_vector( 1-1 downto 0 );
  signal arm_op_net : std_logic_vector( 1-1 downto 0 );
  signal ri_output_port_net : std_logic_vector( 32-1 downto 0 );
  signal circ_op_net : std_logic_vector( 1-1 downto 0 );
begin
  arm_out <= arm_or_y_net;
  concatenate_y_net <= din;
  rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc4_sync_net <= we;
  edge_op_y_net_x0 <= trig;
  goto_46576682_we1 <= we_choice_y_net;
  goto_46576682_we4 <= logical6_y_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_45_ss_bram_addr <= convert_addr_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_45_ss_bram_data_in <= convert_din1_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_45_ss_bram_we <= convert_we_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_45_ss_ctrl_user_data_out_net <= rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_45_ss_ctrl_user_data_out;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_45_ss_status_user_data_in <= cast_gw_dout_net;
  clk_net <= clk_1;
  ce_net <= ce_1;
  add_gen : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_add_gen_x6 
  port map (
    din => data_choice_y_net,
    we => we_choice_y_net,
    go => register6_q_net,
    cont => never_op_net,
    init => edge_op_y_net_x1,
    clk_1 => clk_net,
    ce_1 => ce_net,
    add => slice2_y_net,
    dout => delay6_q_net,
    we_o => logical6_y_net,
    status => concat_y_net
  );
  basic_ctrl : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_basic_ctrl_x6 
  port map (
    din => cast_dout_net,
    we => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc4_sync_net,
    trig => edge_op_y_net_x0,
    ctrl => concatenate_y_net_x0,
    stopi => never_op_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    dout => data_choice_y_net,
    we_o => we_choice_y_net,
    go => register6_q_net,
    init => edge_op_y_net_x1
  );
  bram : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_bram_x6 
  port map (
    addr => add_del_q_net,
    data_in => dat_del_q_net,
    we => we_del_q_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_45_ss_bram_addr => convert_addr_dout_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_45_ss_bram_data_in => convert_din1_dout_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_45_ss_bram_we => convert_we_dout_net
  );
  ctrl : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_ctrl_x6 
  port map (
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_45_ss_ctrl_user_data_out => rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_45_ss_ctrl_user_data_out_net,
    in_reg => reint1_output_port_net
  );
  ctrl_combine : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_ctrl_combine_x6 
  port map (
    in1 => reinterpret4_output_port_net,
    in2 => circ_or_y_net,
    in3 => reinterpret2_output_port_net,
    in4 => arm_or_y_net,
    bus_out => concatenate_y_net_x0
  );
  ctrl_split : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_ctrl_split_x6 
  port map (
    bus_in => reint1_output_port_net,
    msb_out4 => reinterpret4_output_port_net,
    out3 => slice3_y_net,
    out2 => reinterpret2_output_port_net,
    lsb_out1 => slice1_y_net
  );
  status : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_status_x6 
  port map (
    out_reg => concat_y_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_45_ss_status_user_data_in => cast_gw_dout_net
  );
  add_del : entity xil_defaultlib.sysgen_delay_4e9264ffdf 
  port map (
    clr => '0',
    d => slice2_y_net,
    clk => clk_net,
    ce => ce_net,
    q => add_del_q_net
  );
  arm : entity xil_defaultlib.sysgen_constant_a7b8778750 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => arm_op_net
  );
  arm_or : entity xil_defaultlib.sysgen_logical_d7dc12cf31 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => slice1_y_net,
    d1 => arm_op_net,
    y => arm_or_y_net
  );
  cast : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 32,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 32,
    latency => 0,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => ri_output_port_net,
    clk => clk_net,
    ce => ce_net,
    dout => cast_dout_net
  );
  circ : entity xil_defaultlib.sysgen_constant_a7b8778750 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => circ_op_net
  );
  circ_or : entity xil_defaultlib.sysgen_logical_d7dc12cf31 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => slice3_y_net,
    d1 => circ_op_net,
    y => circ_or_y_net
  );
  dat_del : entity xil_defaultlib.sysgen_delay_5ec362a23c 
  port map (
    clr => '0',
    d => delay6_q_net,
    clk => clk_net,
    ce => ce_net,
    q => dat_del_q_net
  );
  never : entity xil_defaultlib.sysgen_constant_a7b8778750 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => never_op_net
  );
  ri : entity xil_defaultlib.sysgen_reinterpret_52bb84f12b 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => concatenate_y_net,
    output_port => ri_output_port_net
  );
  we_del : entity xil_defaultlib.sysgen_delay_e0740ee3f9 
  port map (
    clr => '0',
    d => logical6_y_net,
    clk => clk_net,
    ce => ce_net,
    q => we_del_q_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot4_45
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_45 is
  port (
    in_d0 : in std_logic_vector( 16-1 downto 0 );
    in_d1 : in std_logic_vector( 16-1 downto 0 );
    we : in std_logic_vector( 1-1 downto 0 );
    trig : in std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_45_ss_ctrl_user_data_out : in std_logic_vector( 32-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    arm_out : out std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_45_ss_bram_addr : out std_logic_vector( 10-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_45_ss_bram_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_45_ss_bram_we : out std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_45_ss_status_user_data_in : out std_logic_vector( 32-1 downto 0 );
    goto_46576682_we1 : out std_logic_vector( 1-1 downto 0 );
    goto_46576682_we4 : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_45;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_45 is 
  signal arm_or_y_net : std_logic_vector( 1-1 downto 0 );
  signal slice44_y_net : std_logic_vector( 16-1 downto 0 );
  signal slice59_y_net : std_logic_vector( 16-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc4_sync_net : std_logic_vector( 1-1 downto 0 );
  signal edge_op_y_net : std_logic_vector( 1-1 downto 0 );
  signal convert_addr_dout_net : std_logic_vector( 10-1 downto 0 );
  signal convert_din1_dout_net : std_logic_vector( 32-1 downto 0 );
  signal convert_we_dout_net : std_logic_vector( 1-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_45_ss_ctrl_user_data_out_net : std_logic_vector( 32-1 downto 0 );
  signal cast_gw_dout_net : std_logic_vector( 32-1 downto 0 );
  signal we_choice_y_net : std_logic_vector( 1-1 downto 0 );
  signal logical6_y_net : std_logic_vector( 1-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal concatenate_y_net : std_logic_vector( 32-1 downto 0 );
  signal assert_d0_dout_net : std_logic_vector( 16-1 downto 0 );
  signal assert_d1_dout_net : std_logic_vector( 16-1 downto 0 );
begin
  arm_out <= arm_or_y_net;
  slice44_y_net <= in_d0;
  slice59_y_net <= in_d1;
  rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc4_sync_net <= we;
  edge_op_y_net <= trig;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_45_ss_bram_addr <= convert_addr_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_45_ss_bram_data_in <= convert_din1_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_45_ss_bram_we <= convert_we_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_45_ss_ctrl_user_data_out_net <= rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_45_ss_ctrl_user_data_out;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_45_ss_status_user_data_in <= cast_gw_dout_net;
  goto_46576682_we1 <= we_choice_y_net;
  goto_46576682_we4 <= logical6_y_net;
  clk_net <= clk_1;
  ce_net <= ce_1;
  buscreate : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_buscreate_x6 
  port map (
    in1 => assert_d0_dout_net,
    in2 => assert_d1_dout_net,
    bus_out => concatenate_y_net
  );
  ss : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_ss_x7 
  port map (
    din => concatenate_y_net,
    we => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc4_sync_net,
    trig => edge_op_y_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_45_ss_ctrl_user_data_out => rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_45_ss_ctrl_user_data_out_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    arm_out => arm_or_y_net,
    goto_46576682_we1 => we_choice_y_net,
    goto_46576682_we4 => logical6_y_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_45_ss_bram_addr => convert_addr_dout_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_45_ss_bram_data_in => convert_din1_dout_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_45_ss_bram_we => convert_we_dout_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_45_ss_status_user_data_in => cast_gw_dout_net
  );
  assert_d0 : entity xil_defaultlib.xlpassthrough 
  generic map (
    din_width => 16,
    dout_width => 16
  )
  port map (
    din => slice44_y_net,
    dout => assert_d0_dout_net
  );
  assert_d1 : entity xil_defaultlib.xlpassthrough 
  generic map (
    din_width => 16,
    dout_width => 16
  )
  port map (
    din => slice59_y_net,
    dout => assert_d1_dout_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot4_67/buscreate
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_buscreate_x5 is
  port (
    in1 : in std_logic_vector( 16-1 downto 0 );
    in2 : in std_logic_vector( 16-1 downto 0 );
    bus_out : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_buscreate_x5;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_buscreate_x5 is 
  signal concatenate_y_net : std_logic_vector( 32-1 downto 0 );
  signal assert_d0_dout_net : std_logic_vector( 16-1 downto 0 );
  signal assert_d1_dout_net : std_logic_vector( 16-1 downto 0 );
  signal reinterpret1_output_port_net : std_logic_vector( 16-1 downto 0 );
  signal reinterpret2_output_port_net : std_logic_vector( 16-1 downto 0 );
begin
  bus_out <= concatenate_y_net;
  assert_d0_dout_net <= in1;
  assert_d1_dout_net <= in2;
  concatenate : entity xil_defaultlib.sysgen_concat_37649e01d1 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    in0 => reinterpret1_output_port_net,
    in1 => reinterpret2_output_port_net,
    y => concatenate_y_net
  );
  reinterpret1 : entity xil_defaultlib.sysgen_reinterpret_03c8cdbbc1 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => assert_d0_dout_net,
    output_port => reinterpret1_output_port_net
  );
  reinterpret2 : entity xil_defaultlib.sysgen_reinterpret_03c8cdbbc1 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => assert_d1_dout_net,
    output_port => reinterpret2_output_port_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot4_67/ss/add_gen/edge_detect
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x11 is
  port (
    in_x0 : in std_logic_vector( 1-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    out_x0 : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x11;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x11 is 
  signal edge_op_y_net : std_logic_vector( 1-1 downto 0 );
  signal slice3_y_net : std_logic_vector( 1-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal delay_q_net : std_logic_vector( 1-1 downto 0 );
  signal inverter_op_net : std_logic_vector( 1-1 downto 0 );
begin
  out_x0 <= edge_op_y_net;
  slice3_y_net <= in_x0;
  clk_net <= clk_1;
  ce_net <= ce_1;
  delay : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 1
  )
  port map (
    en => '1',
    rst => '1',
    d => slice3_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay_q_net
  );
  inverter : entity xil_defaultlib.sysgen_inverter_6233897471 
  port map (
    clr => '0',
    ip => slice3_y_net,
    clk => clk_net,
    ce => ce_net,
    op => inverter_op_net
  );
  edge_op : entity xil_defaultlib.sysgen_logical_9cc14fefba 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => inverter_op_net,
    d1 => delay_q_net,
    y => edge_op_y_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot4_67/ss/add_gen
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_add_gen_x5 is
  port (
    din : in std_logic_vector( 32-1 downto 0 );
    we : in std_logic_vector( 1-1 downto 0 );
    go : in std_logic_vector( 1-1 downto 0 );
    cont : in std_logic_vector( 1-1 downto 0 );
    init : in std_logic_vector( 1-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    add : out std_logic_vector( 10-1 downto 0 );
    dout : out std_logic_vector( 32-1 downto 0 );
    we_o : out std_logic_vector( 1-1 downto 0 );
    status : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_add_gen_x5;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_add_gen_x5 is 
  signal slice2_y_net : std_logic_vector( 10-1 downto 0 );
  signal delay6_q_net : std_logic_vector( 32-1 downto 0 );
  signal logical6_y_net : std_logic_vector( 1-1 downto 0 );
  signal concat_y_net : std_logic_vector( 32-1 downto 0 );
  signal data_choice_y_net : std_logic_vector( 32-1 downto 0 );
  signal we_choice_y_net : std_logic_vector( 1-1 downto 0 );
  signal register6_q_net : std_logic_vector( 1-1 downto 0 );
  signal never_op_net : std_logic_vector( 1-1 downto 0 );
  signal edge_op_y_net : std_logic_vector( 1-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal edge_op_y_net_x0 : std_logic_vector( 1-1 downto 0 );
  signal slice3_y_net : std_logic_vector( 1-1 downto 0 );
  signal shift_op_net : std_logic_vector( 19-1 downto 0 );
  signal inverter_op_net : std_logic_vector( 1-1 downto 0 );
  signal delay1_q_net : std_logic_vector( 12-1 downto 0 );
  signal convert_dout_net : std_logic_vector( 19-1 downto 0 );
  signal register5_q_net : std_logic_vector( 1-1 downto 0 );
  signal delay_q_net : std_logic_vector( 1-1 downto 0 );
  signal delay4_q_net : std_logic_vector( 1-1 downto 0 );
  signal slice1_y_net : std_logic_vector( 12-1 downto 0 );
  signal delay3_q_net : std_logic_vector( 1-1 downto 0 );
  signal inverter1_op_net : std_logic_vector( 1-1 downto 0 );
  signal logical1_y_net : std_logic_vector( 1-1 downto 0 );
  signal logical4_y_net : std_logic_vector( 1-1 downto 0 );
  signal add_gen_op_net : std_logic_vector( 13-1 downto 0 );
begin
  add <= slice2_y_net;
  dout <= delay6_q_net;
  we_o <= logical6_y_net;
  status <= concat_y_net;
  data_choice_y_net <= din;
  we_choice_y_net <= we;
  register6_q_net <= go;
  never_op_net <= cont;
  edge_op_y_net <= init;
  clk_net <= clk_1;
  ce_net <= ce_1;
  edge_detect : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x11 
  port map (
    in_x0 => slice3_y_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    out_x0 => edge_op_y_net_x0
  );
  concat : entity xil_defaultlib.sysgen_concat_fc8edfac0e 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    in0 => shift_op_net,
    in1 => inverter_op_net,
    in2 => delay1_q_net,
    y => concat_y_net
  );
  convert : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 1,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 19,
    latency => 0,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => register5_q_net,
    clk => clk_net,
    ce => ce_net,
    dout => convert_dout_net
  );
  delay : entity xil_defaultlib.sysgen_delay_e0740ee3f9 
  port map (
    clr => '0',
    d => delay4_q_net,
    clk => clk_net,
    ce => ce_net,
    q => delay_q_net
  );
  delay1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 12
  )
  port map (
    en => '1',
    rst => '1',
    d => slice1_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay1_q_net
  );
  delay3 : entity xil_defaultlib.sysgen_delay_e0740ee3f9 
  port map (
    clr => '0',
    d => never_op_net,
    clk => clk_net,
    ce => ce_net,
    q => delay3_q_net
  );
  delay4 : entity xil_defaultlib.sysgen_delay_e0740ee3f9 
  port map (
    clr => '0',
    d => edge_op_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay4_q_net
  );
  delay6 : entity xil_defaultlib.sysgen_delay_5ec362a23c 
  port map (
    clr => '0',
    d => data_choice_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay6_q_net
  );
  inverter : entity xil_defaultlib.sysgen_inverter_918b6bc6d0 
  port map (
    clr => '0',
    ip => register5_q_net,
    clk => clk_net,
    ce => ce_net,
    op => inverter_op_net
  );
  inverter1 : entity xil_defaultlib.sysgen_inverter_6233897471 
  port map (
    clr => '0',
    ip => edge_op_y_net_x0,
    clk => clk_net,
    ce => ce_net,
    op => inverter1_op_net
  );
  logical1 : entity xil_defaultlib.sysgen_logical_2486129911 
  port map (
    clr => '0',
    d0 => we_choice_y_net,
    d1 => register6_q_net,
    clk => clk_net,
    ce => ce_net,
    y => logical1_y_net
  );
  logical4 : entity xil_defaultlib.sysgen_logical_d7dc12cf31 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => delay3_q_net,
    d1 => inverter1_op_net,
    y => logical4_y_net
  );
  logical6 : entity xil_defaultlib.sysgen_logical_c05fefc67b 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => register5_q_net,
    d1 => logical4_y_net,
    d2 => logical1_y_net,
    y => logical6_y_net
  );
  register5 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlregister 
  generic map (
    d_width => 1,
    init_value => b"1"
  )
  port map (
    d => delay3_q_net,
    rst => delay_q_net,
    en => edge_op_y_net_x0,
    clk => clk_net,
    ce => ce_net,
    q => register5_q_net
  );
  shift : entity xil_defaultlib.sysgen_shift_5af4fe0a99 
  port map (
    clr => '0',
    ip => convert_dout_net,
    clk => clk_net,
    ce => ce_net,
    op => shift_op_net
  );
  add_gen : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlcounter_free 
  generic map (
    core_name0 => "rfdc_multi_eight_adcs_2048gsps_mts_c_counter_binary_v12_0_i1",
    op_arith => xlUnsigned,
    op_width => 13
  )
  port map (
    clr => '0',
    rst => delay4_q_net,
    en => logical6_y_net,
    clk => clk_net,
    ce => ce_net,
    op => add_gen_op_net
  );
  slice1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 0,
    new_msb => 11,
    x_width => 13,
    y_width => 12
  )
  port map (
    x => add_gen_op_net,
    y => slice1_y_net
  );
  slice2 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 2,
    new_msb => 11,
    x_width => 13,
    y_width => 10
  )
  port map (
    x => add_gen_op_net,
    y => slice2_y_net
  );
  slice3 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 12,
    new_msb => 12,
    x_width => 13,
    y_width => 1
  )
  port map (
    x => add_gen_op_net,
    y => slice3_y_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot4_67/ss/basic_ctrl/dram_munge
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_dram_munge_x5 is
  port (
    din : in std_logic_vector( 32-1 downto 0 );
    we : in std_logic_vector( 1-1 downto 0 );
    init : in std_logic_vector( 1-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    dout : out std_logic_vector( 32-1 downto 0 );
    we_o : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_dram_munge_x5;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_dram_munge_x5 is 
  signal data_choice_y_net : std_logic_vector( 32-1 downto 0 );
  signal we_choice_y_net : std_logic_vector( 1-1 downto 0 );
  signal cast_dout_net : std_logic_vector( 32-1 downto 0 );
  signal mux1_y_net_x0 : std_logic_vector( 1-1 downto 0 );
  signal edge_op_y_net : std_logic_vector( 1-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal concat_y_net : std_logic_vector( 80-1 downto 0 );
  signal constant_op_net : std_logic_vector( 8-1 downto 0 );
  signal register_q_net : std_logic_vector( 32-1 downto 0 );
  signal register1_q_net : std_logic_vector( 32-1 downto 0 );
  signal concat1_y_net : std_logic_vector( 80-1 downto 0 );
  signal register2_q_net : std_logic_vector( 32-1 downto 0 );
  signal register3_q_net : std_logic_vector( 32-1 downto 0 );
  signal delay_q_net : std_logic_vector( 1-1 downto 0 );
  signal logical_y_net : std_logic_vector( 1-1 downto 0 );
  signal delay1_q_net : std_logic_vector( 1-1 downto 0 );
  signal logical1_y_net : std_logic_vector( 1-1 downto 0 );
  signal relational3_op_net : std_logic_vector( 1-1 downto 0 );
  signal mux1_y_net : std_logic_vector( 80-1 downto 0 );
  signal dout_count_op_net : std_logic_vector( 1-1 downto 0 );
  signal relational_op_net : std_logic_vector( 1-1 downto 0 );
  signal relational1_op_net : std_logic_vector( 1-1 downto 0 );
  signal relational2_op_net : std_logic_vector( 1-1 downto 0 );
  signal input_count_op_net : std_logic_vector( 2-1 downto 0 );
  signal con0_op_net : std_logic_vector( 2-1 downto 0 );
  signal con1_op_net : std_logic_vector( 2-1 downto 0 );
  signal con2_op_net : std_logic_vector( 2-1 downto 0 );
  signal con3_op_net : std_logic_vector( 2-1 downto 0 );
  signal dram_op_net : std_logic_vector( 1-1 downto 0 );
begin
  dout <= data_choice_y_net;
  we_o <= we_choice_y_net;
  cast_dout_net <= din;
  mux1_y_net_x0 <= we;
  edge_op_y_net <= init;
  clk_net <= clk_1;
  ce_net <= ce_1;
  concat : entity xil_defaultlib.sysgen_concat_e7487baac7 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    in0 => constant_op_net,
    in1 => register_q_net,
    in2 => constant_op_net,
    in3 => register1_q_net,
    y => concat_y_net
  );
  concat1 : entity xil_defaultlib.sysgen_concat_e7487baac7 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    in0 => constant_op_net,
    in1 => register2_q_net,
    in2 => constant_op_net,
    in3 => register3_q_net,
    y => concat1_y_net
  );
  constant_x0 : entity xil_defaultlib.sysgen_constant_869e31f04d 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => constant_op_net
  );
  delay : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 1
  )
  port map (
    en => '1',
    rst => '1',
    d => logical_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay_q_net
  );
  delay1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 1
  )
  port map (
    en => '1',
    rst => '1',
    d => logical1_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay1_q_net
  );
  logical : entity xil_defaultlib.sysgen_logical_2486129911 
  port map (
    clr => '0',
    d0 => relational3_op_net,
    d1 => mux1_y_net_x0,
    clk => clk_net,
    ce => ce_net,
    y => logical_y_net
  );
  logical1 : entity xil_defaultlib.sysgen_logical_d7dc12cf31 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => logical_y_net,
    d1 => delay_q_net,
    y => logical1_y_net
  );
  mux1 : entity xil_defaultlib.sysgen_mux_71ee2b1026 
  port map (
    clr => '0',
    sel => dout_count_op_net,
    d0 => concat_y_net,
    d1 => concat1_y_net,
    clk => clk_net,
    ce => ce_net,
    y => mux1_y_net
  );
  register_x0 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlregister 
  generic map (
    d_width => 32,
    init_value => b"00000000000000000000000000000000"
  )
  port map (
    rst => "0",
    d => cast_dout_net,
    en => relational_op_net,
    clk => clk_net,
    ce => ce_net,
    q => register_q_net
  );
  register1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlregister 
  generic map (
    d_width => 32,
    init_value => b"00000000000000000000000000000000"
  )
  port map (
    rst => "0",
    d => cast_dout_net,
    en => relational1_op_net,
    clk => clk_net,
    ce => ce_net,
    q => register1_q_net
  );
  register2 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlregister 
  generic map (
    d_width => 32,
    init_value => b"00000000000000000000000000000000"
  )
  port map (
    rst => "0",
    d => cast_dout_net,
    en => relational2_op_net,
    clk => clk_net,
    ce => ce_net,
    q => register2_q_net
  );
  register3 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlregister 
  generic map (
    d_width => 32,
    init_value => b"00000000000000000000000000000000"
  )
  port map (
    rst => "0",
    d => cast_dout_net,
    en => relational3_op_net,
    clk => clk_net,
    ce => ce_net,
    q => register3_q_net
  );
  relational : entity xil_defaultlib.sysgen_relational_e5d6b5eaca 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    a => input_count_op_net,
    b => con0_op_net,
    op => relational_op_net
  );
  relational1 : entity xil_defaultlib.sysgen_relational_e5d6b5eaca 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    a => input_count_op_net,
    b => con1_op_net,
    op => relational1_op_net
  );
  relational2 : entity xil_defaultlib.sysgen_relational_e5d6b5eaca 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    a => input_count_op_net,
    b => con2_op_net,
    op => relational2_op_net
  );
  relational3 : entity xil_defaultlib.sysgen_relational_e5d6b5eaca 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    a => input_count_op_net,
    b => con3_op_net,
    op => relational3_op_net
  );
  con0 : entity xil_defaultlib.sysgen_constant_b58c3a1535 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => con0_op_net
  );
  con1 : entity xil_defaultlib.sysgen_constant_d3f27a6354 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => con1_op_net
  );
  con2 : entity xil_defaultlib.sysgen_constant_2fa4689d4e 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => con2_op_net
  );
  con3 : entity xil_defaultlib.sysgen_constant_31bab66ba6 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => con3_op_net
  );
  data_choice : entity xil_defaultlib.sysgen_mux_d624c1af44 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    sel => dram_op_net,
    d0 => cast_dout_net,
    d1 => mux1_y_net,
    y => data_choice_y_net
  );
  dout_count : entity xil_defaultlib.sysgen_counter_a9c1c293c2 
  port map (
    clr => '0',
    rst => edge_op_y_net,
    en => logical1_y_net,
    clk => clk_net,
    ce => ce_net,
    op => dout_count_op_net
  );
  dram : entity xil_defaultlib.sysgen_constant_a7b8778750 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => dram_op_net
  );
  input_count : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlcounter_free 
  generic map (
    core_name0 => "rfdc_multi_eight_adcs_2048gsps_mts_c_counter_binary_v12_0_i2",
    op_arith => xlUnsigned,
    op_width => 2
  )
  port map (
    clr => '0',
    rst => edge_op_y_net,
    en => mux1_y_net_x0,
    clk => clk_net,
    ce => ce_net,
    op => input_count_op_net
  );
  we_choice : entity xil_defaultlib.sysgen_mux_4874190f11 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    sel => dram_op_net,
    d0 => mux1_y_net_x0,
    d1 => delay1_q_net,
    y => we_choice_y_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot4_67/ss/basic_ctrl/edge_detect
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x12 is
  port (
    in_x0 : in std_logic_vector( 1-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    out_x0 : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x12;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x12 is 
  signal edge_op_y_net : std_logic_vector( 1-1 downto 0 );
  signal delay1_q_net : std_logic_vector( 1-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal delay_q_net : std_logic_vector( 1-1 downto 0 );
  signal inverter_op_net : std_logic_vector( 1-1 downto 0 );
begin
  out_x0 <= edge_op_y_net;
  delay1_q_net <= in_x0;
  clk_net <= clk_1;
  ce_net <= ce_1;
  delay : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 1
  )
  port map (
    en => '1',
    rst => '1',
    d => delay1_q_net,
    clk => clk_net,
    ce => ce_net,
    q => delay_q_net
  );
  inverter : entity xil_defaultlib.sysgen_inverter_6233897471 
  port map (
    clr => '0',
    ip => delay1_q_net,
    clk => clk_net,
    ce => ce_net,
    op => inverter_op_net
  );
  edge_op : entity xil_defaultlib.sysgen_logical_0f1aa1e2d7 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => inverter_op_net,
    d1 => delay_q_net,
    y => edge_op_y_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot4_67/ss/basic_ctrl
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_basic_ctrl_x5 is
  port (
    din : in std_logic_vector( 32-1 downto 0 );
    we : in std_logic_vector( 1-1 downto 0 );
    trig : in std_logic_vector( 1-1 downto 0 );
    ctrl : in std_logic_vector( 32-1 downto 0 );
    stopi : in std_logic_vector( 1-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    dout : out std_logic_vector( 32-1 downto 0 );
    we_o : out std_logic_vector( 1-1 downto 0 );
    go : out std_logic_vector( 1-1 downto 0 );
    init : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_basic_ctrl_x5;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_basic_ctrl_x5 is 
  signal data_choice_y_net : std_logic_vector( 32-1 downto 0 );
  signal we_choice_y_net : std_logic_vector( 1-1 downto 0 );
  signal register6_q_net : std_logic_vector( 1-1 downto 0 );
  signal edge_op_y_net_x0 : std_logic_vector( 1-1 downto 0 );
  signal cast_dout_net : std_logic_vector( 32-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc4_sync_net : std_logic_vector( 1-1 downto 0 );
  signal edge_op_y_net : std_logic_vector( 1-1 downto 0 );
  signal concatenate_y_net : std_logic_vector( 32-1 downto 0 );
  signal never_op_net : std_logic_vector( 1-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal mux1_y_net : std_logic_vector( 1-1 downto 0 );
  signal delay1_q_net : std_logic_vector( 1-1 downto 0 );
  signal constant_op_net : std_logic_vector( 1-1 downto 0 );
  signal constant1_op_net : std_logic_vector( 1-1 downto 0 );
  signal constant2_op_net : std_logic_vector( 1-1 downto 0 );
  signal enable_y_net : std_logic_vector( 1-1 downto 0 );
  signal delay2_q_net : std_logic_vector( 1-1 downto 0 );
  signal trig_src_y_net : std_logic_vector( 1-1 downto 0 );
  signal delay3_q_net : std_logic_vector( 1-1 downto 0 );
  signal valid_src_y_net : std_logic_vector( 1-1 downto 0 );
  signal inverter_op_net : std_logic_vector( 1-1 downto 0 );
  signal logical_y_net : std_logic_vector( 1-1 downto 0 );
  signal mux2_y_net : std_logic_vector( 1-1 downto 0 );
  signal register1_q_net : std_logic_vector( 1-1 downto 0 );
begin
  dout <= data_choice_y_net;
  we_o <= we_choice_y_net;
  go <= register6_q_net;
  init <= edge_op_y_net_x0;
  cast_dout_net <= din;
  rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc4_sync_net <= we;
  edge_op_y_net <= trig;
  concatenate_y_net <= ctrl;
  never_op_net <= stopi;
  clk_net <= clk_1;
  ce_net <= ce_1;
  dram_munge : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_dram_munge_x5 
  port map (
    din => cast_dout_net,
    we => mux1_y_net,
    init => edge_op_y_net_x0,
    clk_1 => clk_net,
    ce_1 => ce_net,
    dout => data_choice_y_net,
    we_o => we_choice_y_net
  );
  edge_detect : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x12 
  port map (
    in_x0 => delay1_q_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    out_x0 => edge_op_y_net_x0
  );
  constant_x0 : entity xil_defaultlib.sysgen_constant_c95a0b5efb 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => constant_op_net
  );
  constant1 : entity xil_defaultlib.sysgen_constant_c95a0b5efb 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => constant1_op_net
  );
  constant2 : entity xil_defaultlib.sysgen_constant_c95a0b5efb 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => constant2_op_net
  );
  delay1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 1
  )
  port map (
    en => '1',
    rst => '1',
    d => enable_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay1_q_net
  );
  delay2 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 1
  )
  port map (
    en => '1',
    rst => '1',
    d => trig_src_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay2_q_net
  );
  delay3 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 1
  )
  port map (
    en => '1',
    rst => '1',
    d => valid_src_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay3_q_net
  );
  inverter : entity xil_defaultlib.sysgen_inverter_6233897471 
  port map (
    clr => '0',
    ip => edge_op_y_net_x0,
    clk => clk_net,
    ce => ce_net,
    op => inverter_op_net
  );
  logical : entity xil_defaultlib.sysgen_logical_d26e5cda59 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => mux2_y_net,
    d1 => inverter_op_net,
    y => logical_y_net
  );
  mux1 : entity xil_defaultlib.sysgen_mux_4874190f11 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    sel => delay3_q_net,
    d0 => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc4_sync_net,
    d1 => constant2_op_net,
    y => mux1_y_net
  );
  mux2 : entity xil_defaultlib.sysgen_mux_4874190f11 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    sel => delay2_q_net,
    d0 => edge_op_y_net,
    d1 => constant1_op_net,
    y => mux2_y_net
  );
  register1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlregister 
  generic map (
    d_width => 1,
    init_value => b"0"
  )
  port map (
    d => constant_op_net,
    rst => logical_y_net,
    en => edge_op_y_net_x0,
    clk => clk_net,
    ce => ce_net,
    q => register1_q_net
  );
  register6 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlregister 
  generic map (
    d_width => 1,
    init_value => b"0"
  )
  port map (
    d => mux2_y_net,
    rst => edge_op_y_net_x0,
    en => register1_q_net,
    clk => clk_net,
    ce => ce_net,
    q => register6_q_net
  );
  enable : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 0,
    new_msb => 0,
    x_width => 32,
    y_width => 1
  )
  port map (
    x => concatenate_y_net,
    y => enable_y_net
  );
  trig_src : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 1,
    new_msb => 1,
    x_width => 32,
    y_width => 1
  )
  port map (
    x => concatenate_y_net,
    y => trig_src_y_net
  );
  valid_src : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 2,
    new_msb => 2,
    x_width => 32,
    y_width => 1
  )
  port map (
    x => concatenate_y_net,
    y => valid_src_y_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot4_67/ss/bram/calc_add
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_calc_add_x5 is
  port (
    in_x0 : in std_logic_vector( 10-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    out_x0 : out std_logic_vector( 10-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_calc_add_x5;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_calc_add_x5 is 
  signal mux_y_net : std_logic_vector( 10-1 downto 0 );
  signal add_del_q_net : std_logic_vector( 10-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal add_sub_s_net : std_logic_vector( 1-1 downto 0 );
  signal const_op_net : std_logic_vector( 1-1 downto 0 );
  signal lsw_y_net : std_logic_vector( 1-1 downto 0 );
  signal concat_y_net : std_logic_vector( 10-1 downto 0 );
  signal msw_y_net : std_logic_vector( 9-1 downto 0 );
  signal convert_addr_dout_net : std_logic_vector( 10-1 downto 0 );
  signal manipulate_op_net : std_logic_vector( 1-1 downto 0 );
begin
  out_x0 <= mux_y_net;
  add_del_q_net <= in_x0;
  clk_net <= clk_1;
  ce_net <= ce_1;
  add_sub : entity xil_defaultlib.sysgen_addsub_fd3b6c715c 
  port map (
    clr => '0',
    a => const_op_net,
    b => lsw_y_net,
    clk => clk_net,
    ce => ce_net,
    s => add_sub_s_net
  );
  concat : entity xil_defaultlib.sysgen_concat_f4b90dfa16 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    in0 => msw_y_net,
    in1 => add_sub_s_net,
    y => concat_y_net
  );
  const : entity xil_defaultlib.sysgen_constant_a7b8778750 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => const_op_net
  );
  convert_addr : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 10,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 10,
    latency => 0,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => add_del_q_net,
    clk => clk_net,
    ce => ce_net,
    dout => convert_addr_dout_net
  );
  lsw : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 0,
    new_msb => 0,
    x_width => 10,
    y_width => 1
  )
  port map (
    x => convert_addr_dout_net,
    y => lsw_y_net
  );
  manipulate : entity xil_defaultlib.sysgen_constant_a7b8778750 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => manipulate_op_net
  );
  msw : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 1,
    new_msb => 9,
    x_width => 10,
    y_width => 9
  )
  port map (
    x => convert_addr_dout_net,
    y => msw_y_net
  );
  mux : entity xil_defaultlib.sysgen_mux_4417594854 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    sel => manipulate_op_net,
    d0 => convert_addr_dout_net,
    d1 => concat_y_net,
    y => mux_y_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot4_67/ss/bram/munge_in
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_munge_in_x5 is
  port (
    din : in std_logic_vector( 32-1 downto 0 );
    dout : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_munge_in_x5;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_munge_in_x5 is 
  signal reinterpret_out_output_port_net : std_logic_vector( 32-1 downto 0 );
  signal dat_del_q_net : std_logic_vector( 32-1 downto 0 );
begin
  dout <= reinterpret_out_output_port_net;
  dat_del_q_net <= din;
  reinterpret_out : entity xil_defaultlib.sysgen_reinterpret_52bb84f12b 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => dat_del_q_net,
    output_port => reinterpret_out_output_port_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot4_67/ss/bram
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_bram_x5 is
  port (
    addr : in std_logic_vector( 10-1 downto 0 );
    data_in : in std_logic_vector( 32-1 downto 0 );
    we : in std_logic_vector( 1-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_67_ss_bram_addr : out std_logic_vector( 10-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_67_ss_bram_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_67_ss_bram_we : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_bram_x5;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_bram_x5 is 
  signal add_del_q_net : std_logic_vector( 10-1 downto 0 );
  signal dat_del_q_net : std_logic_vector( 32-1 downto 0 );
  signal we_del_q_net : std_logic_vector( 1-1 downto 0 );
  signal convert_addr_dout_net : std_logic_vector( 10-1 downto 0 );
  signal convert_din1_dout_net : std_logic_vector( 32-1 downto 0 );
  signal convert_we_dout_net : std_logic_vector( 1-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal mux_y_net : std_logic_vector( 10-1 downto 0 );
  signal reinterpret_out_output_port_net : std_logic_vector( 32-1 downto 0 );
begin
  add_del_q_net <= addr;
  dat_del_q_net <= data_in;
  we_del_q_net <= we;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_67_ss_bram_addr <= convert_addr_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_67_ss_bram_data_in <= convert_din1_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_67_ss_bram_we <= convert_we_dout_net;
  clk_net <= clk_1;
  ce_net <= ce_1;
  calc_add : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_calc_add_x5 
  port map (
    in_x0 => add_del_q_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    out_x0 => mux_y_net
  );
  munge_in : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_munge_in_x5 
  port map (
    din => dat_del_q_net,
    dout => reinterpret_out_output_port_net
  );
  convert_addr : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 10,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 10,
    latency => 0,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => mux_y_net,
    clk => clk_net,
    ce => ce_net,
    dout => convert_addr_dout_net
  );
  convert_din1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 32,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 32,
    latency => 0,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => reinterpret_out_output_port_net,
    clk => clk_net,
    ce => ce_net,
    dout => convert_din1_dout_net
  );
  convert_we : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 1,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 1,
    latency => 0,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => we_del_q_net,
    clk => clk_net,
    ce => ce_net,
    dout => convert_we_dout_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot4_67/ss/ctrl
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_ctrl_x5 is
  port (
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_67_ss_ctrl_user_data_out : in std_logic_vector( 32-1 downto 0 );
    in_reg : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_ctrl_x5;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_ctrl_x5 is 
  signal reint1_output_port_net : std_logic_vector( 32-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_67_ss_ctrl_user_data_out_net : std_logic_vector( 32-1 downto 0 );
  signal io_delay_q_net : std_logic_vector( 32-1 downto 0 );
  signal slice_reg_y_net : std_logic_vector( 32-1 downto 0 );
begin
  in_reg <= reint1_output_port_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_67_ss_ctrl_user_data_out_net <= rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_67_ss_ctrl_user_data_out;
  io_delay : entity xil_defaultlib.sysgen_delay_34e314c510 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d => rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_67_ss_ctrl_user_data_out_net,
    q => io_delay_q_net
  );
  slice_reg : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 0,
    new_msb => 31,
    x_width => 32,
    y_width => 32
  )
  port map (
    x => io_delay_q_net,
    y => slice_reg_y_net
  );
  reint1 : entity xil_defaultlib.sysgen_reinterpret_52bb84f12b 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => slice_reg_y_net,
    output_port => reint1_output_port_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot4_67/ss/ctrl_combine
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_ctrl_combine_x5 is
  port (
    in1 : in std_logic_vector( 28-1 downto 0 );
    in2 : in std_logic_vector( 1-1 downto 0 );
    in3 : in std_logic_vector( 2-1 downto 0 );
    in4 : in std_logic_vector( 1-1 downto 0 );
    bus_out : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_ctrl_combine_x5;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_ctrl_combine_x5 is 
  signal concatenate_y_net : std_logic_vector( 32-1 downto 0 );
  signal reinterpret4_output_port_net_x0 : std_logic_vector( 28-1 downto 0 );
  signal circ_or_y_net : std_logic_vector( 1-1 downto 0 );
  signal reinterpret2_output_port_net : std_logic_vector( 2-1 downto 0 );
  signal arm_or_y_net : std_logic_vector( 1-1 downto 0 );
  signal reinterpret1_output_port_net : std_logic_vector( 28-1 downto 0 );
  signal reinterpret2_output_port_net_x0 : std_logic_vector( 1-1 downto 0 );
  signal reinterpret3_output_port_net : std_logic_vector( 2-1 downto 0 );
  signal reinterpret4_output_port_net : std_logic_vector( 1-1 downto 0 );
begin
  bus_out <= concatenate_y_net;
  reinterpret4_output_port_net_x0 <= in1;
  circ_or_y_net <= in2;
  reinterpret2_output_port_net <= in3;
  arm_or_y_net <= in4;
  concatenate : entity xil_defaultlib.sysgen_concat_8611e618a5 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    in0 => reinterpret1_output_port_net,
    in1 => reinterpret2_output_port_net_x0,
    in2 => reinterpret3_output_port_net,
    in3 => reinterpret4_output_port_net,
    y => concatenate_y_net
  );
  reinterpret1 : entity xil_defaultlib.sysgen_reinterpret_f7e0b72e82 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => reinterpret4_output_port_net_x0,
    output_port => reinterpret1_output_port_net
  );
  reinterpret2 : entity xil_defaultlib.sysgen_reinterpret_317b92931a 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => circ_or_y_net,
    output_port => reinterpret2_output_port_net_x0
  );
  reinterpret3 : entity xil_defaultlib.sysgen_reinterpret_5dc9f217bd 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => reinterpret2_output_port_net,
    output_port => reinterpret3_output_port_net
  );
  reinterpret4 : entity xil_defaultlib.sysgen_reinterpret_317b92931a 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => arm_or_y_net,
    output_port => reinterpret4_output_port_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot4_67/ss/ctrl_split
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_ctrl_split_x5 is
  port (
    bus_in : in std_logic_vector( 32-1 downto 0 );
    msb_out4 : out std_logic_vector( 28-1 downto 0 );
    out3 : out std_logic_vector( 1-1 downto 0 );
    out2 : out std_logic_vector( 2-1 downto 0 );
    lsb_out1 : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_ctrl_split_x5;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_ctrl_split_x5 is 
  signal reinterpret4_output_port_net : std_logic_vector( 28-1 downto 0 );
  signal slice3_y_net : std_logic_vector( 1-1 downto 0 );
  signal reinterpret2_output_port_net : std_logic_vector( 2-1 downto 0 );
  signal slice1_y_net : std_logic_vector( 1-1 downto 0 );
  signal reint1_output_port_net : std_logic_vector( 32-1 downto 0 );
  signal slice2_y_net : std_logic_vector( 2-1 downto 0 );
  signal slice4_y_net : std_logic_vector( 28-1 downto 0 );
begin
  msb_out4 <= reinterpret4_output_port_net;
  out3 <= slice3_y_net;
  out2 <= reinterpret2_output_port_net;
  lsb_out1 <= slice1_y_net;
  reint1_output_port_net <= bus_in;
  reinterpret2 : entity xil_defaultlib.sysgen_reinterpret_5dc9f217bd 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => slice2_y_net,
    output_port => reinterpret2_output_port_net
  );
  reinterpret4 : entity xil_defaultlib.sysgen_reinterpret_f7e0b72e82 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => slice4_y_net,
    output_port => reinterpret4_output_port_net
  );
  slice1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 0,
    new_msb => 0,
    x_width => 32,
    y_width => 1
  )
  port map (
    x => reint1_output_port_net,
    y => slice1_y_net
  );
  slice2 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 1,
    new_msb => 2,
    x_width => 32,
    y_width => 2
  )
  port map (
    x => reint1_output_port_net,
    y => slice2_y_net
  );
  slice3 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 3,
    new_msb => 3,
    x_width => 32,
    y_width => 1
  )
  port map (
    x => reint1_output_port_net,
    y => slice3_y_net
  );
  slice4 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 4,
    new_msb => 31,
    x_width => 32,
    y_width => 28
  )
  port map (
    x => reint1_output_port_net,
    y => slice4_y_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot4_67/ss/status
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_status_x5 is
  port (
    out_reg : in std_logic_vector( 32-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_67_ss_status_user_data_in : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_status_x5;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_status_x5 is 
  signal concat_y_net : std_logic_vector( 32-1 downto 0 );
  signal cast_gw_dout_net : std_logic_vector( 32-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal io_delay_q_net : std_logic_vector( 32-1 downto 0 );
  signal reint1_output_port_net : std_logic_vector( 32-1 downto 0 );
  signal assert_reg_dout_net : std_logic_vector( 32-1 downto 0 );
begin
  concat_y_net <= out_reg;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_67_ss_status_user_data_in <= cast_gw_dout_net;
  clk_net <= clk_1;
  ce_net <= ce_1;
  io_delay : entity xil_defaultlib.sysgen_delay_34e314c510 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d => reint1_output_port_net,
    q => io_delay_q_net
  );
  cast_gw : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 32,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 32,
    latency => 1,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => io_delay_q_net,
    clk => clk_net,
    ce => ce_net,
    dout => cast_gw_dout_net
  );
  assert_reg : entity xil_defaultlib.xlpassthrough 
  generic map (
    din_width => 32,
    dout_width => 32
  )
  port map (
    din => concat_y_net,
    dout => assert_reg_dout_net
  );
  reint1 : entity xil_defaultlib.sysgen_reinterpret_52bb84f12b 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => assert_reg_dout_net,
    output_port => reint1_output_port_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot4_67/ss
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_ss_x6 is
  port (
    din : in std_logic_vector( 32-1 downto 0 );
    we : in std_logic_vector( 1-1 downto 0 );
    trig : in std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_67_ss_ctrl_user_data_out : in std_logic_vector( 32-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    arm_out : out std_logic_vector( 1-1 downto 0 );
    goto_48483306_we1 : out std_logic_vector( 1-1 downto 0 );
    goto_48483306_we4 : out std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_67_ss_bram_addr : out std_logic_vector( 10-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_67_ss_bram_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_67_ss_bram_we : out std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_67_ss_status_user_data_in : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_ss_x6;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_ss_x6 is 
  signal arm_or_y_net : std_logic_vector( 1-1 downto 0 );
  signal concatenate_y_net : std_logic_vector( 32-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc4_sync_net : std_logic_vector( 1-1 downto 0 );
  signal edge_op_y_net_x0 : std_logic_vector( 1-1 downto 0 );
  signal we_choice_y_net : std_logic_vector( 1-1 downto 0 );
  signal logical6_y_net : std_logic_vector( 1-1 downto 0 );
  signal convert_addr_dout_net : std_logic_vector( 10-1 downto 0 );
  signal convert_din1_dout_net : std_logic_vector( 32-1 downto 0 );
  signal convert_we_dout_net : std_logic_vector( 1-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_67_ss_ctrl_user_data_out_net : std_logic_vector( 32-1 downto 0 );
  signal cast_gw_dout_net : std_logic_vector( 32-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal slice2_y_net : std_logic_vector( 10-1 downto 0 );
  signal delay6_q_net : std_logic_vector( 32-1 downto 0 );
  signal concat_y_net : std_logic_vector( 32-1 downto 0 );
  signal data_choice_y_net : std_logic_vector( 32-1 downto 0 );
  signal register6_q_net : std_logic_vector( 1-1 downto 0 );
  signal never_op_net : std_logic_vector( 1-1 downto 0 );
  signal edge_op_y_net_x1 : std_logic_vector( 1-1 downto 0 );
  signal cast_dout_net : std_logic_vector( 32-1 downto 0 );
  signal concatenate_y_net_x0 : std_logic_vector( 32-1 downto 0 );
  signal add_del_q_net : std_logic_vector( 10-1 downto 0 );
  signal dat_del_q_net : std_logic_vector( 32-1 downto 0 );
  signal we_del_q_net : std_logic_vector( 1-1 downto 0 );
  signal reint1_output_port_net : std_logic_vector( 32-1 downto 0 );
  signal reinterpret4_output_port_net : std_logic_vector( 28-1 downto 0 );
  signal circ_or_y_net : std_logic_vector( 1-1 downto 0 );
  signal reinterpret2_output_port_net : std_logic_vector( 2-1 downto 0 );
  signal slice3_y_net : std_logic_vector( 1-1 downto 0 );
  signal slice1_y_net : std_logic_vector( 1-1 downto 0 );
  signal arm_op_net : std_logic_vector( 1-1 downto 0 );
  signal ri_output_port_net : std_logic_vector( 32-1 downto 0 );
  signal circ_op_net : std_logic_vector( 1-1 downto 0 );
begin
  arm_out <= arm_or_y_net;
  concatenate_y_net <= din;
  rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc4_sync_net <= we;
  edge_op_y_net_x0 <= trig;
  goto_48483306_we1 <= we_choice_y_net;
  goto_48483306_we4 <= logical6_y_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_67_ss_bram_addr <= convert_addr_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_67_ss_bram_data_in <= convert_din1_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_67_ss_bram_we <= convert_we_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_67_ss_ctrl_user_data_out_net <= rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_67_ss_ctrl_user_data_out;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_67_ss_status_user_data_in <= cast_gw_dout_net;
  clk_net <= clk_1;
  ce_net <= ce_1;
  add_gen : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_add_gen_x5 
  port map (
    din => data_choice_y_net,
    we => we_choice_y_net,
    go => register6_q_net,
    cont => never_op_net,
    init => edge_op_y_net_x1,
    clk_1 => clk_net,
    ce_1 => ce_net,
    add => slice2_y_net,
    dout => delay6_q_net,
    we_o => logical6_y_net,
    status => concat_y_net
  );
  basic_ctrl : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_basic_ctrl_x5 
  port map (
    din => cast_dout_net,
    we => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc4_sync_net,
    trig => edge_op_y_net_x0,
    ctrl => concatenate_y_net_x0,
    stopi => never_op_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    dout => data_choice_y_net,
    we_o => we_choice_y_net,
    go => register6_q_net,
    init => edge_op_y_net_x1
  );
  bram : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_bram_x5 
  port map (
    addr => add_del_q_net,
    data_in => dat_del_q_net,
    we => we_del_q_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_67_ss_bram_addr => convert_addr_dout_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_67_ss_bram_data_in => convert_din1_dout_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_67_ss_bram_we => convert_we_dout_net
  );
  ctrl : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_ctrl_x5 
  port map (
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_67_ss_ctrl_user_data_out => rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_67_ss_ctrl_user_data_out_net,
    in_reg => reint1_output_port_net
  );
  ctrl_combine : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_ctrl_combine_x5 
  port map (
    in1 => reinterpret4_output_port_net,
    in2 => circ_or_y_net,
    in3 => reinterpret2_output_port_net,
    in4 => arm_or_y_net,
    bus_out => concatenate_y_net_x0
  );
  ctrl_split : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_ctrl_split_x5 
  port map (
    bus_in => reint1_output_port_net,
    msb_out4 => reinterpret4_output_port_net,
    out3 => slice3_y_net,
    out2 => reinterpret2_output_port_net,
    lsb_out1 => slice1_y_net
  );
  status : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_status_x5 
  port map (
    out_reg => concat_y_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_67_ss_status_user_data_in => cast_gw_dout_net
  );
  add_del : entity xil_defaultlib.sysgen_delay_4e9264ffdf 
  port map (
    clr => '0',
    d => slice2_y_net,
    clk => clk_net,
    ce => ce_net,
    q => add_del_q_net
  );
  arm : entity xil_defaultlib.sysgen_constant_a7b8778750 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => arm_op_net
  );
  arm_or : entity xil_defaultlib.sysgen_logical_d7dc12cf31 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => slice1_y_net,
    d1 => arm_op_net,
    y => arm_or_y_net
  );
  cast : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 32,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 32,
    latency => 0,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => ri_output_port_net,
    clk => clk_net,
    ce => ce_net,
    dout => cast_dout_net
  );
  circ : entity xil_defaultlib.sysgen_constant_a7b8778750 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => circ_op_net
  );
  circ_or : entity xil_defaultlib.sysgen_logical_d7dc12cf31 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => slice3_y_net,
    d1 => circ_op_net,
    y => circ_or_y_net
  );
  dat_del : entity xil_defaultlib.sysgen_delay_5ec362a23c 
  port map (
    clr => '0',
    d => delay6_q_net,
    clk => clk_net,
    ce => ce_net,
    q => dat_del_q_net
  );
  never : entity xil_defaultlib.sysgen_constant_a7b8778750 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => never_op_net
  );
  ri : entity xil_defaultlib.sysgen_reinterpret_52bb84f12b 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => concatenate_y_net,
    output_port => ri_output_port_net
  );
  we_del : entity xil_defaultlib.sysgen_delay_e0740ee3f9 
  port map (
    clr => '0',
    d => logical6_y_net,
    clk => clk_net,
    ce => ce_net,
    q => we_del_q_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot4_67
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_67 is
  port (
    in_d0 : in std_logic_vector( 16-1 downto 0 );
    in_d1 : in std_logic_vector( 16-1 downto 0 );
    we : in std_logic_vector( 1-1 downto 0 );
    trig : in std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_67_ss_ctrl_user_data_out : in std_logic_vector( 32-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    arm_out : out std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_67_ss_bram_addr : out std_logic_vector( 10-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_67_ss_bram_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_67_ss_bram_we : out std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_67_ss_status_user_data_in : out std_logic_vector( 32-1 downto 0 );
    goto_48483306_we1 : out std_logic_vector( 1-1 downto 0 );
    goto_48483306_we4 : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_67;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_67 is 
  signal arm_or_y_net : std_logic_vector( 1-1 downto 0 );
  signal slice55_y_net : std_logic_vector( 16-1 downto 0 );
  signal slice58_y_net : std_logic_vector( 16-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc4_sync_net : std_logic_vector( 1-1 downto 0 );
  signal edge_op_y_net : std_logic_vector( 1-1 downto 0 );
  signal convert_addr_dout_net : std_logic_vector( 10-1 downto 0 );
  signal convert_din1_dout_net : std_logic_vector( 32-1 downto 0 );
  signal convert_we_dout_net : std_logic_vector( 1-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_67_ss_ctrl_user_data_out_net : std_logic_vector( 32-1 downto 0 );
  signal cast_gw_dout_net : std_logic_vector( 32-1 downto 0 );
  signal we_choice_y_net : std_logic_vector( 1-1 downto 0 );
  signal logical6_y_net : std_logic_vector( 1-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal concatenate_y_net : std_logic_vector( 32-1 downto 0 );
  signal assert_d0_dout_net : std_logic_vector( 16-1 downto 0 );
  signal assert_d1_dout_net : std_logic_vector( 16-1 downto 0 );
begin
  arm_out <= arm_or_y_net;
  slice55_y_net <= in_d0;
  slice58_y_net <= in_d1;
  rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc4_sync_net <= we;
  edge_op_y_net <= trig;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_67_ss_bram_addr <= convert_addr_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_67_ss_bram_data_in <= convert_din1_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_67_ss_bram_we <= convert_we_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_67_ss_ctrl_user_data_out_net <= rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_67_ss_ctrl_user_data_out;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_67_ss_status_user_data_in <= cast_gw_dout_net;
  goto_48483306_we1 <= we_choice_y_net;
  goto_48483306_we4 <= logical6_y_net;
  clk_net <= clk_1;
  ce_net <= ce_1;
  buscreate : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_buscreate_x5 
  port map (
    in1 => assert_d0_dout_net,
    in2 => assert_d1_dout_net,
    bus_out => concatenate_y_net
  );
  ss : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_ss_x6 
  port map (
    din => concatenate_y_net,
    we => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc4_sync_net,
    trig => edge_op_y_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_67_ss_ctrl_user_data_out => rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_67_ss_ctrl_user_data_out_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    arm_out => arm_or_y_net,
    goto_48483306_we1 => we_choice_y_net,
    goto_48483306_we4 => logical6_y_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_67_ss_bram_addr => convert_addr_dout_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_67_ss_bram_data_in => convert_din1_dout_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_67_ss_bram_we => convert_we_dout_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_67_ss_status_user_data_in => cast_gw_dout_net
  );
  assert_d0 : entity xil_defaultlib.xlpassthrough 
  generic map (
    din_width => 16,
    dout_width => 16
  )
  port map (
    din => slice55_y_net,
    dout => assert_d0_dout_net
  );
  assert_d1 : entity xil_defaultlib.xlpassthrough 
  generic map (
    din_width => 16,
    dout_width => 16
  )
  port map (
    din => slice58_y_net,
    dout => assert_d1_dout_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot5_01/buscreate
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_buscreate_x7 is
  port (
    in1 : in std_logic_vector( 16-1 downto 0 );
    in2 : in std_logic_vector( 16-1 downto 0 );
    bus_out : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_buscreate_x7;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_buscreate_x7 is 
  signal concatenate_y_net : std_logic_vector( 32-1 downto 0 );
  signal assert_d0_dout_net : std_logic_vector( 16-1 downto 0 );
  signal assert_d1_dout_net : std_logic_vector( 16-1 downto 0 );
  signal reinterpret1_output_port_net : std_logic_vector( 16-1 downto 0 );
  signal reinterpret2_output_port_net : std_logic_vector( 16-1 downto 0 );
begin
  bus_out <= concatenate_y_net;
  assert_d0_dout_net <= in1;
  assert_d1_dout_net <= in2;
  concatenate : entity xil_defaultlib.sysgen_concat_37649e01d1 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    in0 => reinterpret1_output_port_net,
    in1 => reinterpret2_output_port_net,
    y => concatenate_y_net
  );
  reinterpret1 : entity xil_defaultlib.sysgen_reinterpret_03c8cdbbc1 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => assert_d0_dout_net,
    output_port => reinterpret1_output_port_net
  );
  reinterpret2 : entity xil_defaultlib.sysgen_reinterpret_03c8cdbbc1 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => assert_d1_dout_net,
    output_port => reinterpret2_output_port_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot5_01/ss/add_gen/edge_detect
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x1 is
  port (
    in_x0 : in std_logic_vector( 1-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    out_x0 : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x1;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x1 is 
  signal edge_op_y_net : std_logic_vector( 1-1 downto 0 );
  signal slice3_y_net : std_logic_vector( 1-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal delay_q_net : std_logic_vector( 1-1 downto 0 );
  signal inverter_op_net : std_logic_vector( 1-1 downto 0 );
begin
  out_x0 <= edge_op_y_net;
  slice3_y_net <= in_x0;
  clk_net <= clk_1;
  ce_net <= ce_1;
  delay : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 1
  )
  port map (
    en => '1',
    rst => '1',
    d => slice3_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay_q_net
  );
  inverter : entity xil_defaultlib.sysgen_inverter_6233897471 
  port map (
    clr => '0',
    ip => slice3_y_net,
    clk => clk_net,
    ce => ce_net,
    op => inverter_op_net
  );
  edge_op : entity xil_defaultlib.sysgen_logical_9cc14fefba 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => inverter_op_net,
    d1 => delay_q_net,
    y => edge_op_y_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot5_01/ss/add_gen
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_add_gen_x0 is
  port (
    din : in std_logic_vector( 32-1 downto 0 );
    we : in std_logic_vector( 1-1 downto 0 );
    go : in std_logic_vector( 1-1 downto 0 );
    cont : in std_logic_vector( 1-1 downto 0 );
    init : in std_logic_vector( 1-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    add : out std_logic_vector( 10-1 downto 0 );
    dout : out std_logic_vector( 32-1 downto 0 );
    we_o : out std_logic_vector( 1-1 downto 0 );
    status : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_add_gen_x0;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_add_gen_x0 is 
  signal slice2_y_net : std_logic_vector( 10-1 downto 0 );
  signal delay6_q_net : std_logic_vector( 32-1 downto 0 );
  signal logical6_y_net : std_logic_vector( 1-1 downto 0 );
  signal concat_y_net : std_logic_vector( 32-1 downto 0 );
  signal data_choice_y_net : std_logic_vector( 32-1 downto 0 );
  signal we_choice_y_net : std_logic_vector( 1-1 downto 0 );
  signal register6_q_net : std_logic_vector( 1-1 downto 0 );
  signal never_op_net : std_logic_vector( 1-1 downto 0 );
  signal edge_op_y_net : std_logic_vector( 1-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal edge_op_y_net_x0 : std_logic_vector( 1-1 downto 0 );
  signal slice3_y_net : std_logic_vector( 1-1 downto 0 );
  signal shift_op_net : std_logic_vector( 19-1 downto 0 );
  signal inverter_op_net : std_logic_vector( 1-1 downto 0 );
  signal delay1_q_net : std_logic_vector( 12-1 downto 0 );
  signal convert_dout_net : std_logic_vector( 19-1 downto 0 );
  signal register5_q_net : std_logic_vector( 1-1 downto 0 );
  signal delay_q_net : std_logic_vector( 1-1 downto 0 );
  signal delay4_q_net : std_logic_vector( 1-1 downto 0 );
  signal slice1_y_net : std_logic_vector( 12-1 downto 0 );
  signal delay3_q_net : std_logic_vector( 1-1 downto 0 );
  signal inverter1_op_net : std_logic_vector( 1-1 downto 0 );
  signal logical1_y_net : std_logic_vector( 1-1 downto 0 );
  signal logical4_y_net : std_logic_vector( 1-1 downto 0 );
  signal add_gen_op_net : std_logic_vector( 13-1 downto 0 );
begin
  add <= slice2_y_net;
  dout <= delay6_q_net;
  we_o <= logical6_y_net;
  status <= concat_y_net;
  data_choice_y_net <= din;
  we_choice_y_net <= we;
  register6_q_net <= go;
  never_op_net <= cont;
  edge_op_y_net <= init;
  clk_net <= clk_1;
  ce_net <= ce_1;
  edge_detect : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x1 
  port map (
    in_x0 => slice3_y_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    out_x0 => edge_op_y_net_x0
  );
  concat : entity xil_defaultlib.sysgen_concat_fc8edfac0e 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    in0 => shift_op_net,
    in1 => inverter_op_net,
    in2 => delay1_q_net,
    y => concat_y_net
  );
  convert : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 1,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 19,
    latency => 0,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => register5_q_net,
    clk => clk_net,
    ce => ce_net,
    dout => convert_dout_net
  );
  delay : entity xil_defaultlib.sysgen_delay_e0740ee3f9 
  port map (
    clr => '0',
    d => delay4_q_net,
    clk => clk_net,
    ce => ce_net,
    q => delay_q_net
  );
  delay1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 12
  )
  port map (
    en => '1',
    rst => '1',
    d => slice1_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay1_q_net
  );
  delay3 : entity xil_defaultlib.sysgen_delay_e0740ee3f9 
  port map (
    clr => '0',
    d => never_op_net,
    clk => clk_net,
    ce => ce_net,
    q => delay3_q_net
  );
  delay4 : entity xil_defaultlib.sysgen_delay_e0740ee3f9 
  port map (
    clr => '0',
    d => edge_op_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay4_q_net
  );
  delay6 : entity xil_defaultlib.sysgen_delay_5ec362a23c 
  port map (
    clr => '0',
    d => data_choice_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay6_q_net
  );
  inverter : entity xil_defaultlib.sysgen_inverter_918b6bc6d0 
  port map (
    clr => '0',
    ip => register5_q_net,
    clk => clk_net,
    ce => ce_net,
    op => inverter_op_net
  );
  inverter1 : entity xil_defaultlib.sysgen_inverter_6233897471 
  port map (
    clr => '0',
    ip => edge_op_y_net_x0,
    clk => clk_net,
    ce => ce_net,
    op => inverter1_op_net
  );
  logical1 : entity xil_defaultlib.sysgen_logical_2486129911 
  port map (
    clr => '0',
    d0 => we_choice_y_net,
    d1 => register6_q_net,
    clk => clk_net,
    ce => ce_net,
    y => logical1_y_net
  );
  logical4 : entity xil_defaultlib.sysgen_logical_d7dc12cf31 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => delay3_q_net,
    d1 => inverter1_op_net,
    y => logical4_y_net
  );
  logical6 : entity xil_defaultlib.sysgen_logical_c05fefc67b 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => register5_q_net,
    d1 => logical4_y_net,
    d2 => logical1_y_net,
    y => logical6_y_net
  );
  register5 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlregister 
  generic map (
    d_width => 1,
    init_value => b"1"
  )
  port map (
    d => delay3_q_net,
    rst => delay_q_net,
    en => edge_op_y_net_x0,
    clk => clk_net,
    ce => ce_net,
    q => register5_q_net
  );
  shift : entity xil_defaultlib.sysgen_shift_5af4fe0a99 
  port map (
    clr => '0',
    ip => convert_dout_net,
    clk => clk_net,
    ce => ce_net,
    op => shift_op_net
  );
  add_gen : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlcounter_free 
  generic map (
    core_name0 => "rfdc_multi_eight_adcs_2048gsps_mts_c_counter_binary_v12_0_i1",
    op_arith => xlUnsigned,
    op_width => 13
  )
  port map (
    clr => '0',
    rst => delay4_q_net,
    en => logical6_y_net,
    clk => clk_net,
    ce => ce_net,
    op => add_gen_op_net
  );
  slice1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 0,
    new_msb => 11,
    x_width => 13,
    y_width => 12
  )
  port map (
    x => add_gen_op_net,
    y => slice1_y_net
  );
  slice2 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 2,
    new_msb => 11,
    x_width => 13,
    y_width => 10
  )
  port map (
    x => add_gen_op_net,
    y => slice2_y_net
  );
  slice3 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 12,
    new_msb => 12,
    x_width => 13,
    y_width => 1
  )
  port map (
    x => add_gen_op_net,
    y => slice3_y_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot5_01/ss/basic_ctrl/dram_munge
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_dram_munge_x0 is
  port (
    din : in std_logic_vector( 32-1 downto 0 );
    we : in std_logic_vector( 1-1 downto 0 );
    init : in std_logic_vector( 1-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    dout : out std_logic_vector( 32-1 downto 0 );
    we_o : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_dram_munge_x0;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_dram_munge_x0 is 
  signal data_choice_y_net : std_logic_vector( 32-1 downto 0 );
  signal we_choice_y_net : std_logic_vector( 1-1 downto 0 );
  signal cast_dout_net : std_logic_vector( 32-1 downto 0 );
  signal mux1_y_net_x0 : std_logic_vector( 1-1 downto 0 );
  signal edge_op_y_net : std_logic_vector( 1-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal concat_y_net : std_logic_vector( 80-1 downto 0 );
  signal constant_op_net : std_logic_vector( 8-1 downto 0 );
  signal register_q_net : std_logic_vector( 32-1 downto 0 );
  signal register1_q_net : std_logic_vector( 32-1 downto 0 );
  signal concat1_y_net : std_logic_vector( 80-1 downto 0 );
  signal register2_q_net : std_logic_vector( 32-1 downto 0 );
  signal register3_q_net : std_logic_vector( 32-1 downto 0 );
  signal delay_q_net : std_logic_vector( 1-1 downto 0 );
  signal logical_y_net : std_logic_vector( 1-1 downto 0 );
  signal delay1_q_net : std_logic_vector( 1-1 downto 0 );
  signal logical1_y_net : std_logic_vector( 1-1 downto 0 );
  signal relational3_op_net : std_logic_vector( 1-1 downto 0 );
  signal mux1_y_net : std_logic_vector( 80-1 downto 0 );
  signal dout_count_op_net : std_logic_vector( 1-1 downto 0 );
  signal relational_op_net : std_logic_vector( 1-1 downto 0 );
  signal relational1_op_net : std_logic_vector( 1-1 downto 0 );
  signal relational2_op_net : std_logic_vector( 1-1 downto 0 );
  signal input_count_op_net : std_logic_vector( 2-1 downto 0 );
  signal con0_op_net : std_logic_vector( 2-1 downto 0 );
  signal con1_op_net : std_logic_vector( 2-1 downto 0 );
  signal con2_op_net : std_logic_vector( 2-1 downto 0 );
  signal con3_op_net : std_logic_vector( 2-1 downto 0 );
  signal dram_op_net : std_logic_vector( 1-1 downto 0 );
begin
  dout <= data_choice_y_net;
  we_o <= we_choice_y_net;
  cast_dout_net <= din;
  mux1_y_net_x0 <= we;
  edge_op_y_net <= init;
  clk_net <= clk_1;
  ce_net <= ce_1;
  concat : entity xil_defaultlib.sysgen_concat_e7487baac7 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    in0 => constant_op_net,
    in1 => register_q_net,
    in2 => constant_op_net,
    in3 => register1_q_net,
    y => concat_y_net
  );
  concat1 : entity xil_defaultlib.sysgen_concat_e7487baac7 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    in0 => constant_op_net,
    in1 => register2_q_net,
    in2 => constant_op_net,
    in3 => register3_q_net,
    y => concat1_y_net
  );
  constant_x0 : entity xil_defaultlib.sysgen_constant_869e31f04d 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => constant_op_net
  );
  delay : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 1
  )
  port map (
    en => '1',
    rst => '1',
    d => logical_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay_q_net
  );
  delay1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 1
  )
  port map (
    en => '1',
    rst => '1',
    d => logical1_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay1_q_net
  );
  logical : entity xil_defaultlib.sysgen_logical_2486129911 
  port map (
    clr => '0',
    d0 => relational3_op_net,
    d1 => mux1_y_net_x0,
    clk => clk_net,
    ce => ce_net,
    y => logical_y_net
  );
  logical1 : entity xil_defaultlib.sysgen_logical_d7dc12cf31 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => logical_y_net,
    d1 => delay_q_net,
    y => logical1_y_net
  );
  mux1 : entity xil_defaultlib.sysgen_mux_71ee2b1026 
  port map (
    clr => '0',
    sel => dout_count_op_net,
    d0 => concat_y_net,
    d1 => concat1_y_net,
    clk => clk_net,
    ce => ce_net,
    y => mux1_y_net
  );
  register_x0 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlregister 
  generic map (
    d_width => 32,
    init_value => b"00000000000000000000000000000000"
  )
  port map (
    rst => "0",
    d => cast_dout_net,
    en => relational_op_net,
    clk => clk_net,
    ce => ce_net,
    q => register_q_net
  );
  register1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlregister 
  generic map (
    d_width => 32,
    init_value => b"00000000000000000000000000000000"
  )
  port map (
    rst => "0",
    d => cast_dout_net,
    en => relational1_op_net,
    clk => clk_net,
    ce => ce_net,
    q => register1_q_net
  );
  register2 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlregister 
  generic map (
    d_width => 32,
    init_value => b"00000000000000000000000000000000"
  )
  port map (
    rst => "0",
    d => cast_dout_net,
    en => relational2_op_net,
    clk => clk_net,
    ce => ce_net,
    q => register2_q_net
  );
  register3 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlregister 
  generic map (
    d_width => 32,
    init_value => b"00000000000000000000000000000000"
  )
  port map (
    rst => "0",
    d => cast_dout_net,
    en => relational3_op_net,
    clk => clk_net,
    ce => ce_net,
    q => register3_q_net
  );
  relational : entity xil_defaultlib.sysgen_relational_e5d6b5eaca 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    a => input_count_op_net,
    b => con0_op_net,
    op => relational_op_net
  );
  relational1 : entity xil_defaultlib.sysgen_relational_e5d6b5eaca 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    a => input_count_op_net,
    b => con1_op_net,
    op => relational1_op_net
  );
  relational2 : entity xil_defaultlib.sysgen_relational_e5d6b5eaca 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    a => input_count_op_net,
    b => con2_op_net,
    op => relational2_op_net
  );
  relational3 : entity xil_defaultlib.sysgen_relational_e5d6b5eaca 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    a => input_count_op_net,
    b => con3_op_net,
    op => relational3_op_net
  );
  con0 : entity xil_defaultlib.sysgen_constant_b58c3a1535 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => con0_op_net
  );
  con1 : entity xil_defaultlib.sysgen_constant_d3f27a6354 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => con1_op_net
  );
  con2 : entity xil_defaultlib.sysgen_constant_2fa4689d4e 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => con2_op_net
  );
  con3 : entity xil_defaultlib.sysgen_constant_31bab66ba6 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => con3_op_net
  );
  data_choice : entity xil_defaultlib.sysgen_mux_d624c1af44 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    sel => dram_op_net,
    d0 => cast_dout_net,
    d1 => mux1_y_net,
    y => data_choice_y_net
  );
  dout_count : entity xil_defaultlib.sysgen_counter_a9c1c293c2 
  port map (
    clr => '0',
    rst => edge_op_y_net,
    en => logical1_y_net,
    clk => clk_net,
    ce => ce_net,
    op => dout_count_op_net
  );
  dram : entity xil_defaultlib.sysgen_constant_a7b8778750 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => dram_op_net
  );
  input_count : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlcounter_free 
  generic map (
    core_name0 => "rfdc_multi_eight_adcs_2048gsps_mts_c_counter_binary_v12_0_i2",
    op_arith => xlUnsigned,
    op_width => 2
  )
  port map (
    clr => '0',
    rst => edge_op_y_net,
    en => mux1_y_net_x0,
    clk => clk_net,
    ce => ce_net,
    op => input_count_op_net
  );
  we_choice : entity xil_defaultlib.sysgen_mux_4874190f11 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    sel => dram_op_net,
    d0 => mux1_y_net_x0,
    d1 => delay1_q_net,
    y => we_choice_y_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot5_01/ss/basic_ctrl/edge_detect
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x2 is
  port (
    in_x0 : in std_logic_vector( 1-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    out_x0 : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x2;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x2 is 
  signal edge_op_y_net : std_logic_vector( 1-1 downto 0 );
  signal delay1_q_net : std_logic_vector( 1-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal delay_q_net : std_logic_vector( 1-1 downto 0 );
  signal inverter_op_net : std_logic_vector( 1-1 downto 0 );
begin
  out_x0 <= edge_op_y_net;
  delay1_q_net <= in_x0;
  clk_net <= clk_1;
  ce_net <= ce_1;
  delay : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 1
  )
  port map (
    en => '1',
    rst => '1',
    d => delay1_q_net,
    clk => clk_net,
    ce => ce_net,
    q => delay_q_net
  );
  inverter : entity xil_defaultlib.sysgen_inverter_6233897471 
  port map (
    clr => '0',
    ip => delay1_q_net,
    clk => clk_net,
    ce => ce_net,
    op => inverter_op_net
  );
  edge_op : entity xil_defaultlib.sysgen_logical_0f1aa1e2d7 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => inverter_op_net,
    d1 => delay_q_net,
    y => edge_op_y_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot5_01/ss/basic_ctrl
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_basic_ctrl_x0 is
  port (
    din : in std_logic_vector( 32-1 downto 0 );
    we : in std_logic_vector( 1-1 downto 0 );
    trig : in std_logic_vector( 1-1 downto 0 );
    ctrl : in std_logic_vector( 32-1 downto 0 );
    stopi : in std_logic_vector( 1-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    dout : out std_logic_vector( 32-1 downto 0 );
    we_o : out std_logic_vector( 1-1 downto 0 );
    go : out std_logic_vector( 1-1 downto 0 );
    init : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_basic_ctrl_x0;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_basic_ctrl_x0 is 
  signal data_choice_y_net : std_logic_vector( 32-1 downto 0 );
  signal we_choice_y_net : std_logic_vector( 1-1 downto 0 );
  signal register6_q_net : std_logic_vector( 1-1 downto 0 );
  signal edge_op_y_net_x0 : std_logic_vector( 1-1 downto 0 );
  signal cast_dout_net : std_logic_vector( 32-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc5_sync_net : std_logic_vector( 1-1 downto 0 );
  signal edge_op_y_net : std_logic_vector( 1-1 downto 0 );
  signal concatenate_y_net : std_logic_vector( 32-1 downto 0 );
  signal never_op_net : std_logic_vector( 1-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal mux1_y_net : std_logic_vector( 1-1 downto 0 );
  signal delay1_q_net : std_logic_vector( 1-1 downto 0 );
  signal constant_op_net : std_logic_vector( 1-1 downto 0 );
  signal constant1_op_net : std_logic_vector( 1-1 downto 0 );
  signal constant2_op_net : std_logic_vector( 1-1 downto 0 );
  signal enable_y_net : std_logic_vector( 1-1 downto 0 );
  signal delay2_q_net : std_logic_vector( 1-1 downto 0 );
  signal trig_src_y_net : std_logic_vector( 1-1 downto 0 );
  signal delay3_q_net : std_logic_vector( 1-1 downto 0 );
  signal valid_src_y_net : std_logic_vector( 1-1 downto 0 );
  signal inverter_op_net : std_logic_vector( 1-1 downto 0 );
  signal logical_y_net : std_logic_vector( 1-1 downto 0 );
  signal mux2_y_net : std_logic_vector( 1-1 downto 0 );
  signal register1_q_net : std_logic_vector( 1-1 downto 0 );
begin
  dout <= data_choice_y_net;
  we_o <= we_choice_y_net;
  go <= register6_q_net;
  init <= edge_op_y_net_x0;
  cast_dout_net <= din;
  rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc5_sync_net <= we;
  edge_op_y_net <= trig;
  concatenate_y_net <= ctrl;
  never_op_net <= stopi;
  clk_net <= clk_1;
  ce_net <= ce_1;
  dram_munge : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_dram_munge_x0 
  port map (
    din => cast_dout_net,
    we => mux1_y_net,
    init => edge_op_y_net_x0,
    clk_1 => clk_net,
    ce_1 => ce_net,
    dout => data_choice_y_net,
    we_o => we_choice_y_net
  );
  edge_detect : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x2 
  port map (
    in_x0 => delay1_q_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    out_x0 => edge_op_y_net_x0
  );
  constant_x0 : entity xil_defaultlib.sysgen_constant_c95a0b5efb 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => constant_op_net
  );
  constant1 : entity xil_defaultlib.sysgen_constant_c95a0b5efb 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => constant1_op_net
  );
  constant2 : entity xil_defaultlib.sysgen_constant_c95a0b5efb 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => constant2_op_net
  );
  delay1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 1
  )
  port map (
    en => '1',
    rst => '1',
    d => enable_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay1_q_net
  );
  delay2 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 1
  )
  port map (
    en => '1',
    rst => '1',
    d => trig_src_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay2_q_net
  );
  delay3 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 1
  )
  port map (
    en => '1',
    rst => '1',
    d => valid_src_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay3_q_net
  );
  inverter : entity xil_defaultlib.sysgen_inverter_6233897471 
  port map (
    clr => '0',
    ip => edge_op_y_net_x0,
    clk => clk_net,
    ce => ce_net,
    op => inverter_op_net
  );
  logical : entity xil_defaultlib.sysgen_logical_d26e5cda59 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => mux2_y_net,
    d1 => inverter_op_net,
    y => logical_y_net
  );
  mux1 : entity xil_defaultlib.sysgen_mux_4874190f11 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    sel => delay3_q_net,
    d0 => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc5_sync_net,
    d1 => constant2_op_net,
    y => mux1_y_net
  );
  mux2 : entity xil_defaultlib.sysgen_mux_4874190f11 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    sel => delay2_q_net,
    d0 => edge_op_y_net,
    d1 => constant1_op_net,
    y => mux2_y_net
  );
  register1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlregister 
  generic map (
    d_width => 1,
    init_value => b"0"
  )
  port map (
    d => constant_op_net,
    rst => logical_y_net,
    en => edge_op_y_net_x0,
    clk => clk_net,
    ce => ce_net,
    q => register1_q_net
  );
  register6 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlregister 
  generic map (
    d_width => 1,
    init_value => b"0"
  )
  port map (
    d => mux2_y_net,
    rst => edge_op_y_net_x0,
    en => register1_q_net,
    clk => clk_net,
    ce => ce_net,
    q => register6_q_net
  );
  enable : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 0,
    new_msb => 0,
    x_width => 32,
    y_width => 1
  )
  port map (
    x => concatenate_y_net,
    y => enable_y_net
  );
  trig_src : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 1,
    new_msb => 1,
    x_width => 32,
    y_width => 1
  )
  port map (
    x => concatenate_y_net,
    y => trig_src_y_net
  );
  valid_src : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 2,
    new_msb => 2,
    x_width => 32,
    y_width => 1
  )
  port map (
    x => concatenate_y_net,
    y => valid_src_y_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot5_01/ss/bram/calc_add
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_calc_add_x0 is
  port (
    in_x0 : in std_logic_vector( 10-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    out_x0 : out std_logic_vector( 10-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_calc_add_x0;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_calc_add_x0 is 
  signal mux_y_net : std_logic_vector( 10-1 downto 0 );
  signal add_del_q_net : std_logic_vector( 10-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal add_sub_s_net : std_logic_vector( 1-1 downto 0 );
  signal const_op_net : std_logic_vector( 1-1 downto 0 );
  signal lsw_y_net : std_logic_vector( 1-1 downto 0 );
  signal concat_y_net : std_logic_vector( 10-1 downto 0 );
  signal msw_y_net : std_logic_vector( 9-1 downto 0 );
  signal convert_addr_dout_net : std_logic_vector( 10-1 downto 0 );
  signal manipulate_op_net : std_logic_vector( 1-1 downto 0 );
begin
  out_x0 <= mux_y_net;
  add_del_q_net <= in_x0;
  clk_net <= clk_1;
  ce_net <= ce_1;
  add_sub : entity xil_defaultlib.sysgen_addsub_fd3b6c715c 
  port map (
    clr => '0',
    a => const_op_net,
    b => lsw_y_net,
    clk => clk_net,
    ce => ce_net,
    s => add_sub_s_net
  );
  concat : entity xil_defaultlib.sysgen_concat_f4b90dfa16 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    in0 => msw_y_net,
    in1 => add_sub_s_net,
    y => concat_y_net
  );
  const : entity xil_defaultlib.sysgen_constant_a7b8778750 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => const_op_net
  );
  convert_addr : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 10,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 10,
    latency => 0,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => add_del_q_net,
    clk => clk_net,
    ce => ce_net,
    dout => convert_addr_dout_net
  );
  lsw : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 0,
    new_msb => 0,
    x_width => 10,
    y_width => 1
  )
  port map (
    x => convert_addr_dout_net,
    y => lsw_y_net
  );
  manipulate : entity xil_defaultlib.sysgen_constant_a7b8778750 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => manipulate_op_net
  );
  msw : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 1,
    new_msb => 9,
    x_width => 10,
    y_width => 9
  )
  port map (
    x => convert_addr_dout_net,
    y => msw_y_net
  );
  mux : entity xil_defaultlib.sysgen_mux_4417594854 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    sel => manipulate_op_net,
    d0 => convert_addr_dout_net,
    d1 => concat_y_net,
    y => mux_y_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot5_01/ss/bram/munge_in
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_munge_in_x0 is
  port (
    din : in std_logic_vector( 32-1 downto 0 );
    dout : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_munge_in_x0;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_munge_in_x0 is 
  signal reinterpret_out_output_port_net : std_logic_vector( 32-1 downto 0 );
  signal dat_del_q_net : std_logic_vector( 32-1 downto 0 );
begin
  dout <= reinterpret_out_output_port_net;
  dat_del_q_net <= din;
  reinterpret_out : entity xil_defaultlib.sysgen_reinterpret_52bb84f12b 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => dat_del_q_net,
    output_port => reinterpret_out_output_port_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot5_01/ss/bram
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_bram_x0 is
  port (
    addr : in std_logic_vector( 10-1 downto 0 );
    data_in : in std_logic_vector( 32-1 downto 0 );
    we : in std_logic_vector( 1-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_01_ss_bram_addr : out std_logic_vector( 10-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_01_ss_bram_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_01_ss_bram_we : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_bram_x0;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_bram_x0 is 
  signal add_del_q_net : std_logic_vector( 10-1 downto 0 );
  signal dat_del_q_net : std_logic_vector( 32-1 downto 0 );
  signal we_del_q_net : std_logic_vector( 1-1 downto 0 );
  signal convert_addr_dout_net : std_logic_vector( 10-1 downto 0 );
  signal convert_din1_dout_net : std_logic_vector( 32-1 downto 0 );
  signal convert_we_dout_net : std_logic_vector( 1-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal mux_y_net : std_logic_vector( 10-1 downto 0 );
  signal reinterpret_out_output_port_net : std_logic_vector( 32-1 downto 0 );
begin
  add_del_q_net <= addr;
  dat_del_q_net <= data_in;
  we_del_q_net <= we;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_01_ss_bram_addr <= convert_addr_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_01_ss_bram_data_in <= convert_din1_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_01_ss_bram_we <= convert_we_dout_net;
  clk_net <= clk_1;
  ce_net <= ce_1;
  calc_add : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_calc_add_x0 
  port map (
    in_x0 => add_del_q_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    out_x0 => mux_y_net
  );
  munge_in : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_munge_in_x0 
  port map (
    din => dat_del_q_net,
    dout => reinterpret_out_output_port_net
  );
  convert_addr : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 10,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 10,
    latency => 0,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => mux_y_net,
    clk => clk_net,
    ce => ce_net,
    dout => convert_addr_dout_net
  );
  convert_din1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 32,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 32,
    latency => 0,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => reinterpret_out_output_port_net,
    clk => clk_net,
    ce => ce_net,
    dout => convert_din1_dout_net
  );
  convert_we : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 1,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 1,
    latency => 0,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => we_del_q_net,
    clk => clk_net,
    ce => ce_net,
    dout => convert_we_dout_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot5_01/ss/ctrl
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_ctrl_x0 is
  port (
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_01_ss_ctrl_user_data_out : in std_logic_vector( 32-1 downto 0 );
    in_reg : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_ctrl_x0;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_ctrl_x0 is 
  signal reint1_output_port_net : std_logic_vector( 32-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_01_ss_ctrl_user_data_out_net : std_logic_vector( 32-1 downto 0 );
  signal io_delay_q_net : std_logic_vector( 32-1 downto 0 );
  signal slice_reg_y_net : std_logic_vector( 32-1 downto 0 );
begin
  in_reg <= reint1_output_port_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_01_ss_ctrl_user_data_out_net <= rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_01_ss_ctrl_user_data_out;
  io_delay : entity xil_defaultlib.sysgen_delay_34e314c510 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d => rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_01_ss_ctrl_user_data_out_net,
    q => io_delay_q_net
  );
  slice_reg : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 0,
    new_msb => 31,
    x_width => 32,
    y_width => 32
  )
  port map (
    x => io_delay_q_net,
    y => slice_reg_y_net
  );
  reint1 : entity xil_defaultlib.sysgen_reinterpret_52bb84f12b 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => slice_reg_y_net,
    output_port => reint1_output_port_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot5_01/ss/ctrl_combine
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_ctrl_combine_x0 is
  port (
    in1 : in std_logic_vector( 28-1 downto 0 );
    in2 : in std_logic_vector( 1-1 downto 0 );
    in3 : in std_logic_vector( 2-1 downto 0 );
    in4 : in std_logic_vector( 1-1 downto 0 );
    bus_out : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_ctrl_combine_x0;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_ctrl_combine_x0 is 
  signal concatenate_y_net : std_logic_vector( 32-1 downto 0 );
  signal reinterpret4_output_port_net_x0 : std_logic_vector( 28-1 downto 0 );
  signal circ_or_y_net : std_logic_vector( 1-1 downto 0 );
  signal reinterpret2_output_port_net : std_logic_vector( 2-1 downto 0 );
  signal arm_or_y_net : std_logic_vector( 1-1 downto 0 );
  signal reinterpret1_output_port_net : std_logic_vector( 28-1 downto 0 );
  signal reinterpret2_output_port_net_x0 : std_logic_vector( 1-1 downto 0 );
  signal reinterpret3_output_port_net : std_logic_vector( 2-1 downto 0 );
  signal reinterpret4_output_port_net : std_logic_vector( 1-1 downto 0 );
begin
  bus_out <= concatenate_y_net;
  reinterpret4_output_port_net_x0 <= in1;
  circ_or_y_net <= in2;
  reinterpret2_output_port_net <= in3;
  arm_or_y_net <= in4;
  concatenate : entity xil_defaultlib.sysgen_concat_8611e618a5 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    in0 => reinterpret1_output_port_net,
    in1 => reinterpret2_output_port_net_x0,
    in2 => reinterpret3_output_port_net,
    in3 => reinterpret4_output_port_net,
    y => concatenate_y_net
  );
  reinterpret1 : entity xil_defaultlib.sysgen_reinterpret_f7e0b72e82 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => reinterpret4_output_port_net_x0,
    output_port => reinterpret1_output_port_net
  );
  reinterpret2 : entity xil_defaultlib.sysgen_reinterpret_317b92931a 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => circ_or_y_net,
    output_port => reinterpret2_output_port_net_x0
  );
  reinterpret3 : entity xil_defaultlib.sysgen_reinterpret_5dc9f217bd 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => reinterpret2_output_port_net,
    output_port => reinterpret3_output_port_net
  );
  reinterpret4 : entity xil_defaultlib.sysgen_reinterpret_317b92931a 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => arm_or_y_net,
    output_port => reinterpret4_output_port_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot5_01/ss/ctrl_split
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_ctrl_split_x0 is
  port (
    bus_in : in std_logic_vector( 32-1 downto 0 );
    msb_out4 : out std_logic_vector( 28-1 downto 0 );
    out3 : out std_logic_vector( 1-1 downto 0 );
    out2 : out std_logic_vector( 2-1 downto 0 );
    lsb_out1 : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_ctrl_split_x0;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_ctrl_split_x0 is 
  signal reinterpret4_output_port_net : std_logic_vector( 28-1 downto 0 );
  signal slice3_y_net : std_logic_vector( 1-1 downto 0 );
  signal reinterpret2_output_port_net : std_logic_vector( 2-1 downto 0 );
  signal slice1_y_net : std_logic_vector( 1-1 downto 0 );
  signal reint1_output_port_net : std_logic_vector( 32-1 downto 0 );
  signal slice2_y_net : std_logic_vector( 2-1 downto 0 );
  signal slice4_y_net : std_logic_vector( 28-1 downto 0 );
begin
  msb_out4 <= reinterpret4_output_port_net;
  out3 <= slice3_y_net;
  out2 <= reinterpret2_output_port_net;
  lsb_out1 <= slice1_y_net;
  reint1_output_port_net <= bus_in;
  reinterpret2 : entity xil_defaultlib.sysgen_reinterpret_5dc9f217bd 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => slice2_y_net,
    output_port => reinterpret2_output_port_net
  );
  reinterpret4 : entity xil_defaultlib.sysgen_reinterpret_f7e0b72e82 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => slice4_y_net,
    output_port => reinterpret4_output_port_net
  );
  slice1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 0,
    new_msb => 0,
    x_width => 32,
    y_width => 1
  )
  port map (
    x => reint1_output_port_net,
    y => slice1_y_net
  );
  slice2 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 1,
    new_msb => 2,
    x_width => 32,
    y_width => 2
  )
  port map (
    x => reint1_output_port_net,
    y => slice2_y_net
  );
  slice3 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 3,
    new_msb => 3,
    x_width => 32,
    y_width => 1
  )
  port map (
    x => reint1_output_port_net,
    y => slice3_y_net
  );
  slice4 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 4,
    new_msb => 31,
    x_width => 32,
    y_width => 28
  )
  port map (
    x => reint1_output_port_net,
    y => slice4_y_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot5_01/ss/status
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_status_x0 is
  port (
    out_reg : in std_logic_vector( 32-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_01_ss_status_user_data_in : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_status_x0;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_status_x0 is 
  signal concat_y_net : std_logic_vector( 32-1 downto 0 );
  signal cast_gw_dout_net : std_logic_vector( 32-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal io_delay_q_net : std_logic_vector( 32-1 downto 0 );
  signal reint1_output_port_net : std_logic_vector( 32-1 downto 0 );
  signal assert_reg_dout_net : std_logic_vector( 32-1 downto 0 );
begin
  concat_y_net <= out_reg;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_01_ss_status_user_data_in <= cast_gw_dout_net;
  clk_net <= clk_1;
  ce_net <= ce_1;
  io_delay : entity xil_defaultlib.sysgen_delay_34e314c510 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d => reint1_output_port_net,
    q => io_delay_q_net
  );
  cast_gw : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 32,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 32,
    latency => 1,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => io_delay_q_net,
    clk => clk_net,
    ce => ce_net,
    dout => cast_gw_dout_net
  );
  assert_reg : entity xil_defaultlib.xlpassthrough 
  generic map (
    din_width => 32,
    dout_width => 32
  )
  port map (
    din => concat_y_net,
    dout => assert_reg_dout_net
  );
  reint1 : entity xil_defaultlib.sysgen_reinterpret_52bb84f12b 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => assert_reg_dout_net,
    output_port => reint1_output_port_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot5_01/ss
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_ss_x0 is
  port (
    din : in std_logic_vector( 32-1 downto 0 );
    we : in std_logic_vector( 1-1 downto 0 );
    trig : in std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_01_ss_ctrl_user_data_out : in std_logic_vector( 32-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    arm_out : out std_logic_vector( 1-1 downto 0 );
    goto_124960747_we1 : out std_logic_vector( 1-1 downto 0 );
    goto_124960747_we4 : out std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_01_ss_bram_addr : out std_logic_vector( 10-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_01_ss_bram_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_01_ss_bram_we : out std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_01_ss_status_user_data_in : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_ss_x0;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_ss_x0 is 
  signal arm_or_y_net : std_logic_vector( 1-1 downto 0 );
  signal concatenate_y_net : std_logic_vector( 32-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc5_sync_net : std_logic_vector( 1-1 downto 0 );
  signal edge_op_y_net_x0 : std_logic_vector( 1-1 downto 0 );
  signal we_choice_y_net : std_logic_vector( 1-1 downto 0 );
  signal logical6_y_net : std_logic_vector( 1-1 downto 0 );
  signal convert_addr_dout_net : std_logic_vector( 10-1 downto 0 );
  signal convert_din1_dout_net : std_logic_vector( 32-1 downto 0 );
  signal convert_we_dout_net : std_logic_vector( 1-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_01_ss_ctrl_user_data_out_net : std_logic_vector( 32-1 downto 0 );
  signal cast_gw_dout_net : std_logic_vector( 32-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal slice2_y_net : std_logic_vector( 10-1 downto 0 );
  signal delay6_q_net : std_logic_vector( 32-1 downto 0 );
  signal concat_y_net : std_logic_vector( 32-1 downto 0 );
  signal data_choice_y_net : std_logic_vector( 32-1 downto 0 );
  signal register6_q_net : std_logic_vector( 1-1 downto 0 );
  signal never_op_net : std_logic_vector( 1-1 downto 0 );
  signal edge_op_y_net_x1 : std_logic_vector( 1-1 downto 0 );
  signal cast_dout_net : std_logic_vector( 32-1 downto 0 );
  signal concatenate_y_net_x0 : std_logic_vector( 32-1 downto 0 );
  signal add_del_q_net : std_logic_vector( 10-1 downto 0 );
  signal dat_del_q_net : std_logic_vector( 32-1 downto 0 );
  signal we_del_q_net : std_logic_vector( 1-1 downto 0 );
  signal reint1_output_port_net : std_logic_vector( 32-1 downto 0 );
  signal reinterpret4_output_port_net : std_logic_vector( 28-1 downto 0 );
  signal circ_or_y_net : std_logic_vector( 1-1 downto 0 );
  signal reinterpret2_output_port_net : std_logic_vector( 2-1 downto 0 );
  signal slice3_y_net : std_logic_vector( 1-1 downto 0 );
  signal slice1_y_net : std_logic_vector( 1-1 downto 0 );
  signal arm_op_net : std_logic_vector( 1-1 downto 0 );
  signal ri_output_port_net : std_logic_vector( 32-1 downto 0 );
  signal circ_op_net : std_logic_vector( 1-1 downto 0 );
begin
  arm_out <= arm_or_y_net;
  concatenate_y_net <= din;
  rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc5_sync_net <= we;
  edge_op_y_net_x0 <= trig;
  goto_124960747_we1 <= we_choice_y_net;
  goto_124960747_we4 <= logical6_y_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_01_ss_bram_addr <= convert_addr_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_01_ss_bram_data_in <= convert_din1_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_01_ss_bram_we <= convert_we_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_01_ss_ctrl_user_data_out_net <= rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_01_ss_ctrl_user_data_out;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_01_ss_status_user_data_in <= cast_gw_dout_net;
  clk_net <= clk_1;
  ce_net <= ce_1;
  add_gen : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_add_gen_x0 
  port map (
    din => data_choice_y_net,
    we => we_choice_y_net,
    go => register6_q_net,
    cont => never_op_net,
    init => edge_op_y_net_x1,
    clk_1 => clk_net,
    ce_1 => ce_net,
    add => slice2_y_net,
    dout => delay6_q_net,
    we_o => logical6_y_net,
    status => concat_y_net
  );
  basic_ctrl : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_basic_ctrl_x0 
  port map (
    din => cast_dout_net,
    we => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc5_sync_net,
    trig => edge_op_y_net_x0,
    ctrl => concatenate_y_net_x0,
    stopi => never_op_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    dout => data_choice_y_net,
    we_o => we_choice_y_net,
    go => register6_q_net,
    init => edge_op_y_net_x1
  );
  bram : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_bram_x0 
  port map (
    addr => add_del_q_net,
    data_in => dat_del_q_net,
    we => we_del_q_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_01_ss_bram_addr => convert_addr_dout_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_01_ss_bram_data_in => convert_din1_dout_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_01_ss_bram_we => convert_we_dout_net
  );
  ctrl : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_ctrl_x0 
  port map (
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_01_ss_ctrl_user_data_out => rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_01_ss_ctrl_user_data_out_net,
    in_reg => reint1_output_port_net
  );
  ctrl_combine : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_ctrl_combine_x0 
  port map (
    in1 => reinterpret4_output_port_net,
    in2 => circ_or_y_net,
    in3 => reinterpret2_output_port_net,
    in4 => arm_or_y_net,
    bus_out => concatenate_y_net_x0
  );
  ctrl_split : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_ctrl_split_x0 
  port map (
    bus_in => reint1_output_port_net,
    msb_out4 => reinterpret4_output_port_net,
    out3 => slice3_y_net,
    out2 => reinterpret2_output_port_net,
    lsb_out1 => slice1_y_net
  );
  status : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_status_x0 
  port map (
    out_reg => concat_y_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_01_ss_status_user_data_in => cast_gw_dout_net
  );
  add_del : entity xil_defaultlib.sysgen_delay_4e9264ffdf 
  port map (
    clr => '0',
    d => slice2_y_net,
    clk => clk_net,
    ce => ce_net,
    q => add_del_q_net
  );
  arm : entity xil_defaultlib.sysgen_constant_a7b8778750 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => arm_op_net
  );
  arm_or : entity xil_defaultlib.sysgen_logical_d7dc12cf31 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => slice1_y_net,
    d1 => arm_op_net,
    y => arm_or_y_net
  );
  cast : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 32,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 32,
    latency => 0,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => ri_output_port_net,
    clk => clk_net,
    ce => ce_net,
    dout => cast_dout_net
  );
  circ : entity xil_defaultlib.sysgen_constant_a7b8778750 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => circ_op_net
  );
  circ_or : entity xil_defaultlib.sysgen_logical_d7dc12cf31 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => slice3_y_net,
    d1 => circ_op_net,
    y => circ_or_y_net
  );
  dat_del : entity xil_defaultlib.sysgen_delay_5ec362a23c 
  port map (
    clr => '0',
    d => delay6_q_net,
    clk => clk_net,
    ce => ce_net,
    q => dat_del_q_net
  );
  never : entity xil_defaultlib.sysgen_constant_a7b8778750 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => never_op_net
  );
  ri : entity xil_defaultlib.sysgen_reinterpret_52bb84f12b 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => concatenate_y_net,
    output_port => ri_output_port_net
  );
  we_del : entity xil_defaultlib.sysgen_delay_e0740ee3f9 
  port map (
    clr => '0',
    d => logical6_y_net,
    clk => clk_net,
    ce => ce_net,
    q => we_del_q_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot5_01
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_01 is
  port (
    in_d0 : in std_logic_vector( 16-1 downto 0 );
    in_d1 : in std_logic_vector( 16-1 downto 0 );
    we : in std_logic_vector( 1-1 downto 0 );
    trig : in std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_01_ss_ctrl_user_data_out : in std_logic_vector( 32-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    arm_out : out std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_01_ss_bram_addr : out std_logic_vector( 10-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_01_ss_bram_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_01_ss_bram_we : out std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_01_ss_status_user_data_in : out std_logic_vector( 32-1 downto 0 );
    goto_124960747_we1 : out std_logic_vector( 1-1 downto 0 );
    goto_124960747_we4 : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_01;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_01 is 
  signal arm_or_y_net : std_logic_vector( 1-1 downto 0 );
  signal slice62_y_net : std_logic_vector( 16-1 downto 0 );
  signal slice39_y_net : std_logic_vector( 16-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc5_sync_net : std_logic_vector( 1-1 downto 0 );
  signal edge_op_y_net : std_logic_vector( 1-1 downto 0 );
  signal convert_addr_dout_net : std_logic_vector( 10-1 downto 0 );
  signal convert_din1_dout_net : std_logic_vector( 32-1 downto 0 );
  signal convert_we_dout_net : std_logic_vector( 1-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_01_ss_ctrl_user_data_out_net : std_logic_vector( 32-1 downto 0 );
  signal cast_gw_dout_net : std_logic_vector( 32-1 downto 0 );
  signal we_choice_y_net : std_logic_vector( 1-1 downto 0 );
  signal logical6_y_net : std_logic_vector( 1-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal concatenate_y_net : std_logic_vector( 32-1 downto 0 );
  signal assert_d0_dout_net : std_logic_vector( 16-1 downto 0 );
  signal assert_d1_dout_net : std_logic_vector( 16-1 downto 0 );
begin
  arm_out <= arm_or_y_net;
  slice62_y_net <= in_d0;
  slice39_y_net <= in_d1;
  rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc5_sync_net <= we;
  edge_op_y_net <= trig;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_01_ss_bram_addr <= convert_addr_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_01_ss_bram_data_in <= convert_din1_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_01_ss_bram_we <= convert_we_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_01_ss_ctrl_user_data_out_net <= rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_01_ss_ctrl_user_data_out;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_01_ss_status_user_data_in <= cast_gw_dout_net;
  goto_124960747_we1 <= we_choice_y_net;
  goto_124960747_we4 <= logical6_y_net;
  clk_net <= clk_1;
  ce_net <= ce_1;
  buscreate : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_buscreate_x7 
  port map (
    in1 => assert_d0_dout_net,
    in2 => assert_d1_dout_net,
    bus_out => concatenate_y_net
  );
  ss : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_ss_x0 
  port map (
    din => concatenate_y_net,
    we => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc5_sync_net,
    trig => edge_op_y_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_01_ss_ctrl_user_data_out => rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_01_ss_ctrl_user_data_out_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    arm_out => arm_or_y_net,
    goto_124960747_we1 => we_choice_y_net,
    goto_124960747_we4 => logical6_y_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_01_ss_bram_addr => convert_addr_dout_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_01_ss_bram_data_in => convert_din1_dout_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_01_ss_bram_we => convert_we_dout_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_01_ss_status_user_data_in => cast_gw_dout_net
  );
  assert_d0 : entity xil_defaultlib.xlpassthrough 
  generic map (
    din_width => 16,
    dout_width => 16
  )
  port map (
    din => slice62_y_net,
    dout => assert_d0_dout_net
  );
  assert_d1 : entity xil_defaultlib.xlpassthrough 
  generic map (
    din_width => 16,
    dout_width => 16
  )
  port map (
    din => slice39_y_net,
    dout => assert_d1_dout_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot5_23/buscreate
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_buscreate_x0 is
  port (
    in1 : in std_logic_vector( 16-1 downto 0 );
    in2 : in std_logic_vector( 16-1 downto 0 );
    bus_out : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_buscreate_x0;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_buscreate_x0 is 
  signal concatenate_y_net : std_logic_vector( 32-1 downto 0 );
  signal assert_d0_dout_net : std_logic_vector( 16-1 downto 0 );
  signal assert_d1_dout_net : std_logic_vector( 16-1 downto 0 );
  signal reinterpret1_output_port_net : std_logic_vector( 16-1 downto 0 );
  signal reinterpret2_output_port_net : std_logic_vector( 16-1 downto 0 );
begin
  bus_out <= concatenate_y_net;
  assert_d0_dout_net <= in1;
  assert_d1_dout_net <= in2;
  concatenate : entity xil_defaultlib.sysgen_concat_37649e01d1 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    in0 => reinterpret1_output_port_net,
    in1 => reinterpret2_output_port_net,
    y => concatenate_y_net
  );
  reinterpret1 : entity xil_defaultlib.sysgen_reinterpret_03c8cdbbc1 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => assert_d0_dout_net,
    output_port => reinterpret1_output_port_net
  );
  reinterpret2 : entity xil_defaultlib.sysgen_reinterpret_03c8cdbbc1 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => assert_d1_dout_net,
    output_port => reinterpret2_output_port_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot5_23/ss/add_gen/edge_detect
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_edge_detect is
  port (
    in_x0 : in std_logic_vector( 1-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    out_x0 : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_edge_detect;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_edge_detect is 
  signal edge_op_y_net : std_logic_vector( 1-1 downto 0 );
  signal slice3_y_net : std_logic_vector( 1-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal delay_q_net : std_logic_vector( 1-1 downto 0 );
  signal inverter_op_net : std_logic_vector( 1-1 downto 0 );
begin
  out_x0 <= edge_op_y_net;
  slice3_y_net <= in_x0;
  clk_net <= clk_1;
  ce_net <= ce_1;
  delay : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 1
  )
  port map (
    en => '1',
    rst => '1',
    d => slice3_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay_q_net
  );
  inverter : entity xil_defaultlib.sysgen_inverter_6233897471 
  port map (
    clr => '0',
    ip => slice3_y_net,
    clk => clk_net,
    ce => ce_net,
    op => inverter_op_net
  );
  edge_op : entity xil_defaultlib.sysgen_logical_9cc14fefba 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => inverter_op_net,
    d1 => delay_q_net,
    y => edge_op_y_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot5_23/ss/add_gen
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_add_gen is
  port (
    din : in std_logic_vector( 32-1 downto 0 );
    we : in std_logic_vector( 1-1 downto 0 );
    go : in std_logic_vector( 1-1 downto 0 );
    cont : in std_logic_vector( 1-1 downto 0 );
    init : in std_logic_vector( 1-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    add : out std_logic_vector( 10-1 downto 0 );
    dout : out std_logic_vector( 32-1 downto 0 );
    we_o : out std_logic_vector( 1-1 downto 0 );
    status : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_add_gen;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_add_gen is 
  signal slice2_y_net : std_logic_vector( 10-1 downto 0 );
  signal delay6_q_net : std_logic_vector( 32-1 downto 0 );
  signal logical6_y_net : std_logic_vector( 1-1 downto 0 );
  signal concat_y_net : std_logic_vector( 32-1 downto 0 );
  signal data_choice_y_net : std_logic_vector( 32-1 downto 0 );
  signal we_choice_y_net : std_logic_vector( 1-1 downto 0 );
  signal register6_q_net : std_logic_vector( 1-1 downto 0 );
  signal never_op_net : std_logic_vector( 1-1 downto 0 );
  signal edge_op_y_net : std_logic_vector( 1-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal edge_op_y_net_x0 : std_logic_vector( 1-1 downto 0 );
  signal slice3_y_net : std_logic_vector( 1-1 downto 0 );
  signal shift_op_net : std_logic_vector( 19-1 downto 0 );
  signal inverter_op_net : std_logic_vector( 1-1 downto 0 );
  signal delay1_q_net : std_logic_vector( 12-1 downto 0 );
  signal convert_dout_net : std_logic_vector( 19-1 downto 0 );
  signal register5_q_net : std_logic_vector( 1-1 downto 0 );
  signal delay_q_net : std_logic_vector( 1-1 downto 0 );
  signal delay4_q_net : std_logic_vector( 1-1 downto 0 );
  signal slice1_y_net : std_logic_vector( 12-1 downto 0 );
  signal delay3_q_net : std_logic_vector( 1-1 downto 0 );
  signal inverter1_op_net : std_logic_vector( 1-1 downto 0 );
  signal logical1_y_net : std_logic_vector( 1-1 downto 0 );
  signal logical4_y_net : std_logic_vector( 1-1 downto 0 );
  signal add_gen_op_net : std_logic_vector( 13-1 downto 0 );
begin
  add <= slice2_y_net;
  dout <= delay6_q_net;
  we_o <= logical6_y_net;
  status <= concat_y_net;
  data_choice_y_net <= din;
  we_choice_y_net <= we;
  register6_q_net <= go;
  never_op_net <= cont;
  edge_op_y_net <= init;
  clk_net <= clk_1;
  ce_net <= ce_1;
  edge_detect : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_edge_detect 
  port map (
    in_x0 => slice3_y_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    out_x0 => edge_op_y_net_x0
  );
  concat : entity xil_defaultlib.sysgen_concat_fc8edfac0e 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    in0 => shift_op_net,
    in1 => inverter_op_net,
    in2 => delay1_q_net,
    y => concat_y_net
  );
  convert : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 1,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 19,
    latency => 0,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => register5_q_net,
    clk => clk_net,
    ce => ce_net,
    dout => convert_dout_net
  );
  delay : entity xil_defaultlib.sysgen_delay_e0740ee3f9 
  port map (
    clr => '0',
    d => delay4_q_net,
    clk => clk_net,
    ce => ce_net,
    q => delay_q_net
  );
  delay1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 12
  )
  port map (
    en => '1',
    rst => '1',
    d => slice1_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay1_q_net
  );
  delay3 : entity xil_defaultlib.sysgen_delay_e0740ee3f9 
  port map (
    clr => '0',
    d => never_op_net,
    clk => clk_net,
    ce => ce_net,
    q => delay3_q_net
  );
  delay4 : entity xil_defaultlib.sysgen_delay_e0740ee3f9 
  port map (
    clr => '0',
    d => edge_op_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay4_q_net
  );
  delay6 : entity xil_defaultlib.sysgen_delay_5ec362a23c 
  port map (
    clr => '0',
    d => data_choice_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay6_q_net
  );
  inverter : entity xil_defaultlib.sysgen_inverter_918b6bc6d0 
  port map (
    clr => '0',
    ip => register5_q_net,
    clk => clk_net,
    ce => ce_net,
    op => inverter_op_net
  );
  inverter1 : entity xil_defaultlib.sysgen_inverter_6233897471 
  port map (
    clr => '0',
    ip => edge_op_y_net_x0,
    clk => clk_net,
    ce => ce_net,
    op => inverter1_op_net
  );
  logical1 : entity xil_defaultlib.sysgen_logical_2486129911 
  port map (
    clr => '0',
    d0 => we_choice_y_net,
    d1 => register6_q_net,
    clk => clk_net,
    ce => ce_net,
    y => logical1_y_net
  );
  logical4 : entity xil_defaultlib.sysgen_logical_d7dc12cf31 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => delay3_q_net,
    d1 => inverter1_op_net,
    y => logical4_y_net
  );
  logical6 : entity xil_defaultlib.sysgen_logical_c05fefc67b 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => register5_q_net,
    d1 => logical4_y_net,
    d2 => logical1_y_net,
    y => logical6_y_net
  );
  register5 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlregister 
  generic map (
    d_width => 1,
    init_value => b"1"
  )
  port map (
    d => delay3_q_net,
    rst => delay_q_net,
    en => edge_op_y_net_x0,
    clk => clk_net,
    ce => ce_net,
    q => register5_q_net
  );
  shift : entity xil_defaultlib.sysgen_shift_5af4fe0a99 
  port map (
    clr => '0',
    ip => convert_dout_net,
    clk => clk_net,
    ce => ce_net,
    op => shift_op_net
  );
  add_gen : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlcounter_free 
  generic map (
    core_name0 => "rfdc_multi_eight_adcs_2048gsps_mts_c_counter_binary_v12_0_i1",
    op_arith => xlUnsigned,
    op_width => 13
  )
  port map (
    clr => '0',
    rst => delay4_q_net,
    en => logical6_y_net,
    clk => clk_net,
    ce => ce_net,
    op => add_gen_op_net
  );
  slice1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 0,
    new_msb => 11,
    x_width => 13,
    y_width => 12
  )
  port map (
    x => add_gen_op_net,
    y => slice1_y_net
  );
  slice2 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 2,
    new_msb => 11,
    x_width => 13,
    y_width => 10
  )
  port map (
    x => add_gen_op_net,
    y => slice2_y_net
  );
  slice3 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 12,
    new_msb => 12,
    x_width => 13,
    y_width => 1
  )
  port map (
    x => add_gen_op_net,
    y => slice3_y_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot5_23/ss/basic_ctrl/dram_munge
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_dram_munge is
  port (
    din : in std_logic_vector( 32-1 downto 0 );
    we : in std_logic_vector( 1-1 downto 0 );
    init : in std_logic_vector( 1-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    dout : out std_logic_vector( 32-1 downto 0 );
    we_o : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_dram_munge;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_dram_munge is 
  signal data_choice_y_net : std_logic_vector( 32-1 downto 0 );
  signal we_choice_y_net : std_logic_vector( 1-1 downto 0 );
  signal cast_dout_net : std_logic_vector( 32-1 downto 0 );
  signal mux1_y_net_x0 : std_logic_vector( 1-1 downto 0 );
  signal edge_op_y_net : std_logic_vector( 1-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal concat_y_net : std_logic_vector( 80-1 downto 0 );
  signal constant_op_net : std_logic_vector( 8-1 downto 0 );
  signal register_q_net : std_logic_vector( 32-1 downto 0 );
  signal register1_q_net : std_logic_vector( 32-1 downto 0 );
  signal concat1_y_net : std_logic_vector( 80-1 downto 0 );
  signal register2_q_net : std_logic_vector( 32-1 downto 0 );
  signal register3_q_net : std_logic_vector( 32-1 downto 0 );
  signal delay_q_net : std_logic_vector( 1-1 downto 0 );
  signal logical_y_net : std_logic_vector( 1-1 downto 0 );
  signal delay1_q_net : std_logic_vector( 1-1 downto 0 );
  signal logical1_y_net : std_logic_vector( 1-1 downto 0 );
  signal relational3_op_net : std_logic_vector( 1-1 downto 0 );
  signal mux1_y_net : std_logic_vector( 80-1 downto 0 );
  signal dout_count_op_net : std_logic_vector( 1-1 downto 0 );
  signal relational_op_net : std_logic_vector( 1-1 downto 0 );
  signal relational1_op_net : std_logic_vector( 1-1 downto 0 );
  signal relational2_op_net : std_logic_vector( 1-1 downto 0 );
  signal input_count_op_net : std_logic_vector( 2-1 downto 0 );
  signal con0_op_net : std_logic_vector( 2-1 downto 0 );
  signal con1_op_net : std_logic_vector( 2-1 downto 0 );
  signal con2_op_net : std_logic_vector( 2-1 downto 0 );
  signal con3_op_net : std_logic_vector( 2-1 downto 0 );
  signal dram_op_net : std_logic_vector( 1-1 downto 0 );
begin
  dout <= data_choice_y_net;
  we_o <= we_choice_y_net;
  cast_dout_net <= din;
  mux1_y_net_x0 <= we;
  edge_op_y_net <= init;
  clk_net <= clk_1;
  ce_net <= ce_1;
  concat : entity xil_defaultlib.sysgen_concat_e7487baac7 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    in0 => constant_op_net,
    in1 => register_q_net,
    in2 => constant_op_net,
    in3 => register1_q_net,
    y => concat_y_net
  );
  concat1 : entity xil_defaultlib.sysgen_concat_e7487baac7 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    in0 => constant_op_net,
    in1 => register2_q_net,
    in2 => constant_op_net,
    in3 => register3_q_net,
    y => concat1_y_net
  );
  constant_x0 : entity xil_defaultlib.sysgen_constant_869e31f04d 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => constant_op_net
  );
  delay : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 1
  )
  port map (
    en => '1',
    rst => '1',
    d => logical_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay_q_net
  );
  delay1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 1
  )
  port map (
    en => '1',
    rst => '1',
    d => logical1_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay1_q_net
  );
  logical : entity xil_defaultlib.sysgen_logical_2486129911 
  port map (
    clr => '0',
    d0 => relational3_op_net,
    d1 => mux1_y_net_x0,
    clk => clk_net,
    ce => ce_net,
    y => logical_y_net
  );
  logical1 : entity xil_defaultlib.sysgen_logical_d7dc12cf31 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => logical_y_net,
    d1 => delay_q_net,
    y => logical1_y_net
  );
  mux1 : entity xil_defaultlib.sysgen_mux_71ee2b1026 
  port map (
    clr => '0',
    sel => dout_count_op_net,
    d0 => concat_y_net,
    d1 => concat1_y_net,
    clk => clk_net,
    ce => ce_net,
    y => mux1_y_net
  );
  register_x0 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlregister 
  generic map (
    d_width => 32,
    init_value => b"00000000000000000000000000000000"
  )
  port map (
    rst => "0",
    d => cast_dout_net,
    en => relational_op_net,
    clk => clk_net,
    ce => ce_net,
    q => register_q_net
  );
  register1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlregister 
  generic map (
    d_width => 32,
    init_value => b"00000000000000000000000000000000"
  )
  port map (
    rst => "0",
    d => cast_dout_net,
    en => relational1_op_net,
    clk => clk_net,
    ce => ce_net,
    q => register1_q_net
  );
  register2 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlregister 
  generic map (
    d_width => 32,
    init_value => b"00000000000000000000000000000000"
  )
  port map (
    rst => "0",
    d => cast_dout_net,
    en => relational2_op_net,
    clk => clk_net,
    ce => ce_net,
    q => register2_q_net
  );
  register3 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlregister 
  generic map (
    d_width => 32,
    init_value => b"00000000000000000000000000000000"
  )
  port map (
    rst => "0",
    d => cast_dout_net,
    en => relational3_op_net,
    clk => clk_net,
    ce => ce_net,
    q => register3_q_net
  );
  relational : entity xil_defaultlib.sysgen_relational_e5d6b5eaca 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    a => input_count_op_net,
    b => con0_op_net,
    op => relational_op_net
  );
  relational1 : entity xil_defaultlib.sysgen_relational_e5d6b5eaca 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    a => input_count_op_net,
    b => con1_op_net,
    op => relational1_op_net
  );
  relational2 : entity xil_defaultlib.sysgen_relational_e5d6b5eaca 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    a => input_count_op_net,
    b => con2_op_net,
    op => relational2_op_net
  );
  relational3 : entity xil_defaultlib.sysgen_relational_e5d6b5eaca 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    a => input_count_op_net,
    b => con3_op_net,
    op => relational3_op_net
  );
  con0 : entity xil_defaultlib.sysgen_constant_b58c3a1535 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => con0_op_net
  );
  con1 : entity xil_defaultlib.sysgen_constant_d3f27a6354 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => con1_op_net
  );
  con2 : entity xil_defaultlib.sysgen_constant_2fa4689d4e 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => con2_op_net
  );
  con3 : entity xil_defaultlib.sysgen_constant_31bab66ba6 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => con3_op_net
  );
  data_choice : entity xil_defaultlib.sysgen_mux_d624c1af44 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    sel => dram_op_net,
    d0 => cast_dout_net,
    d1 => mux1_y_net,
    y => data_choice_y_net
  );
  dout_count : entity xil_defaultlib.sysgen_counter_a9c1c293c2 
  port map (
    clr => '0',
    rst => edge_op_y_net,
    en => logical1_y_net,
    clk => clk_net,
    ce => ce_net,
    op => dout_count_op_net
  );
  dram : entity xil_defaultlib.sysgen_constant_a7b8778750 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => dram_op_net
  );
  input_count : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlcounter_free 
  generic map (
    core_name0 => "rfdc_multi_eight_adcs_2048gsps_mts_c_counter_binary_v12_0_i2",
    op_arith => xlUnsigned,
    op_width => 2
  )
  port map (
    clr => '0',
    rst => edge_op_y_net,
    en => mux1_y_net_x0,
    clk => clk_net,
    ce => ce_net,
    op => input_count_op_net
  );
  we_choice : entity xil_defaultlib.sysgen_mux_4874190f11 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    sel => dram_op_net,
    d0 => mux1_y_net_x0,
    d1 => delay1_q_net,
    y => we_choice_y_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot5_23/ss/basic_ctrl/edge_detect
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x0 is
  port (
    in_x0 : in std_logic_vector( 1-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    out_x0 : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x0;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x0 is 
  signal edge_op_y_net : std_logic_vector( 1-1 downto 0 );
  signal delay1_q_net : std_logic_vector( 1-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal delay_q_net : std_logic_vector( 1-1 downto 0 );
  signal inverter_op_net : std_logic_vector( 1-1 downto 0 );
begin
  out_x0 <= edge_op_y_net;
  delay1_q_net <= in_x0;
  clk_net <= clk_1;
  ce_net <= ce_1;
  delay : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 1
  )
  port map (
    en => '1',
    rst => '1',
    d => delay1_q_net,
    clk => clk_net,
    ce => ce_net,
    q => delay_q_net
  );
  inverter : entity xil_defaultlib.sysgen_inverter_6233897471 
  port map (
    clr => '0',
    ip => delay1_q_net,
    clk => clk_net,
    ce => ce_net,
    op => inverter_op_net
  );
  edge_op : entity xil_defaultlib.sysgen_logical_0f1aa1e2d7 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => inverter_op_net,
    d1 => delay_q_net,
    y => edge_op_y_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot5_23/ss/basic_ctrl
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_basic_ctrl is
  port (
    din : in std_logic_vector( 32-1 downto 0 );
    we : in std_logic_vector( 1-1 downto 0 );
    trig : in std_logic_vector( 1-1 downto 0 );
    ctrl : in std_logic_vector( 32-1 downto 0 );
    stopi : in std_logic_vector( 1-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    dout : out std_logic_vector( 32-1 downto 0 );
    we_o : out std_logic_vector( 1-1 downto 0 );
    go : out std_logic_vector( 1-1 downto 0 );
    init : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_basic_ctrl;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_basic_ctrl is 
  signal data_choice_y_net : std_logic_vector( 32-1 downto 0 );
  signal we_choice_y_net : std_logic_vector( 1-1 downto 0 );
  signal register6_q_net : std_logic_vector( 1-1 downto 0 );
  signal edge_op_y_net_x0 : std_logic_vector( 1-1 downto 0 );
  signal cast_dout_net : std_logic_vector( 32-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc5_sync_net : std_logic_vector( 1-1 downto 0 );
  signal edge_op_y_net : std_logic_vector( 1-1 downto 0 );
  signal concatenate_y_net : std_logic_vector( 32-1 downto 0 );
  signal never_op_net : std_logic_vector( 1-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal mux1_y_net : std_logic_vector( 1-1 downto 0 );
  signal delay1_q_net : std_logic_vector( 1-1 downto 0 );
  signal constant_op_net : std_logic_vector( 1-1 downto 0 );
  signal constant1_op_net : std_logic_vector( 1-1 downto 0 );
  signal constant2_op_net : std_logic_vector( 1-1 downto 0 );
  signal enable_y_net : std_logic_vector( 1-1 downto 0 );
  signal delay2_q_net : std_logic_vector( 1-1 downto 0 );
  signal trig_src_y_net : std_logic_vector( 1-1 downto 0 );
  signal delay3_q_net : std_logic_vector( 1-1 downto 0 );
  signal valid_src_y_net : std_logic_vector( 1-1 downto 0 );
  signal inverter_op_net : std_logic_vector( 1-1 downto 0 );
  signal logical_y_net : std_logic_vector( 1-1 downto 0 );
  signal mux2_y_net : std_logic_vector( 1-1 downto 0 );
  signal register1_q_net : std_logic_vector( 1-1 downto 0 );
begin
  dout <= data_choice_y_net;
  we_o <= we_choice_y_net;
  go <= register6_q_net;
  init <= edge_op_y_net_x0;
  cast_dout_net <= din;
  rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc5_sync_net <= we;
  edge_op_y_net <= trig;
  concatenate_y_net <= ctrl;
  never_op_net <= stopi;
  clk_net <= clk_1;
  ce_net <= ce_1;
  dram_munge : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_dram_munge 
  port map (
    din => cast_dout_net,
    we => mux1_y_net,
    init => edge_op_y_net_x0,
    clk_1 => clk_net,
    ce_1 => ce_net,
    dout => data_choice_y_net,
    we_o => we_choice_y_net
  );
  edge_detect : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x0 
  port map (
    in_x0 => delay1_q_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    out_x0 => edge_op_y_net_x0
  );
  constant_x0 : entity xil_defaultlib.sysgen_constant_c95a0b5efb 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => constant_op_net
  );
  constant1 : entity xil_defaultlib.sysgen_constant_c95a0b5efb 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => constant1_op_net
  );
  constant2 : entity xil_defaultlib.sysgen_constant_c95a0b5efb 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => constant2_op_net
  );
  delay1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 1
  )
  port map (
    en => '1',
    rst => '1',
    d => enable_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay1_q_net
  );
  delay2 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 1
  )
  port map (
    en => '1',
    rst => '1',
    d => trig_src_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay2_q_net
  );
  delay3 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 1
  )
  port map (
    en => '1',
    rst => '1',
    d => valid_src_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay3_q_net
  );
  inverter : entity xil_defaultlib.sysgen_inverter_6233897471 
  port map (
    clr => '0',
    ip => edge_op_y_net_x0,
    clk => clk_net,
    ce => ce_net,
    op => inverter_op_net
  );
  logical : entity xil_defaultlib.sysgen_logical_d26e5cda59 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => mux2_y_net,
    d1 => inverter_op_net,
    y => logical_y_net
  );
  mux1 : entity xil_defaultlib.sysgen_mux_4874190f11 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    sel => delay3_q_net,
    d0 => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc5_sync_net,
    d1 => constant2_op_net,
    y => mux1_y_net
  );
  mux2 : entity xil_defaultlib.sysgen_mux_4874190f11 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    sel => delay2_q_net,
    d0 => edge_op_y_net,
    d1 => constant1_op_net,
    y => mux2_y_net
  );
  register1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlregister 
  generic map (
    d_width => 1,
    init_value => b"0"
  )
  port map (
    d => constant_op_net,
    rst => logical_y_net,
    en => edge_op_y_net_x0,
    clk => clk_net,
    ce => ce_net,
    q => register1_q_net
  );
  register6 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlregister 
  generic map (
    d_width => 1,
    init_value => b"0"
  )
  port map (
    d => mux2_y_net,
    rst => edge_op_y_net_x0,
    en => register1_q_net,
    clk => clk_net,
    ce => ce_net,
    q => register6_q_net
  );
  enable : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 0,
    new_msb => 0,
    x_width => 32,
    y_width => 1
  )
  port map (
    x => concatenate_y_net,
    y => enable_y_net
  );
  trig_src : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 1,
    new_msb => 1,
    x_width => 32,
    y_width => 1
  )
  port map (
    x => concatenate_y_net,
    y => trig_src_y_net
  );
  valid_src : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 2,
    new_msb => 2,
    x_width => 32,
    y_width => 1
  )
  port map (
    x => concatenate_y_net,
    y => valid_src_y_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot5_23/ss/bram/calc_add
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_calc_add is
  port (
    in_x0 : in std_logic_vector( 10-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    out_x0 : out std_logic_vector( 10-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_calc_add;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_calc_add is 
  signal mux_y_net : std_logic_vector( 10-1 downto 0 );
  signal add_del_q_net : std_logic_vector( 10-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal add_sub_s_net : std_logic_vector( 1-1 downto 0 );
  signal const_op_net : std_logic_vector( 1-1 downto 0 );
  signal lsw_y_net : std_logic_vector( 1-1 downto 0 );
  signal concat_y_net : std_logic_vector( 10-1 downto 0 );
  signal msw_y_net : std_logic_vector( 9-1 downto 0 );
  signal convert_addr_dout_net : std_logic_vector( 10-1 downto 0 );
  signal manipulate_op_net : std_logic_vector( 1-1 downto 0 );
begin
  out_x0 <= mux_y_net;
  add_del_q_net <= in_x0;
  clk_net <= clk_1;
  ce_net <= ce_1;
  add_sub : entity xil_defaultlib.sysgen_addsub_fd3b6c715c 
  port map (
    clr => '0',
    a => const_op_net,
    b => lsw_y_net,
    clk => clk_net,
    ce => ce_net,
    s => add_sub_s_net
  );
  concat : entity xil_defaultlib.sysgen_concat_f4b90dfa16 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    in0 => msw_y_net,
    in1 => add_sub_s_net,
    y => concat_y_net
  );
  const : entity xil_defaultlib.sysgen_constant_a7b8778750 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => const_op_net
  );
  convert_addr : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 10,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 10,
    latency => 0,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => add_del_q_net,
    clk => clk_net,
    ce => ce_net,
    dout => convert_addr_dout_net
  );
  lsw : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 0,
    new_msb => 0,
    x_width => 10,
    y_width => 1
  )
  port map (
    x => convert_addr_dout_net,
    y => lsw_y_net
  );
  manipulate : entity xil_defaultlib.sysgen_constant_a7b8778750 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => manipulate_op_net
  );
  msw : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 1,
    new_msb => 9,
    x_width => 10,
    y_width => 9
  )
  port map (
    x => convert_addr_dout_net,
    y => msw_y_net
  );
  mux : entity xil_defaultlib.sysgen_mux_4417594854 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    sel => manipulate_op_net,
    d0 => convert_addr_dout_net,
    d1 => concat_y_net,
    y => mux_y_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot5_23/ss/bram/munge_in
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_munge_in is
  port (
    din : in std_logic_vector( 32-1 downto 0 );
    dout : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_munge_in;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_munge_in is 
  signal reinterpret_out_output_port_net : std_logic_vector( 32-1 downto 0 );
  signal dat_del_q_net : std_logic_vector( 32-1 downto 0 );
begin
  dout <= reinterpret_out_output_port_net;
  dat_del_q_net <= din;
  reinterpret_out : entity xil_defaultlib.sysgen_reinterpret_52bb84f12b 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => dat_del_q_net,
    output_port => reinterpret_out_output_port_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot5_23/ss/bram
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_bram is
  port (
    addr : in std_logic_vector( 10-1 downto 0 );
    data_in : in std_logic_vector( 32-1 downto 0 );
    we : in std_logic_vector( 1-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_23_ss_bram_addr : out std_logic_vector( 10-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_23_ss_bram_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_23_ss_bram_we : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_bram;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_bram is 
  signal add_del_q_net : std_logic_vector( 10-1 downto 0 );
  signal dat_del_q_net : std_logic_vector( 32-1 downto 0 );
  signal we_del_q_net : std_logic_vector( 1-1 downto 0 );
  signal convert_addr_dout_net : std_logic_vector( 10-1 downto 0 );
  signal convert_din1_dout_net : std_logic_vector( 32-1 downto 0 );
  signal convert_we_dout_net : std_logic_vector( 1-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal mux_y_net : std_logic_vector( 10-1 downto 0 );
  signal reinterpret_out_output_port_net : std_logic_vector( 32-1 downto 0 );
begin
  add_del_q_net <= addr;
  dat_del_q_net <= data_in;
  we_del_q_net <= we;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_23_ss_bram_addr <= convert_addr_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_23_ss_bram_data_in <= convert_din1_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_23_ss_bram_we <= convert_we_dout_net;
  clk_net <= clk_1;
  ce_net <= ce_1;
  calc_add : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_calc_add 
  port map (
    in_x0 => add_del_q_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    out_x0 => mux_y_net
  );
  munge_in : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_munge_in 
  port map (
    din => dat_del_q_net,
    dout => reinterpret_out_output_port_net
  );
  convert_addr : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 10,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 10,
    latency => 0,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => mux_y_net,
    clk => clk_net,
    ce => ce_net,
    dout => convert_addr_dout_net
  );
  convert_din1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 32,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 32,
    latency => 0,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => reinterpret_out_output_port_net,
    clk => clk_net,
    ce => ce_net,
    dout => convert_din1_dout_net
  );
  convert_we : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 1,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 1,
    latency => 0,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => we_del_q_net,
    clk => clk_net,
    ce => ce_net,
    dout => convert_we_dout_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot5_23/ss/ctrl
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_ctrl is
  port (
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_23_ss_ctrl_user_data_out : in std_logic_vector( 32-1 downto 0 );
    in_reg : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_ctrl;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_ctrl is 
  signal reint1_output_port_net : std_logic_vector( 32-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_23_ss_ctrl_user_data_out_net : std_logic_vector( 32-1 downto 0 );
  signal io_delay_q_net : std_logic_vector( 32-1 downto 0 );
  signal slice_reg_y_net : std_logic_vector( 32-1 downto 0 );
begin
  in_reg <= reint1_output_port_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_23_ss_ctrl_user_data_out_net <= rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_23_ss_ctrl_user_data_out;
  io_delay : entity xil_defaultlib.sysgen_delay_34e314c510 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d => rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_23_ss_ctrl_user_data_out_net,
    q => io_delay_q_net
  );
  slice_reg : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 0,
    new_msb => 31,
    x_width => 32,
    y_width => 32
  )
  port map (
    x => io_delay_q_net,
    y => slice_reg_y_net
  );
  reint1 : entity xil_defaultlib.sysgen_reinterpret_52bb84f12b 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => slice_reg_y_net,
    output_port => reint1_output_port_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot5_23/ss/ctrl_combine
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_ctrl_combine is
  port (
    in1 : in std_logic_vector( 28-1 downto 0 );
    in2 : in std_logic_vector( 1-1 downto 0 );
    in3 : in std_logic_vector( 2-1 downto 0 );
    in4 : in std_logic_vector( 1-1 downto 0 );
    bus_out : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_ctrl_combine;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_ctrl_combine is 
  signal concatenate_y_net : std_logic_vector( 32-1 downto 0 );
  signal reinterpret4_output_port_net_x0 : std_logic_vector( 28-1 downto 0 );
  signal circ_or_y_net : std_logic_vector( 1-1 downto 0 );
  signal reinterpret2_output_port_net : std_logic_vector( 2-1 downto 0 );
  signal arm_or_y_net : std_logic_vector( 1-1 downto 0 );
  signal reinterpret1_output_port_net : std_logic_vector( 28-1 downto 0 );
  signal reinterpret2_output_port_net_x0 : std_logic_vector( 1-1 downto 0 );
  signal reinterpret3_output_port_net : std_logic_vector( 2-1 downto 0 );
  signal reinterpret4_output_port_net : std_logic_vector( 1-1 downto 0 );
begin
  bus_out <= concatenate_y_net;
  reinterpret4_output_port_net_x0 <= in1;
  circ_or_y_net <= in2;
  reinterpret2_output_port_net <= in3;
  arm_or_y_net <= in4;
  concatenate : entity xil_defaultlib.sysgen_concat_8611e618a5 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    in0 => reinterpret1_output_port_net,
    in1 => reinterpret2_output_port_net_x0,
    in2 => reinterpret3_output_port_net,
    in3 => reinterpret4_output_port_net,
    y => concatenate_y_net
  );
  reinterpret1 : entity xil_defaultlib.sysgen_reinterpret_f7e0b72e82 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => reinterpret4_output_port_net_x0,
    output_port => reinterpret1_output_port_net
  );
  reinterpret2 : entity xil_defaultlib.sysgen_reinterpret_317b92931a 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => circ_or_y_net,
    output_port => reinterpret2_output_port_net_x0
  );
  reinterpret3 : entity xil_defaultlib.sysgen_reinterpret_5dc9f217bd 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => reinterpret2_output_port_net,
    output_port => reinterpret3_output_port_net
  );
  reinterpret4 : entity xil_defaultlib.sysgen_reinterpret_317b92931a 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => arm_or_y_net,
    output_port => reinterpret4_output_port_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot5_23/ss/ctrl_split
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_ctrl_split is
  port (
    bus_in : in std_logic_vector( 32-1 downto 0 );
    msb_out4 : out std_logic_vector( 28-1 downto 0 );
    out3 : out std_logic_vector( 1-1 downto 0 );
    out2 : out std_logic_vector( 2-1 downto 0 );
    lsb_out1 : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_ctrl_split;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_ctrl_split is 
  signal reinterpret4_output_port_net : std_logic_vector( 28-1 downto 0 );
  signal slice3_y_net : std_logic_vector( 1-1 downto 0 );
  signal reinterpret2_output_port_net : std_logic_vector( 2-1 downto 0 );
  signal slice1_y_net : std_logic_vector( 1-1 downto 0 );
  signal reint1_output_port_net : std_logic_vector( 32-1 downto 0 );
  signal slice2_y_net : std_logic_vector( 2-1 downto 0 );
  signal slice4_y_net : std_logic_vector( 28-1 downto 0 );
begin
  msb_out4 <= reinterpret4_output_port_net;
  out3 <= slice3_y_net;
  out2 <= reinterpret2_output_port_net;
  lsb_out1 <= slice1_y_net;
  reint1_output_port_net <= bus_in;
  reinterpret2 : entity xil_defaultlib.sysgen_reinterpret_5dc9f217bd 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => slice2_y_net,
    output_port => reinterpret2_output_port_net
  );
  reinterpret4 : entity xil_defaultlib.sysgen_reinterpret_f7e0b72e82 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => slice4_y_net,
    output_port => reinterpret4_output_port_net
  );
  slice1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 0,
    new_msb => 0,
    x_width => 32,
    y_width => 1
  )
  port map (
    x => reint1_output_port_net,
    y => slice1_y_net
  );
  slice2 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 1,
    new_msb => 2,
    x_width => 32,
    y_width => 2
  )
  port map (
    x => reint1_output_port_net,
    y => slice2_y_net
  );
  slice3 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 3,
    new_msb => 3,
    x_width => 32,
    y_width => 1
  )
  port map (
    x => reint1_output_port_net,
    y => slice3_y_net
  );
  slice4 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 4,
    new_msb => 31,
    x_width => 32,
    y_width => 28
  )
  port map (
    x => reint1_output_port_net,
    y => slice4_y_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot5_23/ss/status
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_status is
  port (
    out_reg : in std_logic_vector( 32-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_23_ss_status_user_data_in : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_status;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_status is 
  signal concat_y_net : std_logic_vector( 32-1 downto 0 );
  signal cast_gw_dout_net : std_logic_vector( 32-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal io_delay_q_net : std_logic_vector( 32-1 downto 0 );
  signal reint1_output_port_net : std_logic_vector( 32-1 downto 0 );
  signal assert_reg_dout_net : std_logic_vector( 32-1 downto 0 );
begin
  concat_y_net <= out_reg;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_23_ss_status_user_data_in <= cast_gw_dout_net;
  clk_net <= clk_1;
  ce_net <= ce_1;
  io_delay : entity xil_defaultlib.sysgen_delay_34e314c510 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d => reint1_output_port_net,
    q => io_delay_q_net
  );
  cast_gw : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 32,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 32,
    latency => 1,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => io_delay_q_net,
    clk => clk_net,
    ce => ce_net,
    dout => cast_gw_dout_net
  );
  assert_reg : entity xil_defaultlib.xlpassthrough 
  generic map (
    din_width => 32,
    dout_width => 32
  )
  port map (
    din => concat_y_net,
    dout => assert_reg_dout_net
  );
  reint1 : entity xil_defaultlib.sysgen_reinterpret_52bb84f12b 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => assert_reg_dout_net,
    output_port => reint1_output_port_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot5_23/ss
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_ss is
  port (
    din : in std_logic_vector( 32-1 downto 0 );
    we : in std_logic_vector( 1-1 downto 0 );
    trig : in std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_23_ss_ctrl_user_data_out : in std_logic_vector( 32-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    arm_out : out std_logic_vector( 1-1 downto 0 );
    goto_126867371_we1 : out std_logic_vector( 1-1 downto 0 );
    goto_126867371_we4 : out std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_23_ss_bram_addr : out std_logic_vector( 10-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_23_ss_bram_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_23_ss_bram_we : out std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_23_ss_status_user_data_in : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_ss;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_ss is 
  signal arm_or_y_net : std_logic_vector( 1-1 downto 0 );
  signal concatenate_y_net : std_logic_vector( 32-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc5_sync_net : std_logic_vector( 1-1 downto 0 );
  signal edge_op_y_net_x0 : std_logic_vector( 1-1 downto 0 );
  signal we_choice_y_net : std_logic_vector( 1-1 downto 0 );
  signal logical6_y_net : std_logic_vector( 1-1 downto 0 );
  signal convert_addr_dout_net : std_logic_vector( 10-1 downto 0 );
  signal convert_din1_dout_net : std_logic_vector( 32-1 downto 0 );
  signal convert_we_dout_net : std_logic_vector( 1-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_23_ss_ctrl_user_data_out_net : std_logic_vector( 32-1 downto 0 );
  signal cast_gw_dout_net : std_logic_vector( 32-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal slice2_y_net : std_logic_vector( 10-1 downto 0 );
  signal delay6_q_net : std_logic_vector( 32-1 downto 0 );
  signal concat_y_net : std_logic_vector( 32-1 downto 0 );
  signal data_choice_y_net : std_logic_vector( 32-1 downto 0 );
  signal register6_q_net : std_logic_vector( 1-1 downto 0 );
  signal never_op_net : std_logic_vector( 1-1 downto 0 );
  signal edge_op_y_net_x1 : std_logic_vector( 1-1 downto 0 );
  signal cast_dout_net : std_logic_vector( 32-1 downto 0 );
  signal concatenate_y_net_x0 : std_logic_vector( 32-1 downto 0 );
  signal add_del_q_net : std_logic_vector( 10-1 downto 0 );
  signal dat_del_q_net : std_logic_vector( 32-1 downto 0 );
  signal we_del_q_net : std_logic_vector( 1-1 downto 0 );
  signal reint1_output_port_net : std_logic_vector( 32-1 downto 0 );
  signal reinterpret4_output_port_net : std_logic_vector( 28-1 downto 0 );
  signal circ_or_y_net : std_logic_vector( 1-1 downto 0 );
  signal reinterpret2_output_port_net : std_logic_vector( 2-1 downto 0 );
  signal slice3_y_net : std_logic_vector( 1-1 downto 0 );
  signal slice1_y_net : std_logic_vector( 1-1 downto 0 );
  signal arm_op_net : std_logic_vector( 1-1 downto 0 );
  signal ri_output_port_net : std_logic_vector( 32-1 downto 0 );
  signal circ_op_net : std_logic_vector( 1-1 downto 0 );
begin
  arm_out <= arm_or_y_net;
  concatenate_y_net <= din;
  rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc5_sync_net <= we;
  edge_op_y_net_x0 <= trig;
  goto_126867371_we1 <= we_choice_y_net;
  goto_126867371_we4 <= logical6_y_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_23_ss_bram_addr <= convert_addr_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_23_ss_bram_data_in <= convert_din1_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_23_ss_bram_we <= convert_we_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_23_ss_ctrl_user_data_out_net <= rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_23_ss_ctrl_user_data_out;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_23_ss_status_user_data_in <= cast_gw_dout_net;
  clk_net <= clk_1;
  ce_net <= ce_1;
  add_gen : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_add_gen 
  port map (
    din => data_choice_y_net,
    we => we_choice_y_net,
    go => register6_q_net,
    cont => never_op_net,
    init => edge_op_y_net_x1,
    clk_1 => clk_net,
    ce_1 => ce_net,
    add => slice2_y_net,
    dout => delay6_q_net,
    we_o => logical6_y_net,
    status => concat_y_net
  );
  basic_ctrl : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_basic_ctrl 
  port map (
    din => cast_dout_net,
    we => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc5_sync_net,
    trig => edge_op_y_net_x0,
    ctrl => concatenate_y_net_x0,
    stopi => never_op_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    dout => data_choice_y_net,
    we_o => we_choice_y_net,
    go => register6_q_net,
    init => edge_op_y_net_x1
  );
  bram : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_bram 
  port map (
    addr => add_del_q_net,
    data_in => dat_del_q_net,
    we => we_del_q_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_23_ss_bram_addr => convert_addr_dout_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_23_ss_bram_data_in => convert_din1_dout_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_23_ss_bram_we => convert_we_dout_net
  );
  ctrl : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_ctrl 
  port map (
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_23_ss_ctrl_user_data_out => rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_23_ss_ctrl_user_data_out_net,
    in_reg => reint1_output_port_net
  );
  ctrl_combine : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_ctrl_combine 
  port map (
    in1 => reinterpret4_output_port_net,
    in2 => circ_or_y_net,
    in3 => reinterpret2_output_port_net,
    in4 => arm_or_y_net,
    bus_out => concatenate_y_net_x0
  );
  ctrl_split : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_ctrl_split 
  port map (
    bus_in => reint1_output_port_net,
    msb_out4 => reinterpret4_output_port_net,
    out3 => slice3_y_net,
    out2 => reinterpret2_output_port_net,
    lsb_out1 => slice1_y_net
  );
  status : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_status 
  port map (
    out_reg => concat_y_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_23_ss_status_user_data_in => cast_gw_dout_net
  );
  add_del : entity xil_defaultlib.sysgen_delay_4e9264ffdf 
  port map (
    clr => '0',
    d => slice2_y_net,
    clk => clk_net,
    ce => ce_net,
    q => add_del_q_net
  );
  arm : entity xil_defaultlib.sysgen_constant_a7b8778750 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => arm_op_net
  );
  arm_or : entity xil_defaultlib.sysgen_logical_d7dc12cf31 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => slice1_y_net,
    d1 => arm_op_net,
    y => arm_or_y_net
  );
  cast : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 32,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 32,
    latency => 0,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => ri_output_port_net,
    clk => clk_net,
    ce => ce_net,
    dout => cast_dout_net
  );
  circ : entity xil_defaultlib.sysgen_constant_a7b8778750 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => circ_op_net
  );
  circ_or : entity xil_defaultlib.sysgen_logical_d7dc12cf31 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => slice3_y_net,
    d1 => circ_op_net,
    y => circ_or_y_net
  );
  dat_del : entity xil_defaultlib.sysgen_delay_5ec362a23c 
  port map (
    clr => '0',
    d => delay6_q_net,
    clk => clk_net,
    ce => ce_net,
    q => dat_del_q_net
  );
  never : entity xil_defaultlib.sysgen_constant_a7b8778750 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => never_op_net
  );
  ri : entity xil_defaultlib.sysgen_reinterpret_52bb84f12b 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => concatenate_y_net,
    output_port => ri_output_port_net
  );
  we_del : entity xil_defaultlib.sysgen_delay_e0740ee3f9 
  port map (
    clr => '0',
    d => logical6_y_net,
    clk => clk_net,
    ce => ce_net,
    q => we_del_q_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot5_23
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_23 is
  port (
    in_d0 : in std_logic_vector( 16-1 downto 0 );
    in_d1 : in std_logic_vector( 16-1 downto 0 );
    we : in std_logic_vector( 1-1 downto 0 );
    trig : in std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_23_ss_ctrl_user_data_out : in std_logic_vector( 32-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    arm_out : out std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_23_ss_bram_addr : out std_logic_vector( 10-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_23_ss_bram_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_23_ss_bram_we : out std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_23_ss_status_user_data_in : out std_logic_vector( 32-1 downto 0 );
    goto_126867371_we1 : out std_logic_vector( 1-1 downto 0 );
    goto_126867371_we4 : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_23;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_23 is 
  signal arm_or_y_net : std_logic_vector( 1-1 downto 0 );
  signal slice63_y_net : std_logic_vector( 16-1 downto 0 );
  signal slice38_y_net : std_logic_vector( 16-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc5_sync_net : std_logic_vector( 1-1 downto 0 );
  signal edge_op_y_net : std_logic_vector( 1-1 downto 0 );
  signal convert_addr_dout_net : std_logic_vector( 10-1 downto 0 );
  signal convert_din1_dout_net : std_logic_vector( 32-1 downto 0 );
  signal convert_we_dout_net : std_logic_vector( 1-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_23_ss_ctrl_user_data_out_net : std_logic_vector( 32-1 downto 0 );
  signal cast_gw_dout_net : std_logic_vector( 32-1 downto 0 );
  signal we_choice_y_net : std_logic_vector( 1-1 downto 0 );
  signal logical6_y_net : std_logic_vector( 1-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal concatenate_y_net : std_logic_vector( 32-1 downto 0 );
  signal assert_d0_dout_net : std_logic_vector( 16-1 downto 0 );
  signal assert_d1_dout_net : std_logic_vector( 16-1 downto 0 );
begin
  arm_out <= arm_or_y_net;
  slice63_y_net <= in_d0;
  slice38_y_net <= in_d1;
  rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc5_sync_net <= we;
  edge_op_y_net <= trig;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_23_ss_bram_addr <= convert_addr_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_23_ss_bram_data_in <= convert_din1_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_23_ss_bram_we <= convert_we_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_23_ss_ctrl_user_data_out_net <= rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_23_ss_ctrl_user_data_out;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_23_ss_status_user_data_in <= cast_gw_dout_net;
  goto_126867371_we1 <= we_choice_y_net;
  goto_126867371_we4 <= logical6_y_net;
  clk_net <= clk_1;
  ce_net <= ce_1;
  buscreate : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_buscreate_x0 
  port map (
    in1 => assert_d0_dout_net,
    in2 => assert_d1_dout_net,
    bus_out => concatenate_y_net
  );
  ss : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_ss 
  port map (
    din => concatenate_y_net,
    we => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc5_sync_net,
    trig => edge_op_y_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_23_ss_ctrl_user_data_out => rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_23_ss_ctrl_user_data_out_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    arm_out => arm_or_y_net,
    goto_126867371_we1 => we_choice_y_net,
    goto_126867371_we4 => logical6_y_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_23_ss_bram_addr => convert_addr_dout_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_23_ss_bram_data_in => convert_din1_dout_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_23_ss_bram_we => convert_we_dout_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_23_ss_status_user_data_in => cast_gw_dout_net
  );
  assert_d0 : entity xil_defaultlib.xlpassthrough 
  generic map (
    din_width => 16,
    dout_width => 16
  )
  port map (
    din => slice63_y_net,
    dout => assert_d0_dout_net
  );
  assert_d1 : entity xil_defaultlib.xlpassthrough 
  generic map (
    din_width => 16,
    dout_width => 16
  )
  port map (
    din => slice38_y_net,
    dout => assert_d1_dout_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot5_45/buscreate
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_buscreate is
  port (
    in1 : in std_logic_vector( 16-1 downto 0 );
    in2 : in std_logic_vector( 16-1 downto 0 );
    bus_out : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_buscreate;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_buscreate is 
  signal concatenate_y_net : std_logic_vector( 32-1 downto 0 );
  signal assert_d0_dout_net : std_logic_vector( 16-1 downto 0 );
  signal assert_d1_dout_net : std_logic_vector( 16-1 downto 0 );
  signal reinterpret1_output_port_net : std_logic_vector( 16-1 downto 0 );
  signal reinterpret2_output_port_net : std_logic_vector( 16-1 downto 0 );
begin
  bus_out <= concatenate_y_net;
  assert_d0_dout_net <= in1;
  assert_d1_dout_net <= in2;
  concatenate : entity xil_defaultlib.sysgen_concat_37649e01d1 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    in0 => reinterpret1_output_port_net,
    in1 => reinterpret2_output_port_net,
    y => concatenate_y_net
  );
  reinterpret1 : entity xil_defaultlib.sysgen_reinterpret_03c8cdbbc1 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => assert_d0_dout_net,
    output_port => reinterpret1_output_port_net
  );
  reinterpret2 : entity xil_defaultlib.sysgen_reinterpret_03c8cdbbc1 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => assert_d1_dout_net,
    output_port => reinterpret2_output_port_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot5_45/ss/add_gen/edge_detect
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x5 is
  port (
    in_x0 : in std_logic_vector( 1-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    out_x0 : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x5;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x5 is 
  signal edge_op_y_net : std_logic_vector( 1-1 downto 0 );
  signal slice3_y_net : std_logic_vector( 1-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal delay_q_net : std_logic_vector( 1-1 downto 0 );
  signal inverter_op_net : std_logic_vector( 1-1 downto 0 );
begin
  out_x0 <= edge_op_y_net;
  slice3_y_net <= in_x0;
  clk_net <= clk_1;
  ce_net <= ce_1;
  delay : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 1
  )
  port map (
    en => '1',
    rst => '1',
    d => slice3_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay_q_net
  );
  inverter : entity xil_defaultlib.sysgen_inverter_6233897471 
  port map (
    clr => '0',
    ip => slice3_y_net,
    clk => clk_net,
    ce => ce_net,
    op => inverter_op_net
  );
  edge_op : entity xil_defaultlib.sysgen_logical_9cc14fefba 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => inverter_op_net,
    d1 => delay_q_net,
    y => edge_op_y_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot5_45/ss/add_gen
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_add_gen_x2 is
  port (
    din : in std_logic_vector( 32-1 downto 0 );
    we : in std_logic_vector( 1-1 downto 0 );
    go : in std_logic_vector( 1-1 downto 0 );
    cont : in std_logic_vector( 1-1 downto 0 );
    init : in std_logic_vector( 1-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    add : out std_logic_vector( 10-1 downto 0 );
    dout : out std_logic_vector( 32-1 downto 0 );
    we_o : out std_logic_vector( 1-1 downto 0 );
    status : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_add_gen_x2;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_add_gen_x2 is 
  signal slice2_y_net : std_logic_vector( 10-1 downto 0 );
  signal delay6_q_net : std_logic_vector( 32-1 downto 0 );
  signal logical6_y_net : std_logic_vector( 1-1 downto 0 );
  signal concat_y_net : std_logic_vector( 32-1 downto 0 );
  signal data_choice_y_net : std_logic_vector( 32-1 downto 0 );
  signal we_choice_y_net : std_logic_vector( 1-1 downto 0 );
  signal register6_q_net : std_logic_vector( 1-1 downto 0 );
  signal never_op_net : std_logic_vector( 1-1 downto 0 );
  signal edge_op_y_net : std_logic_vector( 1-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal edge_op_y_net_x0 : std_logic_vector( 1-1 downto 0 );
  signal slice3_y_net : std_logic_vector( 1-1 downto 0 );
  signal shift_op_net : std_logic_vector( 19-1 downto 0 );
  signal inverter_op_net : std_logic_vector( 1-1 downto 0 );
  signal delay1_q_net : std_logic_vector( 12-1 downto 0 );
  signal convert_dout_net : std_logic_vector( 19-1 downto 0 );
  signal register5_q_net : std_logic_vector( 1-1 downto 0 );
  signal delay_q_net : std_logic_vector( 1-1 downto 0 );
  signal delay4_q_net : std_logic_vector( 1-1 downto 0 );
  signal slice1_y_net : std_logic_vector( 12-1 downto 0 );
  signal delay3_q_net : std_logic_vector( 1-1 downto 0 );
  signal inverter1_op_net : std_logic_vector( 1-1 downto 0 );
  signal logical1_y_net : std_logic_vector( 1-1 downto 0 );
  signal logical4_y_net : std_logic_vector( 1-1 downto 0 );
  signal add_gen_op_net : std_logic_vector( 13-1 downto 0 );
begin
  add <= slice2_y_net;
  dout <= delay6_q_net;
  we_o <= logical6_y_net;
  status <= concat_y_net;
  data_choice_y_net <= din;
  we_choice_y_net <= we;
  register6_q_net <= go;
  never_op_net <= cont;
  edge_op_y_net <= init;
  clk_net <= clk_1;
  ce_net <= ce_1;
  edge_detect : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x5 
  port map (
    in_x0 => slice3_y_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    out_x0 => edge_op_y_net_x0
  );
  concat : entity xil_defaultlib.sysgen_concat_fc8edfac0e 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    in0 => shift_op_net,
    in1 => inverter_op_net,
    in2 => delay1_q_net,
    y => concat_y_net
  );
  convert : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 1,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 19,
    latency => 0,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => register5_q_net,
    clk => clk_net,
    ce => ce_net,
    dout => convert_dout_net
  );
  delay : entity xil_defaultlib.sysgen_delay_e0740ee3f9 
  port map (
    clr => '0',
    d => delay4_q_net,
    clk => clk_net,
    ce => ce_net,
    q => delay_q_net
  );
  delay1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 12
  )
  port map (
    en => '1',
    rst => '1',
    d => slice1_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay1_q_net
  );
  delay3 : entity xil_defaultlib.sysgen_delay_e0740ee3f9 
  port map (
    clr => '0',
    d => never_op_net,
    clk => clk_net,
    ce => ce_net,
    q => delay3_q_net
  );
  delay4 : entity xil_defaultlib.sysgen_delay_e0740ee3f9 
  port map (
    clr => '0',
    d => edge_op_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay4_q_net
  );
  delay6 : entity xil_defaultlib.sysgen_delay_5ec362a23c 
  port map (
    clr => '0',
    d => data_choice_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay6_q_net
  );
  inverter : entity xil_defaultlib.sysgen_inverter_918b6bc6d0 
  port map (
    clr => '0',
    ip => register5_q_net,
    clk => clk_net,
    ce => ce_net,
    op => inverter_op_net
  );
  inverter1 : entity xil_defaultlib.sysgen_inverter_6233897471 
  port map (
    clr => '0',
    ip => edge_op_y_net_x0,
    clk => clk_net,
    ce => ce_net,
    op => inverter1_op_net
  );
  logical1 : entity xil_defaultlib.sysgen_logical_2486129911 
  port map (
    clr => '0',
    d0 => we_choice_y_net,
    d1 => register6_q_net,
    clk => clk_net,
    ce => ce_net,
    y => logical1_y_net
  );
  logical4 : entity xil_defaultlib.sysgen_logical_d7dc12cf31 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => delay3_q_net,
    d1 => inverter1_op_net,
    y => logical4_y_net
  );
  logical6 : entity xil_defaultlib.sysgen_logical_c05fefc67b 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => register5_q_net,
    d1 => logical4_y_net,
    d2 => logical1_y_net,
    y => logical6_y_net
  );
  register5 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlregister 
  generic map (
    d_width => 1,
    init_value => b"1"
  )
  port map (
    d => delay3_q_net,
    rst => delay_q_net,
    en => edge_op_y_net_x0,
    clk => clk_net,
    ce => ce_net,
    q => register5_q_net
  );
  shift : entity xil_defaultlib.sysgen_shift_5af4fe0a99 
  port map (
    clr => '0',
    ip => convert_dout_net,
    clk => clk_net,
    ce => ce_net,
    op => shift_op_net
  );
  add_gen : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlcounter_free 
  generic map (
    core_name0 => "rfdc_multi_eight_adcs_2048gsps_mts_c_counter_binary_v12_0_i1",
    op_arith => xlUnsigned,
    op_width => 13
  )
  port map (
    clr => '0',
    rst => delay4_q_net,
    en => logical6_y_net,
    clk => clk_net,
    ce => ce_net,
    op => add_gen_op_net
  );
  slice1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 0,
    new_msb => 11,
    x_width => 13,
    y_width => 12
  )
  port map (
    x => add_gen_op_net,
    y => slice1_y_net
  );
  slice2 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 2,
    new_msb => 11,
    x_width => 13,
    y_width => 10
  )
  port map (
    x => add_gen_op_net,
    y => slice2_y_net
  );
  slice3 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 12,
    new_msb => 12,
    x_width => 13,
    y_width => 1
  )
  port map (
    x => add_gen_op_net,
    y => slice3_y_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot5_45/ss/basic_ctrl/dram_munge
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_dram_munge_x2 is
  port (
    din : in std_logic_vector( 32-1 downto 0 );
    we : in std_logic_vector( 1-1 downto 0 );
    init : in std_logic_vector( 1-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    dout : out std_logic_vector( 32-1 downto 0 );
    we_o : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_dram_munge_x2;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_dram_munge_x2 is 
  signal data_choice_y_net : std_logic_vector( 32-1 downto 0 );
  signal we_choice_y_net : std_logic_vector( 1-1 downto 0 );
  signal cast_dout_net : std_logic_vector( 32-1 downto 0 );
  signal mux1_y_net_x0 : std_logic_vector( 1-1 downto 0 );
  signal edge_op_y_net : std_logic_vector( 1-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal concat_y_net : std_logic_vector( 80-1 downto 0 );
  signal constant_op_net : std_logic_vector( 8-1 downto 0 );
  signal register_q_net : std_logic_vector( 32-1 downto 0 );
  signal register1_q_net : std_logic_vector( 32-1 downto 0 );
  signal concat1_y_net : std_logic_vector( 80-1 downto 0 );
  signal register2_q_net : std_logic_vector( 32-1 downto 0 );
  signal register3_q_net : std_logic_vector( 32-1 downto 0 );
  signal delay_q_net : std_logic_vector( 1-1 downto 0 );
  signal logical_y_net : std_logic_vector( 1-1 downto 0 );
  signal delay1_q_net : std_logic_vector( 1-1 downto 0 );
  signal logical1_y_net : std_logic_vector( 1-1 downto 0 );
  signal relational3_op_net : std_logic_vector( 1-1 downto 0 );
  signal mux1_y_net : std_logic_vector( 80-1 downto 0 );
  signal dout_count_op_net : std_logic_vector( 1-1 downto 0 );
  signal relational_op_net : std_logic_vector( 1-1 downto 0 );
  signal relational1_op_net : std_logic_vector( 1-1 downto 0 );
  signal relational2_op_net : std_logic_vector( 1-1 downto 0 );
  signal input_count_op_net : std_logic_vector( 2-1 downto 0 );
  signal con0_op_net : std_logic_vector( 2-1 downto 0 );
  signal con1_op_net : std_logic_vector( 2-1 downto 0 );
  signal con2_op_net : std_logic_vector( 2-1 downto 0 );
  signal con3_op_net : std_logic_vector( 2-1 downto 0 );
  signal dram_op_net : std_logic_vector( 1-1 downto 0 );
begin
  dout <= data_choice_y_net;
  we_o <= we_choice_y_net;
  cast_dout_net <= din;
  mux1_y_net_x0 <= we;
  edge_op_y_net <= init;
  clk_net <= clk_1;
  ce_net <= ce_1;
  concat : entity xil_defaultlib.sysgen_concat_e7487baac7 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    in0 => constant_op_net,
    in1 => register_q_net,
    in2 => constant_op_net,
    in3 => register1_q_net,
    y => concat_y_net
  );
  concat1 : entity xil_defaultlib.sysgen_concat_e7487baac7 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    in0 => constant_op_net,
    in1 => register2_q_net,
    in2 => constant_op_net,
    in3 => register3_q_net,
    y => concat1_y_net
  );
  constant_x0 : entity xil_defaultlib.sysgen_constant_869e31f04d 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => constant_op_net
  );
  delay : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 1
  )
  port map (
    en => '1',
    rst => '1',
    d => logical_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay_q_net
  );
  delay1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 1
  )
  port map (
    en => '1',
    rst => '1',
    d => logical1_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay1_q_net
  );
  logical : entity xil_defaultlib.sysgen_logical_2486129911 
  port map (
    clr => '0',
    d0 => relational3_op_net,
    d1 => mux1_y_net_x0,
    clk => clk_net,
    ce => ce_net,
    y => logical_y_net
  );
  logical1 : entity xil_defaultlib.sysgen_logical_d7dc12cf31 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => logical_y_net,
    d1 => delay_q_net,
    y => logical1_y_net
  );
  mux1 : entity xil_defaultlib.sysgen_mux_71ee2b1026 
  port map (
    clr => '0',
    sel => dout_count_op_net,
    d0 => concat_y_net,
    d1 => concat1_y_net,
    clk => clk_net,
    ce => ce_net,
    y => mux1_y_net
  );
  register_x0 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlregister 
  generic map (
    d_width => 32,
    init_value => b"00000000000000000000000000000000"
  )
  port map (
    rst => "0",
    d => cast_dout_net,
    en => relational_op_net,
    clk => clk_net,
    ce => ce_net,
    q => register_q_net
  );
  register1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlregister 
  generic map (
    d_width => 32,
    init_value => b"00000000000000000000000000000000"
  )
  port map (
    rst => "0",
    d => cast_dout_net,
    en => relational1_op_net,
    clk => clk_net,
    ce => ce_net,
    q => register1_q_net
  );
  register2 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlregister 
  generic map (
    d_width => 32,
    init_value => b"00000000000000000000000000000000"
  )
  port map (
    rst => "0",
    d => cast_dout_net,
    en => relational2_op_net,
    clk => clk_net,
    ce => ce_net,
    q => register2_q_net
  );
  register3 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlregister 
  generic map (
    d_width => 32,
    init_value => b"00000000000000000000000000000000"
  )
  port map (
    rst => "0",
    d => cast_dout_net,
    en => relational3_op_net,
    clk => clk_net,
    ce => ce_net,
    q => register3_q_net
  );
  relational : entity xil_defaultlib.sysgen_relational_e5d6b5eaca 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    a => input_count_op_net,
    b => con0_op_net,
    op => relational_op_net
  );
  relational1 : entity xil_defaultlib.sysgen_relational_e5d6b5eaca 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    a => input_count_op_net,
    b => con1_op_net,
    op => relational1_op_net
  );
  relational2 : entity xil_defaultlib.sysgen_relational_e5d6b5eaca 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    a => input_count_op_net,
    b => con2_op_net,
    op => relational2_op_net
  );
  relational3 : entity xil_defaultlib.sysgen_relational_e5d6b5eaca 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    a => input_count_op_net,
    b => con3_op_net,
    op => relational3_op_net
  );
  con0 : entity xil_defaultlib.sysgen_constant_b58c3a1535 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => con0_op_net
  );
  con1 : entity xil_defaultlib.sysgen_constant_d3f27a6354 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => con1_op_net
  );
  con2 : entity xil_defaultlib.sysgen_constant_2fa4689d4e 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => con2_op_net
  );
  con3 : entity xil_defaultlib.sysgen_constant_31bab66ba6 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => con3_op_net
  );
  data_choice : entity xil_defaultlib.sysgen_mux_d624c1af44 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    sel => dram_op_net,
    d0 => cast_dout_net,
    d1 => mux1_y_net,
    y => data_choice_y_net
  );
  dout_count : entity xil_defaultlib.sysgen_counter_a9c1c293c2 
  port map (
    clr => '0',
    rst => edge_op_y_net,
    en => logical1_y_net,
    clk => clk_net,
    ce => ce_net,
    op => dout_count_op_net
  );
  dram : entity xil_defaultlib.sysgen_constant_a7b8778750 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => dram_op_net
  );
  input_count : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlcounter_free 
  generic map (
    core_name0 => "rfdc_multi_eight_adcs_2048gsps_mts_c_counter_binary_v12_0_i2",
    op_arith => xlUnsigned,
    op_width => 2
  )
  port map (
    clr => '0',
    rst => edge_op_y_net,
    en => mux1_y_net_x0,
    clk => clk_net,
    ce => ce_net,
    op => input_count_op_net
  );
  we_choice : entity xil_defaultlib.sysgen_mux_4874190f11 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    sel => dram_op_net,
    d0 => mux1_y_net_x0,
    d1 => delay1_q_net,
    y => we_choice_y_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot5_45/ss/basic_ctrl/edge_detect
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x6 is
  port (
    in_x0 : in std_logic_vector( 1-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    out_x0 : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x6;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x6 is 
  signal edge_op_y_net : std_logic_vector( 1-1 downto 0 );
  signal delay1_q_net : std_logic_vector( 1-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal delay_q_net : std_logic_vector( 1-1 downto 0 );
  signal inverter_op_net : std_logic_vector( 1-1 downto 0 );
begin
  out_x0 <= edge_op_y_net;
  delay1_q_net <= in_x0;
  clk_net <= clk_1;
  ce_net <= ce_1;
  delay : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 1
  )
  port map (
    en => '1',
    rst => '1',
    d => delay1_q_net,
    clk => clk_net,
    ce => ce_net,
    q => delay_q_net
  );
  inverter : entity xil_defaultlib.sysgen_inverter_6233897471 
  port map (
    clr => '0',
    ip => delay1_q_net,
    clk => clk_net,
    ce => ce_net,
    op => inverter_op_net
  );
  edge_op : entity xil_defaultlib.sysgen_logical_0f1aa1e2d7 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => inverter_op_net,
    d1 => delay_q_net,
    y => edge_op_y_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot5_45/ss/basic_ctrl
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_basic_ctrl_x2 is
  port (
    din : in std_logic_vector( 32-1 downto 0 );
    we : in std_logic_vector( 1-1 downto 0 );
    trig : in std_logic_vector( 1-1 downto 0 );
    ctrl : in std_logic_vector( 32-1 downto 0 );
    stopi : in std_logic_vector( 1-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    dout : out std_logic_vector( 32-1 downto 0 );
    we_o : out std_logic_vector( 1-1 downto 0 );
    go : out std_logic_vector( 1-1 downto 0 );
    init : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_basic_ctrl_x2;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_basic_ctrl_x2 is 
  signal data_choice_y_net : std_logic_vector( 32-1 downto 0 );
  signal we_choice_y_net : std_logic_vector( 1-1 downto 0 );
  signal register6_q_net : std_logic_vector( 1-1 downto 0 );
  signal edge_op_y_net_x0 : std_logic_vector( 1-1 downto 0 );
  signal cast_dout_net : std_logic_vector( 32-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc5_sync_net : std_logic_vector( 1-1 downto 0 );
  signal edge_op_y_net : std_logic_vector( 1-1 downto 0 );
  signal concatenate_y_net : std_logic_vector( 32-1 downto 0 );
  signal never_op_net : std_logic_vector( 1-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal mux1_y_net : std_logic_vector( 1-1 downto 0 );
  signal delay1_q_net : std_logic_vector( 1-1 downto 0 );
  signal constant_op_net : std_logic_vector( 1-1 downto 0 );
  signal constant1_op_net : std_logic_vector( 1-1 downto 0 );
  signal constant2_op_net : std_logic_vector( 1-1 downto 0 );
  signal enable_y_net : std_logic_vector( 1-1 downto 0 );
  signal delay2_q_net : std_logic_vector( 1-1 downto 0 );
  signal trig_src_y_net : std_logic_vector( 1-1 downto 0 );
  signal delay3_q_net : std_logic_vector( 1-1 downto 0 );
  signal valid_src_y_net : std_logic_vector( 1-1 downto 0 );
  signal inverter_op_net : std_logic_vector( 1-1 downto 0 );
  signal logical_y_net : std_logic_vector( 1-1 downto 0 );
  signal mux2_y_net : std_logic_vector( 1-1 downto 0 );
  signal register1_q_net : std_logic_vector( 1-1 downto 0 );
begin
  dout <= data_choice_y_net;
  we_o <= we_choice_y_net;
  go <= register6_q_net;
  init <= edge_op_y_net_x0;
  cast_dout_net <= din;
  rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc5_sync_net <= we;
  edge_op_y_net <= trig;
  concatenate_y_net <= ctrl;
  never_op_net <= stopi;
  clk_net <= clk_1;
  ce_net <= ce_1;
  dram_munge : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_dram_munge_x2 
  port map (
    din => cast_dout_net,
    we => mux1_y_net,
    init => edge_op_y_net_x0,
    clk_1 => clk_net,
    ce_1 => ce_net,
    dout => data_choice_y_net,
    we_o => we_choice_y_net
  );
  edge_detect : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x6 
  port map (
    in_x0 => delay1_q_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    out_x0 => edge_op_y_net_x0
  );
  constant_x0 : entity xil_defaultlib.sysgen_constant_c95a0b5efb 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => constant_op_net
  );
  constant1 : entity xil_defaultlib.sysgen_constant_c95a0b5efb 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => constant1_op_net
  );
  constant2 : entity xil_defaultlib.sysgen_constant_c95a0b5efb 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => constant2_op_net
  );
  delay1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 1
  )
  port map (
    en => '1',
    rst => '1',
    d => enable_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay1_q_net
  );
  delay2 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 1
  )
  port map (
    en => '1',
    rst => '1',
    d => trig_src_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay2_q_net
  );
  delay3 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 1
  )
  port map (
    en => '1',
    rst => '1',
    d => valid_src_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay3_q_net
  );
  inverter : entity xil_defaultlib.sysgen_inverter_6233897471 
  port map (
    clr => '0',
    ip => edge_op_y_net_x0,
    clk => clk_net,
    ce => ce_net,
    op => inverter_op_net
  );
  logical : entity xil_defaultlib.sysgen_logical_d26e5cda59 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => mux2_y_net,
    d1 => inverter_op_net,
    y => logical_y_net
  );
  mux1 : entity xil_defaultlib.sysgen_mux_4874190f11 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    sel => delay3_q_net,
    d0 => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc5_sync_net,
    d1 => constant2_op_net,
    y => mux1_y_net
  );
  mux2 : entity xil_defaultlib.sysgen_mux_4874190f11 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    sel => delay2_q_net,
    d0 => edge_op_y_net,
    d1 => constant1_op_net,
    y => mux2_y_net
  );
  register1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlregister 
  generic map (
    d_width => 1,
    init_value => b"0"
  )
  port map (
    d => constant_op_net,
    rst => logical_y_net,
    en => edge_op_y_net_x0,
    clk => clk_net,
    ce => ce_net,
    q => register1_q_net
  );
  register6 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlregister 
  generic map (
    d_width => 1,
    init_value => b"0"
  )
  port map (
    d => mux2_y_net,
    rst => edge_op_y_net_x0,
    en => register1_q_net,
    clk => clk_net,
    ce => ce_net,
    q => register6_q_net
  );
  enable : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 0,
    new_msb => 0,
    x_width => 32,
    y_width => 1
  )
  port map (
    x => concatenate_y_net,
    y => enable_y_net
  );
  trig_src : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 1,
    new_msb => 1,
    x_width => 32,
    y_width => 1
  )
  port map (
    x => concatenate_y_net,
    y => trig_src_y_net
  );
  valid_src : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 2,
    new_msb => 2,
    x_width => 32,
    y_width => 1
  )
  port map (
    x => concatenate_y_net,
    y => valid_src_y_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot5_45/ss/bram/calc_add
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_calc_add_x2 is
  port (
    in_x0 : in std_logic_vector( 10-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    out_x0 : out std_logic_vector( 10-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_calc_add_x2;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_calc_add_x2 is 
  signal mux_y_net : std_logic_vector( 10-1 downto 0 );
  signal add_del_q_net : std_logic_vector( 10-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal add_sub_s_net : std_logic_vector( 1-1 downto 0 );
  signal const_op_net : std_logic_vector( 1-1 downto 0 );
  signal lsw_y_net : std_logic_vector( 1-1 downto 0 );
  signal concat_y_net : std_logic_vector( 10-1 downto 0 );
  signal msw_y_net : std_logic_vector( 9-1 downto 0 );
  signal convert_addr_dout_net : std_logic_vector( 10-1 downto 0 );
  signal manipulate_op_net : std_logic_vector( 1-1 downto 0 );
begin
  out_x0 <= mux_y_net;
  add_del_q_net <= in_x0;
  clk_net <= clk_1;
  ce_net <= ce_1;
  add_sub : entity xil_defaultlib.sysgen_addsub_fd3b6c715c 
  port map (
    clr => '0',
    a => const_op_net,
    b => lsw_y_net,
    clk => clk_net,
    ce => ce_net,
    s => add_sub_s_net
  );
  concat : entity xil_defaultlib.sysgen_concat_f4b90dfa16 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    in0 => msw_y_net,
    in1 => add_sub_s_net,
    y => concat_y_net
  );
  const : entity xil_defaultlib.sysgen_constant_a7b8778750 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => const_op_net
  );
  convert_addr : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 10,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 10,
    latency => 0,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => add_del_q_net,
    clk => clk_net,
    ce => ce_net,
    dout => convert_addr_dout_net
  );
  lsw : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 0,
    new_msb => 0,
    x_width => 10,
    y_width => 1
  )
  port map (
    x => convert_addr_dout_net,
    y => lsw_y_net
  );
  manipulate : entity xil_defaultlib.sysgen_constant_a7b8778750 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => manipulate_op_net
  );
  msw : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 1,
    new_msb => 9,
    x_width => 10,
    y_width => 9
  )
  port map (
    x => convert_addr_dout_net,
    y => msw_y_net
  );
  mux : entity xil_defaultlib.sysgen_mux_4417594854 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    sel => manipulate_op_net,
    d0 => convert_addr_dout_net,
    d1 => concat_y_net,
    y => mux_y_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot5_45/ss/bram/munge_in
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_munge_in_x2 is
  port (
    din : in std_logic_vector( 32-1 downto 0 );
    dout : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_munge_in_x2;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_munge_in_x2 is 
  signal reinterpret_out_output_port_net : std_logic_vector( 32-1 downto 0 );
  signal dat_del_q_net : std_logic_vector( 32-1 downto 0 );
begin
  dout <= reinterpret_out_output_port_net;
  dat_del_q_net <= din;
  reinterpret_out : entity xil_defaultlib.sysgen_reinterpret_52bb84f12b 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => dat_del_q_net,
    output_port => reinterpret_out_output_port_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot5_45/ss/bram
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_bram_x2 is
  port (
    addr : in std_logic_vector( 10-1 downto 0 );
    data_in : in std_logic_vector( 32-1 downto 0 );
    we : in std_logic_vector( 1-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_45_ss_bram_addr : out std_logic_vector( 10-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_45_ss_bram_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_45_ss_bram_we : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_bram_x2;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_bram_x2 is 
  signal add_del_q_net : std_logic_vector( 10-1 downto 0 );
  signal dat_del_q_net : std_logic_vector( 32-1 downto 0 );
  signal we_del_q_net : std_logic_vector( 1-1 downto 0 );
  signal convert_addr_dout_net : std_logic_vector( 10-1 downto 0 );
  signal convert_din1_dout_net : std_logic_vector( 32-1 downto 0 );
  signal convert_we_dout_net : std_logic_vector( 1-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal mux_y_net : std_logic_vector( 10-1 downto 0 );
  signal reinterpret_out_output_port_net : std_logic_vector( 32-1 downto 0 );
begin
  add_del_q_net <= addr;
  dat_del_q_net <= data_in;
  we_del_q_net <= we;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_45_ss_bram_addr <= convert_addr_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_45_ss_bram_data_in <= convert_din1_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_45_ss_bram_we <= convert_we_dout_net;
  clk_net <= clk_1;
  ce_net <= ce_1;
  calc_add : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_calc_add_x2 
  port map (
    in_x0 => add_del_q_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    out_x0 => mux_y_net
  );
  munge_in : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_munge_in_x2 
  port map (
    din => dat_del_q_net,
    dout => reinterpret_out_output_port_net
  );
  convert_addr : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 10,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 10,
    latency => 0,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => mux_y_net,
    clk => clk_net,
    ce => ce_net,
    dout => convert_addr_dout_net
  );
  convert_din1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 32,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 32,
    latency => 0,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => reinterpret_out_output_port_net,
    clk => clk_net,
    ce => ce_net,
    dout => convert_din1_dout_net
  );
  convert_we : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 1,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 1,
    latency => 0,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => we_del_q_net,
    clk => clk_net,
    ce => ce_net,
    dout => convert_we_dout_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot5_45/ss/ctrl
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_ctrl_x2 is
  port (
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_45_ss_ctrl_user_data_out : in std_logic_vector( 32-1 downto 0 );
    in_reg : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_ctrl_x2;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_ctrl_x2 is 
  signal reint1_output_port_net : std_logic_vector( 32-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_45_ss_ctrl_user_data_out_net : std_logic_vector( 32-1 downto 0 );
  signal io_delay_q_net : std_logic_vector( 32-1 downto 0 );
  signal slice_reg_y_net : std_logic_vector( 32-1 downto 0 );
begin
  in_reg <= reint1_output_port_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_45_ss_ctrl_user_data_out_net <= rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_45_ss_ctrl_user_data_out;
  io_delay : entity xil_defaultlib.sysgen_delay_34e314c510 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d => rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_45_ss_ctrl_user_data_out_net,
    q => io_delay_q_net
  );
  slice_reg : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 0,
    new_msb => 31,
    x_width => 32,
    y_width => 32
  )
  port map (
    x => io_delay_q_net,
    y => slice_reg_y_net
  );
  reint1 : entity xil_defaultlib.sysgen_reinterpret_52bb84f12b 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => slice_reg_y_net,
    output_port => reint1_output_port_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot5_45/ss/ctrl_combine
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_ctrl_combine_x2 is
  port (
    in1 : in std_logic_vector( 28-1 downto 0 );
    in2 : in std_logic_vector( 1-1 downto 0 );
    in3 : in std_logic_vector( 2-1 downto 0 );
    in4 : in std_logic_vector( 1-1 downto 0 );
    bus_out : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_ctrl_combine_x2;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_ctrl_combine_x2 is 
  signal concatenate_y_net : std_logic_vector( 32-1 downto 0 );
  signal reinterpret4_output_port_net_x0 : std_logic_vector( 28-1 downto 0 );
  signal circ_or_y_net : std_logic_vector( 1-1 downto 0 );
  signal reinterpret2_output_port_net : std_logic_vector( 2-1 downto 0 );
  signal arm_or_y_net : std_logic_vector( 1-1 downto 0 );
  signal reinterpret1_output_port_net : std_logic_vector( 28-1 downto 0 );
  signal reinterpret2_output_port_net_x0 : std_logic_vector( 1-1 downto 0 );
  signal reinterpret3_output_port_net : std_logic_vector( 2-1 downto 0 );
  signal reinterpret4_output_port_net : std_logic_vector( 1-1 downto 0 );
begin
  bus_out <= concatenate_y_net;
  reinterpret4_output_port_net_x0 <= in1;
  circ_or_y_net <= in2;
  reinterpret2_output_port_net <= in3;
  arm_or_y_net <= in4;
  concatenate : entity xil_defaultlib.sysgen_concat_8611e618a5 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    in0 => reinterpret1_output_port_net,
    in1 => reinterpret2_output_port_net_x0,
    in2 => reinterpret3_output_port_net,
    in3 => reinterpret4_output_port_net,
    y => concatenate_y_net
  );
  reinterpret1 : entity xil_defaultlib.sysgen_reinterpret_f7e0b72e82 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => reinterpret4_output_port_net_x0,
    output_port => reinterpret1_output_port_net
  );
  reinterpret2 : entity xil_defaultlib.sysgen_reinterpret_317b92931a 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => circ_or_y_net,
    output_port => reinterpret2_output_port_net_x0
  );
  reinterpret3 : entity xil_defaultlib.sysgen_reinterpret_5dc9f217bd 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => reinterpret2_output_port_net,
    output_port => reinterpret3_output_port_net
  );
  reinterpret4 : entity xil_defaultlib.sysgen_reinterpret_317b92931a 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => arm_or_y_net,
    output_port => reinterpret4_output_port_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot5_45/ss/ctrl_split
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_ctrl_split_x2 is
  port (
    bus_in : in std_logic_vector( 32-1 downto 0 );
    msb_out4 : out std_logic_vector( 28-1 downto 0 );
    out3 : out std_logic_vector( 1-1 downto 0 );
    out2 : out std_logic_vector( 2-1 downto 0 );
    lsb_out1 : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_ctrl_split_x2;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_ctrl_split_x2 is 
  signal reinterpret4_output_port_net : std_logic_vector( 28-1 downto 0 );
  signal slice3_y_net : std_logic_vector( 1-1 downto 0 );
  signal reinterpret2_output_port_net : std_logic_vector( 2-1 downto 0 );
  signal slice1_y_net : std_logic_vector( 1-1 downto 0 );
  signal reint1_output_port_net : std_logic_vector( 32-1 downto 0 );
  signal slice2_y_net : std_logic_vector( 2-1 downto 0 );
  signal slice4_y_net : std_logic_vector( 28-1 downto 0 );
begin
  msb_out4 <= reinterpret4_output_port_net;
  out3 <= slice3_y_net;
  out2 <= reinterpret2_output_port_net;
  lsb_out1 <= slice1_y_net;
  reint1_output_port_net <= bus_in;
  reinterpret2 : entity xil_defaultlib.sysgen_reinterpret_5dc9f217bd 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => slice2_y_net,
    output_port => reinterpret2_output_port_net
  );
  reinterpret4 : entity xil_defaultlib.sysgen_reinterpret_f7e0b72e82 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => slice4_y_net,
    output_port => reinterpret4_output_port_net
  );
  slice1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 0,
    new_msb => 0,
    x_width => 32,
    y_width => 1
  )
  port map (
    x => reint1_output_port_net,
    y => slice1_y_net
  );
  slice2 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 1,
    new_msb => 2,
    x_width => 32,
    y_width => 2
  )
  port map (
    x => reint1_output_port_net,
    y => slice2_y_net
  );
  slice3 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 3,
    new_msb => 3,
    x_width => 32,
    y_width => 1
  )
  port map (
    x => reint1_output_port_net,
    y => slice3_y_net
  );
  slice4 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 4,
    new_msb => 31,
    x_width => 32,
    y_width => 28
  )
  port map (
    x => reint1_output_port_net,
    y => slice4_y_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot5_45/ss/status
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_status_x2 is
  port (
    out_reg : in std_logic_vector( 32-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_45_ss_status_user_data_in : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_status_x2;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_status_x2 is 
  signal concat_y_net : std_logic_vector( 32-1 downto 0 );
  signal cast_gw_dout_net : std_logic_vector( 32-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal io_delay_q_net : std_logic_vector( 32-1 downto 0 );
  signal reint1_output_port_net : std_logic_vector( 32-1 downto 0 );
  signal assert_reg_dout_net : std_logic_vector( 32-1 downto 0 );
begin
  concat_y_net <= out_reg;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_45_ss_status_user_data_in <= cast_gw_dout_net;
  clk_net <= clk_1;
  ce_net <= ce_1;
  io_delay : entity xil_defaultlib.sysgen_delay_34e314c510 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d => reint1_output_port_net,
    q => io_delay_q_net
  );
  cast_gw : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 32,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 32,
    latency => 1,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => io_delay_q_net,
    clk => clk_net,
    ce => ce_net,
    dout => cast_gw_dout_net
  );
  assert_reg : entity xil_defaultlib.xlpassthrough 
  generic map (
    din_width => 32,
    dout_width => 32
  )
  port map (
    din => concat_y_net,
    dout => assert_reg_dout_net
  );
  reint1 : entity xil_defaultlib.sysgen_reinterpret_52bb84f12b 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => assert_reg_dout_net,
    output_port => reint1_output_port_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot5_45/ss
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_ss_x3 is
  port (
    din : in std_logic_vector( 32-1 downto 0 );
    we : in std_logic_vector( 1-1 downto 0 );
    trig : in std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_45_ss_ctrl_user_data_out : in std_logic_vector( 32-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    arm_out : out std_logic_vector( 1-1 downto 0 );
    goto_128773995_we1 : out std_logic_vector( 1-1 downto 0 );
    goto_128773995_we4 : out std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_45_ss_bram_addr : out std_logic_vector( 10-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_45_ss_bram_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_45_ss_bram_we : out std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_45_ss_status_user_data_in : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_ss_x3;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_ss_x3 is 
  signal arm_or_y_net : std_logic_vector( 1-1 downto 0 );
  signal concatenate_y_net : std_logic_vector( 32-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc5_sync_net : std_logic_vector( 1-1 downto 0 );
  signal edge_op_y_net_x0 : std_logic_vector( 1-1 downto 0 );
  signal we_choice_y_net : std_logic_vector( 1-1 downto 0 );
  signal logical6_y_net : std_logic_vector( 1-1 downto 0 );
  signal convert_addr_dout_net : std_logic_vector( 10-1 downto 0 );
  signal convert_din1_dout_net : std_logic_vector( 32-1 downto 0 );
  signal convert_we_dout_net : std_logic_vector( 1-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_45_ss_ctrl_user_data_out_net : std_logic_vector( 32-1 downto 0 );
  signal cast_gw_dout_net : std_logic_vector( 32-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal slice2_y_net : std_logic_vector( 10-1 downto 0 );
  signal delay6_q_net : std_logic_vector( 32-1 downto 0 );
  signal concat_y_net : std_logic_vector( 32-1 downto 0 );
  signal data_choice_y_net : std_logic_vector( 32-1 downto 0 );
  signal register6_q_net : std_logic_vector( 1-1 downto 0 );
  signal never_op_net : std_logic_vector( 1-1 downto 0 );
  signal edge_op_y_net_x1 : std_logic_vector( 1-1 downto 0 );
  signal cast_dout_net : std_logic_vector( 32-1 downto 0 );
  signal concatenate_y_net_x0 : std_logic_vector( 32-1 downto 0 );
  signal add_del_q_net : std_logic_vector( 10-1 downto 0 );
  signal dat_del_q_net : std_logic_vector( 32-1 downto 0 );
  signal we_del_q_net : std_logic_vector( 1-1 downto 0 );
  signal reint1_output_port_net : std_logic_vector( 32-1 downto 0 );
  signal reinterpret4_output_port_net : std_logic_vector( 28-1 downto 0 );
  signal circ_or_y_net : std_logic_vector( 1-1 downto 0 );
  signal reinterpret2_output_port_net : std_logic_vector( 2-1 downto 0 );
  signal slice3_y_net : std_logic_vector( 1-1 downto 0 );
  signal slice1_y_net : std_logic_vector( 1-1 downto 0 );
  signal arm_op_net : std_logic_vector( 1-1 downto 0 );
  signal ri_output_port_net : std_logic_vector( 32-1 downto 0 );
  signal circ_op_net : std_logic_vector( 1-1 downto 0 );
begin
  arm_out <= arm_or_y_net;
  concatenate_y_net <= din;
  rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc5_sync_net <= we;
  edge_op_y_net_x0 <= trig;
  goto_128773995_we1 <= we_choice_y_net;
  goto_128773995_we4 <= logical6_y_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_45_ss_bram_addr <= convert_addr_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_45_ss_bram_data_in <= convert_din1_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_45_ss_bram_we <= convert_we_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_45_ss_ctrl_user_data_out_net <= rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_45_ss_ctrl_user_data_out;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_45_ss_status_user_data_in <= cast_gw_dout_net;
  clk_net <= clk_1;
  ce_net <= ce_1;
  add_gen : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_add_gen_x2 
  port map (
    din => data_choice_y_net,
    we => we_choice_y_net,
    go => register6_q_net,
    cont => never_op_net,
    init => edge_op_y_net_x1,
    clk_1 => clk_net,
    ce_1 => ce_net,
    add => slice2_y_net,
    dout => delay6_q_net,
    we_o => logical6_y_net,
    status => concat_y_net
  );
  basic_ctrl : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_basic_ctrl_x2 
  port map (
    din => cast_dout_net,
    we => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc5_sync_net,
    trig => edge_op_y_net_x0,
    ctrl => concatenate_y_net_x0,
    stopi => never_op_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    dout => data_choice_y_net,
    we_o => we_choice_y_net,
    go => register6_q_net,
    init => edge_op_y_net_x1
  );
  bram : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_bram_x2 
  port map (
    addr => add_del_q_net,
    data_in => dat_del_q_net,
    we => we_del_q_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_45_ss_bram_addr => convert_addr_dout_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_45_ss_bram_data_in => convert_din1_dout_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_45_ss_bram_we => convert_we_dout_net
  );
  ctrl : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_ctrl_x2 
  port map (
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_45_ss_ctrl_user_data_out => rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_45_ss_ctrl_user_data_out_net,
    in_reg => reint1_output_port_net
  );
  ctrl_combine : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_ctrl_combine_x2 
  port map (
    in1 => reinterpret4_output_port_net,
    in2 => circ_or_y_net,
    in3 => reinterpret2_output_port_net,
    in4 => arm_or_y_net,
    bus_out => concatenate_y_net_x0
  );
  ctrl_split : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_ctrl_split_x2 
  port map (
    bus_in => reint1_output_port_net,
    msb_out4 => reinterpret4_output_port_net,
    out3 => slice3_y_net,
    out2 => reinterpret2_output_port_net,
    lsb_out1 => slice1_y_net
  );
  status : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_status_x2 
  port map (
    out_reg => concat_y_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_45_ss_status_user_data_in => cast_gw_dout_net
  );
  add_del : entity xil_defaultlib.sysgen_delay_4e9264ffdf 
  port map (
    clr => '0',
    d => slice2_y_net,
    clk => clk_net,
    ce => ce_net,
    q => add_del_q_net
  );
  arm : entity xil_defaultlib.sysgen_constant_a7b8778750 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => arm_op_net
  );
  arm_or : entity xil_defaultlib.sysgen_logical_d7dc12cf31 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => slice1_y_net,
    d1 => arm_op_net,
    y => arm_or_y_net
  );
  cast : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 32,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 32,
    latency => 0,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => ri_output_port_net,
    clk => clk_net,
    ce => ce_net,
    dout => cast_dout_net
  );
  circ : entity xil_defaultlib.sysgen_constant_a7b8778750 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => circ_op_net
  );
  circ_or : entity xil_defaultlib.sysgen_logical_d7dc12cf31 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => slice3_y_net,
    d1 => circ_op_net,
    y => circ_or_y_net
  );
  dat_del : entity xil_defaultlib.sysgen_delay_5ec362a23c 
  port map (
    clr => '0',
    d => delay6_q_net,
    clk => clk_net,
    ce => ce_net,
    q => dat_del_q_net
  );
  never : entity xil_defaultlib.sysgen_constant_a7b8778750 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => never_op_net
  );
  ri : entity xil_defaultlib.sysgen_reinterpret_52bb84f12b 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => concatenate_y_net,
    output_port => ri_output_port_net
  );
  we_del : entity xil_defaultlib.sysgen_delay_e0740ee3f9 
  port map (
    clr => '0',
    d => logical6_y_net,
    clk => clk_net,
    ce => ce_net,
    q => we_del_q_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot5_45
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_45 is
  port (
    in_d0 : in std_logic_vector( 16-1 downto 0 );
    in_d1 : in std_logic_vector( 16-1 downto 0 );
    we : in std_logic_vector( 1-1 downto 0 );
    trig : in std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_45_ss_ctrl_user_data_out : in std_logic_vector( 32-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    arm_out : out std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_45_ss_bram_addr : out std_logic_vector( 10-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_45_ss_bram_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_45_ss_bram_we : out std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_45_ss_status_user_data_in : out std_logic_vector( 32-1 downto 0 );
    goto_128773995_we1 : out std_logic_vector( 1-1 downto 0 );
    goto_128773995_we4 : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_45;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_45 is 
  signal arm_or_y_net : std_logic_vector( 1-1 downto 0 );
  signal slice34_y_net : std_logic_vector( 16-1 downto 0 );
  signal slice37_y_net : std_logic_vector( 16-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc5_sync_net : std_logic_vector( 1-1 downto 0 );
  signal edge_op_y_net : std_logic_vector( 1-1 downto 0 );
  signal convert_addr_dout_net : std_logic_vector( 10-1 downto 0 );
  signal convert_din1_dout_net : std_logic_vector( 32-1 downto 0 );
  signal convert_we_dout_net : std_logic_vector( 1-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_45_ss_ctrl_user_data_out_net : std_logic_vector( 32-1 downto 0 );
  signal cast_gw_dout_net : std_logic_vector( 32-1 downto 0 );
  signal we_choice_y_net : std_logic_vector( 1-1 downto 0 );
  signal logical6_y_net : std_logic_vector( 1-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal concatenate_y_net : std_logic_vector( 32-1 downto 0 );
  signal assert_d0_dout_net : std_logic_vector( 16-1 downto 0 );
  signal assert_d1_dout_net : std_logic_vector( 16-1 downto 0 );
begin
  arm_out <= arm_or_y_net;
  slice34_y_net <= in_d0;
  slice37_y_net <= in_d1;
  rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc5_sync_net <= we;
  edge_op_y_net <= trig;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_45_ss_bram_addr <= convert_addr_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_45_ss_bram_data_in <= convert_din1_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_45_ss_bram_we <= convert_we_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_45_ss_ctrl_user_data_out_net <= rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_45_ss_ctrl_user_data_out;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_45_ss_status_user_data_in <= cast_gw_dout_net;
  goto_128773995_we1 <= we_choice_y_net;
  goto_128773995_we4 <= logical6_y_net;
  clk_net <= clk_1;
  ce_net <= ce_1;
  buscreate : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_buscreate 
  port map (
    in1 => assert_d0_dout_net,
    in2 => assert_d1_dout_net,
    bus_out => concatenate_y_net
  );
  ss : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_ss_x3 
  port map (
    din => concatenate_y_net,
    we => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc5_sync_net,
    trig => edge_op_y_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_45_ss_ctrl_user_data_out => rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_45_ss_ctrl_user_data_out_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    arm_out => arm_or_y_net,
    goto_128773995_we1 => we_choice_y_net,
    goto_128773995_we4 => logical6_y_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_45_ss_bram_addr => convert_addr_dout_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_45_ss_bram_data_in => convert_din1_dout_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_45_ss_bram_we => convert_we_dout_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_45_ss_status_user_data_in => cast_gw_dout_net
  );
  assert_d0 : entity xil_defaultlib.xlpassthrough 
  generic map (
    din_width => 16,
    dout_width => 16
  )
  port map (
    din => slice34_y_net,
    dout => assert_d0_dout_net
  );
  assert_d1 : entity xil_defaultlib.xlpassthrough 
  generic map (
    din_width => 16,
    dout_width => 16
  )
  port map (
    din => slice37_y_net,
    dout => assert_d1_dout_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot5_67/buscreate
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_buscreate_x2 is
  port (
    in1 : in std_logic_vector( 16-1 downto 0 );
    in2 : in std_logic_vector( 16-1 downto 0 );
    bus_out : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_buscreate_x2;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_buscreate_x2 is 
  signal concatenate_y_net : std_logic_vector( 32-1 downto 0 );
  signal assert_d0_dout_net : std_logic_vector( 16-1 downto 0 );
  signal assert_d1_dout_net : std_logic_vector( 16-1 downto 0 );
  signal reinterpret1_output_port_net : std_logic_vector( 16-1 downto 0 );
  signal reinterpret2_output_port_net : std_logic_vector( 16-1 downto 0 );
begin
  bus_out <= concatenate_y_net;
  assert_d0_dout_net <= in1;
  assert_d1_dout_net <= in2;
  concatenate : entity xil_defaultlib.sysgen_concat_37649e01d1 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    in0 => reinterpret1_output_port_net,
    in1 => reinterpret2_output_port_net,
    y => concatenate_y_net
  );
  reinterpret1 : entity xil_defaultlib.sysgen_reinterpret_03c8cdbbc1 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => assert_d0_dout_net,
    output_port => reinterpret1_output_port_net
  );
  reinterpret2 : entity xil_defaultlib.sysgen_reinterpret_03c8cdbbc1 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => assert_d1_dout_net,
    output_port => reinterpret2_output_port_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot5_67/ss/add_gen/edge_detect
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x3 is
  port (
    in_x0 : in std_logic_vector( 1-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    out_x0 : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x3;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x3 is 
  signal edge_op_y_net : std_logic_vector( 1-1 downto 0 );
  signal slice3_y_net : std_logic_vector( 1-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal delay_q_net : std_logic_vector( 1-1 downto 0 );
  signal inverter_op_net : std_logic_vector( 1-1 downto 0 );
begin
  out_x0 <= edge_op_y_net;
  slice3_y_net <= in_x0;
  clk_net <= clk_1;
  ce_net <= ce_1;
  delay : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 1
  )
  port map (
    en => '1',
    rst => '1',
    d => slice3_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay_q_net
  );
  inverter : entity xil_defaultlib.sysgen_inverter_6233897471 
  port map (
    clr => '0',
    ip => slice3_y_net,
    clk => clk_net,
    ce => ce_net,
    op => inverter_op_net
  );
  edge_op : entity xil_defaultlib.sysgen_logical_9cc14fefba 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => inverter_op_net,
    d1 => delay_q_net,
    y => edge_op_y_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot5_67/ss/add_gen
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_add_gen_x1 is
  port (
    din : in std_logic_vector( 32-1 downto 0 );
    we : in std_logic_vector( 1-1 downto 0 );
    go : in std_logic_vector( 1-1 downto 0 );
    cont : in std_logic_vector( 1-1 downto 0 );
    init : in std_logic_vector( 1-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    add : out std_logic_vector( 10-1 downto 0 );
    dout : out std_logic_vector( 32-1 downto 0 );
    we_o : out std_logic_vector( 1-1 downto 0 );
    status : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_add_gen_x1;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_add_gen_x1 is 
  signal slice2_y_net : std_logic_vector( 10-1 downto 0 );
  signal delay6_q_net : std_logic_vector( 32-1 downto 0 );
  signal logical6_y_net : std_logic_vector( 1-1 downto 0 );
  signal concat_y_net : std_logic_vector( 32-1 downto 0 );
  signal data_choice_y_net : std_logic_vector( 32-1 downto 0 );
  signal we_choice_y_net : std_logic_vector( 1-1 downto 0 );
  signal register6_q_net : std_logic_vector( 1-1 downto 0 );
  signal never_op_net : std_logic_vector( 1-1 downto 0 );
  signal edge_op_y_net : std_logic_vector( 1-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal edge_op_y_net_x0 : std_logic_vector( 1-1 downto 0 );
  signal slice3_y_net : std_logic_vector( 1-1 downto 0 );
  signal shift_op_net : std_logic_vector( 19-1 downto 0 );
  signal inverter_op_net : std_logic_vector( 1-1 downto 0 );
  signal delay1_q_net : std_logic_vector( 12-1 downto 0 );
  signal convert_dout_net : std_logic_vector( 19-1 downto 0 );
  signal register5_q_net : std_logic_vector( 1-1 downto 0 );
  signal delay_q_net : std_logic_vector( 1-1 downto 0 );
  signal delay4_q_net : std_logic_vector( 1-1 downto 0 );
  signal slice1_y_net : std_logic_vector( 12-1 downto 0 );
  signal delay3_q_net : std_logic_vector( 1-1 downto 0 );
  signal inverter1_op_net : std_logic_vector( 1-1 downto 0 );
  signal logical1_y_net : std_logic_vector( 1-1 downto 0 );
  signal logical4_y_net : std_logic_vector( 1-1 downto 0 );
  signal add_gen_op_net : std_logic_vector( 13-1 downto 0 );
begin
  add <= slice2_y_net;
  dout <= delay6_q_net;
  we_o <= logical6_y_net;
  status <= concat_y_net;
  data_choice_y_net <= din;
  we_choice_y_net <= we;
  register6_q_net <= go;
  never_op_net <= cont;
  edge_op_y_net <= init;
  clk_net <= clk_1;
  ce_net <= ce_1;
  edge_detect : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x3 
  port map (
    in_x0 => slice3_y_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    out_x0 => edge_op_y_net_x0
  );
  concat : entity xil_defaultlib.sysgen_concat_fc8edfac0e 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    in0 => shift_op_net,
    in1 => inverter_op_net,
    in2 => delay1_q_net,
    y => concat_y_net
  );
  convert : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 1,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 19,
    latency => 0,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => register5_q_net,
    clk => clk_net,
    ce => ce_net,
    dout => convert_dout_net
  );
  delay : entity xil_defaultlib.sysgen_delay_e0740ee3f9 
  port map (
    clr => '0',
    d => delay4_q_net,
    clk => clk_net,
    ce => ce_net,
    q => delay_q_net
  );
  delay1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 12
  )
  port map (
    en => '1',
    rst => '1',
    d => slice1_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay1_q_net
  );
  delay3 : entity xil_defaultlib.sysgen_delay_e0740ee3f9 
  port map (
    clr => '0',
    d => never_op_net,
    clk => clk_net,
    ce => ce_net,
    q => delay3_q_net
  );
  delay4 : entity xil_defaultlib.sysgen_delay_e0740ee3f9 
  port map (
    clr => '0',
    d => edge_op_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay4_q_net
  );
  delay6 : entity xil_defaultlib.sysgen_delay_5ec362a23c 
  port map (
    clr => '0',
    d => data_choice_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay6_q_net
  );
  inverter : entity xil_defaultlib.sysgen_inverter_918b6bc6d0 
  port map (
    clr => '0',
    ip => register5_q_net,
    clk => clk_net,
    ce => ce_net,
    op => inverter_op_net
  );
  inverter1 : entity xil_defaultlib.sysgen_inverter_6233897471 
  port map (
    clr => '0',
    ip => edge_op_y_net_x0,
    clk => clk_net,
    ce => ce_net,
    op => inverter1_op_net
  );
  logical1 : entity xil_defaultlib.sysgen_logical_2486129911 
  port map (
    clr => '0',
    d0 => we_choice_y_net,
    d1 => register6_q_net,
    clk => clk_net,
    ce => ce_net,
    y => logical1_y_net
  );
  logical4 : entity xil_defaultlib.sysgen_logical_d7dc12cf31 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => delay3_q_net,
    d1 => inverter1_op_net,
    y => logical4_y_net
  );
  logical6 : entity xil_defaultlib.sysgen_logical_c05fefc67b 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => register5_q_net,
    d1 => logical4_y_net,
    d2 => logical1_y_net,
    y => logical6_y_net
  );
  register5 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlregister 
  generic map (
    d_width => 1,
    init_value => b"1"
  )
  port map (
    d => delay3_q_net,
    rst => delay_q_net,
    en => edge_op_y_net_x0,
    clk => clk_net,
    ce => ce_net,
    q => register5_q_net
  );
  shift : entity xil_defaultlib.sysgen_shift_5af4fe0a99 
  port map (
    clr => '0',
    ip => convert_dout_net,
    clk => clk_net,
    ce => ce_net,
    op => shift_op_net
  );
  add_gen : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlcounter_free 
  generic map (
    core_name0 => "rfdc_multi_eight_adcs_2048gsps_mts_c_counter_binary_v12_0_i1",
    op_arith => xlUnsigned,
    op_width => 13
  )
  port map (
    clr => '0',
    rst => delay4_q_net,
    en => logical6_y_net,
    clk => clk_net,
    ce => ce_net,
    op => add_gen_op_net
  );
  slice1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 0,
    new_msb => 11,
    x_width => 13,
    y_width => 12
  )
  port map (
    x => add_gen_op_net,
    y => slice1_y_net
  );
  slice2 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 2,
    new_msb => 11,
    x_width => 13,
    y_width => 10
  )
  port map (
    x => add_gen_op_net,
    y => slice2_y_net
  );
  slice3 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 12,
    new_msb => 12,
    x_width => 13,
    y_width => 1
  )
  port map (
    x => add_gen_op_net,
    y => slice3_y_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot5_67/ss/basic_ctrl/dram_munge
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_dram_munge_x1 is
  port (
    din : in std_logic_vector( 32-1 downto 0 );
    we : in std_logic_vector( 1-1 downto 0 );
    init : in std_logic_vector( 1-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    dout : out std_logic_vector( 32-1 downto 0 );
    we_o : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_dram_munge_x1;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_dram_munge_x1 is 
  signal data_choice_y_net : std_logic_vector( 32-1 downto 0 );
  signal we_choice_y_net : std_logic_vector( 1-1 downto 0 );
  signal cast_dout_net : std_logic_vector( 32-1 downto 0 );
  signal mux1_y_net_x0 : std_logic_vector( 1-1 downto 0 );
  signal edge_op_y_net : std_logic_vector( 1-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal concat_y_net : std_logic_vector( 80-1 downto 0 );
  signal constant_op_net : std_logic_vector( 8-1 downto 0 );
  signal register_q_net : std_logic_vector( 32-1 downto 0 );
  signal register1_q_net : std_logic_vector( 32-1 downto 0 );
  signal concat1_y_net : std_logic_vector( 80-1 downto 0 );
  signal register2_q_net : std_logic_vector( 32-1 downto 0 );
  signal register3_q_net : std_logic_vector( 32-1 downto 0 );
  signal delay_q_net : std_logic_vector( 1-1 downto 0 );
  signal logical_y_net : std_logic_vector( 1-1 downto 0 );
  signal delay1_q_net : std_logic_vector( 1-1 downto 0 );
  signal logical1_y_net : std_logic_vector( 1-1 downto 0 );
  signal relational3_op_net : std_logic_vector( 1-1 downto 0 );
  signal mux1_y_net : std_logic_vector( 80-1 downto 0 );
  signal dout_count_op_net : std_logic_vector( 1-1 downto 0 );
  signal relational_op_net : std_logic_vector( 1-1 downto 0 );
  signal relational1_op_net : std_logic_vector( 1-1 downto 0 );
  signal relational2_op_net : std_logic_vector( 1-1 downto 0 );
  signal input_count_op_net : std_logic_vector( 2-1 downto 0 );
  signal con0_op_net : std_logic_vector( 2-1 downto 0 );
  signal con1_op_net : std_logic_vector( 2-1 downto 0 );
  signal con2_op_net : std_logic_vector( 2-1 downto 0 );
  signal con3_op_net : std_logic_vector( 2-1 downto 0 );
  signal dram_op_net : std_logic_vector( 1-1 downto 0 );
begin
  dout <= data_choice_y_net;
  we_o <= we_choice_y_net;
  cast_dout_net <= din;
  mux1_y_net_x0 <= we;
  edge_op_y_net <= init;
  clk_net <= clk_1;
  ce_net <= ce_1;
  concat : entity xil_defaultlib.sysgen_concat_e7487baac7 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    in0 => constant_op_net,
    in1 => register_q_net,
    in2 => constant_op_net,
    in3 => register1_q_net,
    y => concat_y_net
  );
  concat1 : entity xil_defaultlib.sysgen_concat_e7487baac7 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    in0 => constant_op_net,
    in1 => register2_q_net,
    in2 => constant_op_net,
    in3 => register3_q_net,
    y => concat1_y_net
  );
  constant_x0 : entity xil_defaultlib.sysgen_constant_869e31f04d 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => constant_op_net
  );
  delay : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 1
  )
  port map (
    en => '1',
    rst => '1',
    d => logical_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay_q_net
  );
  delay1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 1
  )
  port map (
    en => '1',
    rst => '1',
    d => logical1_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay1_q_net
  );
  logical : entity xil_defaultlib.sysgen_logical_2486129911 
  port map (
    clr => '0',
    d0 => relational3_op_net,
    d1 => mux1_y_net_x0,
    clk => clk_net,
    ce => ce_net,
    y => logical_y_net
  );
  logical1 : entity xil_defaultlib.sysgen_logical_d7dc12cf31 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => logical_y_net,
    d1 => delay_q_net,
    y => logical1_y_net
  );
  mux1 : entity xil_defaultlib.sysgen_mux_71ee2b1026 
  port map (
    clr => '0',
    sel => dout_count_op_net,
    d0 => concat_y_net,
    d1 => concat1_y_net,
    clk => clk_net,
    ce => ce_net,
    y => mux1_y_net
  );
  register_x0 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlregister 
  generic map (
    d_width => 32,
    init_value => b"00000000000000000000000000000000"
  )
  port map (
    rst => "0",
    d => cast_dout_net,
    en => relational_op_net,
    clk => clk_net,
    ce => ce_net,
    q => register_q_net
  );
  register1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlregister 
  generic map (
    d_width => 32,
    init_value => b"00000000000000000000000000000000"
  )
  port map (
    rst => "0",
    d => cast_dout_net,
    en => relational1_op_net,
    clk => clk_net,
    ce => ce_net,
    q => register1_q_net
  );
  register2 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlregister 
  generic map (
    d_width => 32,
    init_value => b"00000000000000000000000000000000"
  )
  port map (
    rst => "0",
    d => cast_dout_net,
    en => relational2_op_net,
    clk => clk_net,
    ce => ce_net,
    q => register2_q_net
  );
  register3 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlregister 
  generic map (
    d_width => 32,
    init_value => b"00000000000000000000000000000000"
  )
  port map (
    rst => "0",
    d => cast_dout_net,
    en => relational3_op_net,
    clk => clk_net,
    ce => ce_net,
    q => register3_q_net
  );
  relational : entity xil_defaultlib.sysgen_relational_e5d6b5eaca 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    a => input_count_op_net,
    b => con0_op_net,
    op => relational_op_net
  );
  relational1 : entity xil_defaultlib.sysgen_relational_e5d6b5eaca 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    a => input_count_op_net,
    b => con1_op_net,
    op => relational1_op_net
  );
  relational2 : entity xil_defaultlib.sysgen_relational_e5d6b5eaca 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    a => input_count_op_net,
    b => con2_op_net,
    op => relational2_op_net
  );
  relational3 : entity xil_defaultlib.sysgen_relational_e5d6b5eaca 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    a => input_count_op_net,
    b => con3_op_net,
    op => relational3_op_net
  );
  con0 : entity xil_defaultlib.sysgen_constant_b58c3a1535 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => con0_op_net
  );
  con1 : entity xil_defaultlib.sysgen_constant_d3f27a6354 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => con1_op_net
  );
  con2 : entity xil_defaultlib.sysgen_constant_2fa4689d4e 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => con2_op_net
  );
  con3 : entity xil_defaultlib.sysgen_constant_31bab66ba6 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => con3_op_net
  );
  data_choice : entity xil_defaultlib.sysgen_mux_d624c1af44 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    sel => dram_op_net,
    d0 => cast_dout_net,
    d1 => mux1_y_net,
    y => data_choice_y_net
  );
  dout_count : entity xil_defaultlib.sysgen_counter_a9c1c293c2 
  port map (
    clr => '0',
    rst => edge_op_y_net,
    en => logical1_y_net,
    clk => clk_net,
    ce => ce_net,
    op => dout_count_op_net
  );
  dram : entity xil_defaultlib.sysgen_constant_a7b8778750 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => dram_op_net
  );
  input_count : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlcounter_free 
  generic map (
    core_name0 => "rfdc_multi_eight_adcs_2048gsps_mts_c_counter_binary_v12_0_i2",
    op_arith => xlUnsigned,
    op_width => 2
  )
  port map (
    clr => '0',
    rst => edge_op_y_net,
    en => mux1_y_net_x0,
    clk => clk_net,
    ce => ce_net,
    op => input_count_op_net
  );
  we_choice : entity xil_defaultlib.sysgen_mux_4874190f11 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    sel => dram_op_net,
    d0 => mux1_y_net_x0,
    d1 => delay1_q_net,
    y => we_choice_y_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot5_67/ss/basic_ctrl/edge_detect
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x4 is
  port (
    in_x0 : in std_logic_vector( 1-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    out_x0 : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x4;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x4 is 
  signal edge_op_y_net : std_logic_vector( 1-1 downto 0 );
  signal delay1_q_net : std_logic_vector( 1-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal delay_q_net : std_logic_vector( 1-1 downto 0 );
  signal inverter_op_net : std_logic_vector( 1-1 downto 0 );
begin
  out_x0 <= edge_op_y_net;
  delay1_q_net <= in_x0;
  clk_net <= clk_1;
  ce_net <= ce_1;
  delay : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 1
  )
  port map (
    en => '1',
    rst => '1',
    d => delay1_q_net,
    clk => clk_net,
    ce => ce_net,
    q => delay_q_net
  );
  inverter : entity xil_defaultlib.sysgen_inverter_6233897471 
  port map (
    clr => '0',
    ip => delay1_q_net,
    clk => clk_net,
    ce => ce_net,
    op => inverter_op_net
  );
  edge_op : entity xil_defaultlib.sysgen_logical_0f1aa1e2d7 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => inverter_op_net,
    d1 => delay_q_net,
    y => edge_op_y_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot5_67/ss/basic_ctrl
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_basic_ctrl_x1 is
  port (
    din : in std_logic_vector( 32-1 downto 0 );
    we : in std_logic_vector( 1-1 downto 0 );
    trig : in std_logic_vector( 1-1 downto 0 );
    ctrl : in std_logic_vector( 32-1 downto 0 );
    stopi : in std_logic_vector( 1-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    dout : out std_logic_vector( 32-1 downto 0 );
    we_o : out std_logic_vector( 1-1 downto 0 );
    go : out std_logic_vector( 1-1 downto 0 );
    init : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_basic_ctrl_x1;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_basic_ctrl_x1 is 
  signal data_choice_y_net : std_logic_vector( 32-1 downto 0 );
  signal we_choice_y_net : std_logic_vector( 1-1 downto 0 );
  signal register6_q_net : std_logic_vector( 1-1 downto 0 );
  signal edge_op_y_net_x0 : std_logic_vector( 1-1 downto 0 );
  signal cast_dout_net : std_logic_vector( 32-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc5_sync_net : std_logic_vector( 1-1 downto 0 );
  signal edge_op_y_net : std_logic_vector( 1-1 downto 0 );
  signal concatenate_y_net : std_logic_vector( 32-1 downto 0 );
  signal never_op_net : std_logic_vector( 1-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal mux1_y_net : std_logic_vector( 1-1 downto 0 );
  signal delay1_q_net : std_logic_vector( 1-1 downto 0 );
  signal constant_op_net : std_logic_vector( 1-1 downto 0 );
  signal constant1_op_net : std_logic_vector( 1-1 downto 0 );
  signal constant2_op_net : std_logic_vector( 1-1 downto 0 );
  signal enable_y_net : std_logic_vector( 1-1 downto 0 );
  signal delay2_q_net : std_logic_vector( 1-1 downto 0 );
  signal trig_src_y_net : std_logic_vector( 1-1 downto 0 );
  signal delay3_q_net : std_logic_vector( 1-1 downto 0 );
  signal valid_src_y_net : std_logic_vector( 1-1 downto 0 );
  signal inverter_op_net : std_logic_vector( 1-1 downto 0 );
  signal logical_y_net : std_logic_vector( 1-1 downto 0 );
  signal mux2_y_net : std_logic_vector( 1-1 downto 0 );
  signal register1_q_net : std_logic_vector( 1-1 downto 0 );
begin
  dout <= data_choice_y_net;
  we_o <= we_choice_y_net;
  go <= register6_q_net;
  init <= edge_op_y_net_x0;
  cast_dout_net <= din;
  rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc5_sync_net <= we;
  edge_op_y_net <= trig;
  concatenate_y_net <= ctrl;
  never_op_net <= stopi;
  clk_net <= clk_1;
  ce_net <= ce_1;
  dram_munge : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_dram_munge_x1 
  port map (
    din => cast_dout_net,
    we => mux1_y_net,
    init => edge_op_y_net_x0,
    clk_1 => clk_net,
    ce_1 => ce_net,
    dout => data_choice_y_net,
    we_o => we_choice_y_net
  );
  edge_detect : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x4 
  port map (
    in_x0 => delay1_q_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    out_x0 => edge_op_y_net_x0
  );
  constant_x0 : entity xil_defaultlib.sysgen_constant_c95a0b5efb 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => constant_op_net
  );
  constant1 : entity xil_defaultlib.sysgen_constant_c95a0b5efb 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => constant1_op_net
  );
  constant2 : entity xil_defaultlib.sysgen_constant_c95a0b5efb 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => constant2_op_net
  );
  delay1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 1
  )
  port map (
    en => '1',
    rst => '1',
    d => enable_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay1_q_net
  );
  delay2 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 1
  )
  port map (
    en => '1',
    rst => '1',
    d => trig_src_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay2_q_net
  );
  delay3 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 1
  )
  port map (
    en => '1',
    rst => '1',
    d => valid_src_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay3_q_net
  );
  inverter : entity xil_defaultlib.sysgen_inverter_6233897471 
  port map (
    clr => '0',
    ip => edge_op_y_net_x0,
    clk => clk_net,
    ce => ce_net,
    op => inverter_op_net
  );
  logical : entity xil_defaultlib.sysgen_logical_d26e5cda59 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => mux2_y_net,
    d1 => inverter_op_net,
    y => logical_y_net
  );
  mux1 : entity xil_defaultlib.sysgen_mux_4874190f11 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    sel => delay3_q_net,
    d0 => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc5_sync_net,
    d1 => constant2_op_net,
    y => mux1_y_net
  );
  mux2 : entity xil_defaultlib.sysgen_mux_4874190f11 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    sel => delay2_q_net,
    d0 => edge_op_y_net,
    d1 => constant1_op_net,
    y => mux2_y_net
  );
  register1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlregister 
  generic map (
    d_width => 1,
    init_value => b"0"
  )
  port map (
    d => constant_op_net,
    rst => logical_y_net,
    en => edge_op_y_net_x0,
    clk => clk_net,
    ce => ce_net,
    q => register1_q_net
  );
  register6 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlregister 
  generic map (
    d_width => 1,
    init_value => b"0"
  )
  port map (
    d => mux2_y_net,
    rst => edge_op_y_net_x0,
    en => register1_q_net,
    clk => clk_net,
    ce => ce_net,
    q => register6_q_net
  );
  enable : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 0,
    new_msb => 0,
    x_width => 32,
    y_width => 1
  )
  port map (
    x => concatenate_y_net,
    y => enable_y_net
  );
  trig_src : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 1,
    new_msb => 1,
    x_width => 32,
    y_width => 1
  )
  port map (
    x => concatenate_y_net,
    y => trig_src_y_net
  );
  valid_src : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 2,
    new_msb => 2,
    x_width => 32,
    y_width => 1
  )
  port map (
    x => concatenate_y_net,
    y => valid_src_y_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot5_67/ss/bram/calc_add
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_calc_add_x1 is
  port (
    in_x0 : in std_logic_vector( 10-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    out_x0 : out std_logic_vector( 10-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_calc_add_x1;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_calc_add_x1 is 
  signal mux_y_net : std_logic_vector( 10-1 downto 0 );
  signal add_del_q_net : std_logic_vector( 10-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal add_sub_s_net : std_logic_vector( 1-1 downto 0 );
  signal const_op_net : std_logic_vector( 1-1 downto 0 );
  signal lsw_y_net : std_logic_vector( 1-1 downto 0 );
  signal concat_y_net : std_logic_vector( 10-1 downto 0 );
  signal msw_y_net : std_logic_vector( 9-1 downto 0 );
  signal convert_addr_dout_net : std_logic_vector( 10-1 downto 0 );
  signal manipulate_op_net : std_logic_vector( 1-1 downto 0 );
begin
  out_x0 <= mux_y_net;
  add_del_q_net <= in_x0;
  clk_net <= clk_1;
  ce_net <= ce_1;
  add_sub : entity xil_defaultlib.sysgen_addsub_fd3b6c715c 
  port map (
    clr => '0',
    a => const_op_net,
    b => lsw_y_net,
    clk => clk_net,
    ce => ce_net,
    s => add_sub_s_net
  );
  concat : entity xil_defaultlib.sysgen_concat_f4b90dfa16 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    in0 => msw_y_net,
    in1 => add_sub_s_net,
    y => concat_y_net
  );
  const : entity xil_defaultlib.sysgen_constant_a7b8778750 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => const_op_net
  );
  convert_addr : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 10,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 10,
    latency => 0,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => add_del_q_net,
    clk => clk_net,
    ce => ce_net,
    dout => convert_addr_dout_net
  );
  lsw : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 0,
    new_msb => 0,
    x_width => 10,
    y_width => 1
  )
  port map (
    x => convert_addr_dout_net,
    y => lsw_y_net
  );
  manipulate : entity xil_defaultlib.sysgen_constant_a7b8778750 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => manipulate_op_net
  );
  msw : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 1,
    new_msb => 9,
    x_width => 10,
    y_width => 9
  )
  port map (
    x => convert_addr_dout_net,
    y => msw_y_net
  );
  mux : entity xil_defaultlib.sysgen_mux_4417594854 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    sel => manipulate_op_net,
    d0 => convert_addr_dout_net,
    d1 => concat_y_net,
    y => mux_y_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot5_67/ss/bram/munge_in
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_munge_in_x1 is
  port (
    din : in std_logic_vector( 32-1 downto 0 );
    dout : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_munge_in_x1;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_munge_in_x1 is 
  signal reinterpret_out_output_port_net : std_logic_vector( 32-1 downto 0 );
  signal dat_del_q_net : std_logic_vector( 32-1 downto 0 );
begin
  dout <= reinterpret_out_output_port_net;
  dat_del_q_net <= din;
  reinterpret_out : entity xil_defaultlib.sysgen_reinterpret_52bb84f12b 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => dat_del_q_net,
    output_port => reinterpret_out_output_port_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot5_67/ss/bram
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_bram_x1 is
  port (
    addr : in std_logic_vector( 10-1 downto 0 );
    data_in : in std_logic_vector( 32-1 downto 0 );
    we : in std_logic_vector( 1-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_67_ss_bram_addr : out std_logic_vector( 10-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_67_ss_bram_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_67_ss_bram_we : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_bram_x1;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_bram_x1 is 
  signal add_del_q_net : std_logic_vector( 10-1 downto 0 );
  signal dat_del_q_net : std_logic_vector( 32-1 downto 0 );
  signal we_del_q_net : std_logic_vector( 1-1 downto 0 );
  signal convert_addr_dout_net : std_logic_vector( 10-1 downto 0 );
  signal convert_din1_dout_net : std_logic_vector( 32-1 downto 0 );
  signal convert_we_dout_net : std_logic_vector( 1-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal mux_y_net : std_logic_vector( 10-1 downto 0 );
  signal reinterpret_out_output_port_net : std_logic_vector( 32-1 downto 0 );
begin
  add_del_q_net <= addr;
  dat_del_q_net <= data_in;
  we_del_q_net <= we;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_67_ss_bram_addr <= convert_addr_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_67_ss_bram_data_in <= convert_din1_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_67_ss_bram_we <= convert_we_dout_net;
  clk_net <= clk_1;
  ce_net <= ce_1;
  calc_add : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_calc_add_x1 
  port map (
    in_x0 => add_del_q_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    out_x0 => mux_y_net
  );
  munge_in : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_munge_in_x1 
  port map (
    din => dat_del_q_net,
    dout => reinterpret_out_output_port_net
  );
  convert_addr : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 10,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 10,
    latency => 0,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => mux_y_net,
    clk => clk_net,
    ce => ce_net,
    dout => convert_addr_dout_net
  );
  convert_din1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 32,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 32,
    latency => 0,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => reinterpret_out_output_port_net,
    clk => clk_net,
    ce => ce_net,
    dout => convert_din1_dout_net
  );
  convert_we : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 1,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 1,
    latency => 0,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => we_del_q_net,
    clk => clk_net,
    ce => ce_net,
    dout => convert_we_dout_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot5_67/ss/ctrl
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_ctrl_x1 is
  port (
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_67_ss_ctrl_user_data_out : in std_logic_vector( 32-1 downto 0 );
    in_reg : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_ctrl_x1;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_ctrl_x1 is 
  signal reint1_output_port_net : std_logic_vector( 32-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_67_ss_ctrl_user_data_out_net : std_logic_vector( 32-1 downto 0 );
  signal io_delay_q_net : std_logic_vector( 32-1 downto 0 );
  signal slice_reg_y_net : std_logic_vector( 32-1 downto 0 );
begin
  in_reg <= reint1_output_port_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_67_ss_ctrl_user_data_out_net <= rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_67_ss_ctrl_user_data_out;
  io_delay : entity xil_defaultlib.sysgen_delay_34e314c510 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d => rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_67_ss_ctrl_user_data_out_net,
    q => io_delay_q_net
  );
  slice_reg : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 0,
    new_msb => 31,
    x_width => 32,
    y_width => 32
  )
  port map (
    x => io_delay_q_net,
    y => slice_reg_y_net
  );
  reint1 : entity xil_defaultlib.sysgen_reinterpret_52bb84f12b 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => slice_reg_y_net,
    output_port => reint1_output_port_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot5_67/ss/ctrl_combine
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_ctrl_combine_x1 is
  port (
    in1 : in std_logic_vector( 28-1 downto 0 );
    in2 : in std_logic_vector( 1-1 downto 0 );
    in3 : in std_logic_vector( 2-1 downto 0 );
    in4 : in std_logic_vector( 1-1 downto 0 );
    bus_out : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_ctrl_combine_x1;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_ctrl_combine_x1 is 
  signal concatenate_y_net : std_logic_vector( 32-1 downto 0 );
  signal reinterpret4_output_port_net_x0 : std_logic_vector( 28-1 downto 0 );
  signal circ_or_y_net : std_logic_vector( 1-1 downto 0 );
  signal reinterpret2_output_port_net : std_logic_vector( 2-1 downto 0 );
  signal arm_or_y_net : std_logic_vector( 1-1 downto 0 );
  signal reinterpret1_output_port_net : std_logic_vector( 28-1 downto 0 );
  signal reinterpret2_output_port_net_x0 : std_logic_vector( 1-1 downto 0 );
  signal reinterpret3_output_port_net : std_logic_vector( 2-1 downto 0 );
  signal reinterpret4_output_port_net : std_logic_vector( 1-1 downto 0 );
begin
  bus_out <= concatenate_y_net;
  reinterpret4_output_port_net_x0 <= in1;
  circ_or_y_net <= in2;
  reinterpret2_output_port_net <= in3;
  arm_or_y_net <= in4;
  concatenate : entity xil_defaultlib.sysgen_concat_8611e618a5 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    in0 => reinterpret1_output_port_net,
    in1 => reinterpret2_output_port_net_x0,
    in2 => reinterpret3_output_port_net,
    in3 => reinterpret4_output_port_net,
    y => concatenate_y_net
  );
  reinterpret1 : entity xil_defaultlib.sysgen_reinterpret_f7e0b72e82 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => reinterpret4_output_port_net_x0,
    output_port => reinterpret1_output_port_net
  );
  reinterpret2 : entity xil_defaultlib.sysgen_reinterpret_317b92931a 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => circ_or_y_net,
    output_port => reinterpret2_output_port_net_x0
  );
  reinterpret3 : entity xil_defaultlib.sysgen_reinterpret_5dc9f217bd 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => reinterpret2_output_port_net,
    output_port => reinterpret3_output_port_net
  );
  reinterpret4 : entity xil_defaultlib.sysgen_reinterpret_317b92931a 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => arm_or_y_net,
    output_port => reinterpret4_output_port_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot5_67/ss/ctrl_split
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_ctrl_split_x1 is
  port (
    bus_in : in std_logic_vector( 32-1 downto 0 );
    msb_out4 : out std_logic_vector( 28-1 downto 0 );
    out3 : out std_logic_vector( 1-1 downto 0 );
    out2 : out std_logic_vector( 2-1 downto 0 );
    lsb_out1 : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_ctrl_split_x1;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_ctrl_split_x1 is 
  signal reinterpret4_output_port_net : std_logic_vector( 28-1 downto 0 );
  signal slice3_y_net : std_logic_vector( 1-1 downto 0 );
  signal reinterpret2_output_port_net : std_logic_vector( 2-1 downto 0 );
  signal slice1_y_net : std_logic_vector( 1-1 downto 0 );
  signal reint1_output_port_net : std_logic_vector( 32-1 downto 0 );
  signal slice2_y_net : std_logic_vector( 2-1 downto 0 );
  signal slice4_y_net : std_logic_vector( 28-1 downto 0 );
begin
  msb_out4 <= reinterpret4_output_port_net;
  out3 <= slice3_y_net;
  out2 <= reinterpret2_output_port_net;
  lsb_out1 <= slice1_y_net;
  reint1_output_port_net <= bus_in;
  reinterpret2 : entity xil_defaultlib.sysgen_reinterpret_5dc9f217bd 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => slice2_y_net,
    output_port => reinterpret2_output_port_net
  );
  reinterpret4 : entity xil_defaultlib.sysgen_reinterpret_f7e0b72e82 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => slice4_y_net,
    output_port => reinterpret4_output_port_net
  );
  slice1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 0,
    new_msb => 0,
    x_width => 32,
    y_width => 1
  )
  port map (
    x => reint1_output_port_net,
    y => slice1_y_net
  );
  slice2 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 1,
    new_msb => 2,
    x_width => 32,
    y_width => 2
  )
  port map (
    x => reint1_output_port_net,
    y => slice2_y_net
  );
  slice3 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 3,
    new_msb => 3,
    x_width => 32,
    y_width => 1
  )
  port map (
    x => reint1_output_port_net,
    y => slice3_y_net
  );
  slice4 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 4,
    new_msb => 31,
    x_width => 32,
    y_width => 28
  )
  port map (
    x => reint1_output_port_net,
    y => slice4_y_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot5_67/ss/status
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_status_x1 is
  port (
    out_reg : in std_logic_vector( 32-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_67_ss_status_user_data_in : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_status_x1;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_status_x1 is 
  signal concat_y_net : std_logic_vector( 32-1 downto 0 );
  signal cast_gw_dout_net : std_logic_vector( 32-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal io_delay_q_net : std_logic_vector( 32-1 downto 0 );
  signal reint1_output_port_net : std_logic_vector( 32-1 downto 0 );
  signal assert_reg_dout_net : std_logic_vector( 32-1 downto 0 );
begin
  concat_y_net <= out_reg;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_67_ss_status_user_data_in <= cast_gw_dout_net;
  clk_net <= clk_1;
  ce_net <= ce_1;
  io_delay : entity xil_defaultlib.sysgen_delay_34e314c510 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d => reint1_output_port_net,
    q => io_delay_q_net
  );
  cast_gw : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 32,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 32,
    latency => 1,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => io_delay_q_net,
    clk => clk_net,
    ce => ce_net,
    dout => cast_gw_dout_net
  );
  assert_reg : entity xil_defaultlib.xlpassthrough 
  generic map (
    din_width => 32,
    dout_width => 32
  )
  port map (
    din => concat_y_net,
    dout => assert_reg_dout_net
  );
  reint1 : entity xil_defaultlib.sysgen_reinterpret_52bb84f12b 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => assert_reg_dout_net,
    output_port => reint1_output_port_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot5_67/ss
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_ss_x2 is
  port (
    din : in std_logic_vector( 32-1 downto 0 );
    we : in std_logic_vector( 1-1 downto 0 );
    trig : in std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_67_ss_ctrl_user_data_out : in std_logic_vector( 32-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    arm_out : out std_logic_vector( 1-1 downto 0 );
    goto_130680619_we1 : out std_logic_vector( 1-1 downto 0 );
    goto_130680619_we4 : out std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_67_ss_bram_addr : out std_logic_vector( 10-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_67_ss_bram_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_67_ss_bram_we : out std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_67_ss_status_user_data_in : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_ss_x2;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_ss_x2 is 
  signal arm_or_y_net : std_logic_vector( 1-1 downto 0 );
  signal concatenate_y_net : std_logic_vector( 32-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc5_sync_net : std_logic_vector( 1-1 downto 0 );
  signal edge_op_y_net_x0 : std_logic_vector( 1-1 downto 0 );
  signal we_choice_y_net : std_logic_vector( 1-1 downto 0 );
  signal logical6_y_net : std_logic_vector( 1-1 downto 0 );
  signal convert_addr_dout_net : std_logic_vector( 10-1 downto 0 );
  signal convert_din1_dout_net : std_logic_vector( 32-1 downto 0 );
  signal convert_we_dout_net : std_logic_vector( 1-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_67_ss_ctrl_user_data_out_net : std_logic_vector( 32-1 downto 0 );
  signal cast_gw_dout_net : std_logic_vector( 32-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal slice2_y_net : std_logic_vector( 10-1 downto 0 );
  signal delay6_q_net : std_logic_vector( 32-1 downto 0 );
  signal concat_y_net : std_logic_vector( 32-1 downto 0 );
  signal data_choice_y_net : std_logic_vector( 32-1 downto 0 );
  signal register6_q_net : std_logic_vector( 1-1 downto 0 );
  signal never_op_net : std_logic_vector( 1-1 downto 0 );
  signal edge_op_y_net_x1 : std_logic_vector( 1-1 downto 0 );
  signal cast_dout_net : std_logic_vector( 32-1 downto 0 );
  signal concatenate_y_net_x0 : std_logic_vector( 32-1 downto 0 );
  signal add_del_q_net : std_logic_vector( 10-1 downto 0 );
  signal dat_del_q_net : std_logic_vector( 32-1 downto 0 );
  signal we_del_q_net : std_logic_vector( 1-1 downto 0 );
  signal reint1_output_port_net : std_logic_vector( 32-1 downto 0 );
  signal reinterpret4_output_port_net : std_logic_vector( 28-1 downto 0 );
  signal circ_or_y_net : std_logic_vector( 1-1 downto 0 );
  signal reinterpret2_output_port_net : std_logic_vector( 2-1 downto 0 );
  signal slice3_y_net : std_logic_vector( 1-1 downto 0 );
  signal slice1_y_net : std_logic_vector( 1-1 downto 0 );
  signal arm_op_net : std_logic_vector( 1-1 downto 0 );
  signal ri_output_port_net : std_logic_vector( 32-1 downto 0 );
  signal circ_op_net : std_logic_vector( 1-1 downto 0 );
begin
  arm_out <= arm_or_y_net;
  concatenate_y_net <= din;
  rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc5_sync_net <= we;
  edge_op_y_net_x0 <= trig;
  goto_130680619_we1 <= we_choice_y_net;
  goto_130680619_we4 <= logical6_y_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_67_ss_bram_addr <= convert_addr_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_67_ss_bram_data_in <= convert_din1_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_67_ss_bram_we <= convert_we_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_67_ss_ctrl_user_data_out_net <= rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_67_ss_ctrl_user_data_out;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_67_ss_status_user_data_in <= cast_gw_dout_net;
  clk_net <= clk_1;
  ce_net <= ce_1;
  add_gen : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_add_gen_x1 
  port map (
    din => data_choice_y_net,
    we => we_choice_y_net,
    go => register6_q_net,
    cont => never_op_net,
    init => edge_op_y_net_x1,
    clk_1 => clk_net,
    ce_1 => ce_net,
    add => slice2_y_net,
    dout => delay6_q_net,
    we_o => logical6_y_net,
    status => concat_y_net
  );
  basic_ctrl : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_basic_ctrl_x1 
  port map (
    din => cast_dout_net,
    we => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc5_sync_net,
    trig => edge_op_y_net_x0,
    ctrl => concatenate_y_net_x0,
    stopi => never_op_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    dout => data_choice_y_net,
    we_o => we_choice_y_net,
    go => register6_q_net,
    init => edge_op_y_net_x1
  );
  bram : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_bram_x1 
  port map (
    addr => add_del_q_net,
    data_in => dat_del_q_net,
    we => we_del_q_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_67_ss_bram_addr => convert_addr_dout_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_67_ss_bram_data_in => convert_din1_dout_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_67_ss_bram_we => convert_we_dout_net
  );
  ctrl : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_ctrl_x1 
  port map (
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_67_ss_ctrl_user_data_out => rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_67_ss_ctrl_user_data_out_net,
    in_reg => reint1_output_port_net
  );
  ctrl_combine : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_ctrl_combine_x1 
  port map (
    in1 => reinterpret4_output_port_net,
    in2 => circ_or_y_net,
    in3 => reinterpret2_output_port_net,
    in4 => arm_or_y_net,
    bus_out => concatenate_y_net_x0
  );
  ctrl_split : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_ctrl_split_x1 
  port map (
    bus_in => reint1_output_port_net,
    msb_out4 => reinterpret4_output_port_net,
    out3 => slice3_y_net,
    out2 => reinterpret2_output_port_net,
    lsb_out1 => slice1_y_net
  );
  status : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_status_x1 
  port map (
    out_reg => concat_y_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_67_ss_status_user_data_in => cast_gw_dout_net
  );
  add_del : entity xil_defaultlib.sysgen_delay_4e9264ffdf 
  port map (
    clr => '0',
    d => slice2_y_net,
    clk => clk_net,
    ce => ce_net,
    q => add_del_q_net
  );
  arm : entity xil_defaultlib.sysgen_constant_a7b8778750 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => arm_op_net
  );
  arm_or : entity xil_defaultlib.sysgen_logical_d7dc12cf31 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => slice1_y_net,
    d1 => arm_op_net,
    y => arm_or_y_net
  );
  cast : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 32,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 32,
    latency => 0,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => ri_output_port_net,
    clk => clk_net,
    ce => ce_net,
    dout => cast_dout_net
  );
  circ : entity xil_defaultlib.sysgen_constant_a7b8778750 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => circ_op_net
  );
  circ_or : entity xil_defaultlib.sysgen_logical_d7dc12cf31 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => slice3_y_net,
    d1 => circ_op_net,
    y => circ_or_y_net
  );
  dat_del : entity xil_defaultlib.sysgen_delay_5ec362a23c 
  port map (
    clr => '0',
    d => delay6_q_net,
    clk => clk_net,
    ce => ce_net,
    q => dat_del_q_net
  );
  never : entity xil_defaultlib.sysgen_constant_a7b8778750 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => never_op_net
  );
  ri : entity xil_defaultlib.sysgen_reinterpret_52bb84f12b 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => concatenate_y_net,
    output_port => ri_output_port_net
  );
  we_del : entity xil_defaultlib.sysgen_delay_e0740ee3f9 
  port map (
    clr => '0',
    d => logical6_y_net,
    clk => clk_net,
    ce => ce_net,
    q => we_del_q_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot5_67
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_67 is
  port (
    in_d0 : in std_logic_vector( 16-1 downto 0 );
    in_d1 : in std_logic_vector( 16-1 downto 0 );
    we : in std_logic_vector( 1-1 downto 0 );
    trig : in std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_67_ss_ctrl_user_data_out : in std_logic_vector( 32-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    arm_out : out std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_67_ss_bram_addr : out std_logic_vector( 10-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_67_ss_bram_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_67_ss_bram_we : out std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_67_ss_status_user_data_in : out std_logic_vector( 32-1 downto 0 );
    goto_130680619_we1 : out std_logic_vector( 1-1 downto 0 );
    goto_130680619_we4 : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_67;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_67 is 
  signal arm_or_y_net : std_logic_vector( 1-1 downto 0 );
  signal slice35_y_net : std_logic_vector( 16-1 downto 0 );
  signal slice36_y_net : std_logic_vector( 16-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc5_sync_net : std_logic_vector( 1-1 downto 0 );
  signal edge_op_y_net : std_logic_vector( 1-1 downto 0 );
  signal convert_addr_dout_net : std_logic_vector( 10-1 downto 0 );
  signal convert_din1_dout_net : std_logic_vector( 32-1 downto 0 );
  signal convert_we_dout_net : std_logic_vector( 1-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_67_ss_ctrl_user_data_out_net : std_logic_vector( 32-1 downto 0 );
  signal cast_gw_dout_net : std_logic_vector( 32-1 downto 0 );
  signal we_choice_y_net : std_logic_vector( 1-1 downto 0 );
  signal logical6_y_net : std_logic_vector( 1-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal concatenate_y_net : std_logic_vector( 32-1 downto 0 );
  signal assert_d0_dout_net : std_logic_vector( 16-1 downto 0 );
  signal assert_d1_dout_net : std_logic_vector( 16-1 downto 0 );
begin
  arm_out <= arm_or_y_net;
  slice35_y_net <= in_d0;
  slice36_y_net <= in_d1;
  rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc5_sync_net <= we;
  edge_op_y_net <= trig;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_67_ss_bram_addr <= convert_addr_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_67_ss_bram_data_in <= convert_din1_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_67_ss_bram_we <= convert_we_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_67_ss_ctrl_user_data_out_net <= rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_67_ss_ctrl_user_data_out;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_67_ss_status_user_data_in <= cast_gw_dout_net;
  goto_130680619_we1 <= we_choice_y_net;
  goto_130680619_we4 <= logical6_y_net;
  clk_net <= clk_1;
  ce_net <= ce_1;
  buscreate : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_buscreate_x2 
  port map (
    in1 => assert_d0_dout_net,
    in2 => assert_d1_dout_net,
    bus_out => concatenate_y_net
  );
  ss : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_ss_x2 
  port map (
    din => concatenate_y_net,
    we => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc5_sync_net,
    trig => edge_op_y_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_67_ss_ctrl_user_data_out => rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_67_ss_ctrl_user_data_out_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    arm_out => arm_or_y_net,
    goto_130680619_we1 => we_choice_y_net,
    goto_130680619_we4 => logical6_y_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_67_ss_bram_addr => convert_addr_dout_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_67_ss_bram_data_in => convert_din1_dout_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_67_ss_bram_we => convert_we_dout_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_67_ss_status_user_data_in => cast_gw_dout_net
  );
  assert_d0 : entity xil_defaultlib.xlpassthrough 
  generic map (
    din_width => 16,
    dout_width => 16
  )
  port map (
    din => slice35_y_net,
    dout => assert_d0_dout_net
  );
  assert_d1 : entity xil_defaultlib.xlpassthrough 
  generic map (
    din_width => 16,
    dout_width => 16
  )
  port map (
    din => slice36_y_net,
    dout => assert_d1_dout_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot6_01/buscreate
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_buscreate_x1 is
  port (
    in1 : in std_logic_vector( 16-1 downto 0 );
    in2 : in std_logic_vector( 16-1 downto 0 );
    bus_out : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_buscreate_x1;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_buscreate_x1 is 
  signal concatenate_y_net : std_logic_vector( 32-1 downto 0 );
  signal assert_d0_dout_net : std_logic_vector( 16-1 downto 0 );
  signal assert_d1_dout_net : std_logic_vector( 16-1 downto 0 );
  signal reinterpret1_output_port_net : std_logic_vector( 16-1 downto 0 );
  signal reinterpret2_output_port_net : std_logic_vector( 16-1 downto 0 );
begin
  bus_out <= concatenate_y_net;
  assert_d0_dout_net <= in1;
  assert_d1_dout_net <= in2;
  concatenate : entity xil_defaultlib.sysgen_concat_37649e01d1 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    in0 => reinterpret1_output_port_net,
    in1 => reinterpret2_output_port_net,
    y => concatenate_y_net
  );
  reinterpret1 : entity xil_defaultlib.sysgen_reinterpret_03c8cdbbc1 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => assert_d0_dout_net,
    output_port => reinterpret1_output_port_net
  );
  reinterpret2 : entity xil_defaultlib.sysgen_reinterpret_03c8cdbbc1 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => assert_d1_dout_net,
    output_port => reinterpret2_output_port_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot6_01/ss/add_gen/edge_detect
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x24 is
  port (
    in_x0 : in std_logic_vector( 1-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    out_x0 : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x24;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x24 is 
  signal edge_op_y_net : std_logic_vector( 1-1 downto 0 );
  signal slice3_y_net : std_logic_vector( 1-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal delay_q_net : std_logic_vector( 1-1 downto 0 );
  signal inverter_op_net : std_logic_vector( 1-1 downto 0 );
begin
  out_x0 <= edge_op_y_net;
  slice3_y_net <= in_x0;
  clk_net <= clk_1;
  ce_net <= ce_1;
  delay : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 1
  )
  port map (
    en => '1',
    rst => '1',
    d => slice3_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay_q_net
  );
  inverter : entity xil_defaultlib.sysgen_inverter_6233897471 
  port map (
    clr => '0',
    ip => slice3_y_net,
    clk => clk_net,
    ce => ce_net,
    op => inverter_op_net
  );
  edge_op : entity xil_defaultlib.sysgen_logical_9cc14fefba 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => inverter_op_net,
    d1 => delay_q_net,
    y => edge_op_y_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot6_01/ss/add_gen
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_add_gen_x13 is
  port (
    din : in std_logic_vector( 32-1 downto 0 );
    we : in std_logic_vector( 1-1 downto 0 );
    go : in std_logic_vector( 1-1 downto 0 );
    cont : in std_logic_vector( 1-1 downto 0 );
    init : in std_logic_vector( 1-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    add : out std_logic_vector( 10-1 downto 0 );
    dout : out std_logic_vector( 32-1 downto 0 );
    we_o : out std_logic_vector( 1-1 downto 0 );
    status : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_add_gen_x13;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_add_gen_x13 is 
  signal slice2_y_net : std_logic_vector( 10-1 downto 0 );
  signal delay6_q_net : std_logic_vector( 32-1 downto 0 );
  signal logical6_y_net : std_logic_vector( 1-1 downto 0 );
  signal concat_y_net : std_logic_vector( 32-1 downto 0 );
  signal data_choice_y_net : std_logic_vector( 32-1 downto 0 );
  signal we_choice_y_net : std_logic_vector( 1-1 downto 0 );
  signal register6_q_net : std_logic_vector( 1-1 downto 0 );
  signal never_op_net : std_logic_vector( 1-1 downto 0 );
  signal edge_op_y_net : std_logic_vector( 1-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal edge_op_y_net_x0 : std_logic_vector( 1-1 downto 0 );
  signal slice3_y_net : std_logic_vector( 1-1 downto 0 );
  signal shift_op_net : std_logic_vector( 19-1 downto 0 );
  signal inverter_op_net : std_logic_vector( 1-1 downto 0 );
  signal delay1_q_net : std_logic_vector( 12-1 downto 0 );
  signal convert_dout_net : std_logic_vector( 19-1 downto 0 );
  signal register5_q_net : std_logic_vector( 1-1 downto 0 );
  signal delay_q_net : std_logic_vector( 1-1 downto 0 );
  signal delay4_q_net : std_logic_vector( 1-1 downto 0 );
  signal slice1_y_net : std_logic_vector( 12-1 downto 0 );
  signal delay3_q_net : std_logic_vector( 1-1 downto 0 );
  signal inverter1_op_net : std_logic_vector( 1-1 downto 0 );
  signal logical1_y_net : std_logic_vector( 1-1 downto 0 );
  signal logical4_y_net : std_logic_vector( 1-1 downto 0 );
  signal add_gen_op_net : std_logic_vector( 13-1 downto 0 );
begin
  add <= slice2_y_net;
  dout <= delay6_q_net;
  we_o <= logical6_y_net;
  status <= concat_y_net;
  data_choice_y_net <= din;
  we_choice_y_net <= we;
  register6_q_net <= go;
  never_op_net <= cont;
  edge_op_y_net <= init;
  clk_net <= clk_1;
  ce_net <= ce_1;
  edge_detect : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x24 
  port map (
    in_x0 => slice3_y_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    out_x0 => edge_op_y_net_x0
  );
  concat : entity xil_defaultlib.sysgen_concat_fc8edfac0e 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    in0 => shift_op_net,
    in1 => inverter_op_net,
    in2 => delay1_q_net,
    y => concat_y_net
  );
  convert : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 1,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 19,
    latency => 0,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => register5_q_net,
    clk => clk_net,
    ce => ce_net,
    dout => convert_dout_net
  );
  delay : entity xil_defaultlib.sysgen_delay_e0740ee3f9 
  port map (
    clr => '0',
    d => delay4_q_net,
    clk => clk_net,
    ce => ce_net,
    q => delay_q_net
  );
  delay1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 12
  )
  port map (
    en => '1',
    rst => '1',
    d => slice1_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay1_q_net
  );
  delay3 : entity xil_defaultlib.sysgen_delay_e0740ee3f9 
  port map (
    clr => '0',
    d => never_op_net,
    clk => clk_net,
    ce => ce_net,
    q => delay3_q_net
  );
  delay4 : entity xil_defaultlib.sysgen_delay_e0740ee3f9 
  port map (
    clr => '0',
    d => edge_op_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay4_q_net
  );
  delay6 : entity xil_defaultlib.sysgen_delay_5ec362a23c 
  port map (
    clr => '0',
    d => data_choice_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay6_q_net
  );
  inverter : entity xil_defaultlib.sysgen_inverter_918b6bc6d0 
  port map (
    clr => '0',
    ip => register5_q_net,
    clk => clk_net,
    ce => ce_net,
    op => inverter_op_net
  );
  inverter1 : entity xil_defaultlib.sysgen_inverter_6233897471 
  port map (
    clr => '0',
    ip => edge_op_y_net_x0,
    clk => clk_net,
    ce => ce_net,
    op => inverter1_op_net
  );
  logical1 : entity xil_defaultlib.sysgen_logical_2486129911 
  port map (
    clr => '0',
    d0 => we_choice_y_net,
    d1 => register6_q_net,
    clk => clk_net,
    ce => ce_net,
    y => logical1_y_net
  );
  logical4 : entity xil_defaultlib.sysgen_logical_d7dc12cf31 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => delay3_q_net,
    d1 => inverter1_op_net,
    y => logical4_y_net
  );
  logical6 : entity xil_defaultlib.sysgen_logical_c05fefc67b 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => register5_q_net,
    d1 => logical4_y_net,
    d2 => logical1_y_net,
    y => logical6_y_net
  );
  register5 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlregister 
  generic map (
    d_width => 1,
    init_value => b"1"
  )
  port map (
    d => delay3_q_net,
    rst => delay_q_net,
    en => edge_op_y_net_x0,
    clk => clk_net,
    ce => ce_net,
    q => register5_q_net
  );
  shift : entity xil_defaultlib.sysgen_shift_5af4fe0a99 
  port map (
    clr => '0',
    ip => convert_dout_net,
    clk => clk_net,
    ce => ce_net,
    op => shift_op_net
  );
  add_gen : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlcounter_free 
  generic map (
    core_name0 => "rfdc_multi_eight_adcs_2048gsps_mts_c_counter_binary_v12_0_i1",
    op_arith => xlUnsigned,
    op_width => 13
  )
  port map (
    clr => '0',
    rst => delay4_q_net,
    en => logical6_y_net,
    clk => clk_net,
    ce => ce_net,
    op => add_gen_op_net
  );
  slice1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 0,
    new_msb => 11,
    x_width => 13,
    y_width => 12
  )
  port map (
    x => add_gen_op_net,
    y => slice1_y_net
  );
  slice2 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 2,
    new_msb => 11,
    x_width => 13,
    y_width => 10
  )
  port map (
    x => add_gen_op_net,
    y => slice2_y_net
  );
  slice3 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 12,
    new_msb => 12,
    x_width => 13,
    y_width => 1
  )
  port map (
    x => add_gen_op_net,
    y => slice3_y_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot6_01/ss/basic_ctrl/dram_munge
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_dram_munge_x12 is
  port (
    din : in std_logic_vector( 32-1 downto 0 );
    we : in std_logic_vector( 1-1 downto 0 );
    init : in std_logic_vector( 1-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    dout : out std_logic_vector( 32-1 downto 0 );
    we_o : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_dram_munge_x12;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_dram_munge_x12 is 
  signal data_choice_y_net : std_logic_vector( 32-1 downto 0 );
  signal we_choice_y_net : std_logic_vector( 1-1 downto 0 );
  signal cast_dout_net : std_logic_vector( 32-1 downto 0 );
  signal mux1_y_net_x0 : std_logic_vector( 1-1 downto 0 );
  signal edge_op_y_net : std_logic_vector( 1-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal concat_y_net : std_logic_vector( 80-1 downto 0 );
  signal constant_op_net : std_logic_vector( 8-1 downto 0 );
  signal register_q_net : std_logic_vector( 32-1 downto 0 );
  signal register1_q_net : std_logic_vector( 32-1 downto 0 );
  signal concat1_y_net : std_logic_vector( 80-1 downto 0 );
  signal register2_q_net : std_logic_vector( 32-1 downto 0 );
  signal register3_q_net : std_logic_vector( 32-1 downto 0 );
  signal delay_q_net : std_logic_vector( 1-1 downto 0 );
  signal logical_y_net : std_logic_vector( 1-1 downto 0 );
  signal delay1_q_net : std_logic_vector( 1-1 downto 0 );
  signal logical1_y_net : std_logic_vector( 1-1 downto 0 );
  signal relational3_op_net : std_logic_vector( 1-1 downto 0 );
  signal mux1_y_net : std_logic_vector( 80-1 downto 0 );
  signal dout_count_op_net : std_logic_vector( 1-1 downto 0 );
  signal relational_op_net : std_logic_vector( 1-1 downto 0 );
  signal relational1_op_net : std_logic_vector( 1-1 downto 0 );
  signal relational2_op_net : std_logic_vector( 1-1 downto 0 );
  signal input_count_op_net : std_logic_vector( 2-1 downto 0 );
  signal con0_op_net : std_logic_vector( 2-1 downto 0 );
  signal con1_op_net : std_logic_vector( 2-1 downto 0 );
  signal con2_op_net : std_logic_vector( 2-1 downto 0 );
  signal con3_op_net : std_logic_vector( 2-1 downto 0 );
  signal dram_op_net : std_logic_vector( 1-1 downto 0 );
begin
  dout <= data_choice_y_net;
  we_o <= we_choice_y_net;
  cast_dout_net <= din;
  mux1_y_net_x0 <= we;
  edge_op_y_net <= init;
  clk_net <= clk_1;
  ce_net <= ce_1;
  concat : entity xil_defaultlib.sysgen_concat_e7487baac7 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    in0 => constant_op_net,
    in1 => register_q_net,
    in2 => constant_op_net,
    in3 => register1_q_net,
    y => concat_y_net
  );
  concat1 : entity xil_defaultlib.sysgen_concat_e7487baac7 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    in0 => constant_op_net,
    in1 => register2_q_net,
    in2 => constant_op_net,
    in3 => register3_q_net,
    y => concat1_y_net
  );
  constant_x0 : entity xil_defaultlib.sysgen_constant_869e31f04d 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => constant_op_net
  );
  delay : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 1
  )
  port map (
    en => '1',
    rst => '1',
    d => logical_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay_q_net
  );
  delay1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 1
  )
  port map (
    en => '1',
    rst => '1',
    d => logical1_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay1_q_net
  );
  logical : entity xil_defaultlib.sysgen_logical_2486129911 
  port map (
    clr => '0',
    d0 => relational3_op_net,
    d1 => mux1_y_net_x0,
    clk => clk_net,
    ce => ce_net,
    y => logical_y_net
  );
  logical1 : entity xil_defaultlib.sysgen_logical_d7dc12cf31 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => logical_y_net,
    d1 => delay_q_net,
    y => logical1_y_net
  );
  mux1 : entity xil_defaultlib.sysgen_mux_71ee2b1026 
  port map (
    clr => '0',
    sel => dout_count_op_net,
    d0 => concat_y_net,
    d1 => concat1_y_net,
    clk => clk_net,
    ce => ce_net,
    y => mux1_y_net
  );
  register_x0 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlregister 
  generic map (
    d_width => 32,
    init_value => b"00000000000000000000000000000000"
  )
  port map (
    rst => "0",
    d => cast_dout_net,
    en => relational_op_net,
    clk => clk_net,
    ce => ce_net,
    q => register_q_net
  );
  register1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlregister 
  generic map (
    d_width => 32,
    init_value => b"00000000000000000000000000000000"
  )
  port map (
    rst => "0",
    d => cast_dout_net,
    en => relational1_op_net,
    clk => clk_net,
    ce => ce_net,
    q => register1_q_net
  );
  register2 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlregister 
  generic map (
    d_width => 32,
    init_value => b"00000000000000000000000000000000"
  )
  port map (
    rst => "0",
    d => cast_dout_net,
    en => relational2_op_net,
    clk => clk_net,
    ce => ce_net,
    q => register2_q_net
  );
  register3 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlregister 
  generic map (
    d_width => 32,
    init_value => b"00000000000000000000000000000000"
  )
  port map (
    rst => "0",
    d => cast_dout_net,
    en => relational3_op_net,
    clk => clk_net,
    ce => ce_net,
    q => register3_q_net
  );
  relational : entity xil_defaultlib.sysgen_relational_e5d6b5eaca 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    a => input_count_op_net,
    b => con0_op_net,
    op => relational_op_net
  );
  relational1 : entity xil_defaultlib.sysgen_relational_e5d6b5eaca 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    a => input_count_op_net,
    b => con1_op_net,
    op => relational1_op_net
  );
  relational2 : entity xil_defaultlib.sysgen_relational_e5d6b5eaca 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    a => input_count_op_net,
    b => con2_op_net,
    op => relational2_op_net
  );
  relational3 : entity xil_defaultlib.sysgen_relational_e5d6b5eaca 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    a => input_count_op_net,
    b => con3_op_net,
    op => relational3_op_net
  );
  con0 : entity xil_defaultlib.sysgen_constant_b58c3a1535 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => con0_op_net
  );
  con1 : entity xil_defaultlib.sysgen_constant_d3f27a6354 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => con1_op_net
  );
  con2 : entity xil_defaultlib.sysgen_constant_2fa4689d4e 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => con2_op_net
  );
  con3 : entity xil_defaultlib.sysgen_constant_31bab66ba6 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => con3_op_net
  );
  data_choice : entity xil_defaultlib.sysgen_mux_d624c1af44 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    sel => dram_op_net,
    d0 => cast_dout_net,
    d1 => mux1_y_net,
    y => data_choice_y_net
  );
  dout_count : entity xil_defaultlib.sysgen_counter_a9c1c293c2 
  port map (
    clr => '0',
    rst => edge_op_y_net,
    en => logical1_y_net,
    clk => clk_net,
    ce => ce_net,
    op => dout_count_op_net
  );
  dram : entity xil_defaultlib.sysgen_constant_a7b8778750 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => dram_op_net
  );
  input_count : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlcounter_free 
  generic map (
    core_name0 => "rfdc_multi_eight_adcs_2048gsps_mts_c_counter_binary_v12_0_i2",
    op_arith => xlUnsigned,
    op_width => 2
  )
  port map (
    clr => '0',
    rst => edge_op_y_net,
    en => mux1_y_net_x0,
    clk => clk_net,
    ce => ce_net,
    op => input_count_op_net
  );
  we_choice : entity xil_defaultlib.sysgen_mux_4874190f11 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    sel => dram_op_net,
    d0 => mux1_y_net_x0,
    d1 => delay1_q_net,
    y => we_choice_y_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot6_01/ss/basic_ctrl/edge_detect
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x25 is
  port (
    in_x0 : in std_logic_vector( 1-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    out_x0 : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x25;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x25 is 
  signal edge_op_y_net : std_logic_vector( 1-1 downto 0 );
  signal delay1_q_net : std_logic_vector( 1-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal delay_q_net : std_logic_vector( 1-1 downto 0 );
  signal inverter_op_net : std_logic_vector( 1-1 downto 0 );
begin
  out_x0 <= edge_op_y_net;
  delay1_q_net <= in_x0;
  clk_net <= clk_1;
  ce_net <= ce_1;
  delay : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 1
  )
  port map (
    en => '1',
    rst => '1',
    d => delay1_q_net,
    clk => clk_net,
    ce => ce_net,
    q => delay_q_net
  );
  inverter : entity xil_defaultlib.sysgen_inverter_6233897471 
  port map (
    clr => '0',
    ip => delay1_q_net,
    clk => clk_net,
    ce => ce_net,
    op => inverter_op_net
  );
  edge_op : entity xil_defaultlib.sysgen_logical_0f1aa1e2d7 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => inverter_op_net,
    d1 => delay_q_net,
    y => edge_op_y_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot6_01/ss/basic_ctrl
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_basic_ctrl_x12 is
  port (
    din : in std_logic_vector( 32-1 downto 0 );
    we : in std_logic_vector( 1-1 downto 0 );
    trig : in std_logic_vector( 1-1 downto 0 );
    ctrl : in std_logic_vector( 32-1 downto 0 );
    stopi : in std_logic_vector( 1-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    dout : out std_logic_vector( 32-1 downto 0 );
    we_o : out std_logic_vector( 1-1 downto 0 );
    go : out std_logic_vector( 1-1 downto 0 );
    init : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_basic_ctrl_x12;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_basic_ctrl_x12 is 
  signal data_choice_y_net : std_logic_vector( 32-1 downto 0 );
  signal we_choice_y_net : std_logic_vector( 1-1 downto 0 );
  signal register6_q_net : std_logic_vector( 1-1 downto 0 );
  signal edge_op_y_net_x0 : std_logic_vector( 1-1 downto 0 );
  signal cast_dout_net : std_logic_vector( 32-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc6_sync_net : std_logic_vector( 1-1 downto 0 );
  signal edge_op_y_net : std_logic_vector( 1-1 downto 0 );
  signal concatenate_y_net : std_logic_vector( 32-1 downto 0 );
  signal never_op_net : std_logic_vector( 1-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal mux1_y_net : std_logic_vector( 1-1 downto 0 );
  signal delay1_q_net : std_logic_vector( 1-1 downto 0 );
  signal constant_op_net : std_logic_vector( 1-1 downto 0 );
  signal constant1_op_net : std_logic_vector( 1-1 downto 0 );
  signal constant2_op_net : std_logic_vector( 1-1 downto 0 );
  signal enable_y_net : std_logic_vector( 1-1 downto 0 );
  signal delay2_q_net : std_logic_vector( 1-1 downto 0 );
  signal trig_src_y_net : std_logic_vector( 1-1 downto 0 );
  signal delay3_q_net : std_logic_vector( 1-1 downto 0 );
  signal valid_src_y_net : std_logic_vector( 1-1 downto 0 );
  signal inverter_op_net : std_logic_vector( 1-1 downto 0 );
  signal logical_y_net : std_logic_vector( 1-1 downto 0 );
  signal mux2_y_net : std_logic_vector( 1-1 downto 0 );
  signal register1_q_net : std_logic_vector( 1-1 downto 0 );
begin
  dout <= data_choice_y_net;
  we_o <= we_choice_y_net;
  go <= register6_q_net;
  init <= edge_op_y_net_x0;
  cast_dout_net <= din;
  rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc6_sync_net <= we;
  edge_op_y_net <= trig;
  concatenate_y_net <= ctrl;
  never_op_net <= stopi;
  clk_net <= clk_1;
  ce_net <= ce_1;
  dram_munge : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_dram_munge_x12 
  port map (
    din => cast_dout_net,
    we => mux1_y_net,
    init => edge_op_y_net_x0,
    clk_1 => clk_net,
    ce_1 => ce_net,
    dout => data_choice_y_net,
    we_o => we_choice_y_net
  );
  edge_detect : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x25 
  port map (
    in_x0 => delay1_q_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    out_x0 => edge_op_y_net_x0
  );
  constant_x0 : entity xil_defaultlib.sysgen_constant_c95a0b5efb 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => constant_op_net
  );
  constant1 : entity xil_defaultlib.sysgen_constant_c95a0b5efb 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => constant1_op_net
  );
  constant2 : entity xil_defaultlib.sysgen_constant_c95a0b5efb 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => constant2_op_net
  );
  delay1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 1
  )
  port map (
    en => '1',
    rst => '1',
    d => enable_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay1_q_net
  );
  delay2 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 1
  )
  port map (
    en => '1',
    rst => '1',
    d => trig_src_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay2_q_net
  );
  delay3 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 1
  )
  port map (
    en => '1',
    rst => '1',
    d => valid_src_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay3_q_net
  );
  inverter : entity xil_defaultlib.sysgen_inverter_6233897471 
  port map (
    clr => '0',
    ip => edge_op_y_net_x0,
    clk => clk_net,
    ce => ce_net,
    op => inverter_op_net
  );
  logical : entity xil_defaultlib.sysgen_logical_d26e5cda59 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => mux2_y_net,
    d1 => inverter_op_net,
    y => logical_y_net
  );
  mux1 : entity xil_defaultlib.sysgen_mux_4874190f11 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    sel => delay3_q_net,
    d0 => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc6_sync_net,
    d1 => constant2_op_net,
    y => mux1_y_net
  );
  mux2 : entity xil_defaultlib.sysgen_mux_4874190f11 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    sel => delay2_q_net,
    d0 => edge_op_y_net,
    d1 => constant1_op_net,
    y => mux2_y_net
  );
  register1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlregister 
  generic map (
    d_width => 1,
    init_value => b"0"
  )
  port map (
    d => constant_op_net,
    rst => logical_y_net,
    en => edge_op_y_net_x0,
    clk => clk_net,
    ce => ce_net,
    q => register1_q_net
  );
  register6 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlregister 
  generic map (
    d_width => 1,
    init_value => b"0"
  )
  port map (
    d => mux2_y_net,
    rst => edge_op_y_net_x0,
    en => register1_q_net,
    clk => clk_net,
    ce => ce_net,
    q => register6_q_net
  );
  enable : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 0,
    new_msb => 0,
    x_width => 32,
    y_width => 1
  )
  port map (
    x => concatenate_y_net,
    y => enable_y_net
  );
  trig_src : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 1,
    new_msb => 1,
    x_width => 32,
    y_width => 1
  )
  port map (
    x => concatenate_y_net,
    y => trig_src_y_net
  );
  valid_src : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 2,
    new_msb => 2,
    x_width => 32,
    y_width => 1
  )
  port map (
    x => concatenate_y_net,
    y => valid_src_y_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot6_01/ss/bram/calc_add
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_calc_add_x12 is
  port (
    in_x0 : in std_logic_vector( 10-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    out_x0 : out std_logic_vector( 10-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_calc_add_x12;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_calc_add_x12 is 
  signal mux_y_net : std_logic_vector( 10-1 downto 0 );
  signal add_del_q_net : std_logic_vector( 10-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal add_sub_s_net : std_logic_vector( 1-1 downto 0 );
  signal const_op_net : std_logic_vector( 1-1 downto 0 );
  signal lsw_y_net : std_logic_vector( 1-1 downto 0 );
  signal concat_y_net : std_logic_vector( 10-1 downto 0 );
  signal msw_y_net : std_logic_vector( 9-1 downto 0 );
  signal convert_addr_dout_net : std_logic_vector( 10-1 downto 0 );
  signal manipulate_op_net : std_logic_vector( 1-1 downto 0 );
begin
  out_x0 <= mux_y_net;
  add_del_q_net <= in_x0;
  clk_net <= clk_1;
  ce_net <= ce_1;
  add_sub : entity xil_defaultlib.sysgen_addsub_fd3b6c715c 
  port map (
    clr => '0',
    a => const_op_net,
    b => lsw_y_net,
    clk => clk_net,
    ce => ce_net,
    s => add_sub_s_net
  );
  concat : entity xil_defaultlib.sysgen_concat_f4b90dfa16 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    in0 => msw_y_net,
    in1 => add_sub_s_net,
    y => concat_y_net
  );
  const : entity xil_defaultlib.sysgen_constant_a7b8778750 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => const_op_net
  );
  convert_addr : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 10,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 10,
    latency => 0,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => add_del_q_net,
    clk => clk_net,
    ce => ce_net,
    dout => convert_addr_dout_net
  );
  lsw : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 0,
    new_msb => 0,
    x_width => 10,
    y_width => 1
  )
  port map (
    x => convert_addr_dout_net,
    y => lsw_y_net
  );
  manipulate : entity xil_defaultlib.sysgen_constant_a7b8778750 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => manipulate_op_net
  );
  msw : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 1,
    new_msb => 9,
    x_width => 10,
    y_width => 9
  )
  port map (
    x => convert_addr_dout_net,
    y => msw_y_net
  );
  mux : entity xil_defaultlib.sysgen_mux_4417594854 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    sel => manipulate_op_net,
    d0 => convert_addr_dout_net,
    d1 => concat_y_net,
    y => mux_y_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot6_01/ss/bram/munge_in
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_munge_in_x12 is
  port (
    din : in std_logic_vector( 32-1 downto 0 );
    dout : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_munge_in_x12;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_munge_in_x12 is 
  signal reinterpret_out_output_port_net : std_logic_vector( 32-1 downto 0 );
  signal dat_del_q_net : std_logic_vector( 32-1 downto 0 );
begin
  dout <= reinterpret_out_output_port_net;
  dat_del_q_net <= din;
  reinterpret_out : entity xil_defaultlib.sysgen_reinterpret_52bb84f12b 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => dat_del_q_net,
    output_port => reinterpret_out_output_port_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot6_01/ss/bram
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_bram_x12 is
  port (
    addr : in std_logic_vector( 10-1 downto 0 );
    data_in : in std_logic_vector( 32-1 downto 0 );
    we : in std_logic_vector( 1-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_01_ss_bram_addr : out std_logic_vector( 10-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_01_ss_bram_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_01_ss_bram_we : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_bram_x12;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_bram_x12 is 
  signal add_del_q_net : std_logic_vector( 10-1 downto 0 );
  signal dat_del_q_net : std_logic_vector( 32-1 downto 0 );
  signal we_del_q_net : std_logic_vector( 1-1 downto 0 );
  signal convert_addr_dout_net : std_logic_vector( 10-1 downto 0 );
  signal convert_din1_dout_net : std_logic_vector( 32-1 downto 0 );
  signal convert_we_dout_net : std_logic_vector( 1-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal mux_y_net : std_logic_vector( 10-1 downto 0 );
  signal reinterpret_out_output_port_net : std_logic_vector( 32-1 downto 0 );
begin
  add_del_q_net <= addr;
  dat_del_q_net <= data_in;
  we_del_q_net <= we;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_01_ss_bram_addr <= convert_addr_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_01_ss_bram_data_in <= convert_din1_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_01_ss_bram_we <= convert_we_dout_net;
  clk_net <= clk_1;
  ce_net <= ce_1;
  calc_add : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_calc_add_x12 
  port map (
    in_x0 => add_del_q_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    out_x0 => mux_y_net
  );
  munge_in : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_munge_in_x12 
  port map (
    din => dat_del_q_net,
    dout => reinterpret_out_output_port_net
  );
  convert_addr : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 10,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 10,
    latency => 0,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => mux_y_net,
    clk => clk_net,
    ce => ce_net,
    dout => convert_addr_dout_net
  );
  convert_din1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 32,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 32,
    latency => 0,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => reinterpret_out_output_port_net,
    clk => clk_net,
    ce => ce_net,
    dout => convert_din1_dout_net
  );
  convert_we : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 1,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 1,
    latency => 0,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => we_del_q_net,
    clk => clk_net,
    ce => ce_net,
    dout => convert_we_dout_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot6_01/ss/ctrl
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_ctrl_x12 is
  port (
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_01_ss_ctrl_user_data_out : in std_logic_vector( 32-1 downto 0 );
    in_reg : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_ctrl_x12;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_ctrl_x12 is 
  signal reint1_output_port_net : std_logic_vector( 32-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_01_ss_ctrl_user_data_out_net : std_logic_vector( 32-1 downto 0 );
  signal io_delay_q_net : std_logic_vector( 32-1 downto 0 );
  signal slice_reg_y_net : std_logic_vector( 32-1 downto 0 );
begin
  in_reg <= reint1_output_port_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_01_ss_ctrl_user_data_out_net <= rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_01_ss_ctrl_user_data_out;
  io_delay : entity xil_defaultlib.sysgen_delay_34e314c510 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d => rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_01_ss_ctrl_user_data_out_net,
    q => io_delay_q_net
  );
  slice_reg : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 0,
    new_msb => 31,
    x_width => 32,
    y_width => 32
  )
  port map (
    x => io_delay_q_net,
    y => slice_reg_y_net
  );
  reint1 : entity xil_defaultlib.sysgen_reinterpret_52bb84f12b 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => slice_reg_y_net,
    output_port => reint1_output_port_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot6_01/ss/ctrl_combine
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_ctrl_combine_x12 is
  port (
    in1 : in std_logic_vector( 28-1 downto 0 );
    in2 : in std_logic_vector( 1-1 downto 0 );
    in3 : in std_logic_vector( 2-1 downto 0 );
    in4 : in std_logic_vector( 1-1 downto 0 );
    bus_out : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_ctrl_combine_x12;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_ctrl_combine_x12 is 
  signal concatenate_y_net : std_logic_vector( 32-1 downto 0 );
  signal reinterpret4_output_port_net_x0 : std_logic_vector( 28-1 downto 0 );
  signal circ_or_y_net : std_logic_vector( 1-1 downto 0 );
  signal reinterpret2_output_port_net : std_logic_vector( 2-1 downto 0 );
  signal arm_or_y_net : std_logic_vector( 1-1 downto 0 );
  signal reinterpret1_output_port_net : std_logic_vector( 28-1 downto 0 );
  signal reinterpret2_output_port_net_x0 : std_logic_vector( 1-1 downto 0 );
  signal reinterpret3_output_port_net : std_logic_vector( 2-1 downto 0 );
  signal reinterpret4_output_port_net : std_logic_vector( 1-1 downto 0 );
begin
  bus_out <= concatenate_y_net;
  reinterpret4_output_port_net_x0 <= in1;
  circ_or_y_net <= in2;
  reinterpret2_output_port_net <= in3;
  arm_or_y_net <= in4;
  concatenate : entity xil_defaultlib.sysgen_concat_8611e618a5 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    in0 => reinterpret1_output_port_net,
    in1 => reinterpret2_output_port_net_x0,
    in2 => reinterpret3_output_port_net,
    in3 => reinterpret4_output_port_net,
    y => concatenate_y_net
  );
  reinterpret1 : entity xil_defaultlib.sysgen_reinterpret_f7e0b72e82 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => reinterpret4_output_port_net_x0,
    output_port => reinterpret1_output_port_net
  );
  reinterpret2 : entity xil_defaultlib.sysgen_reinterpret_317b92931a 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => circ_or_y_net,
    output_port => reinterpret2_output_port_net_x0
  );
  reinterpret3 : entity xil_defaultlib.sysgen_reinterpret_5dc9f217bd 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => reinterpret2_output_port_net,
    output_port => reinterpret3_output_port_net
  );
  reinterpret4 : entity xil_defaultlib.sysgen_reinterpret_317b92931a 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => arm_or_y_net,
    output_port => reinterpret4_output_port_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot6_01/ss/ctrl_split
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_ctrl_split_x12 is
  port (
    bus_in : in std_logic_vector( 32-1 downto 0 );
    msb_out4 : out std_logic_vector( 28-1 downto 0 );
    out3 : out std_logic_vector( 1-1 downto 0 );
    out2 : out std_logic_vector( 2-1 downto 0 );
    lsb_out1 : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_ctrl_split_x12;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_ctrl_split_x12 is 
  signal reinterpret4_output_port_net : std_logic_vector( 28-1 downto 0 );
  signal slice3_y_net : std_logic_vector( 1-1 downto 0 );
  signal reinterpret2_output_port_net : std_logic_vector( 2-1 downto 0 );
  signal slice1_y_net : std_logic_vector( 1-1 downto 0 );
  signal reint1_output_port_net : std_logic_vector( 32-1 downto 0 );
  signal slice2_y_net : std_logic_vector( 2-1 downto 0 );
  signal slice4_y_net : std_logic_vector( 28-1 downto 0 );
begin
  msb_out4 <= reinterpret4_output_port_net;
  out3 <= slice3_y_net;
  out2 <= reinterpret2_output_port_net;
  lsb_out1 <= slice1_y_net;
  reint1_output_port_net <= bus_in;
  reinterpret2 : entity xil_defaultlib.sysgen_reinterpret_5dc9f217bd 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => slice2_y_net,
    output_port => reinterpret2_output_port_net
  );
  reinterpret4 : entity xil_defaultlib.sysgen_reinterpret_f7e0b72e82 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => slice4_y_net,
    output_port => reinterpret4_output_port_net
  );
  slice1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 0,
    new_msb => 0,
    x_width => 32,
    y_width => 1
  )
  port map (
    x => reint1_output_port_net,
    y => slice1_y_net
  );
  slice2 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 1,
    new_msb => 2,
    x_width => 32,
    y_width => 2
  )
  port map (
    x => reint1_output_port_net,
    y => slice2_y_net
  );
  slice3 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 3,
    new_msb => 3,
    x_width => 32,
    y_width => 1
  )
  port map (
    x => reint1_output_port_net,
    y => slice3_y_net
  );
  slice4 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 4,
    new_msb => 31,
    x_width => 32,
    y_width => 28
  )
  port map (
    x => reint1_output_port_net,
    y => slice4_y_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot6_01/ss/status
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_status_x12 is
  port (
    out_reg : in std_logic_vector( 32-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_01_ss_status_user_data_in : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_status_x12;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_status_x12 is 
  signal concat_y_net : std_logic_vector( 32-1 downto 0 );
  signal cast_gw_dout_net : std_logic_vector( 32-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal io_delay_q_net : std_logic_vector( 32-1 downto 0 );
  signal reint1_output_port_net : std_logic_vector( 32-1 downto 0 );
  signal assert_reg_dout_net : std_logic_vector( 32-1 downto 0 );
begin
  concat_y_net <= out_reg;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_01_ss_status_user_data_in <= cast_gw_dout_net;
  clk_net <= clk_1;
  ce_net <= ce_1;
  io_delay : entity xil_defaultlib.sysgen_delay_34e314c510 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d => reint1_output_port_net,
    q => io_delay_q_net
  );
  cast_gw : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 32,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 32,
    latency => 1,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => io_delay_q_net,
    clk => clk_net,
    ce => ce_net,
    dout => cast_gw_dout_net
  );
  assert_reg : entity xil_defaultlib.xlpassthrough 
  generic map (
    din_width => 32,
    dout_width => 32
  )
  port map (
    din => concat_y_net,
    dout => assert_reg_dout_net
  );
  reint1 : entity xil_defaultlib.sysgen_reinterpret_52bb84f12b 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => assert_reg_dout_net,
    output_port => reint1_output_port_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot6_01/ss
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_ss_x1 is
  port (
    din : in std_logic_vector( 32-1 downto 0 );
    we : in std_logic_vector( 1-1 downto 0 );
    trig : in std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_01_ss_ctrl_user_data_out : in std_logic_vector( 32-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    arm_out : out std_logic_vector( 1-1 downto 0 );
    goto_72940332_we1 : out std_logic_vector( 1-1 downto 0 );
    goto_72940332_we4 : out std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_01_ss_bram_addr : out std_logic_vector( 10-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_01_ss_bram_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_01_ss_bram_we : out std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_01_ss_status_user_data_in : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_ss_x1;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_ss_x1 is 
  signal arm_or_y_net : std_logic_vector( 1-1 downto 0 );
  signal concatenate_y_net : std_logic_vector( 32-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc6_sync_net : std_logic_vector( 1-1 downto 0 );
  signal edge_op_y_net_x0 : std_logic_vector( 1-1 downto 0 );
  signal we_choice_y_net : std_logic_vector( 1-1 downto 0 );
  signal logical6_y_net : std_logic_vector( 1-1 downto 0 );
  signal convert_addr_dout_net : std_logic_vector( 10-1 downto 0 );
  signal convert_din1_dout_net : std_logic_vector( 32-1 downto 0 );
  signal convert_we_dout_net : std_logic_vector( 1-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_01_ss_ctrl_user_data_out_net : std_logic_vector( 32-1 downto 0 );
  signal cast_gw_dout_net : std_logic_vector( 32-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal slice2_y_net : std_logic_vector( 10-1 downto 0 );
  signal delay6_q_net : std_logic_vector( 32-1 downto 0 );
  signal concat_y_net : std_logic_vector( 32-1 downto 0 );
  signal data_choice_y_net : std_logic_vector( 32-1 downto 0 );
  signal register6_q_net : std_logic_vector( 1-1 downto 0 );
  signal never_op_net : std_logic_vector( 1-1 downto 0 );
  signal edge_op_y_net_x1 : std_logic_vector( 1-1 downto 0 );
  signal cast_dout_net : std_logic_vector( 32-1 downto 0 );
  signal concatenate_y_net_x0 : std_logic_vector( 32-1 downto 0 );
  signal add_del_q_net : std_logic_vector( 10-1 downto 0 );
  signal dat_del_q_net : std_logic_vector( 32-1 downto 0 );
  signal we_del_q_net : std_logic_vector( 1-1 downto 0 );
  signal reint1_output_port_net : std_logic_vector( 32-1 downto 0 );
  signal reinterpret4_output_port_net : std_logic_vector( 28-1 downto 0 );
  signal circ_or_y_net : std_logic_vector( 1-1 downto 0 );
  signal reinterpret2_output_port_net : std_logic_vector( 2-1 downto 0 );
  signal slice3_y_net : std_logic_vector( 1-1 downto 0 );
  signal slice1_y_net : std_logic_vector( 1-1 downto 0 );
  signal arm_op_net : std_logic_vector( 1-1 downto 0 );
  signal ri_output_port_net : std_logic_vector( 32-1 downto 0 );
  signal circ_op_net : std_logic_vector( 1-1 downto 0 );
begin
  arm_out <= arm_or_y_net;
  concatenate_y_net <= din;
  rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc6_sync_net <= we;
  edge_op_y_net_x0 <= trig;
  goto_72940332_we1 <= we_choice_y_net;
  goto_72940332_we4 <= logical6_y_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_01_ss_bram_addr <= convert_addr_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_01_ss_bram_data_in <= convert_din1_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_01_ss_bram_we <= convert_we_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_01_ss_ctrl_user_data_out_net <= rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_01_ss_ctrl_user_data_out;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_01_ss_status_user_data_in <= cast_gw_dout_net;
  clk_net <= clk_1;
  ce_net <= ce_1;
  add_gen : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_add_gen_x13 
  port map (
    din => data_choice_y_net,
    we => we_choice_y_net,
    go => register6_q_net,
    cont => never_op_net,
    init => edge_op_y_net_x1,
    clk_1 => clk_net,
    ce_1 => ce_net,
    add => slice2_y_net,
    dout => delay6_q_net,
    we_o => logical6_y_net,
    status => concat_y_net
  );
  basic_ctrl : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_basic_ctrl_x12 
  port map (
    din => cast_dout_net,
    we => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc6_sync_net,
    trig => edge_op_y_net_x0,
    ctrl => concatenate_y_net_x0,
    stopi => never_op_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    dout => data_choice_y_net,
    we_o => we_choice_y_net,
    go => register6_q_net,
    init => edge_op_y_net_x1
  );
  bram : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_bram_x12 
  port map (
    addr => add_del_q_net,
    data_in => dat_del_q_net,
    we => we_del_q_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_01_ss_bram_addr => convert_addr_dout_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_01_ss_bram_data_in => convert_din1_dout_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_01_ss_bram_we => convert_we_dout_net
  );
  ctrl : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_ctrl_x12 
  port map (
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_01_ss_ctrl_user_data_out => rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_01_ss_ctrl_user_data_out_net,
    in_reg => reint1_output_port_net
  );
  ctrl_combine : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_ctrl_combine_x12 
  port map (
    in1 => reinterpret4_output_port_net,
    in2 => circ_or_y_net,
    in3 => reinterpret2_output_port_net,
    in4 => arm_or_y_net,
    bus_out => concatenate_y_net_x0
  );
  ctrl_split : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_ctrl_split_x12 
  port map (
    bus_in => reint1_output_port_net,
    msb_out4 => reinterpret4_output_port_net,
    out3 => slice3_y_net,
    out2 => reinterpret2_output_port_net,
    lsb_out1 => slice1_y_net
  );
  status : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_status_x12 
  port map (
    out_reg => concat_y_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_01_ss_status_user_data_in => cast_gw_dout_net
  );
  add_del : entity xil_defaultlib.sysgen_delay_4e9264ffdf 
  port map (
    clr => '0',
    d => slice2_y_net,
    clk => clk_net,
    ce => ce_net,
    q => add_del_q_net
  );
  arm : entity xil_defaultlib.sysgen_constant_a7b8778750 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => arm_op_net
  );
  arm_or : entity xil_defaultlib.sysgen_logical_d7dc12cf31 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => slice1_y_net,
    d1 => arm_op_net,
    y => arm_or_y_net
  );
  cast : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 32,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 32,
    latency => 0,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => ri_output_port_net,
    clk => clk_net,
    ce => ce_net,
    dout => cast_dout_net
  );
  circ : entity xil_defaultlib.sysgen_constant_a7b8778750 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => circ_op_net
  );
  circ_or : entity xil_defaultlib.sysgen_logical_d7dc12cf31 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => slice3_y_net,
    d1 => circ_op_net,
    y => circ_or_y_net
  );
  dat_del : entity xil_defaultlib.sysgen_delay_5ec362a23c 
  port map (
    clr => '0',
    d => delay6_q_net,
    clk => clk_net,
    ce => ce_net,
    q => dat_del_q_net
  );
  never : entity xil_defaultlib.sysgen_constant_a7b8778750 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => never_op_net
  );
  ri : entity xil_defaultlib.sysgen_reinterpret_52bb84f12b 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => concatenate_y_net,
    output_port => ri_output_port_net
  );
  we_del : entity xil_defaultlib.sysgen_delay_e0740ee3f9 
  port map (
    clr => '0',
    d => logical6_y_net,
    clk => clk_net,
    ce => ce_net,
    q => we_del_q_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot6_01
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_01 is
  port (
    in_d0 : in std_logic_vector( 16-1 downto 0 );
    in_d1 : in std_logic_vector( 16-1 downto 0 );
    we : in std_logic_vector( 1-1 downto 0 );
    trig : in std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_01_ss_ctrl_user_data_out : in std_logic_vector( 32-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    arm_out : out std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_01_ss_bram_addr : out std_logic_vector( 10-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_01_ss_bram_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_01_ss_bram_we : out std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_01_ss_status_user_data_in : out std_logic_vector( 32-1 downto 0 );
    goto_72940332_we1 : out std_logic_vector( 1-1 downto 0 );
    goto_72940332_we4 : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_01;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_01 is 
  signal arm_or_y_net : std_logic_vector( 1-1 downto 0 );
  signal slice47_y_net : std_logic_vector( 16-1 downto 0 );
  signal slice46_y_net : std_logic_vector( 16-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc6_sync_net : std_logic_vector( 1-1 downto 0 );
  signal edge_op_y_net : std_logic_vector( 1-1 downto 0 );
  signal convert_addr_dout_net : std_logic_vector( 10-1 downto 0 );
  signal convert_din1_dout_net : std_logic_vector( 32-1 downto 0 );
  signal convert_we_dout_net : std_logic_vector( 1-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_01_ss_ctrl_user_data_out_net : std_logic_vector( 32-1 downto 0 );
  signal cast_gw_dout_net : std_logic_vector( 32-1 downto 0 );
  signal we_choice_y_net : std_logic_vector( 1-1 downto 0 );
  signal logical6_y_net : std_logic_vector( 1-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal concatenate_y_net : std_logic_vector( 32-1 downto 0 );
  signal assert_d0_dout_net : std_logic_vector( 16-1 downto 0 );
  signal assert_d1_dout_net : std_logic_vector( 16-1 downto 0 );
begin
  arm_out <= arm_or_y_net;
  slice47_y_net <= in_d0;
  slice46_y_net <= in_d1;
  rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc6_sync_net <= we;
  edge_op_y_net <= trig;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_01_ss_bram_addr <= convert_addr_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_01_ss_bram_data_in <= convert_din1_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_01_ss_bram_we <= convert_we_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_01_ss_ctrl_user_data_out_net <= rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_01_ss_ctrl_user_data_out;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_01_ss_status_user_data_in <= cast_gw_dout_net;
  goto_72940332_we1 <= we_choice_y_net;
  goto_72940332_we4 <= logical6_y_net;
  clk_net <= clk_1;
  ce_net <= ce_1;
  buscreate : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_buscreate_x1 
  port map (
    in1 => assert_d0_dout_net,
    in2 => assert_d1_dout_net,
    bus_out => concatenate_y_net
  );
  ss : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_ss_x1 
  port map (
    din => concatenate_y_net,
    we => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc6_sync_net,
    trig => edge_op_y_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_01_ss_ctrl_user_data_out => rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_01_ss_ctrl_user_data_out_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    arm_out => arm_or_y_net,
    goto_72940332_we1 => we_choice_y_net,
    goto_72940332_we4 => logical6_y_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_01_ss_bram_addr => convert_addr_dout_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_01_ss_bram_data_in => convert_din1_dout_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_01_ss_bram_we => convert_we_dout_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_01_ss_status_user_data_in => cast_gw_dout_net
  );
  assert_d0 : entity xil_defaultlib.xlpassthrough 
  generic map (
    din_width => 16,
    dout_width => 16
  )
  port map (
    din => slice47_y_net,
    dout => assert_d0_dout_net
  );
  assert_d1 : entity xil_defaultlib.xlpassthrough 
  generic map (
    din_width => 16,
    dout_width => 16
  )
  port map (
    din => slice46_y_net,
    dout => assert_d1_dout_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot6_23/buscreate
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_buscreate_x12 is
  port (
    in1 : in std_logic_vector( 16-1 downto 0 );
    in2 : in std_logic_vector( 16-1 downto 0 );
    bus_out : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_buscreate_x12;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_buscreate_x12 is 
  signal concatenate_y_net : std_logic_vector( 32-1 downto 0 );
  signal assert_d0_dout_net : std_logic_vector( 16-1 downto 0 );
  signal assert_d1_dout_net : std_logic_vector( 16-1 downto 0 );
  signal reinterpret1_output_port_net : std_logic_vector( 16-1 downto 0 );
  signal reinterpret2_output_port_net : std_logic_vector( 16-1 downto 0 );
begin
  bus_out <= concatenate_y_net;
  assert_d0_dout_net <= in1;
  assert_d1_dout_net <= in2;
  concatenate : entity xil_defaultlib.sysgen_concat_37649e01d1 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    in0 => reinterpret1_output_port_net,
    in1 => reinterpret2_output_port_net,
    y => concatenate_y_net
  );
  reinterpret1 : entity xil_defaultlib.sysgen_reinterpret_03c8cdbbc1 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => assert_d0_dout_net,
    output_port => reinterpret1_output_port_net
  );
  reinterpret2 : entity xil_defaultlib.sysgen_reinterpret_03c8cdbbc1 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => assert_d1_dout_net,
    output_port => reinterpret2_output_port_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot6_23/ss/add_gen/edge_detect
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x22 is
  port (
    in_x0 : in std_logic_vector( 1-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    out_x0 : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x22;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x22 is 
  signal edge_op_y_net : std_logic_vector( 1-1 downto 0 );
  signal slice3_y_net : std_logic_vector( 1-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal delay_q_net : std_logic_vector( 1-1 downto 0 );
  signal inverter_op_net : std_logic_vector( 1-1 downto 0 );
begin
  out_x0 <= edge_op_y_net;
  slice3_y_net <= in_x0;
  clk_net <= clk_1;
  ce_net <= ce_1;
  delay : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 1
  )
  port map (
    en => '1',
    rst => '1',
    d => slice3_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay_q_net
  );
  inverter : entity xil_defaultlib.sysgen_inverter_6233897471 
  port map (
    clr => '0',
    ip => slice3_y_net,
    clk => clk_net,
    ce => ce_net,
    op => inverter_op_net
  );
  edge_op : entity xil_defaultlib.sysgen_logical_9cc14fefba 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => inverter_op_net,
    d1 => delay_q_net,
    y => edge_op_y_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot6_23/ss/add_gen
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_add_gen_x10 is
  port (
    din : in std_logic_vector( 32-1 downto 0 );
    we : in std_logic_vector( 1-1 downto 0 );
    go : in std_logic_vector( 1-1 downto 0 );
    cont : in std_logic_vector( 1-1 downto 0 );
    init : in std_logic_vector( 1-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    add : out std_logic_vector( 10-1 downto 0 );
    dout : out std_logic_vector( 32-1 downto 0 );
    we_o : out std_logic_vector( 1-1 downto 0 );
    status : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_add_gen_x10;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_add_gen_x10 is 
  signal slice2_y_net : std_logic_vector( 10-1 downto 0 );
  signal delay6_q_net : std_logic_vector( 32-1 downto 0 );
  signal logical6_y_net : std_logic_vector( 1-1 downto 0 );
  signal concat_y_net : std_logic_vector( 32-1 downto 0 );
  signal data_choice_y_net : std_logic_vector( 32-1 downto 0 );
  signal we_choice_y_net : std_logic_vector( 1-1 downto 0 );
  signal register6_q_net : std_logic_vector( 1-1 downto 0 );
  signal never_op_net : std_logic_vector( 1-1 downto 0 );
  signal edge_op_y_net : std_logic_vector( 1-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal edge_op_y_net_x0 : std_logic_vector( 1-1 downto 0 );
  signal slice3_y_net : std_logic_vector( 1-1 downto 0 );
  signal shift_op_net : std_logic_vector( 19-1 downto 0 );
  signal inverter_op_net : std_logic_vector( 1-1 downto 0 );
  signal delay1_q_net : std_logic_vector( 12-1 downto 0 );
  signal convert_dout_net : std_logic_vector( 19-1 downto 0 );
  signal register5_q_net : std_logic_vector( 1-1 downto 0 );
  signal delay_q_net : std_logic_vector( 1-1 downto 0 );
  signal delay4_q_net : std_logic_vector( 1-1 downto 0 );
  signal slice1_y_net : std_logic_vector( 12-1 downto 0 );
  signal delay3_q_net : std_logic_vector( 1-1 downto 0 );
  signal inverter1_op_net : std_logic_vector( 1-1 downto 0 );
  signal logical1_y_net : std_logic_vector( 1-1 downto 0 );
  signal logical4_y_net : std_logic_vector( 1-1 downto 0 );
  signal add_gen_op_net : std_logic_vector( 13-1 downto 0 );
begin
  add <= slice2_y_net;
  dout <= delay6_q_net;
  we_o <= logical6_y_net;
  status <= concat_y_net;
  data_choice_y_net <= din;
  we_choice_y_net <= we;
  register6_q_net <= go;
  never_op_net <= cont;
  edge_op_y_net <= init;
  clk_net <= clk_1;
  ce_net <= ce_1;
  edge_detect : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x22 
  port map (
    in_x0 => slice3_y_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    out_x0 => edge_op_y_net_x0
  );
  concat : entity xil_defaultlib.sysgen_concat_fc8edfac0e 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    in0 => shift_op_net,
    in1 => inverter_op_net,
    in2 => delay1_q_net,
    y => concat_y_net
  );
  convert : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 1,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 19,
    latency => 0,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => register5_q_net,
    clk => clk_net,
    ce => ce_net,
    dout => convert_dout_net
  );
  delay : entity xil_defaultlib.sysgen_delay_e0740ee3f9 
  port map (
    clr => '0',
    d => delay4_q_net,
    clk => clk_net,
    ce => ce_net,
    q => delay_q_net
  );
  delay1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 12
  )
  port map (
    en => '1',
    rst => '1',
    d => slice1_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay1_q_net
  );
  delay3 : entity xil_defaultlib.sysgen_delay_e0740ee3f9 
  port map (
    clr => '0',
    d => never_op_net,
    clk => clk_net,
    ce => ce_net,
    q => delay3_q_net
  );
  delay4 : entity xil_defaultlib.sysgen_delay_e0740ee3f9 
  port map (
    clr => '0',
    d => edge_op_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay4_q_net
  );
  delay6 : entity xil_defaultlib.sysgen_delay_5ec362a23c 
  port map (
    clr => '0',
    d => data_choice_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay6_q_net
  );
  inverter : entity xil_defaultlib.sysgen_inverter_918b6bc6d0 
  port map (
    clr => '0',
    ip => register5_q_net,
    clk => clk_net,
    ce => ce_net,
    op => inverter_op_net
  );
  inverter1 : entity xil_defaultlib.sysgen_inverter_6233897471 
  port map (
    clr => '0',
    ip => edge_op_y_net_x0,
    clk => clk_net,
    ce => ce_net,
    op => inverter1_op_net
  );
  logical1 : entity xil_defaultlib.sysgen_logical_2486129911 
  port map (
    clr => '0',
    d0 => we_choice_y_net,
    d1 => register6_q_net,
    clk => clk_net,
    ce => ce_net,
    y => logical1_y_net
  );
  logical4 : entity xil_defaultlib.sysgen_logical_d7dc12cf31 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => delay3_q_net,
    d1 => inverter1_op_net,
    y => logical4_y_net
  );
  logical6 : entity xil_defaultlib.sysgen_logical_c05fefc67b 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => register5_q_net,
    d1 => logical4_y_net,
    d2 => logical1_y_net,
    y => logical6_y_net
  );
  register5 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlregister 
  generic map (
    d_width => 1,
    init_value => b"1"
  )
  port map (
    d => delay3_q_net,
    rst => delay_q_net,
    en => edge_op_y_net_x0,
    clk => clk_net,
    ce => ce_net,
    q => register5_q_net
  );
  shift : entity xil_defaultlib.sysgen_shift_5af4fe0a99 
  port map (
    clr => '0',
    ip => convert_dout_net,
    clk => clk_net,
    ce => ce_net,
    op => shift_op_net
  );
  add_gen : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlcounter_free 
  generic map (
    core_name0 => "rfdc_multi_eight_adcs_2048gsps_mts_c_counter_binary_v12_0_i1",
    op_arith => xlUnsigned,
    op_width => 13
  )
  port map (
    clr => '0',
    rst => delay4_q_net,
    en => logical6_y_net,
    clk => clk_net,
    ce => ce_net,
    op => add_gen_op_net
  );
  slice1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 0,
    new_msb => 11,
    x_width => 13,
    y_width => 12
  )
  port map (
    x => add_gen_op_net,
    y => slice1_y_net
  );
  slice2 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 2,
    new_msb => 11,
    x_width => 13,
    y_width => 10
  )
  port map (
    x => add_gen_op_net,
    y => slice2_y_net
  );
  slice3 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 12,
    new_msb => 12,
    x_width => 13,
    y_width => 1
  )
  port map (
    x => add_gen_op_net,
    y => slice3_y_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot6_23/ss/basic_ctrl/dram_munge
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_dram_munge_x11 is
  port (
    din : in std_logic_vector( 32-1 downto 0 );
    we : in std_logic_vector( 1-1 downto 0 );
    init : in std_logic_vector( 1-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    dout : out std_logic_vector( 32-1 downto 0 );
    we_o : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_dram_munge_x11;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_dram_munge_x11 is 
  signal data_choice_y_net : std_logic_vector( 32-1 downto 0 );
  signal we_choice_y_net : std_logic_vector( 1-1 downto 0 );
  signal cast_dout_net : std_logic_vector( 32-1 downto 0 );
  signal mux1_y_net_x0 : std_logic_vector( 1-1 downto 0 );
  signal edge_op_y_net : std_logic_vector( 1-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal concat_y_net : std_logic_vector( 80-1 downto 0 );
  signal constant_op_net : std_logic_vector( 8-1 downto 0 );
  signal register_q_net : std_logic_vector( 32-1 downto 0 );
  signal register1_q_net : std_logic_vector( 32-1 downto 0 );
  signal concat1_y_net : std_logic_vector( 80-1 downto 0 );
  signal register2_q_net : std_logic_vector( 32-1 downto 0 );
  signal register3_q_net : std_logic_vector( 32-1 downto 0 );
  signal delay_q_net : std_logic_vector( 1-1 downto 0 );
  signal logical_y_net : std_logic_vector( 1-1 downto 0 );
  signal delay1_q_net : std_logic_vector( 1-1 downto 0 );
  signal logical1_y_net : std_logic_vector( 1-1 downto 0 );
  signal relational3_op_net : std_logic_vector( 1-1 downto 0 );
  signal mux1_y_net : std_logic_vector( 80-1 downto 0 );
  signal dout_count_op_net : std_logic_vector( 1-1 downto 0 );
  signal relational_op_net : std_logic_vector( 1-1 downto 0 );
  signal relational1_op_net : std_logic_vector( 1-1 downto 0 );
  signal relational2_op_net : std_logic_vector( 1-1 downto 0 );
  signal input_count_op_net : std_logic_vector( 2-1 downto 0 );
  signal con0_op_net : std_logic_vector( 2-1 downto 0 );
  signal con1_op_net : std_logic_vector( 2-1 downto 0 );
  signal con2_op_net : std_logic_vector( 2-1 downto 0 );
  signal con3_op_net : std_logic_vector( 2-1 downto 0 );
  signal dram_op_net : std_logic_vector( 1-1 downto 0 );
begin
  dout <= data_choice_y_net;
  we_o <= we_choice_y_net;
  cast_dout_net <= din;
  mux1_y_net_x0 <= we;
  edge_op_y_net <= init;
  clk_net <= clk_1;
  ce_net <= ce_1;
  concat : entity xil_defaultlib.sysgen_concat_e7487baac7 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    in0 => constant_op_net,
    in1 => register_q_net,
    in2 => constant_op_net,
    in3 => register1_q_net,
    y => concat_y_net
  );
  concat1 : entity xil_defaultlib.sysgen_concat_e7487baac7 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    in0 => constant_op_net,
    in1 => register2_q_net,
    in2 => constant_op_net,
    in3 => register3_q_net,
    y => concat1_y_net
  );
  constant_x0 : entity xil_defaultlib.sysgen_constant_869e31f04d 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => constant_op_net
  );
  delay : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 1
  )
  port map (
    en => '1',
    rst => '1',
    d => logical_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay_q_net
  );
  delay1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 1
  )
  port map (
    en => '1',
    rst => '1',
    d => logical1_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay1_q_net
  );
  logical : entity xil_defaultlib.sysgen_logical_2486129911 
  port map (
    clr => '0',
    d0 => relational3_op_net,
    d1 => mux1_y_net_x0,
    clk => clk_net,
    ce => ce_net,
    y => logical_y_net
  );
  logical1 : entity xil_defaultlib.sysgen_logical_d7dc12cf31 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => logical_y_net,
    d1 => delay_q_net,
    y => logical1_y_net
  );
  mux1 : entity xil_defaultlib.sysgen_mux_71ee2b1026 
  port map (
    clr => '0',
    sel => dout_count_op_net,
    d0 => concat_y_net,
    d1 => concat1_y_net,
    clk => clk_net,
    ce => ce_net,
    y => mux1_y_net
  );
  register_x0 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlregister 
  generic map (
    d_width => 32,
    init_value => b"00000000000000000000000000000000"
  )
  port map (
    rst => "0",
    d => cast_dout_net,
    en => relational_op_net,
    clk => clk_net,
    ce => ce_net,
    q => register_q_net
  );
  register1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlregister 
  generic map (
    d_width => 32,
    init_value => b"00000000000000000000000000000000"
  )
  port map (
    rst => "0",
    d => cast_dout_net,
    en => relational1_op_net,
    clk => clk_net,
    ce => ce_net,
    q => register1_q_net
  );
  register2 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlregister 
  generic map (
    d_width => 32,
    init_value => b"00000000000000000000000000000000"
  )
  port map (
    rst => "0",
    d => cast_dout_net,
    en => relational2_op_net,
    clk => clk_net,
    ce => ce_net,
    q => register2_q_net
  );
  register3 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlregister 
  generic map (
    d_width => 32,
    init_value => b"00000000000000000000000000000000"
  )
  port map (
    rst => "0",
    d => cast_dout_net,
    en => relational3_op_net,
    clk => clk_net,
    ce => ce_net,
    q => register3_q_net
  );
  relational : entity xil_defaultlib.sysgen_relational_e5d6b5eaca 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    a => input_count_op_net,
    b => con0_op_net,
    op => relational_op_net
  );
  relational1 : entity xil_defaultlib.sysgen_relational_e5d6b5eaca 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    a => input_count_op_net,
    b => con1_op_net,
    op => relational1_op_net
  );
  relational2 : entity xil_defaultlib.sysgen_relational_e5d6b5eaca 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    a => input_count_op_net,
    b => con2_op_net,
    op => relational2_op_net
  );
  relational3 : entity xil_defaultlib.sysgen_relational_e5d6b5eaca 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    a => input_count_op_net,
    b => con3_op_net,
    op => relational3_op_net
  );
  con0 : entity xil_defaultlib.sysgen_constant_b58c3a1535 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => con0_op_net
  );
  con1 : entity xil_defaultlib.sysgen_constant_d3f27a6354 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => con1_op_net
  );
  con2 : entity xil_defaultlib.sysgen_constant_2fa4689d4e 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => con2_op_net
  );
  con3 : entity xil_defaultlib.sysgen_constant_31bab66ba6 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => con3_op_net
  );
  data_choice : entity xil_defaultlib.sysgen_mux_d624c1af44 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    sel => dram_op_net,
    d0 => cast_dout_net,
    d1 => mux1_y_net,
    y => data_choice_y_net
  );
  dout_count : entity xil_defaultlib.sysgen_counter_a9c1c293c2 
  port map (
    clr => '0',
    rst => edge_op_y_net,
    en => logical1_y_net,
    clk => clk_net,
    ce => ce_net,
    op => dout_count_op_net
  );
  dram : entity xil_defaultlib.sysgen_constant_a7b8778750 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => dram_op_net
  );
  input_count : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlcounter_free 
  generic map (
    core_name0 => "rfdc_multi_eight_adcs_2048gsps_mts_c_counter_binary_v12_0_i2",
    op_arith => xlUnsigned,
    op_width => 2
  )
  port map (
    clr => '0',
    rst => edge_op_y_net,
    en => mux1_y_net_x0,
    clk => clk_net,
    ce => ce_net,
    op => input_count_op_net
  );
  we_choice : entity xil_defaultlib.sysgen_mux_4874190f11 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    sel => dram_op_net,
    d0 => mux1_y_net_x0,
    d1 => delay1_q_net,
    y => we_choice_y_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot6_23/ss/basic_ctrl/edge_detect
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x23 is
  port (
    in_x0 : in std_logic_vector( 1-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    out_x0 : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x23;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x23 is 
  signal edge_op_y_net : std_logic_vector( 1-1 downto 0 );
  signal delay1_q_net : std_logic_vector( 1-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal delay_q_net : std_logic_vector( 1-1 downto 0 );
  signal inverter_op_net : std_logic_vector( 1-1 downto 0 );
begin
  out_x0 <= edge_op_y_net;
  delay1_q_net <= in_x0;
  clk_net <= clk_1;
  ce_net <= ce_1;
  delay : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 1
  )
  port map (
    en => '1',
    rst => '1',
    d => delay1_q_net,
    clk => clk_net,
    ce => ce_net,
    q => delay_q_net
  );
  inverter : entity xil_defaultlib.sysgen_inverter_6233897471 
  port map (
    clr => '0',
    ip => delay1_q_net,
    clk => clk_net,
    ce => ce_net,
    op => inverter_op_net
  );
  edge_op : entity xil_defaultlib.sysgen_logical_0f1aa1e2d7 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => inverter_op_net,
    d1 => delay_q_net,
    y => edge_op_y_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot6_23/ss/basic_ctrl
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_basic_ctrl_x11 is
  port (
    din : in std_logic_vector( 32-1 downto 0 );
    we : in std_logic_vector( 1-1 downto 0 );
    trig : in std_logic_vector( 1-1 downto 0 );
    ctrl : in std_logic_vector( 32-1 downto 0 );
    stopi : in std_logic_vector( 1-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    dout : out std_logic_vector( 32-1 downto 0 );
    we_o : out std_logic_vector( 1-1 downto 0 );
    go : out std_logic_vector( 1-1 downto 0 );
    init : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_basic_ctrl_x11;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_basic_ctrl_x11 is 
  signal data_choice_y_net : std_logic_vector( 32-1 downto 0 );
  signal we_choice_y_net : std_logic_vector( 1-1 downto 0 );
  signal register6_q_net : std_logic_vector( 1-1 downto 0 );
  signal edge_op_y_net_x0 : std_logic_vector( 1-1 downto 0 );
  signal cast_dout_net : std_logic_vector( 32-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc6_sync_net : std_logic_vector( 1-1 downto 0 );
  signal edge_op_y_net : std_logic_vector( 1-1 downto 0 );
  signal concatenate_y_net : std_logic_vector( 32-1 downto 0 );
  signal never_op_net : std_logic_vector( 1-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal mux1_y_net : std_logic_vector( 1-1 downto 0 );
  signal delay1_q_net : std_logic_vector( 1-1 downto 0 );
  signal constant_op_net : std_logic_vector( 1-1 downto 0 );
  signal constant1_op_net : std_logic_vector( 1-1 downto 0 );
  signal constant2_op_net : std_logic_vector( 1-1 downto 0 );
  signal enable_y_net : std_logic_vector( 1-1 downto 0 );
  signal delay2_q_net : std_logic_vector( 1-1 downto 0 );
  signal trig_src_y_net : std_logic_vector( 1-1 downto 0 );
  signal delay3_q_net : std_logic_vector( 1-1 downto 0 );
  signal valid_src_y_net : std_logic_vector( 1-1 downto 0 );
  signal inverter_op_net : std_logic_vector( 1-1 downto 0 );
  signal logical_y_net : std_logic_vector( 1-1 downto 0 );
  signal mux2_y_net : std_logic_vector( 1-1 downto 0 );
  signal register1_q_net : std_logic_vector( 1-1 downto 0 );
begin
  dout <= data_choice_y_net;
  we_o <= we_choice_y_net;
  go <= register6_q_net;
  init <= edge_op_y_net_x0;
  cast_dout_net <= din;
  rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc6_sync_net <= we;
  edge_op_y_net <= trig;
  concatenate_y_net <= ctrl;
  never_op_net <= stopi;
  clk_net <= clk_1;
  ce_net <= ce_1;
  dram_munge : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_dram_munge_x11 
  port map (
    din => cast_dout_net,
    we => mux1_y_net,
    init => edge_op_y_net_x0,
    clk_1 => clk_net,
    ce_1 => ce_net,
    dout => data_choice_y_net,
    we_o => we_choice_y_net
  );
  edge_detect : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x23 
  port map (
    in_x0 => delay1_q_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    out_x0 => edge_op_y_net_x0
  );
  constant_x0 : entity xil_defaultlib.sysgen_constant_c95a0b5efb 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => constant_op_net
  );
  constant1 : entity xil_defaultlib.sysgen_constant_c95a0b5efb 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => constant1_op_net
  );
  constant2 : entity xil_defaultlib.sysgen_constant_c95a0b5efb 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => constant2_op_net
  );
  delay1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 1
  )
  port map (
    en => '1',
    rst => '1',
    d => enable_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay1_q_net
  );
  delay2 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 1
  )
  port map (
    en => '1',
    rst => '1',
    d => trig_src_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay2_q_net
  );
  delay3 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 1
  )
  port map (
    en => '1',
    rst => '1',
    d => valid_src_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay3_q_net
  );
  inverter : entity xil_defaultlib.sysgen_inverter_6233897471 
  port map (
    clr => '0',
    ip => edge_op_y_net_x0,
    clk => clk_net,
    ce => ce_net,
    op => inverter_op_net
  );
  logical : entity xil_defaultlib.sysgen_logical_d26e5cda59 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => mux2_y_net,
    d1 => inverter_op_net,
    y => logical_y_net
  );
  mux1 : entity xil_defaultlib.sysgen_mux_4874190f11 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    sel => delay3_q_net,
    d0 => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc6_sync_net,
    d1 => constant2_op_net,
    y => mux1_y_net
  );
  mux2 : entity xil_defaultlib.sysgen_mux_4874190f11 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    sel => delay2_q_net,
    d0 => edge_op_y_net,
    d1 => constant1_op_net,
    y => mux2_y_net
  );
  register1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlregister 
  generic map (
    d_width => 1,
    init_value => b"0"
  )
  port map (
    d => constant_op_net,
    rst => logical_y_net,
    en => edge_op_y_net_x0,
    clk => clk_net,
    ce => ce_net,
    q => register1_q_net
  );
  register6 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlregister 
  generic map (
    d_width => 1,
    init_value => b"0"
  )
  port map (
    d => mux2_y_net,
    rst => edge_op_y_net_x0,
    en => register1_q_net,
    clk => clk_net,
    ce => ce_net,
    q => register6_q_net
  );
  enable : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 0,
    new_msb => 0,
    x_width => 32,
    y_width => 1
  )
  port map (
    x => concatenate_y_net,
    y => enable_y_net
  );
  trig_src : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 1,
    new_msb => 1,
    x_width => 32,
    y_width => 1
  )
  port map (
    x => concatenate_y_net,
    y => trig_src_y_net
  );
  valid_src : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 2,
    new_msb => 2,
    x_width => 32,
    y_width => 1
  )
  port map (
    x => concatenate_y_net,
    y => valid_src_y_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot6_23/ss/bram/calc_add
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_calc_add_x11 is
  port (
    in_x0 : in std_logic_vector( 10-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    out_x0 : out std_logic_vector( 10-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_calc_add_x11;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_calc_add_x11 is 
  signal mux_y_net : std_logic_vector( 10-1 downto 0 );
  signal add_del_q_net : std_logic_vector( 10-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal add_sub_s_net : std_logic_vector( 1-1 downto 0 );
  signal const_op_net : std_logic_vector( 1-1 downto 0 );
  signal lsw_y_net : std_logic_vector( 1-1 downto 0 );
  signal concat_y_net : std_logic_vector( 10-1 downto 0 );
  signal msw_y_net : std_logic_vector( 9-1 downto 0 );
  signal convert_addr_dout_net : std_logic_vector( 10-1 downto 0 );
  signal manipulate_op_net : std_logic_vector( 1-1 downto 0 );
begin
  out_x0 <= mux_y_net;
  add_del_q_net <= in_x0;
  clk_net <= clk_1;
  ce_net <= ce_1;
  add_sub : entity xil_defaultlib.sysgen_addsub_fd3b6c715c 
  port map (
    clr => '0',
    a => const_op_net,
    b => lsw_y_net,
    clk => clk_net,
    ce => ce_net,
    s => add_sub_s_net
  );
  concat : entity xil_defaultlib.sysgen_concat_f4b90dfa16 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    in0 => msw_y_net,
    in1 => add_sub_s_net,
    y => concat_y_net
  );
  const : entity xil_defaultlib.sysgen_constant_a7b8778750 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => const_op_net
  );
  convert_addr : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 10,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 10,
    latency => 0,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => add_del_q_net,
    clk => clk_net,
    ce => ce_net,
    dout => convert_addr_dout_net
  );
  lsw : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 0,
    new_msb => 0,
    x_width => 10,
    y_width => 1
  )
  port map (
    x => convert_addr_dout_net,
    y => lsw_y_net
  );
  manipulate : entity xil_defaultlib.sysgen_constant_a7b8778750 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => manipulate_op_net
  );
  msw : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 1,
    new_msb => 9,
    x_width => 10,
    y_width => 9
  )
  port map (
    x => convert_addr_dout_net,
    y => msw_y_net
  );
  mux : entity xil_defaultlib.sysgen_mux_4417594854 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    sel => manipulate_op_net,
    d0 => convert_addr_dout_net,
    d1 => concat_y_net,
    y => mux_y_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot6_23/ss/bram/munge_in
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_munge_in_x11 is
  port (
    din : in std_logic_vector( 32-1 downto 0 );
    dout : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_munge_in_x11;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_munge_in_x11 is 
  signal reinterpret_out_output_port_net : std_logic_vector( 32-1 downto 0 );
  signal dat_del_q_net : std_logic_vector( 32-1 downto 0 );
begin
  dout <= reinterpret_out_output_port_net;
  dat_del_q_net <= din;
  reinterpret_out : entity xil_defaultlib.sysgen_reinterpret_52bb84f12b 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => dat_del_q_net,
    output_port => reinterpret_out_output_port_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot6_23/ss/bram
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_bram_x11 is
  port (
    addr : in std_logic_vector( 10-1 downto 0 );
    data_in : in std_logic_vector( 32-1 downto 0 );
    we : in std_logic_vector( 1-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_23_ss_bram_addr : out std_logic_vector( 10-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_23_ss_bram_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_23_ss_bram_we : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_bram_x11;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_bram_x11 is 
  signal add_del_q_net : std_logic_vector( 10-1 downto 0 );
  signal dat_del_q_net : std_logic_vector( 32-1 downto 0 );
  signal we_del_q_net : std_logic_vector( 1-1 downto 0 );
  signal convert_addr_dout_net : std_logic_vector( 10-1 downto 0 );
  signal convert_din1_dout_net : std_logic_vector( 32-1 downto 0 );
  signal convert_we_dout_net : std_logic_vector( 1-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal mux_y_net : std_logic_vector( 10-1 downto 0 );
  signal reinterpret_out_output_port_net : std_logic_vector( 32-1 downto 0 );
begin
  add_del_q_net <= addr;
  dat_del_q_net <= data_in;
  we_del_q_net <= we;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_23_ss_bram_addr <= convert_addr_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_23_ss_bram_data_in <= convert_din1_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_23_ss_bram_we <= convert_we_dout_net;
  clk_net <= clk_1;
  ce_net <= ce_1;
  calc_add : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_calc_add_x11 
  port map (
    in_x0 => add_del_q_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    out_x0 => mux_y_net
  );
  munge_in : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_munge_in_x11 
  port map (
    din => dat_del_q_net,
    dout => reinterpret_out_output_port_net
  );
  convert_addr : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 10,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 10,
    latency => 0,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => mux_y_net,
    clk => clk_net,
    ce => ce_net,
    dout => convert_addr_dout_net
  );
  convert_din1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 32,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 32,
    latency => 0,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => reinterpret_out_output_port_net,
    clk => clk_net,
    ce => ce_net,
    dout => convert_din1_dout_net
  );
  convert_we : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 1,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 1,
    latency => 0,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => we_del_q_net,
    clk => clk_net,
    ce => ce_net,
    dout => convert_we_dout_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot6_23/ss/ctrl
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_ctrl_x11 is
  port (
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_23_ss_ctrl_user_data_out : in std_logic_vector( 32-1 downto 0 );
    in_reg : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_ctrl_x11;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_ctrl_x11 is 
  signal reint1_output_port_net : std_logic_vector( 32-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_23_ss_ctrl_user_data_out_net : std_logic_vector( 32-1 downto 0 );
  signal io_delay_q_net : std_logic_vector( 32-1 downto 0 );
  signal slice_reg_y_net : std_logic_vector( 32-1 downto 0 );
begin
  in_reg <= reint1_output_port_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_23_ss_ctrl_user_data_out_net <= rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_23_ss_ctrl_user_data_out;
  io_delay : entity xil_defaultlib.sysgen_delay_34e314c510 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d => rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_23_ss_ctrl_user_data_out_net,
    q => io_delay_q_net
  );
  slice_reg : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 0,
    new_msb => 31,
    x_width => 32,
    y_width => 32
  )
  port map (
    x => io_delay_q_net,
    y => slice_reg_y_net
  );
  reint1 : entity xil_defaultlib.sysgen_reinterpret_52bb84f12b 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => slice_reg_y_net,
    output_port => reint1_output_port_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot6_23/ss/ctrl_combine
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_ctrl_combine_x11 is
  port (
    in1 : in std_logic_vector( 28-1 downto 0 );
    in2 : in std_logic_vector( 1-1 downto 0 );
    in3 : in std_logic_vector( 2-1 downto 0 );
    in4 : in std_logic_vector( 1-1 downto 0 );
    bus_out : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_ctrl_combine_x11;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_ctrl_combine_x11 is 
  signal concatenate_y_net : std_logic_vector( 32-1 downto 0 );
  signal reinterpret4_output_port_net_x0 : std_logic_vector( 28-1 downto 0 );
  signal circ_or_y_net : std_logic_vector( 1-1 downto 0 );
  signal reinterpret2_output_port_net : std_logic_vector( 2-1 downto 0 );
  signal arm_or_y_net : std_logic_vector( 1-1 downto 0 );
  signal reinterpret1_output_port_net : std_logic_vector( 28-1 downto 0 );
  signal reinterpret2_output_port_net_x0 : std_logic_vector( 1-1 downto 0 );
  signal reinterpret3_output_port_net : std_logic_vector( 2-1 downto 0 );
  signal reinterpret4_output_port_net : std_logic_vector( 1-1 downto 0 );
begin
  bus_out <= concatenate_y_net;
  reinterpret4_output_port_net_x0 <= in1;
  circ_or_y_net <= in2;
  reinterpret2_output_port_net <= in3;
  arm_or_y_net <= in4;
  concatenate : entity xil_defaultlib.sysgen_concat_8611e618a5 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    in0 => reinterpret1_output_port_net,
    in1 => reinterpret2_output_port_net_x0,
    in2 => reinterpret3_output_port_net,
    in3 => reinterpret4_output_port_net,
    y => concatenate_y_net
  );
  reinterpret1 : entity xil_defaultlib.sysgen_reinterpret_f7e0b72e82 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => reinterpret4_output_port_net_x0,
    output_port => reinterpret1_output_port_net
  );
  reinterpret2 : entity xil_defaultlib.sysgen_reinterpret_317b92931a 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => circ_or_y_net,
    output_port => reinterpret2_output_port_net_x0
  );
  reinterpret3 : entity xil_defaultlib.sysgen_reinterpret_5dc9f217bd 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => reinterpret2_output_port_net,
    output_port => reinterpret3_output_port_net
  );
  reinterpret4 : entity xil_defaultlib.sysgen_reinterpret_317b92931a 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => arm_or_y_net,
    output_port => reinterpret4_output_port_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot6_23/ss/ctrl_split
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_ctrl_split_x11 is
  port (
    bus_in : in std_logic_vector( 32-1 downto 0 );
    msb_out4 : out std_logic_vector( 28-1 downto 0 );
    out3 : out std_logic_vector( 1-1 downto 0 );
    out2 : out std_logic_vector( 2-1 downto 0 );
    lsb_out1 : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_ctrl_split_x11;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_ctrl_split_x11 is 
  signal reinterpret4_output_port_net : std_logic_vector( 28-1 downto 0 );
  signal slice3_y_net : std_logic_vector( 1-1 downto 0 );
  signal reinterpret2_output_port_net : std_logic_vector( 2-1 downto 0 );
  signal slice1_y_net : std_logic_vector( 1-1 downto 0 );
  signal reint1_output_port_net : std_logic_vector( 32-1 downto 0 );
  signal slice2_y_net : std_logic_vector( 2-1 downto 0 );
  signal slice4_y_net : std_logic_vector( 28-1 downto 0 );
begin
  msb_out4 <= reinterpret4_output_port_net;
  out3 <= slice3_y_net;
  out2 <= reinterpret2_output_port_net;
  lsb_out1 <= slice1_y_net;
  reint1_output_port_net <= bus_in;
  reinterpret2 : entity xil_defaultlib.sysgen_reinterpret_5dc9f217bd 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => slice2_y_net,
    output_port => reinterpret2_output_port_net
  );
  reinterpret4 : entity xil_defaultlib.sysgen_reinterpret_f7e0b72e82 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => slice4_y_net,
    output_port => reinterpret4_output_port_net
  );
  slice1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 0,
    new_msb => 0,
    x_width => 32,
    y_width => 1
  )
  port map (
    x => reint1_output_port_net,
    y => slice1_y_net
  );
  slice2 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 1,
    new_msb => 2,
    x_width => 32,
    y_width => 2
  )
  port map (
    x => reint1_output_port_net,
    y => slice2_y_net
  );
  slice3 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 3,
    new_msb => 3,
    x_width => 32,
    y_width => 1
  )
  port map (
    x => reint1_output_port_net,
    y => slice3_y_net
  );
  slice4 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 4,
    new_msb => 31,
    x_width => 32,
    y_width => 28
  )
  port map (
    x => reint1_output_port_net,
    y => slice4_y_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot6_23/ss/status
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_status_x11 is
  port (
    out_reg : in std_logic_vector( 32-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_23_ss_status_user_data_in : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_status_x11;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_status_x11 is 
  signal concat_y_net : std_logic_vector( 32-1 downto 0 );
  signal cast_gw_dout_net : std_logic_vector( 32-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal io_delay_q_net : std_logic_vector( 32-1 downto 0 );
  signal reint1_output_port_net : std_logic_vector( 32-1 downto 0 );
  signal assert_reg_dout_net : std_logic_vector( 32-1 downto 0 );
begin
  concat_y_net <= out_reg;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_23_ss_status_user_data_in <= cast_gw_dout_net;
  clk_net <= clk_1;
  ce_net <= ce_1;
  io_delay : entity xil_defaultlib.sysgen_delay_34e314c510 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d => reint1_output_port_net,
    q => io_delay_q_net
  );
  cast_gw : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 32,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 32,
    latency => 1,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => io_delay_q_net,
    clk => clk_net,
    ce => ce_net,
    dout => cast_gw_dout_net
  );
  assert_reg : entity xil_defaultlib.xlpassthrough 
  generic map (
    din_width => 32,
    dout_width => 32
  )
  port map (
    din => concat_y_net,
    dout => assert_reg_dout_net
  );
  reint1 : entity xil_defaultlib.sysgen_reinterpret_52bb84f12b 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => assert_reg_dout_net,
    output_port => reint1_output_port_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot6_23/ss
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_ss_x12 is
  port (
    din : in std_logic_vector( 32-1 downto 0 );
    we : in std_logic_vector( 1-1 downto 0 );
    trig : in std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_23_ss_ctrl_user_data_out : in std_logic_vector( 32-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    arm_out : out std_logic_vector( 1-1 downto 0 );
    goto_74846956_we1 : out std_logic_vector( 1-1 downto 0 );
    goto_74846956_we4 : out std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_23_ss_bram_addr : out std_logic_vector( 10-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_23_ss_bram_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_23_ss_bram_we : out std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_23_ss_status_user_data_in : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_ss_x12;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_ss_x12 is 
  signal arm_or_y_net : std_logic_vector( 1-1 downto 0 );
  signal concatenate_y_net : std_logic_vector( 32-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc6_sync_net : std_logic_vector( 1-1 downto 0 );
  signal edge_op_y_net_x0 : std_logic_vector( 1-1 downto 0 );
  signal we_choice_y_net : std_logic_vector( 1-1 downto 0 );
  signal logical6_y_net : std_logic_vector( 1-1 downto 0 );
  signal convert_addr_dout_net : std_logic_vector( 10-1 downto 0 );
  signal convert_din1_dout_net : std_logic_vector( 32-1 downto 0 );
  signal convert_we_dout_net : std_logic_vector( 1-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_23_ss_ctrl_user_data_out_net : std_logic_vector( 32-1 downto 0 );
  signal cast_gw_dout_net : std_logic_vector( 32-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal slice2_y_net : std_logic_vector( 10-1 downto 0 );
  signal delay6_q_net : std_logic_vector( 32-1 downto 0 );
  signal concat_y_net : std_logic_vector( 32-1 downto 0 );
  signal data_choice_y_net : std_logic_vector( 32-1 downto 0 );
  signal register6_q_net : std_logic_vector( 1-1 downto 0 );
  signal never_op_net : std_logic_vector( 1-1 downto 0 );
  signal edge_op_y_net_x1 : std_logic_vector( 1-1 downto 0 );
  signal cast_dout_net : std_logic_vector( 32-1 downto 0 );
  signal concatenate_y_net_x0 : std_logic_vector( 32-1 downto 0 );
  signal add_del_q_net : std_logic_vector( 10-1 downto 0 );
  signal dat_del_q_net : std_logic_vector( 32-1 downto 0 );
  signal we_del_q_net : std_logic_vector( 1-1 downto 0 );
  signal reint1_output_port_net : std_logic_vector( 32-1 downto 0 );
  signal reinterpret4_output_port_net : std_logic_vector( 28-1 downto 0 );
  signal circ_or_y_net : std_logic_vector( 1-1 downto 0 );
  signal reinterpret2_output_port_net : std_logic_vector( 2-1 downto 0 );
  signal slice3_y_net : std_logic_vector( 1-1 downto 0 );
  signal slice1_y_net : std_logic_vector( 1-1 downto 0 );
  signal arm_op_net : std_logic_vector( 1-1 downto 0 );
  signal ri_output_port_net : std_logic_vector( 32-1 downto 0 );
  signal circ_op_net : std_logic_vector( 1-1 downto 0 );
begin
  arm_out <= arm_or_y_net;
  concatenate_y_net <= din;
  rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc6_sync_net <= we;
  edge_op_y_net_x0 <= trig;
  goto_74846956_we1 <= we_choice_y_net;
  goto_74846956_we4 <= logical6_y_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_23_ss_bram_addr <= convert_addr_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_23_ss_bram_data_in <= convert_din1_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_23_ss_bram_we <= convert_we_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_23_ss_ctrl_user_data_out_net <= rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_23_ss_ctrl_user_data_out;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_23_ss_status_user_data_in <= cast_gw_dout_net;
  clk_net <= clk_1;
  ce_net <= ce_1;
  add_gen : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_add_gen_x10 
  port map (
    din => data_choice_y_net,
    we => we_choice_y_net,
    go => register6_q_net,
    cont => never_op_net,
    init => edge_op_y_net_x1,
    clk_1 => clk_net,
    ce_1 => ce_net,
    add => slice2_y_net,
    dout => delay6_q_net,
    we_o => logical6_y_net,
    status => concat_y_net
  );
  basic_ctrl : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_basic_ctrl_x11 
  port map (
    din => cast_dout_net,
    we => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc6_sync_net,
    trig => edge_op_y_net_x0,
    ctrl => concatenate_y_net_x0,
    stopi => never_op_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    dout => data_choice_y_net,
    we_o => we_choice_y_net,
    go => register6_q_net,
    init => edge_op_y_net_x1
  );
  bram : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_bram_x11 
  port map (
    addr => add_del_q_net,
    data_in => dat_del_q_net,
    we => we_del_q_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_23_ss_bram_addr => convert_addr_dout_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_23_ss_bram_data_in => convert_din1_dout_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_23_ss_bram_we => convert_we_dout_net
  );
  ctrl : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_ctrl_x11 
  port map (
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_23_ss_ctrl_user_data_out => rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_23_ss_ctrl_user_data_out_net,
    in_reg => reint1_output_port_net
  );
  ctrl_combine : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_ctrl_combine_x11 
  port map (
    in1 => reinterpret4_output_port_net,
    in2 => circ_or_y_net,
    in3 => reinterpret2_output_port_net,
    in4 => arm_or_y_net,
    bus_out => concatenate_y_net_x0
  );
  ctrl_split : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_ctrl_split_x11 
  port map (
    bus_in => reint1_output_port_net,
    msb_out4 => reinterpret4_output_port_net,
    out3 => slice3_y_net,
    out2 => reinterpret2_output_port_net,
    lsb_out1 => slice1_y_net
  );
  status : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_status_x11 
  port map (
    out_reg => concat_y_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_23_ss_status_user_data_in => cast_gw_dout_net
  );
  add_del : entity xil_defaultlib.sysgen_delay_4e9264ffdf 
  port map (
    clr => '0',
    d => slice2_y_net,
    clk => clk_net,
    ce => ce_net,
    q => add_del_q_net
  );
  arm : entity xil_defaultlib.sysgen_constant_a7b8778750 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => arm_op_net
  );
  arm_or : entity xil_defaultlib.sysgen_logical_d7dc12cf31 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => slice1_y_net,
    d1 => arm_op_net,
    y => arm_or_y_net
  );
  cast : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 32,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 32,
    latency => 0,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => ri_output_port_net,
    clk => clk_net,
    ce => ce_net,
    dout => cast_dout_net
  );
  circ : entity xil_defaultlib.sysgen_constant_a7b8778750 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => circ_op_net
  );
  circ_or : entity xil_defaultlib.sysgen_logical_d7dc12cf31 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => slice3_y_net,
    d1 => circ_op_net,
    y => circ_or_y_net
  );
  dat_del : entity xil_defaultlib.sysgen_delay_5ec362a23c 
  port map (
    clr => '0',
    d => delay6_q_net,
    clk => clk_net,
    ce => ce_net,
    q => dat_del_q_net
  );
  never : entity xil_defaultlib.sysgen_constant_a7b8778750 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => never_op_net
  );
  ri : entity xil_defaultlib.sysgen_reinterpret_52bb84f12b 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => concatenate_y_net,
    output_port => ri_output_port_net
  );
  we_del : entity xil_defaultlib.sysgen_delay_e0740ee3f9 
  port map (
    clr => '0',
    d => logical6_y_net,
    clk => clk_net,
    ce => ce_net,
    q => we_del_q_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot6_23
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_23 is
  port (
    in_d0 : in std_logic_vector( 16-1 downto 0 );
    in_d1 : in std_logic_vector( 16-1 downto 0 );
    we : in std_logic_vector( 1-1 downto 0 );
    trig : in std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_23_ss_ctrl_user_data_out : in std_logic_vector( 32-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    arm_out : out std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_23_ss_bram_addr : out std_logic_vector( 10-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_23_ss_bram_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_23_ss_bram_we : out std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_23_ss_status_user_data_in : out std_logic_vector( 32-1 downto 0 );
    goto_74846956_we1 : out std_logic_vector( 1-1 downto 0 );
    goto_74846956_we4 : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_23;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_23 is 
  signal arm_or_y_net : std_logic_vector( 1-1 downto 0 );
  signal slice48_y_net : std_logic_vector( 16-1 downto 0 );
  signal slice45_y_net : std_logic_vector( 16-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc6_sync_net : std_logic_vector( 1-1 downto 0 );
  signal edge_op_y_net : std_logic_vector( 1-1 downto 0 );
  signal convert_addr_dout_net : std_logic_vector( 10-1 downto 0 );
  signal convert_din1_dout_net : std_logic_vector( 32-1 downto 0 );
  signal convert_we_dout_net : std_logic_vector( 1-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_23_ss_ctrl_user_data_out_net : std_logic_vector( 32-1 downto 0 );
  signal cast_gw_dout_net : std_logic_vector( 32-1 downto 0 );
  signal we_choice_y_net : std_logic_vector( 1-1 downto 0 );
  signal logical6_y_net : std_logic_vector( 1-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal concatenate_y_net : std_logic_vector( 32-1 downto 0 );
  signal assert_d0_dout_net : std_logic_vector( 16-1 downto 0 );
  signal assert_d1_dout_net : std_logic_vector( 16-1 downto 0 );
begin
  arm_out <= arm_or_y_net;
  slice48_y_net <= in_d0;
  slice45_y_net <= in_d1;
  rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc6_sync_net <= we;
  edge_op_y_net <= trig;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_23_ss_bram_addr <= convert_addr_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_23_ss_bram_data_in <= convert_din1_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_23_ss_bram_we <= convert_we_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_23_ss_ctrl_user_data_out_net <= rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_23_ss_ctrl_user_data_out;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_23_ss_status_user_data_in <= cast_gw_dout_net;
  goto_74846956_we1 <= we_choice_y_net;
  goto_74846956_we4 <= logical6_y_net;
  clk_net <= clk_1;
  ce_net <= ce_1;
  buscreate : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_buscreate_x12 
  port map (
    in1 => assert_d0_dout_net,
    in2 => assert_d1_dout_net,
    bus_out => concatenate_y_net
  );
  ss : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_ss_x12 
  port map (
    din => concatenate_y_net,
    we => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc6_sync_net,
    trig => edge_op_y_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_23_ss_ctrl_user_data_out => rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_23_ss_ctrl_user_data_out_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    arm_out => arm_or_y_net,
    goto_74846956_we1 => we_choice_y_net,
    goto_74846956_we4 => logical6_y_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_23_ss_bram_addr => convert_addr_dout_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_23_ss_bram_data_in => convert_din1_dout_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_23_ss_bram_we => convert_we_dout_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_23_ss_status_user_data_in => cast_gw_dout_net
  );
  assert_d0 : entity xil_defaultlib.xlpassthrough 
  generic map (
    din_width => 16,
    dout_width => 16
  )
  port map (
    din => slice48_y_net,
    dout => assert_d0_dout_net
  );
  assert_d1 : entity xil_defaultlib.xlpassthrough 
  generic map (
    din_width => 16,
    dout_width => 16
  )
  port map (
    din => slice45_y_net,
    dout => assert_d1_dout_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot6_45/buscreate
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_buscreate_x11 is
  port (
    in1 : in std_logic_vector( 16-1 downto 0 );
    in2 : in std_logic_vector( 16-1 downto 0 );
    bus_out : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_buscreate_x11;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_buscreate_x11 is 
  signal concatenate_y_net : std_logic_vector( 32-1 downto 0 );
  signal assert_d0_dout_net : std_logic_vector( 16-1 downto 0 );
  signal assert_d1_dout_net : std_logic_vector( 16-1 downto 0 );
  signal reinterpret1_output_port_net : std_logic_vector( 16-1 downto 0 );
  signal reinterpret2_output_port_net : std_logic_vector( 16-1 downto 0 );
begin
  bus_out <= concatenate_y_net;
  assert_d0_dout_net <= in1;
  assert_d1_dout_net <= in2;
  concatenate : entity xil_defaultlib.sysgen_concat_37649e01d1 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    in0 => reinterpret1_output_port_net,
    in1 => reinterpret2_output_port_net,
    y => concatenate_y_net
  );
  reinterpret1 : entity xil_defaultlib.sysgen_reinterpret_03c8cdbbc1 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => assert_d0_dout_net,
    output_port => reinterpret1_output_port_net
  );
  reinterpret2 : entity xil_defaultlib.sysgen_reinterpret_03c8cdbbc1 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => assert_d1_dout_net,
    output_port => reinterpret2_output_port_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot6_45/ss/add_gen/edge_detect
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x26 is
  port (
    in_x0 : in std_logic_vector( 1-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    out_x0 : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x26;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x26 is 
  signal edge_op_y_net : std_logic_vector( 1-1 downto 0 );
  signal slice3_y_net : std_logic_vector( 1-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal delay_q_net : std_logic_vector( 1-1 downto 0 );
  signal inverter_op_net : std_logic_vector( 1-1 downto 0 );
begin
  out_x0 <= edge_op_y_net;
  slice3_y_net <= in_x0;
  clk_net <= clk_1;
  ce_net <= ce_1;
  delay : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 1
  )
  port map (
    en => '1',
    rst => '1',
    d => slice3_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay_q_net
  );
  inverter : entity xil_defaultlib.sysgen_inverter_6233897471 
  port map (
    clr => '0',
    ip => slice3_y_net,
    clk => clk_net,
    ce => ce_net,
    op => inverter_op_net
  );
  edge_op : entity xil_defaultlib.sysgen_logical_9cc14fefba 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => inverter_op_net,
    d1 => delay_q_net,
    y => edge_op_y_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot6_45/ss/add_gen
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_add_gen_x11 is
  port (
    din : in std_logic_vector( 32-1 downto 0 );
    we : in std_logic_vector( 1-1 downto 0 );
    go : in std_logic_vector( 1-1 downto 0 );
    cont : in std_logic_vector( 1-1 downto 0 );
    init : in std_logic_vector( 1-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    add : out std_logic_vector( 10-1 downto 0 );
    dout : out std_logic_vector( 32-1 downto 0 );
    we_o : out std_logic_vector( 1-1 downto 0 );
    status : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_add_gen_x11;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_add_gen_x11 is 
  signal slice2_y_net : std_logic_vector( 10-1 downto 0 );
  signal delay6_q_net : std_logic_vector( 32-1 downto 0 );
  signal logical6_y_net : std_logic_vector( 1-1 downto 0 );
  signal concat_y_net : std_logic_vector( 32-1 downto 0 );
  signal data_choice_y_net : std_logic_vector( 32-1 downto 0 );
  signal we_choice_y_net : std_logic_vector( 1-1 downto 0 );
  signal register6_q_net : std_logic_vector( 1-1 downto 0 );
  signal never_op_net : std_logic_vector( 1-1 downto 0 );
  signal edge_op_y_net : std_logic_vector( 1-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal edge_op_y_net_x0 : std_logic_vector( 1-1 downto 0 );
  signal slice3_y_net : std_logic_vector( 1-1 downto 0 );
  signal shift_op_net : std_logic_vector( 19-1 downto 0 );
  signal inverter_op_net : std_logic_vector( 1-1 downto 0 );
  signal delay1_q_net : std_logic_vector( 12-1 downto 0 );
  signal convert_dout_net : std_logic_vector( 19-1 downto 0 );
  signal register5_q_net : std_logic_vector( 1-1 downto 0 );
  signal delay_q_net : std_logic_vector( 1-1 downto 0 );
  signal delay4_q_net : std_logic_vector( 1-1 downto 0 );
  signal slice1_y_net : std_logic_vector( 12-1 downto 0 );
  signal delay3_q_net : std_logic_vector( 1-1 downto 0 );
  signal inverter1_op_net : std_logic_vector( 1-1 downto 0 );
  signal logical1_y_net : std_logic_vector( 1-1 downto 0 );
  signal logical4_y_net : std_logic_vector( 1-1 downto 0 );
  signal add_gen_op_net : std_logic_vector( 13-1 downto 0 );
begin
  add <= slice2_y_net;
  dout <= delay6_q_net;
  we_o <= logical6_y_net;
  status <= concat_y_net;
  data_choice_y_net <= din;
  we_choice_y_net <= we;
  register6_q_net <= go;
  never_op_net <= cont;
  edge_op_y_net <= init;
  clk_net <= clk_1;
  ce_net <= ce_1;
  edge_detect : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x26 
  port map (
    in_x0 => slice3_y_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    out_x0 => edge_op_y_net_x0
  );
  concat : entity xil_defaultlib.sysgen_concat_fc8edfac0e 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    in0 => shift_op_net,
    in1 => inverter_op_net,
    in2 => delay1_q_net,
    y => concat_y_net
  );
  convert : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 1,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 19,
    latency => 0,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => register5_q_net,
    clk => clk_net,
    ce => ce_net,
    dout => convert_dout_net
  );
  delay : entity xil_defaultlib.sysgen_delay_e0740ee3f9 
  port map (
    clr => '0',
    d => delay4_q_net,
    clk => clk_net,
    ce => ce_net,
    q => delay_q_net
  );
  delay1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 12
  )
  port map (
    en => '1',
    rst => '1',
    d => slice1_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay1_q_net
  );
  delay3 : entity xil_defaultlib.sysgen_delay_e0740ee3f9 
  port map (
    clr => '0',
    d => never_op_net,
    clk => clk_net,
    ce => ce_net,
    q => delay3_q_net
  );
  delay4 : entity xil_defaultlib.sysgen_delay_e0740ee3f9 
  port map (
    clr => '0',
    d => edge_op_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay4_q_net
  );
  delay6 : entity xil_defaultlib.sysgen_delay_5ec362a23c 
  port map (
    clr => '0',
    d => data_choice_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay6_q_net
  );
  inverter : entity xil_defaultlib.sysgen_inverter_918b6bc6d0 
  port map (
    clr => '0',
    ip => register5_q_net,
    clk => clk_net,
    ce => ce_net,
    op => inverter_op_net
  );
  inverter1 : entity xil_defaultlib.sysgen_inverter_6233897471 
  port map (
    clr => '0',
    ip => edge_op_y_net_x0,
    clk => clk_net,
    ce => ce_net,
    op => inverter1_op_net
  );
  logical1 : entity xil_defaultlib.sysgen_logical_2486129911 
  port map (
    clr => '0',
    d0 => we_choice_y_net,
    d1 => register6_q_net,
    clk => clk_net,
    ce => ce_net,
    y => logical1_y_net
  );
  logical4 : entity xil_defaultlib.sysgen_logical_d7dc12cf31 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => delay3_q_net,
    d1 => inverter1_op_net,
    y => logical4_y_net
  );
  logical6 : entity xil_defaultlib.sysgen_logical_c05fefc67b 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => register5_q_net,
    d1 => logical4_y_net,
    d2 => logical1_y_net,
    y => logical6_y_net
  );
  register5 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlregister 
  generic map (
    d_width => 1,
    init_value => b"1"
  )
  port map (
    d => delay3_q_net,
    rst => delay_q_net,
    en => edge_op_y_net_x0,
    clk => clk_net,
    ce => ce_net,
    q => register5_q_net
  );
  shift : entity xil_defaultlib.sysgen_shift_5af4fe0a99 
  port map (
    clr => '0',
    ip => convert_dout_net,
    clk => clk_net,
    ce => ce_net,
    op => shift_op_net
  );
  add_gen : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlcounter_free 
  generic map (
    core_name0 => "rfdc_multi_eight_adcs_2048gsps_mts_c_counter_binary_v12_0_i1",
    op_arith => xlUnsigned,
    op_width => 13
  )
  port map (
    clr => '0',
    rst => delay4_q_net,
    en => logical6_y_net,
    clk => clk_net,
    ce => ce_net,
    op => add_gen_op_net
  );
  slice1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 0,
    new_msb => 11,
    x_width => 13,
    y_width => 12
  )
  port map (
    x => add_gen_op_net,
    y => slice1_y_net
  );
  slice2 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 2,
    new_msb => 11,
    x_width => 13,
    y_width => 10
  )
  port map (
    x => add_gen_op_net,
    y => slice2_y_net
  );
  slice3 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 12,
    new_msb => 12,
    x_width => 13,
    y_width => 1
  )
  port map (
    x => add_gen_op_net,
    y => slice3_y_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot6_45/ss/basic_ctrl/dram_munge
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_dram_munge_x14 is
  port (
    din : in std_logic_vector( 32-1 downto 0 );
    we : in std_logic_vector( 1-1 downto 0 );
    init : in std_logic_vector( 1-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    dout : out std_logic_vector( 32-1 downto 0 );
    we_o : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_dram_munge_x14;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_dram_munge_x14 is 
  signal data_choice_y_net : std_logic_vector( 32-1 downto 0 );
  signal we_choice_y_net : std_logic_vector( 1-1 downto 0 );
  signal cast_dout_net : std_logic_vector( 32-1 downto 0 );
  signal mux1_y_net_x0 : std_logic_vector( 1-1 downto 0 );
  signal edge_op_y_net : std_logic_vector( 1-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal concat_y_net : std_logic_vector( 80-1 downto 0 );
  signal constant_op_net : std_logic_vector( 8-1 downto 0 );
  signal register_q_net : std_logic_vector( 32-1 downto 0 );
  signal register1_q_net : std_logic_vector( 32-1 downto 0 );
  signal concat1_y_net : std_logic_vector( 80-1 downto 0 );
  signal register2_q_net : std_logic_vector( 32-1 downto 0 );
  signal register3_q_net : std_logic_vector( 32-1 downto 0 );
  signal delay_q_net : std_logic_vector( 1-1 downto 0 );
  signal logical_y_net : std_logic_vector( 1-1 downto 0 );
  signal delay1_q_net : std_logic_vector( 1-1 downto 0 );
  signal logical1_y_net : std_logic_vector( 1-1 downto 0 );
  signal relational3_op_net : std_logic_vector( 1-1 downto 0 );
  signal mux1_y_net : std_logic_vector( 80-1 downto 0 );
  signal dout_count_op_net : std_logic_vector( 1-1 downto 0 );
  signal relational_op_net : std_logic_vector( 1-1 downto 0 );
  signal relational1_op_net : std_logic_vector( 1-1 downto 0 );
  signal relational2_op_net : std_logic_vector( 1-1 downto 0 );
  signal input_count_op_net : std_logic_vector( 2-1 downto 0 );
  signal con0_op_net : std_logic_vector( 2-1 downto 0 );
  signal con1_op_net : std_logic_vector( 2-1 downto 0 );
  signal con2_op_net : std_logic_vector( 2-1 downto 0 );
  signal con3_op_net : std_logic_vector( 2-1 downto 0 );
  signal dram_op_net : std_logic_vector( 1-1 downto 0 );
begin
  dout <= data_choice_y_net;
  we_o <= we_choice_y_net;
  cast_dout_net <= din;
  mux1_y_net_x0 <= we;
  edge_op_y_net <= init;
  clk_net <= clk_1;
  ce_net <= ce_1;
  concat : entity xil_defaultlib.sysgen_concat_e7487baac7 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    in0 => constant_op_net,
    in1 => register_q_net,
    in2 => constant_op_net,
    in3 => register1_q_net,
    y => concat_y_net
  );
  concat1 : entity xil_defaultlib.sysgen_concat_e7487baac7 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    in0 => constant_op_net,
    in1 => register2_q_net,
    in2 => constant_op_net,
    in3 => register3_q_net,
    y => concat1_y_net
  );
  constant_x0 : entity xil_defaultlib.sysgen_constant_869e31f04d 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => constant_op_net
  );
  delay : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 1
  )
  port map (
    en => '1',
    rst => '1',
    d => logical_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay_q_net
  );
  delay1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 1
  )
  port map (
    en => '1',
    rst => '1',
    d => logical1_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay1_q_net
  );
  logical : entity xil_defaultlib.sysgen_logical_2486129911 
  port map (
    clr => '0',
    d0 => relational3_op_net,
    d1 => mux1_y_net_x0,
    clk => clk_net,
    ce => ce_net,
    y => logical_y_net
  );
  logical1 : entity xil_defaultlib.sysgen_logical_d7dc12cf31 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => logical_y_net,
    d1 => delay_q_net,
    y => logical1_y_net
  );
  mux1 : entity xil_defaultlib.sysgen_mux_71ee2b1026 
  port map (
    clr => '0',
    sel => dout_count_op_net,
    d0 => concat_y_net,
    d1 => concat1_y_net,
    clk => clk_net,
    ce => ce_net,
    y => mux1_y_net
  );
  register_x0 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlregister 
  generic map (
    d_width => 32,
    init_value => b"00000000000000000000000000000000"
  )
  port map (
    rst => "0",
    d => cast_dout_net,
    en => relational_op_net,
    clk => clk_net,
    ce => ce_net,
    q => register_q_net
  );
  register1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlregister 
  generic map (
    d_width => 32,
    init_value => b"00000000000000000000000000000000"
  )
  port map (
    rst => "0",
    d => cast_dout_net,
    en => relational1_op_net,
    clk => clk_net,
    ce => ce_net,
    q => register1_q_net
  );
  register2 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlregister 
  generic map (
    d_width => 32,
    init_value => b"00000000000000000000000000000000"
  )
  port map (
    rst => "0",
    d => cast_dout_net,
    en => relational2_op_net,
    clk => clk_net,
    ce => ce_net,
    q => register2_q_net
  );
  register3 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlregister 
  generic map (
    d_width => 32,
    init_value => b"00000000000000000000000000000000"
  )
  port map (
    rst => "0",
    d => cast_dout_net,
    en => relational3_op_net,
    clk => clk_net,
    ce => ce_net,
    q => register3_q_net
  );
  relational : entity xil_defaultlib.sysgen_relational_e5d6b5eaca 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    a => input_count_op_net,
    b => con0_op_net,
    op => relational_op_net
  );
  relational1 : entity xil_defaultlib.sysgen_relational_e5d6b5eaca 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    a => input_count_op_net,
    b => con1_op_net,
    op => relational1_op_net
  );
  relational2 : entity xil_defaultlib.sysgen_relational_e5d6b5eaca 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    a => input_count_op_net,
    b => con2_op_net,
    op => relational2_op_net
  );
  relational3 : entity xil_defaultlib.sysgen_relational_e5d6b5eaca 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    a => input_count_op_net,
    b => con3_op_net,
    op => relational3_op_net
  );
  con0 : entity xil_defaultlib.sysgen_constant_b58c3a1535 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => con0_op_net
  );
  con1 : entity xil_defaultlib.sysgen_constant_d3f27a6354 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => con1_op_net
  );
  con2 : entity xil_defaultlib.sysgen_constant_2fa4689d4e 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => con2_op_net
  );
  con3 : entity xil_defaultlib.sysgen_constant_31bab66ba6 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => con3_op_net
  );
  data_choice : entity xil_defaultlib.sysgen_mux_d624c1af44 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    sel => dram_op_net,
    d0 => cast_dout_net,
    d1 => mux1_y_net,
    y => data_choice_y_net
  );
  dout_count : entity xil_defaultlib.sysgen_counter_a9c1c293c2 
  port map (
    clr => '0',
    rst => edge_op_y_net,
    en => logical1_y_net,
    clk => clk_net,
    ce => ce_net,
    op => dout_count_op_net
  );
  dram : entity xil_defaultlib.sysgen_constant_a7b8778750 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => dram_op_net
  );
  input_count : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlcounter_free 
  generic map (
    core_name0 => "rfdc_multi_eight_adcs_2048gsps_mts_c_counter_binary_v12_0_i2",
    op_arith => xlUnsigned,
    op_width => 2
  )
  port map (
    clr => '0',
    rst => edge_op_y_net,
    en => mux1_y_net_x0,
    clk => clk_net,
    ce => ce_net,
    op => input_count_op_net
  );
  we_choice : entity xil_defaultlib.sysgen_mux_4874190f11 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    sel => dram_op_net,
    d0 => mux1_y_net_x0,
    d1 => delay1_q_net,
    y => we_choice_y_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot6_45/ss/basic_ctrl/edge_detect
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x30 is
  port (
    in_x0 : in std_logic_vector( 1-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    out_x0 : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x30;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x30 is 
  signal edge_op_y_net : std_logic_vector( 1-1 downto 0 );
  signal delay1_q_net : std_logic_vector( 1-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal delay_q_net : std_logic_vector( 1-1 downto 0 );
  signal inverter_op_net : std_logic_vector( 1-1 downto 0 );
begin
  out_x0 <= edge_op_y_net;
  delay1_q_net <= in_x0;
  clk_net <= clk_1;
  ce_net <= ce_1;
  delay : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 1
  )
  port map (
    en => '1',
    rst => '1',
    d => delay1_q_net,
    clk => clk_net,
    ce => ce_net,
    q => delay_q_net
  );
  inverter : entity xil_defaultlib.sysgen_inverter_6233897471 
  port map (
    clr => '0',
    ip => delay1_q_net,
    clk => clk_net,
    ce => ce_net,
    op => inverter_op_net
  );
  edge_op : entity xil_defaultlib.sysgen_logical_0f1aa1e2d7 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => inverter_op_net,
    d1 => delay_q_net,
    y => edge_op_y_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot6_45/ss/basic_ctrl
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_basic_ctrl_x14 is
  port (
    din : in std_logic_vector( 32-1 downto 0 );
    we : in std_logic_vector( 1-1 downto 0 );
    trig : in std_logic_vector( 1-1 downto 0 );
    ctrl : in std_logic_vector( 32-1 downto 0 );
    stopi : in std_logic_vector( 1-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    dout : out std_logic_vector( 32-1 downto 0 );
    we_o : out std_logic_vector( 1-1 downto 0 );
    go : out std_logic_vector( 1-1 downto 0 );
    init : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_basic_ctrl_x14;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_basic_ctrl_x14 is 
  signal data_choice_y_net : std_logic_vector( 32-1 downto 0 );
  signal we_choice_y_net : std_logic_vector( 1-1 downto 0 );
  signal register6_q_net : std_logic_vector( 1-1 downto 0 );
  signal edge_op_y_net_x0 : std_logic_vector( 1-1 downto 0 );
  signal cast_dout_net : std_logic_vector( 32-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc6_sync_net : std_logic_vector( 1-1 downto 0 );
  signal edge_op_y_net : std_logic_vector( 1-1 downto 0 );
  signal concatenate_y_net : std_logic_vector( 32-1 downto 0 );
  signal never_op_net : std_logic_vector( 1-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal mux1_y_net : std_logic_vector( 1-1 downto 0 );
  signal delay1_q_net : std_logic_vector( 1-1 downto 0 );
  signal constant_op_net : std_logic_vector( 1-1 downto 0 );
  signal constant1_op_net : std_logic_vector( 1-1 downto 0 );
  signal constant2_op_net : std_logic_vector( 1-1 downto 0 );
  signal enable_y_net : std_logic_vector( 1-1 downto 0 );
  signal delay2_q_net : std_logic_vector( 1-1 downto 0 );
  signal trig_src_y_net : std_logic_vector( 1-1 downto 0 );
  signal delay3_q_net : std_logic_vector( 1-1 downto 0 );
  signal valid_src_y_net : std_logic_vector( 1-1 downto 0 );
  signal inverter_op_net : std_logic_vector( 1-1 downto 0 );
  signal logical_y_net : std_logic_vector( 1-1 downto 0 );
  signal mux2_y_net : std_logic_vector( 1-1 downto 0 );
  signal register1_q_net : std_logic_vector( 1-1 downto 0 );
begin
  dout <= data_choice_y_net;
  we_o <= we_choice_y_net;
  go <= register6_q_net;
  init <= edge_op_y_net_x0;
  cast_dout_net <= din;
  rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc6_sync_net <= we;
  edge_op_y_net <= trig;
  concatenate_y_net <= ctrl;
  never_op_net <= stopi;
  clk_net <= clk_1;
  ce_net <= ce_1;
  dram_munge : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_dram_munge_x14 
  port map (
    din => cast_dout_net,
    we => mux1_y_net,
    init => edge_op_y_net_x0,
    clk_1 => clk_net,
    ce_1 => ce_net,
    dout => data_choice_y_net,
    we_o => we_choice_y_net
  );
  edge_detect : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x30 
  port map (
    in_x0 => delay1_q_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    out_x0 => edge_op_y_net_x0
  );
  constant_x0 : entity xil_defaultlib.sysgen_constant_c95a0b5efb 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => constant_op_net
  );
  constant1 : entity xil_defaultlib.sysgen_constant_c95a0b5efb 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => constant1_op_net
  );
  constant2 : entity xil_defaultlib.sysgen_constant_c95a0b5efb 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => constant2_op_net
  );
  delay1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 1
  )
  port map (
    en => '1',
    rst => '1',
    d => enable_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay1_q_net
  );
  delay2 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 1
  )
  port map (
    en => '1',
    rst => '1',
    d => trig_src_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay2_q_net
  );
  delay3 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 1
  )
  port map (
    en => '1',
    rst => '1',
    d => valid_src_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay3_q_net
  );
  inverter : entity xil_defaultlib.sysgen_inverter_6233897471 
  port map (
    clr => '0',
    ip => edge_op_y_net_x0,
    clk => clk_net,
    ce => ce_net,
    op => inverter_op_net
  );
  logical : entity xil_defaultlib.sysgen_logical_d26e5cda59 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => mux2_y_net,
    d1 => inverter_op_net,
    y => logical_y_net
  );
  mux1 : entity xil_defaultlib.sysgen_mux_4874190f11 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    sel => delay3_q_net,
    d0 => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc6_sync_net,
    d1 => constant2_op_net,
    y => mux1_y_net
  );
  mux2 : entity xil_defaultlib.sysgen_mux_4874190f11 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    sel => delay2_q_net,
    d0 => edge_op_y_net,
    d1 => constant1_op_net,
    y => mux2_y_net
  );
  register1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlregister 
  generic map (
    d_width => 1,
    init_value => b"0"
  )
  port map (
    d => constant_op_net,
    rst => logical_y_net,
    en => edge_op_y_net_x0,
    clk => clk_net,
    ce => ce_net,
    q => register1_q_net
  );
  register6 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlregister 
  generic map (
    d_width => 1,
    init_value => b"0"
  )
  port map (
    d => mux2_y_net,
    rst => edge_op_y_net_x0,
    en => register1_q_net,
    clk => clk_net,
    ce => ce_net,
    q => register6_q_net
  );
  enable : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 0,
    new_msb => 0,
    x_width => 32,
    y_width => 1
  )
  port map (
    x => concatenate_y_net,
    y => enable_y_net
  );
  trig_src : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 1,
    new_msb => 1,
    x_width => 32,
    y_width => 1
  )
  port map (
    x => concatenate_y_net,
    y => trig_src_y_net
  );
  valid_src : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 2,
    new_msb => 2,
    x_width => 32,
    y_width => 1
  )
  port map (
    x => concatenate_y_net,
    y => valid_src_y_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot6_45/ss/bram/calc_add
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_calc_add_x14 is
  port (
    in_x0 : in std_logic_vector( 10-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    out_x0 : out std_logic_vector( 10-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_calc_add_x14;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_calc_add_x14 is 
  signal mux_y_net : std_logic_vector( 10-1 downto 0 );
  signal add_del_q_net : std_logic_vector( 10-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal add_sub_s_net : std_logic_vector( 1-1 downto 0 );
  signal const_op_net : std_logic_vector( 1-1 downto 0 );
  signal lsw_y_net : std_logic_vector( 1-1 downto 0 );
  signal concat_y_net : std_logic_vector( 10-1 downto 0 );
  signal msw_y_net : std_logic_vector( 9-1 downto 0 );
  signal convert_addr_dout_net : std_logic_vector( 10-1 downto 0 );
  signal manipulate_op_net : std_logic_vector( 1-1 downto 0 );
begin
  out_x0 <= mux_y_net;
  add_del_q_net <= in_x0;
  clk_net <= clk_1;
  ce_net <= ce_1;
  add_sub : entity xil_defaultlib.sysgen_addsub_fd3b6c715c 
  port map (
    clr => '0',
    a => const_op_net,
    b => lsw_y_net,
    clk => clk_net,
    ce => ce_net,
    s => add_sub_s_net
  );
  concat : entity xil_defaultlib.sysgen_concat_f4b90dfa16 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    in0 => msw_y_net,
    in1 => add_sub_s_net,
    y => concat_y_net
  );
  const : entity xil_defaultlib.sysgen_constant_a7b8778750 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => const_op_net
  );
  convert_addr : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 10,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 10,
    latency => 0,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => add_del_q_net,
    clk => clk_net,
    ce => ce_net,
    dout => convert_addr_dout_net
  );
  lsw : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 0,
    new_msb => 0,
    x_width => 10,
    y_width => 1
  )
  port map (
    x => convert_addr_dout_net,
    y => lsw_y_net
  );
  manipulate : entity xil_defaultlib.sysgen_constant_a7b8778750 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => manipulate_op_net
  );
  msw : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 1,
    new_msb => 9,
    x_width => 10,
    y_width => 9
  )
  port map (
    x => convert_addr_dout_net,
    y => msw_y_net
  );
  mux : entity xil_defaultlib.sysgen_mux_4417594854 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    sel => manipulate_op_net,
    d0 => convert_addr_dout_net,
    d1 => concat_y_net,
    y => mux_y_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot6_45/ss/bram/munge_in
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_munge_in_x14 is
  port (
    din : in std_logic_vector( 32-1 downto 0 );
    dout : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_munge_in_x14;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_munge_in_x14 is 
  signal reinterpret_out_output_port_net : std_logic_vector( 32-1 downto 0 );
  signal dat_del_q_net : std_logic_vector( 32-1 downto 0 );
begin
  dout <= reinterpret_out_output_port_net;
  dat_del_q_net <= din;
  reinterpret_out : entity xil_defaultlib.sysgen_reinterpret_52bb84f12b 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => dat_del_q_net,
    output_port => reinterpret_out_output_port_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot6_45/ss/bram
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_bram_x14 is
  port (
    addr : in std_logic_vector( 10-1 downto 0 );
    data_in : in std_logic_vector( 32-1 downto 0 );
    we : in std_logic_vector( 1-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_45_ss_bram_addr : out std_logic_vector( 10-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_45_ss_bram_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_45_ss_bram_we : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_bram_x14;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_bram_x14 is 
  signal add_del_q_net : std_logic_vector( 10-1 downto 0 );
  signal dat_del_q_net : std_logic_vector( 32-1 downto 0 );
  signal we_del_q_net : std_logic_vector( 1-1 downto 0 );
  signal convert_addr_dout_net : std_logic_vector( 10-1 downto 0 );
  signal convert_din1_dout_net : std_logic_vector( 32-1 downto 0 );
  signal convert_we_dout_net : std_logic_vector( 1-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal mux_y_net : std_logic_vector( 10-1 downto 0 );
  signal reinterpret_out_output_port_net : std_logic_vector( 32-1 downto 0 );
begin
  add_del_q_net <= addr;
  dat_del_q_net <= data_in;
  we_del_q_net <= we;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_45_ss_bram_addr <= convert_addr_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_45_ss_bram_data_in <= convert_din1_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_45_ss_bram_we <= convert_we_dout_net;
  clk_net <= clk_1;
  ce_net <= ce_1;
  calc_add : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_calc_add_x14 
  port map (
    in_x0 => add_del_q_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    out_x0 => mux_y_net
  );
  munge_in : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_munge_in_x14 
  port map (
    din => dat_del_q_net,
    dout => reinterpret_out_output_port_net
  );
  convert_addr : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 10,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 10,
    latency => 0,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => mux_y_net,
    clk => clk_net,
    ce => ce_net,
    dout => convert_addr_dout_net
  );
  convert_din1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 32,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 32,
    latency => 0,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => reinterpret_out_output_port_net,
    clk => clk_net,
    ce => ce_net,
    dout => convert_din1_dout_net
  );
  convert_we : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 1,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 1,
    latency => 0,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => we_del_q_net,
    clk => clk_net,
    ce => ce_net,
    dout => convert_we_dout_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot6_45/ss/ctrl
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_ctrl_x14 is
  port (
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_45_ss_ctrl_user_data_out : in std_logic_vector( 32-1 downto 0 );
    in_reg : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_ctrl_x14;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_ctrl_x14 is 
  signal reint1_output_port_net : std_logic_vector( 32-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_45_ss_ctrl_user_data_out_net : std_logic_vector( 32-1 downto 0 );
  signal io_delay_q_net : std_logic_vector( 32-1 downto 0 );
  signal slice_reg_y_net : std_logic_vector( 32-1 downto 0 );
begin
  in_reg <= reint1_output_port_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_45_ss_ctrl_user_data_out_net <= rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_45_ss_ctrl_user_data_out;
  io_delay : entity xil_defaultlib.sysgen_delay_34e314c510 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d => rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_45_ss_ctrl_user_data_out_net,
    q => io_delay_q_net
  );
  slice_reg : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 0,
    new_msb => 31,
    x_width => 32,
    y_width => 32
  )
  port map (
    x => io_delay_q_net,
    y => slice_reg_y_net
  );
  reint1 : entity xil_defaultlib.sysgen_reinterpret_52bb84f12b 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => slice_reg_y_net,
    output_port => reint1_output_port_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot6_45/ss/ctrl_combine
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_ctrl_combine_x14 is
  port (
    in1 : in std_logic_vector( 28-1 downto 0 );
    in2 : in std_logic_vector( 1-1 downto 0 );
    in3 : in std_logic_vector( 2-1 downto 0 );
    in4 : in std_logic_vector( 1-1 downto 0 );
    bus_out : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_ctrl_combine_x14;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_ctrl_combine_x14 is 
  signal concatenate_y_net : std_logic_vector( 32-1 downto 0 );
  signal reinterpret4_output_port_net_x0 : std_logic_vector( 28-1 downto 0 );
  signal circ_or_y_net : std_logic_vector( 1-1 downto 0 );
  signal reinterpret2_output_port_net : std_logic_vector( 2-1 downto 0 );
  signal arm_or_y_net : std_logic_vector( 1-1 downto 0 );
  signal reinterpret1_output_port_net : std_logic_vector( 28-1 downto 0 );
  signal reinterpret2_output_port_net_x0 : std_logic_vector( 1-1 downto 0 );
  signal reinterpret3_output_port_net : std_logic_vector( 2-1 downto 0 );
  signal reinterpret4_output_port_net : std_logic_vector( 1-1 downto 0 );
begin
  bus_out <= concatenate_y_net;
  reinterpret4_output_port_net_x0 <= in1;
  circ_or_y_net <= in2;
  reinterpret2_output_port_net <= in3;
  arm_or_y_net <= in4;
  concatenate : entity xil_defaultlib.sysgen_concat_8611e618a5 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    in0 => reinterpret1_output_port_net,
    in1 => reinterpret2_output_port_net_x0,
    in2 => reinterpret3_output_port_net,
    in3 => reinterpret4_output_port_net,
    y => concatenate_y_net
  );
  reinterpret1 : entity xil_defaultlib.sysgen_reinterpret_f7e0b72e82 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => reinterpret4_output_port_net_x0,
    output_port => reinterpret1_output_port_net
  );
  reinterpret2 : entity xil_defaultlib.sysgen_reinterpret_317b92931a 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => circ_or_y_net,
    output_port => reinterpret2_output_port_net_x0
  );
  reinterpret3 : entity xil_defaultlib.sysgen_reinterpret_5dc9f217bd 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => reinterpret2_output_port_net,
    output_port => reinterpret3_output_port_net
  );
  reinterpret4 : entity xil_defaultlib.sysgen_reinterpret_317b92931a 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => arm_or_y_net,
    output_port => reinterpret4_output_port_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot6_45/ss/ctrl_split
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_ctrl_split_x14 is
  port (
    bus_in : in std_logic_vector( 32-1 downto 0 );
    msb_out4 : out std_logic_vector( 28-1 downto 0 );
    out3 : out std_logic_vector( 1-1 downto 0 );
    out2 : out std_logic_vector( 2-1 downto 0 );
    lsb_out1 : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_ctrl_split_x14;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_ctrl_split_x14 is 
  signal reinterpret4_output_port_net : std_logic_vector( 28-1 downto 0 );
  signal slice3_y_net : std_logic_vector( 1-1 downto 0 );
  signal reinterpret2_output_port_net : std_logic_vector( 2-1 downto 0 );
  signal slice1_y_net : std_logic_vector( 1-1 downto 0 );
  signal reint1_output_port_net : std_logic_vector( 32-1 downto 0 );
  signal slice2_y_net : std_logic_vector( 2-1 downto 0 );
  signal slice4_y_net : std_logic_vector( 28-1 downto 0 );
begin
  msb_out4 <= reinterpret4_output_port_net;
  out3 <= slice3_y_net;
  out2 <= reinterpret2_output_port_net;
  lsb_out1 <= slice1_y_net;
  reint1_output_port_net <= bus_in;
  reinterpret2 : entity xil_defaultlib.sysgen_reinterpret_5dc9f217bd 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => slice2_y_net,
    output_port => reinterpret2_output_port_net
  );
  reinterpret4 : entity xil_defaultlib.sysgen_reinterpret_f7e0b72e82 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => slice4_y_net,
    output_port => reinterpret4_output_port_net
  );
  slice1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 0,
    new_msb => 0,
    x_width => 32,
    y_width => 1
  )
  port map (
    x => reint1_output_port_net,
    y => slice1_y_net
  );
  slice2 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 1,
    new_msb => 2,
    x_width => 32,
    y_width => 2
  )
  port map (
    x => reint1_output_port_net,
    y => slice2_y_net
  );
  slice3 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 3,
    new_msb => 3,
    x_width => 32,
    y_width => 1
  )
  port map (
    x => reint1_output_port_net,
    y => slice3_y_net
  );
  slice4 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 4,
    new_msb => 31,
    x_width => 32,
    y_width => 28
  )
  port map (
    x => reint1_output_port_net,
    y => slice4_y_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot6_45/ss/status
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_status_x14 is
  port (
    out_reg : in std_logic_vector( 32-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_45_ss_status_user_data_in : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_status_x14;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_status_x14 is 
  signal concat_y_net : std_logic_vector( 32-1 downto 0 );
  signal cast_gw_dout_net : std_logic_vector( 32-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal io_delay_q_net : std_logic_vector( 32-1 downto 0 );
  signal reint1_output_port_net : std_logic_vector( 32-1 downto 0 );
  signal assert_reg_dout_net : std_logic_vector( 32-1 downto 0 );
begin
  concat_y_net <= out_reg;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_45_ss_status_user_data_in <= cast_gw_dout_net;
  clk_net <= clk_1;
  ce_net <= ce_1;
  io_delay : entity xil_defaultlib.sysgen_delay_34e314c510 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d => reint1_output_port_net,
    q => io_delay_q_net
  );
  cast_gw : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 32,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 32,
    latency => 1,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => io_delay_q_net,
    clk => clk_net,
    ce => ce_net,
    dout => cast_gw_dout_net
  );
  assert_reg : entity xil_defaultlib.xlpassthrough 
  generic map (
    din_width => 32,
    dout_width => 32
  )
  port map (
    din => concat_y_net,
    dout => assert_reg_dout_net
  );
  reint1 : entity xil_defaultlib.sysgen_reinterpret_52bb84f12b 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => assert_reg_dout_net,
    output_port => reint1_output_port_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot6_45/ss
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_ss_x11 is
  port (
    din : in std_logic_vector( 32-1 downto 0 );
    we : in std_logic_vector( 1-1 downto 0 );
    trig : in std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_45_ss_ctrl_user_data_out : in std_logic_vector( 32-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    arm_out : out std_logic_vector( 1-1 downto 0 );
    goto_76753580_we1 : out std_logic_vector( 1-1 downto 0 );
    goto_76753580_we4 : out std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_45_ss_bram_addr : out std_logic_vector( 10-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_45_ss_bram_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_45_ss_bram_we : out std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_45_ss_status_user_data_in : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_ss_x11;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_ss_x11 is 
  signal arm_or_y_net : std_logic_vector( 1-1 downto 0 );
  signal concatenate_y_net : std_logic_vector( 32-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc6_sync_net : std_logic_vector( 1-1 downto 0 );
  signal edge_op_y_net_x0 : std_logic_vector( 1-1 downto 0 );
  signal we_choice_y_net : std_logic_vector( 1-1 downto 0 );
  signal logical6_y_net : std_logic_vector( 1-1 downto 0 );
  signal convert_addr_dout_net : std_logic_vector( 10-1 downto 0 );
  signal convert_din1_dout_net : std_logic_vector( 32-1 downto 0 );
  signal convert_we_dout_net : std_logic_vector( 1-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_45_ss_ctrl_user_data_out_net : std_logic_vector( 32-1 downto 0 );
  signal cast_gw_dout_net : std_logic_vector( 32-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal slice2_y_net : std_logic_vector( 10-1 downto 0 );
  signal delay6_q_net : std_logic_vector( 32-1 downto 0 );
  signal concat_y_net : std_logic_vector( 32-1 downto 0 );
  signal data_choice_y_net : std_logic_vector( 32-1 downto 0 );
  signal register6_q_net : std_logic_vector( 1-1 downto 0 );
  signal never_op_net : std_logic_vector( 1-1 downto 0 );
  signal edge_op_y_net_x1 : std_logic_vector( 1-1 downto 0 );
  signal cast_dout_net : std_logic_vector( 32-1 downto 0 );
  signal concatenate_y_net_x0 : std_logic_vector( 32-1 downto 0 );
  signal add_del_q_net : std_logic_vector( 10-1 downto 0 );
  signal dat_del_q_net : std_logic_vector( 32-1 downto 0 );
  signal we_del_q_net : std_logic_vector( 1-1 downto 0 );
  signal reint1_output_port_net : std_logic_vector( 32-1 downto 0 );
  signal reinterpret4_output_port_net : std_logic_vector( 28-1 downto 0 );
  signal circ_or_y_net : std_logic_vector( 1-1 downto 0 );
  signal reinterpret2_output_port_net : std_logic_vector( 2-1 downto 0 );
  signal slice3_y_net : std_logic_vector( 1-1 downto 0 );
  signal slice1_y_net : std_logic_vector( 1-1 downto 0 );
  signal arm_op_net : std_logic_vector( 1-1 downto 0 );
  signal ri_output_port_net : std_logic_vector( 32-1 downto 0 );
  signal circ_op_net : std_logic_vector( 1-1 downto 0 );
begin
  arm_out <= arm_or_y_net;
  concatenate_y_net <= din;
  rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc6_sync_net <= we;
  edge_op_y_net_x0 <= trig;
  goto_76753580_we1 <= we_choice_y_net;
  goto_76753580_we4 <= logical6_y_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_45_ss_bram_addr <= convert_addr_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_45_ss_bram_data_in <= convert_din1_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_45_ss_bram_we <= convert_we_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_45_ss_ctrl_user_data_out_net <= rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_45_ss_ctrl_user_data_out;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_45_ss_status_user_data_in <= cast_gw_dout_net;
  clk_net <= clk_1;
  ce_net <= ce_1;
  add_gen : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_add_gen_x11 
  port map (
    din => data_choice_y_net,
    we => we_choice_y_net,
    go => register6_q_net,
    cont => never_op_net,
    init => edge_op_y_net_x1,
    clk_1 => clk_net,
    ce_1 => ce_net,
    add => slice2_y_net,
    dout => delay6_q_net,
    we_o => logical6_y_net,
    status => concat_y_net
  );
  basic_ctrl : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_basic_ctrl_x14 
  port map (
    din => cast_dout_net,
    we => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc6_sync_net,
    trig => edge_op_y_net_x0,
    ctrl => concatenate_y_net_x0,
    stopi => never_op_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    dout => data_choice_y_net,
    we_o => we_choice_y_net,
    go => register6_q_net,
    init => edge_op_y_net_x1
  );
  bram : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_bram_x14 
  port map (
    addr => add_del_q_net,
    data_in => dat_del_q_net,
    we => we_del_q_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_45_ss_bram_addr => convert_addr_dout_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_45_ss_bram_data_in => convert_din1_dout_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_45_ss_bram_we => convert_we_dout_net
  );
  ctrl : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_ctrl_x14 
  port map (
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_45_ss_ctrl_user_data_out => rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_45_ss_ctrl_user_data_out_net,
    in_reg => reint1_output_port_net
  );
  ctrl_combine : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_ctrl_combine_x14 
  port map (
    in1 => reinterpret4_output_port_net,
    in2 => circ_or_y_net,
    in3 => reinterpret2_output_port_net,
    in4 => arm_or_y_net,
    bus_out => concatenate_y_net_x0
  );
  ctrl_split : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_ctrl_split_x14 
  port map (
    bus_in => reint1_output_port_net,
    msb_out4 => reinterpret4_output_port_net,
    out3 => slice3_y_net,
    out2 => reinterpret2_output_port_net,
    lsb_out1 => slice1_y_net
  );
  status : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_status_x14 
  port map (
    out_reg => concat_y_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_45_ss_status_user_data_in => cast_gw_dout_net
  );
  add_del : entity xil_defaultlib.sysgen_delay_4e9264ffdf 
  port map (
    clr => '0',
    d => slice2_y_net,
    clk => clk_net,
    ce => ce_net,
    q => add_del_q_net
  );
  arm : entity xil_defaultlib.sysgen_constant_a7b8778750 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => arm_op_net
  );
  arm_or : entity xil_defaultlib.sysgen_logical_d7dc12cf31 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => slice1_y_net,
    d1 => arm_op_net,
    y => arm_or_y_net
  );
  cast : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 32,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 32,
    latency => 0,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => ri_output_port_net,
    clk => clk_net,
    ce => ce_net,
    dout => cast_dout_net
  );
  circ : entity xil_defaultlib.sysgen_constant_a7b8778750 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => circ_op_net
  );
  circ_or : entity xil_defaultlib.sysgen_logical_d7dc12cf31 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => slice3_y_net,
    d1 => circ_op_net,
    y => circ_or_y_net
  );
  dat_del : entity xil_defaultlib.sysgen_delay_5ec362a23c 
  port map (
    clr => '0',
    d => delay6_q_net,
    clk => clk_net,
    ce => ce_net,
    q => dat_del_q_net
  );
  never : entity xil_defaultlib.sysgen_constant_a7b8778750 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => never_op_net
  );
  ri : entity xil_defaultlib.sysgen_reinterpret_52bb84f12b 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => concatenate_y_net,
    output_port => ri_output_port_net
  );
  we_del : entity xil_defaultlib.sysgen_delay_e0740ee3f9 
  port map (
    clr => '0',
    d => logical6_y_net,
    clk => clk_net,
    ce => ce_net,
    q => we_del_q_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot6_45
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_45 is
  port (
    in_d0 : in std_logic_vector( 16-1 downto 0 );
    in_d1 : in std_logic_vector( 16-1 downto 0 );
    we : in std_logic_vector( 1-1 downto 0 );
    trig : in std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_45_ss_ctrl_user_data_out : in std_logic_vector( 32-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    arm_out : out std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_45_ss_bram_addr : out std_logic_vector( 10-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_45_ss_bram_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_45_ss_bram_we : out std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_45_ss_status_user_data_in : out std_logic_vector( 32-1 downto 0 );
    goto_76753580_we1 : out std_logic_vector( 1-1 downto 0 );
    goto_76753580_we4 : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_45;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_45 is 
  signal arm_or_y_net : std_logic_vector( 1-1 downto 0 );
  signal slice40_y_net : std_logic_vector( 16-1 downto 0 );
  signal slice43_y_net : std_logic_vector( 16-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc6_sync_net : std_logic_vector( 1-1 downto 0 );
  signal edge_op_y_net : std_logic_vector( 1-1 downto 0 );
  signal convert_addr_dout_net : std_logic_vector( 10-1 downto 0 );
  signal convert_din1_dout_net : std_logic_vector( 32-1 downto 0 );
  signal convert_we_dout_net : std_logic_vector( 1-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_45_ss_ctrl_user_data_out_net : std_logic_vector( 32-1 downto 0 );
  signal cast_gw_dout_net : std_logic_vector( 32-1 downto 0 );
  signal we_choice_y_net : std_logic_vector( 1-1 downto 0 );
  signal logical6_y_net : std_logic_vector( 1-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal concatenate_y_net : std_logic_vector( 32-1 downto 0 );
  signal assert_d0_dout_net : std_logic_vector( 16-1 downto 0 );
  signal assert_d1_dout_net : std_logic_vector( 16-1 downto 0 );
begin
  arm_out <= arm_or_y_net;
  slice40_y_net <= in_d0;
  slice43_y_net <= in_d1;
  rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc6_sync_net <= we;
  edge_op_y_net <= trig;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_45_ss_bram_addr <= convert_addr_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_45_ss_bram_data_in <= convert_din1_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_45_ss_bram_we <= convert_we_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_45_ss_ctrl_user_data_out_net <= rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_45_ss_ctrl_user_data_out;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_45_ss_status_user_data_in <= cast_gw_dout_net;
  goto_76753580_we1 <= we_choice_y_net;
  goto_76753580_we4 <= logical6_y_net;
  clk_net <= clk_1;
  ce_net <= ce_1;
  buscreate : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_buscreate_x11 
  port map (
    in1 => assert_d0_dout_net,
    in2 => assert_d1_dout_net,
    bus_out => concatenate_y_net
  );
  ss : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_ss_x11 
  port map (
    din => concatenate_y_net,
    we => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc6_sync_net,
    trig => edge_op_y_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_45_ss_ctrl_user_data_out => rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_45_ss_ctrl_user_data_out_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    arm_out => arm_or_y_net,
    goto_76753580_we1 => we_choice_y_net,
    goto_76753580_we4 => logical6_y_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_45_ss_bram_addr => convert_addr_dout_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_45_ss_bram_data_in => convert_din1_dout_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_45_ss_bram_we => convert_we_dout_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_45_ss_status_user_data_in => cast_gw_dout_net
  );
  assert_d0 : entity xil_defaultlib.xlpassthrough 
  generic map (
    din_width => 16,
    dout_width => 16
  )
  port map (
    din => slice40_y_net,
    dout => assert_d0_dout_net
  );
  assert_d1 : entity xil_defaultlib.xlpassthrough 
  generic map (
    din_width => 16,
    dout_width => 16
  )
  port map (
    din => slice43_y_net,
    dout => assert_d1_dout_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot6_67/buscreate
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_buscreate_x14 is
  port (
    in1 : in std_logic_vector( 16-1 downto 0 );
    in2 : in std_logic_vector( 16-1 downto 0 );
    bus_out : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_buscreate_x14;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_buscreate_x14 is 
  signal concatenate_y_net : std_logic_vector( 32-1 downto 0 );
  signal assert_d0_dout_net : std_logic_vector( 16-1 downto 0 );
  signal assert_d1_dout_net : std_logic_vector( 16-1 downto 0 );
  signal reinterpret1_output_port_net : std_logic_vector( 16-1 downto 0 );
  signal reinterpret2_output_port_net : std_logic_vector( 16-1 downto 0 );
begin
  bus_out <= concatenate_y_net;
  assert_d0_dout_net <= in1;
  assert_d1_dout_net <= in2;
  concatenate : entity xil_defaultlib.sysgen_concat_37649e01d1 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    in0 => reinterpret1_output_port_net,
    in1 => reinterpret2_output_port_net,
    y => concatenate_y_net
  );
  reinterpret1 : entity xil_defaultlib.sysgen_reinterpret_03c8cdbbc1 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => assert_d0_dout_net,
    output_port => reinterpret1_output_port_net
  );
  reinterpret2 : entity xil_defaultlib.sysgen_reinterpret_03c8cdbbc1 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => assert_d1_dout_net,
    output_port => reinterpret2_output_port_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot6_67/ss/add_gen/edge_detect
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x28 is
  port (
    in_x0 : in std_logic_vector( 1-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    out_x0 : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x28;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x28 is 
  signal edge_op_y_net : std_logic_vector( 1-1 downto 0 );
  signal slice3_y_net : std_logic_vector( 1-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal delay_q_net : std_logic_vector( 1-1 downto 0 );
  signal inverter_op_net : std_logic_vector( 1-1 downto 0 );
begin
  out_x0 <= edge_op_y_net;
  slice3_y_net <= in_x0;
  clk_net <= clk_1;
  ce_net <= ce_1;
  delay : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 1
  )
  port map (
    en => '1',
    rst => '1',
    d => slice3_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay_q_net
  );
  inverter : entity xil_defaultlib.sysgen_inverter_6233897471 
  port map (
    clr => '0',
    ip => slice3_y_net,
    clk => clk_net,
    ce => ce_net,
    op => inverter_op_net
  );
  edge_op : entity xil_defaultlib.sysgen_logical_9cc14fefba 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => inverter_op_net,
    d1 => delay_q_net,
    y => edge_op_y_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot6_67/ss/add_gen
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_add_gen_x14 is
  port (
    din : in std_logic_vector( 32-1 downto 0 );
    we : in std_logic_vector( 1-1 downto 0 );
    go : in std_logic_vector( 1-1 downto 0 );
    cont : in std_logic_vector( 1-1 downto 0 );
    init : in std_logic_vector( 1-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    add : out std_logic_vector( 10-1 downto 0 );
    dout : out std_logic_vector( 32-1 downto 0 );
    we_o : out std_logic_vector( 1-1 downto 0 );
    status : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_add_gen_x14;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_add_gen_x14 is 
  signal slice2_y_net : std_logic_vector( 10-1 downto 0 );
  signal delay6_q_net : std_logic_vector( 32-1 downto 0 );
  signal logical6_y_net : std_logic_vector( 1-1 downto 0 );
  signal concat_y_net : std_logic_vector( 32-1 downto 0 );
  signal data_choice_y_net : std_logic_vector( 32-1 downto 0 );
  signal we_choice_y_net : std_logic_vector( 1-1 downto 0 );
  signal register6_q_net : std_logic_vector( 1-1 downto 0 );
  signal never_op_net : std_logic_vector( 1-1 downto 0 );
  signal edge_op_y_net : std_logic_vector( 1-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal edge_op_y_net_x0 : std_logic_vector( 1-1 downto 0 );
  signal slice3_y_net : std_logic_vector( 1-1 downto 0 );
  signal shift_op_net : std_logic_vector( 19-1 downto 0 );
  signal inverter_op_net : std_logic_vector( 1-1 downto 0 );
  signal delay1_q_net : std_logic_vector( 12-1 downto 0 );
  signal convert_dout_net : std_logic_vector( 19-1 downto 0 );
  signal register5_q_net : std_logic_vector( 1-1 downto 0 );
  signal delay_q_net : std_logic_vector( 1-1 downto 0 );
  signal delay4_q_net : std_logic_vector( 1-1 downto 0 );
  signal slice1_y_net : std_logic_vector( 12-1 downto 0 );
  signal delay3_q_net : std_logic_vector( 1-1 downto 0 );
  signal inverter1_op_net : std_logic_vector( 1-1 downto 0 );
  signal logical1_y_net : std_logic_vector( 1-1 downto 0 );
  signal logical4_y_net : std_logic_vector( 1-1 downto 0 );
  signal add_gen_op_net : std_logic_vector( 13-1 downto 0 );
begin
  add <= slice2_y_net;
  dout <= delay6_q_net;
  we_o <= logical6_y_net;
  status <= concat_y_net;
  data_choice_y_net <= din;
  we_choice_y_net <= we;
  register6_q_net <= go;
  never_op_net <= cont;
  edge_op_y_net <= init;
  clk_net <= clk_1;
  ce_net <= ce_1;
  edge_detect : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x28 
  port map (
    in_x0 => slice3_y_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    out_x0 => edge_op_y_net_x0
  );
  concat : entity xil_defaultlib.sysgen_concat_fc8edfac0e 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    in0 => shift_op_net,
    in1 => inverter_op_net,
    in2 => delay1_q_net,
    y => concat_y_net
  );
  convert : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 1,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 19,
    latency => 0,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => register5_q_net,
    clk => clk_net,
    ce => ce_net,
    dout => convert_dout_net
  );
  delay : entity xil_defaultlib.sysgen_delay_e0740ee3f9 
  port map (
    clr => '0',
    d => delay4_q_net,
    clk => clk_net,
    ce => ce_net,
    q => delay_q_net
  );
  delay1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 12
  )
  port map (
    en => '1',
    rst => '1',
    d => slice1_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay1_q_net
  );
  delay3 : entity xil_defaultlib.sysgen_delay_e0740ee3f9 
  port map (
    clr => '0',
    d => never_op_net,
    clk => clk_net,
    ce => ce_net,
    q => delay3_q_net
  );
  delay4 : entity xil_defaultlib.sysgen_delay_e0740ee3f9 
  port map (
    clr => '0',
    d => edge_op_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay4_q_net
  );
  delay6 : entity xil_defaultlib.sysgen_delay_5ec362a23c 
  port map (
    clr => '0',
    d => data_choice_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay6_q_net
  );
  inverter : entity xil_defaultlib.sysgen_inverter_918b6bc6d0 
  port map (
    clr => '0',
    ip => register5_q_net,
    clk => clk_net,
    ce => ce_net,
    op => inverter_op_net
  );
  inverter1 : entity xil_defaultlib.sysgen_inverter_6233897471 
  port map (
    clr => '0',
    ip => edge_op_y_net_x0,
    clk => clk_net,
    ce => ce_net,
    op => inverter1_op_net
  );
  logical1 : entity xil_defaultlib.sysgen_logical_2486129911 
  port map (
    clr => '0',
    d0 => we_choice_y_net,
    d1 => register6_q_net,
    clk => clk_net,
    ce => ce_net,
    y => logical1_y_net
  );
  logical4 : entity xil_defaultlib.sysgen_logical_d7dc12cf31 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => delay3_q_net,
    d1 => inverter1_op_net,
    y => logical4_y_net
  );
  logical6 : entity xil_defaultlib.sysgen_logical_c05fefc67b 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => register5_q_net,
    d1 => logical4_y_net,
    d2 => logical1_y_net,
    y => logical6_y_net
  );
  register5 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlregister 
  generic map (
    d_width => 1,
    init_value => b"1"
  )
  port map (
    d => delay3_q_net,
    rst => delay_q_net,
    en => edge_op_y_net_x0,
    clk => clk_net,
    ce => ce_net,
    q => register5_q_net
  );
  shift : entity xil_defaultlib.sysgen_shift_5af4fe0a99 
  port map (
    clr => '0',
    ip => convert_dout_net,
    clk => clk_net,
    ce => ce_net,
    op => shift_op_net
  );
  add_gen : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlcounter_free 
  generic map (
    core_name0 => "rfdc_multi_eight_adcs_2048gsps_mts_c_counter_binary_v12_0_i1",
    op_arith => xlUnsigned,
    op_width => 13
  )
  port map (
    clr => '0',
    rst => delay4_q_net,
    en => logical6_y_net,
    clk => clk_net,
    ce => ce_net,
    op => add_gen_op_net
  );
  slice1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 0,
    new_msb => 11,
    x_width => 13,
    y_width => 12
  )
  port map (
    x => add_gen_op_net,
    y => slice1_y_net
  );
  slice2 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 2,
    new_msb => 11,
    x_width => 13,
    y_width => 10
  )
  port map (
    x => add_gen_op_net,
    y => slice2_y_net
  );
  slice3 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 12,
    new_msb => 12,
    x_width => 13,
    y_width => 1
  )
  port map (
    x => add_gen_op_net,
    y => slice3_y_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot6_67/ss/basic_ctrl/dram_munge
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_dram_munge_x13 is
  port (
    din : in std_logic_vector( 32-1 downto 0 );
    we : in std_logic_vector( 1-1 downto 0 );
    init : in std_logic_vector( 1-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    dout : out std_logic_vector( 32-1 downto 0 );
    we_o : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_dram_munge_x13;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_dram_munge_x13 is 
  signal data_choice_y_net : std_logic_vector( 32-1 downto 0 );
  signal we_choice_y_net : std_logic_vector( 1-1 downto 0 );
  signal cast_dout_net : std_logic_vector( 32-1 downto 0 );
  signal mux1_y_net_x0 : std_logic_vector( 1-1 downto 0 );
  signal edge_op_y_net : std_logic_vector( 1-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal concat_y_net : std_logic_vector( 80-1 downto 0 );
  signal constant_op_net : std_logic_vector( 8-1 downto 0 );
  signal register_q_net : std_logic_vector( 32-1 downto 0 );
  signal register1_q_net : std_logic_vector( 32-1 downto 0 );
  signal concat1_y_net : std_logic_vector( 80-1 downto 0 );
  signal register2_q_net : std_logic_vector( 32-1 downto 0 );
  signal register3_q_net : std_logic_vector( 32-1 downto 0 );
  signal delay_q_net : std_logic_vector( 1-1 downto 0 );
  signal logical_y_net : std_logic_vector( 1-1 downto 0 );
  signal delay1_q_net : std_logic_vector( 1-1 downto 0 );
  signal logical1_y_net : std_logic_vector( 1-1 downto 0 );
  signal relational3_op_net : std_logic_vector( 1-1 downto 0 );
  signal mux1_y_net : std_logic_vector( 80-1 downto 0 );
  signal dout_count_op_net : std_logic_vector( 1-1 downto 0 );
  signal relational_op_net : std_logic_vector( 1-1 downto 0 );
  signal relational1_op_net : std_logic_vector( 1-1 downto 0 );
  signal relational2_op_net : std_logic_vector( 1-1 downto 0 );
  signal input_count_op_net : std_logic_vector( 2-1 downto 0 );
  signal con0_op_net : std_logic_vector( 2-1 downto 0 );
  signal con1_op_net : std_logic_vector( 2-1 downto 0 );
  signal con2_op_net : std_logic_vector( 2-1 downto 0 );
  signal con3_op_net : std_logic_vector( 2-1 downto 0 );
  signal dram_op_net : std_logic_vector( 1-1 downto 0 );
begin
  dout <= data_choice_y_net;
  we_o <= we_choice_y_net;
  cast_dout_net <= din;
  mux1_y_net_x0 <= we;
  edge_op_y_net <= init;
  clk_net <= clk_1;
  ce_net <= ce_1;
  concat : entity xil_defaultlib.sysgen_concat_e7487baac7 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    in0 => constant_op_net,
    in1 => register_q_net,
    in2 => constant_op_net,
    in3 => register1_q_net,
    y => concat_y_net
  );
  concat1 : entity xil_defaultlib.sysgen_concat_e7487baac7 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    in0 => constant_op_net,
    in1 => register2_q_net,
    in2 => constant_op_net,
    in3 => register3_q_net,
    y => concat1_y_net
  );
  constant_x0 : entity xil_defaultlib.sysgen_constant_869e31f04d 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => constant_op_net
  );
  delay : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 1
  )
  port map (
    en => '1',
    rst => '1',
    d => logical_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay_q_net
  );
  delay1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 1
  )
  port map (
    en => '1',
    rst => '1',
    d => logical1_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay1_q_net
  );
  logical : entity xil_defaultlib.sysgen_logical_2486129911 
  port map (
    clr => '0',
    d0 => relational3_op_net,
    d1 => mux1_y_net_x0,
    clk => clk_net,
    ce => ce_net,
    y => logical_y_net
  );
  logical1 : entity xil_defaultlib.sysgen_logical_d7dc12cf31 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => logical_y_net,
    d1 => delay_q_net,
    y => logical1_y_net
  );
  mux1 : entity xil_defaultlib.sysgen_mux_71ee2b1026 
  port map (
    clr => '0',
    sel => dout_count_op_net,
    d0 => concat_y_net,
    d1 => concat1_y_net,
    clk => clk_net,
    ce => ce_net,
    y => mux1_y_net
  );
  register_x0 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlregister 
  generic map (
    d_width => 32,
    init_value => b"00000000000000000000000000000000"
  )
  port map (
    rst => "0",
    d => cast_dout_net,
    en => relational_op_net,
    clk => clk_net,
    ce => ce_net,
    q => register_q_net
  );
  register1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlregister 
  generic map (
    d_width => 32,
    init_value => b"00000000000000000000000000000000"
  )
  port map (
    rst => "0",
    d => cast_dout_net,
    en => relational1_op_net,
    clk => clk_net,
    ce => ce_net,
    q => register1_q_net
  );
  register2 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlregister 
  generic map (
    d_width => 32,
    init_value => b"00000000000000000000000000000000"
  )
  port map (
    rst => "0",
    d => cast_dout_net,
    en => relational2_op_net,
    clk => clk_net,
    ce => ce_net,
    q => register2_q_net
  );
  register3 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlregister 
  generic map (
    d_width => 32,
    init_value => b"00000000000000000000000000000000"
  )
  port map (
    rst => "0",
    d => cast_dout_net,
    en => relational3_op_net,
    clk => clk_net,
    ce => ce_net,
    q => register3_q_net
  );
  relational : entity xil_defaultlib.sysgen_relational_e5d6b5eaca 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    a => input_count_op_net,
    b => con0_op_net,
    op => relational_op_net
  );
  relational1 : entity xil_defaultlib.sysgen_relational_e5d6b5eaca 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    a => input_count_op_net,
    b => con1_op_net,
    op => relational1_op_net
  );
  relational2 : entity xil_defaultlib.sysgen_relational_e5d6b5eaca 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    a => input_count_op_net,
    b => con2_op_net,
    op => relational2_op_net
  );
  relational3 : entity xil_defaultlib.sysgen_relational_e5d6b5eaca 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    a => input_count_op_net,
    b => con3_op_net,
    op => relational3_op_net
  );
  con0 : entity xil_defaultlib.sysgen_constant_b58c3a1535 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => con0_op_net
  );
  con1 : entity xil_defaultlib.sysgen_constant_d3f27a6354 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => con1_op_net
  );
  con2 : entity xil_defaultlib.sysgen_constant_2fa4689d4e 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => con2_op_net
  );
  con3 : entity xil_defaultlib.sysgen_constant_31bab66ba6 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => con3_op_net
  );
  data_choice : entity xil_defaultlib.sysgen_mux_d624c1af44 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    sel => dram_op_net,
    d0 => cast_dout_net,
    d1 => mux1_y_net,
    y => data_choice_y_net
  );
  dout_count : entity xil_defaultlib.sysgen_counter_a9c1c293c2 
  port map (
    clr => '0',
    rst => edge_op_y_net,
    en => logical1_y_net,
    clk => clk_net,
    ce => ce_net,
    op => dout_count_op_net
  );
  dram : entity xil_defaultlib.sysgen_constant_a7b8778750 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => dram_op_net
  );
  input_count : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlcounter_free 
  generic map (
    core_name0 => "rfdc_multi_eight_adcs_2048gsps_mts_c_counter_binary_v12_0_i2",
    op_arith => xlUnsigned,
    op_width => 2
  )
  port map (
    clr => '0',
    rst => edge_op_y_net,
    en => mux1_y_net_x0,
    clk => clk_net,
    ce => ce_net,
    op => input_count_op_net
  );
  we_choice : entity xil_defaultlib.sysgen_mux_4874190f11 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    sel => dram_op_net,
    d0 => mux1_y_net_x0,
    d1 => delay1_q_net,
    y => we_choice_y_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot6_67/ss/basic_ctrl/edge_detect
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x27 is
  port (
    in_x0 : in std_logic_vector( 1-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    out_x0 : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x27;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x27 is 
  signal edge_op_y_net : std_logic_vector( 1-1 downto 0 );
  signal delay1_q_net : std_logic_vector( 1-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal delay_q_net : std_logic_vector( 1-1 downto 0 );
  signal inverter_op_net : std_logic_vector( 1-1 downto 0 );
begin
  out_x0 <= edge_op_y_net;
  delay1_q_net <= in_x0;
  clk_net <= clk_1;
  ce_net <= ce_1;
  delay : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 1
  )
  port map (
    en => '1',
    rst => '1',
    d => delay1_q_net,
    clk => clk_net,
    ce => ce_net,
    q => delay_q_net
  );
  inverter : entity xil_defaultlib.sysgen_inverter_6233897471 
  port map (
    clr => '0',
    ip => delay1_q_net,
    clk => clk_net,
    ce => ce_net,
    op => inverter_op_net
  );
  edge_op : entity xil_defaultlib.sysgen_logical_0f1aa1e2d7 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => inverter_op_net,
    d1 => delay_q_net,
    y => edge_op_y_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot6_67/ss/basic_ctrl
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_basic_ctrl_x13 is
  port (
    din : in std_logic_vector( 32-1 downto 0 );
    we : in std_logic_vector( 1-1 downto 0 );
    trig : in std_logic_vector( 1-1 downto 0 );
    ctrl : in std_logic_vector( 32-1 downto 0 );
    stopi : in std_logic_vector( 1-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    dout : out std_logic_vector( 32-1 downto 0 );
    we_o : out std_logic_vector( 1-1 downto 0 );
    go : out std_logic_vector( 1-1 downto 0 );
    init : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_basic_ctrl_x13;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_basic_ctrl_x13 is 
  signal data_choice_y_net : std_logic_vector( 32-1 downto 0 );
  signal we_choice_y_net : std_logic_vector( 1-1 downto 0 );
  signal register6_q_net : std_logic_vector( 1-1 downto 0 );
  signal edge_op_y_net_x0 : std_logic_vector( 1-1 downto 0 );
  signal cast_dout_net : std_logic_vector( 32-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc6_sync_net : std_logic_vector( 1-1 downto 0 );
  signal edge_op_y_net : std_logic_vector( 1-1 downto 0 );
  signal concatenate_y_net : std_logic_vector( 32-1 downto 0 );
  signal never_op_net : std_logic_vector( 1-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal mux1_y_net : std_logic_vector( 1-1 downto 0 );
  signal delay1_q_net : std_logic_vector( 1-1 downto 0 );
  signal constant_op_net : std_logic_vector( 1-1 downto 0 );
  signal constant1_op_net : std_logic_vector( 1-1 downto 0 );
  signal constant2_op_net : std_logic_vector( 1-1 downto 0 );
  signal enable_y_net : std_logic_vector( 1-1 downto 0 );
  signal delay2_q_net : std_logic_vector( 1-1 downto 0 );
  signal trig_src_y_net : std_logic_vector( 1-1 downto 0 );
  signal delay3_q_net : std_logic_vector( 1-1 downto 0 );
  signal valid_src_y_net : std_logic_vector( 1-1 downto 0 );
  signal inverter_op_net : std_logic_vector( 1-1 downto 0 );
  signal logical_y_net : std_logic_vector( 1-1 downto 0 );
  signal mux2_y_net : std_logic_vector( 1-1 downto 0 );
  signal register1_q_net : std_logic_vector( 1-1 downto 0 );
begin
  dout <= data_choice_y_net;
  we_o <= we_choice_y_net;
  go <= register6_q_net;
  init <= edge_op_y_net_x0;
  cast_dout_net <= din;
  rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc6_sync_net <= we;
  edge_op_y_net <= trig;
  concatenate_y_net <= ctrl;
  never_op_net <= stopi;
  clk_net <= clk_1;
  ce_net <= ce_1;
  dram_munge : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_dram_munge_x13 
  port map (
    din => cast_dout_net,
    we => mux1_y_net,
    init => edge_op_y_net_x0,
    clk_1 => clk_net,
    ce_1 => ce_net,
    dout => data_choice_y_net,
    we_o => we_choice_y_net
  );
  edge_detect : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x27 
  port map (
    in_x0 => delay1_q_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    out_x0 => edge_op_y_net_x0
  );
  constant_x0 : entity xil_defaultlib.sysgen_constant_c95a0b5efb 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => constant_op_net
  );
  constant1 : entity xil_defaultlib.sysgen_constant_c95a0b5efb 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => constant1_op_net
  );
  constant2 : entity xil_defaultlib.sysgen_constant_c95a0b5efb 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => constant2_op_net
  );
  delay1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 1
  )
  port map (
    en => '1',
    rst => '1',
    d => enable_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay1_q_net
  );
  delay2 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 1
  )
  port map (
    en => '1',
    rst => '1',
    d => trig_src_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay2_q_net
  );
  delay3 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 1
  )
  port map (
    en => '1',
    rst => '1',
    d => valid_src_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay3_q_net
  );
  inverter : entity xil_defaultlib.sysgen_inverter_6233897471 
  port map (
    clr => '0',
    ip => edge_op_y_net_x0,
    clk => clk_net,
    ce => ce_net,
    op => inverter_op_net
  );
  logical : entity xil_defaultlib.sysgen_logical_d26e5cda59 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => mux2_y_net,
    d1 => inverter_op_net,
    y => logical_y_net
  );
  mux1 : entity xil_defaultlib.sysgen_mux_4874190f11 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    sel => delay3_q_net,
    d0 => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc6_sync_net,
    d1 => constant2_op_net,
    y => mux1_y_net
  );
  mux2 : entity xil_defaultlib.sysgen_mux_4874190f11 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    sel => delay2_q_net,
    d0 => edge_op_y_net,
    d1 => constant1_op_net,
    y => mux2_y_net
  );
  register1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlregister 
  generic map (
    d_width => 1,
    init_value => b"0"
  )
  port map (
    d => constant_op_net,
    rst => logical_y_net,
    en => edge_op_y_net_x0,
    clk => clk_net,
    ce => ce_net,
    q => register1_q_net
  );
  register6 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlregister 
  generic map (
    d_width => 1,
    init_value => b"0"
  )
  port map (
    d => mux2_y_net,
    rst => edge_op_y_net_x0,
    en => register1_q_net,
    clk => clk_net,
    ce => ce_net,
    q => register6_q_net
  );
  enable : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 0,
    new_msb => 0,
    x_width => 32,
    y_width => 1
  )
  port map (
    x => concatenate_y_net,
    y => enable_y_net
  );
  trig_src : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 1,
    new_msb => 1,
    x_width => 32,
    y_width => 1
  )
  port map (
    x => concatenate_y_net,
    y => trig_src_y_net
  );
  valid_src : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 2,
    new_msb => 2,
    x_width => 32,
    y_width => 1
  )
  port map (
    x => concatenate_y_net,
    y => valid_src_y_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot6_67/ss/bram/calc_add
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_calc_add_x13 is
  port (
    in_x0 : in std_logic_vector( 10-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    out_x0 : out std_logic_vector( 10-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_calc_add_x13;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_calc_add_x13 is 
  signal mux_y_net : std_logic_vector( 10-1 downto 0 );
  signal add_del_q_net : std_logic_vector( 10-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal add_sub_s_net : std_logic_vector( 1-1 downto 0 );
  signal const_op_net : std_logic_vector( 1-1 downto 0 );
  signal lsw_y_net : std_logic_vector( 1-1 downto 0 );
  signal concat_y_net : std_logic_vector( 10-1 downto 0 );
  signal msw_y_net : std_logic_vector( 9-1 downto 0 );
  signal convert_addr_dout_net : std_logic_vector( 10-1 downto 0 );
  signal manipulate_op_net : std_logic_vector( 1-1 downto 0 );
begin
  out_x0 <= mux_y_net;
  add_del_q_net <= in_x0;
  clk_net <= clk_1;
  ce_net <= ce_1;
  add_sub : entity xil_defaultlib.sysgen_addsub_fd3b6c715c 
  port map (
    clr => '0',
    a => const_op_net,
    b => lsw_y_net,
    clk => clk_net,
    ce => ce_net,
    s => add_sub_s_net
  );
  concat : entity xil_defaultlib.sysgen_concat_f4b90dfa16 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    in0 => msw_y_net,
    in1 => add_sub_s_net,
    y => concat_y_net
  );
  const : entity xil_defaultlib.sysgen_constant_a7b8778750 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => const_op_net
  );
  convert_addr : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 10,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 10,
    latency => 0,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => add_del_q_net,
    clk => clk_net,
    ce => ce_net,
    dout => convert_addr_dout_net
  );
  lsw : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 0,
    new_msb => 0,
    x_width => 10,
    y_width => 1
  )
  port map (
    x => convert_addr_dout_net,
    y => lsw_y_net
  );
  manipulate : entity xil_defaultlib.sysgen_constant_a7b8778750 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => manipulate_op_net
  );
  msw : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 1,
    new_msb => 9,
    x_width => 10,
    y_width => 9
  )
  port map (
    x => convert_addr_dout_net,
    y => msw_y_net
  );
  mux : entity xil_defaultlib.sysgen_mux_4417594854 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    sel => manipulate_op_net,
    d0 => convert_addr_dout_net,
    d1 => concat_y_net,
    y => mux_y_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot6_67/ss/bram/munge_in
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_munge_in_x13 is
  port (
    din : in std_logic_vector( 32-1 downto 0 );
    dout : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_munge_in_x13;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_munge_in_x13 is 
  signal reinterpret_out_output_port_net : std_logic_vector( 32-1 downto 0 );
  signal dat_del_q_net : std_logic_vector( 32-1 downto 0 );
begin
  dout <= reinterpret_out_output_port_net;
  dat_del_q_net <= din;
  reinterpret_out : entity xil_defaultlib.sysgen_reinterpret_52bb84f12b 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => dat_del_q_net,
    output_port => reinterpret_out_output_port_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot6_67/ss/bram
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_bram_x13 is
  port (
    addr : in std_logic_vector( 10-1 downto 0 );
    data_in : in std_logic_vector( 32-1 downto 0 );
    we : in std_logic_vector( 1-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_67_ss_bram_addr : out std_logic_vector( 10-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_67_ss_bram_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_67_ss_bram_we : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_bram_x13;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_bram_x13 is 
  signal add_del_q_net : std_logic_vector( 10-1 downto 0 );
  signal dat_del_q_net : std_logic_vector( 32-1 downto 0 );
  signal we_del_q_net : std_logic_vector( 1-1 downto 0 );
  signal convert_addr_dout_net : std_logic_vector( 10-1 downto 0 );
  signal convert_din1_dout_net : std_logic_vector( 32-1 downto 0 );
  signal convert_we_dout_net : std_logic_vector( 1-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal mux_y_net : std_logic_vector( 10-1 downto 0 );
  signal reinterpret_out_output_port_net : std_logic_vector( 32-1 downto 0 );
begin
  add_del_q_net <= addr;
  dat_del_q_net <= data_in;
  we_del_q_net <= we;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_67_ss_bram_addr <= convert_addr_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_67_ss_bram_data_in <= convert_din1_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_67_ss_bram_we <= convert_we_dout_net;
  clk_net <= clk_1;
  ce_net <= ce_1;
  calc_add : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_calc_add_x13 
  port map (
    in_x0 => add_del_q_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    out_x0 => mux_y_net
  );
  munge_in : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_munge_in_x13 
  port map (
    din => dat_del_q_net,
    dout => reinterpret_out_output_port_net
  );
  convert_addr : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 10,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 10,
    latency => 0,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => mux_y_net,
    clk => clk_net,
    ce => ce_net,
    dout => convert_addr_dout_net
  );
  convert_din1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 32,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 32,
    latency => 0,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => reinterpret_out_output_port_net,
    clk => clk_net,
    ce => ce_net,
    dout => convert_din1_dout_net
  );
  convert_we : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 1,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 1,
    latency => 0,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => we_del_q_net,
    clk => clk_net,
    ce => ce_net,
    dout => convert_we_dout_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot6_67/ss/ctrl
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_ctrl_x13 is
  port (
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_67_ss_ctrl_user_data_out : in std_logic_vector( 32-1 downto 0 );
    in_reg : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_ctrl_x13;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_ctrl_x13 is 
  signal reint1_output_port_net : std_logic_vector( 32-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_67_ss_ctrl_user_data_out_net : std_logic_vector( 32-1 downto 0 );
  signal io_delay_q_net : std_logic_vector( 32-1 downto 0 );
  signal slice_reg_y_net : std_logic_vector( 32-1 downto 0 );
begin
  in_reg <= reint1_output_port_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_67_ss_ctrl_user_data_out_net <= rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_67_ss_ctrl_user_data_out;
  io_delay : entity xil_defaultlib.sysgen_delay_34e314c510 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d => rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_67_ss_ctrl_user_data_out_net,
    q => io_delay_q_net
  );
  slice_reg : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 0,
    new_msb => 31,
    x_width => 32,
    y_width => 32
  )
  port map (
    x => io_delay_q_net,
    y => slice_reg_y_net
  );
  reint1 : entity xil_defaultlib.sysgen_reinterpret_52bb84f12b 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => slice_reg_y_net,
    output_port => reint1_output_port_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot6_67/ss/ctrl_combine
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_ctrl_combine_x13 is
  port (
    in1 : in std_logic_vector( 28-1 downto 0 );
    in2 : in std_logic_vector( 1-1 downto 0 );
    in3 : in std_logic_vector( 2-1 downto 0 );
    in4 : in std_logic_vector( 1-1 downto 0 );
    bus_out : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_ctrl_combine_x13;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_ctrl_combine_x13 is 
  signal concatenate_y_net : std_logic_vector( 32-1 downto 0 );
  signal reinterpret4_output_port_net_x0 : std_logic_vector( 28-1 downto 0 );
  signal circ_or_y_net : std_logic_vector( 1-1 downto 0 );
  signal reinterpret2_output_port_net : std_logic_vector( 2-1 downto 0 );
  signal arm_or_y_net : std_logic_vector( 1-1 downto 0 );
  signal reinterpret1_output_port_net : std_logic_vector( 28-1 downto 0 );
  signal reinterpret2_output_port_net_x0 : std_logic_vector( 1-1 downto 0 );
  signal reinterpret3_output_port_net : std_logic_vector( 2-1 downto 0 );
  signal reinterpret4_output_port_net : std_logic_vector( 1-1 downto 0 );
begin
  bus_out <= concatenate_y_net;
  reinterpret4_output_port_net_x0 <= in1;
  circ_or_y_net <= in2;
  reinterpret2_output_port_net <= in3;
  arm_or_y_net <= in4;
  concatenate : entity xil_defaultlib.sysgen_concat_8611e618a5 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    in0 => reinterpret1_output_port_net,
    in1 => reinterpret2_output_port_net_x0,
    in2 => reinterpret3_output_port_net,
    in3 => reinterpret4_output_port_net,
    y => concatenate_y_net
  );
  reinterpret1 : entity xil_defaultlib.sysgen_reinterpret_f7e0b72e82 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => reinterpret4_output_port_net_x0,
    output_port => reinterpret1_output_port_net
  );
  reinterpret2 : entity xil_defaultlib.sysgen_reinterpret_317b92931a 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => circ_or_y_net,
    output_port => reinterpret2_output_port_net_x0
  );
  reinterpret3 : entity xil_defaultlib.sysgen_reinterpret_5dc9f217bd 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => reinterpret2_output_port_net,
    output_port => reinterpret3_output_port_net
  );
  reinterpret4 : entity xil_defaultlib.sysgen_reinterpret_317b92931a 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => arm_or_y_net,
    output_port => reinterpret4_output_port_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot6_67/ss/ctrl_split
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_ctrl_split_x13 is
  port (
    bus_in : in std_logic_vector( 32-1 downto 0 );
    msb_out4 : out std_logic_vector( 28-1 downto 0 );
    out3 : out std_logic_vector( 1-1 downto 0 );
    out2 : out std_logic_vector( 2-1 downto 0 );
    lsb_out1 : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_ctrl_split_x13;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_ctrl_split_x13 is 
  signal reinterpret4_output_port_net : std_logic_vector( 28-1 downto 0 );
  signal slice3_y_net : std_logic_vector( 1-1 downto 0 );
  signal reinterpret2_output_port_net : std_logic_vector( 2-1 downto 0 );
  signal slice1_y_net : std_logic_vector( 1-1 downto 0 );
  signal reint1_output_port_net : std_logic_vector( 32-1 downto 0 );
  signal slice2_y_net : std_logic_vector( 2-1 downto 0 );
  signal slice4_y_net : std_logic_vector( 28-1 downto 0 );
begin
  msb_out4 <= reinterpret4_output_port_net;
  out3 <= slice3_y_net;
  out2 <= reinterpret2_output_port_net;
  lsb_out1 <= slice1_y_net;
  reint1_output_port_net <= bus_in;
  reinterpret2 : entity xil_defaultlib.sysgen_reinterpret_5dc9f217bd 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => slice2_y_net,
    output_port => reinterpret2_output_port_net
  );
  reinterpret4 : entity xil_defaultlib.sysgen_reinterpret_f7e0b72e82 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => slice4_y_net,
    output_port => reinterpret4_output_port_net
  );
  slice1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 0,
    new_msb => 0,
    x_width => 32,
    y_width => 1
  )
  port map (
    x => reint1_output_port_net,
    y => slice1_y_net
  );
  slice2 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 1,
    new_msb => 2,
    x_width => 32,
    y_width => 2
  )
  port map (
    x => reint1_output_port_net,
    y => slice2_y_net
  );
  slice3 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 3,
    new_msb => 3,
    x_width => 32,
    y_width => 1
  )
  port map (
    x => reint1_output_port_net,
    y => slice3_y_net
  );
  slice4 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 4,
    new_msb => 31,
    x_width => 32,
    y_width => 28
  )
  port map (
    x => reint1_output_port_net,
    y => slice4_y_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot6_67/ss/status
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_status_x13 is
  port (
    out_reg : in std_logic_vector( 32-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_67_ss_status_user_data_in : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_status_x13;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_status_x13 is 
  signal concat_y_net : std_logic_vector( 32-1 downto 0 );
  signal cast_gw_dout_net : std_logic_vector( 32-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal io_delay_q_net : std_logic_vector( 32-1 downto 0 );
  signal reint1_output_port_net : std_logic_vector( 32-1 downto 0 );
  signal assert_reg_dout_net : std_logic_vector( 32-1 downto 0 );
begin
  concat_y_net <= out_reg;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_67_ss_status_user_data_in <= cast_gw_dout_net;
  clk_net <= clk_1;
  ce_net <= ce_1;
  io_delay : entity xil_defaultlib.sysgen_delay_34e314c510 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d => reint1_output_port_net,
    q => io_delay_q_net
  );
  cast_gw : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 32,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 32,
    latency => 1,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => io_delay_q_net,
    clk => clk_net,
    ce => ce_net,
    dout => cast_gw_dout_net
  );
  assert_reg : entity xil_defaultlib.xlpassthrough 
  generic map (
    din_width => 32,
    dout_width => 32
  )
  port map (
    din => concat_y_net,
    dout => assert_reg_dout_net
  );
  reint1 : entity xil_defaultlib.sysgen_reinterpret_52bb84f12b 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => assert_reg_dout_net,
    output_port => reint1_output_port_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot6_67/ss
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_ss_x14 is
  port (
    din : in std_logic_vector( 32-1 downto 0 );
    we : in std_logic_vector( 1-1 downto 0 );
    trig : in std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_67_ss_ctrl_user_data_out : in std_logic_vector( 32-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    arm_out : out std_logic_vector( 1-1 downto 0 );
    goto_78660204_we1 : out std_logic_vector( 1-1 downto 0 );
    goto_78660204_we4 : out std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_67_ss_bram_addr : out std_logic_vector( 10-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_67_ss_bram_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_67_ss_bram_we : out std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_67_ss_status_user_data_in : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_ss_x14;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_ss_x14 is 
  signal arm_or_y_net : std_logic_vector( 1-1 downto 0 );
  signal concatenate_y_net : std_logic_vector( 32-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc6_sync_net : std_logic_vector( 1-1 downto 0 );
  signal edge_op_y_net_x0 : std_logic_vector( 1-1 downto 0 );
  signal we_choice_y_net : std_logic_vector( 1-1 downto 0 );
  signal logical6_y_net : std_logic_vector( 1-1 downto 0 );
  signal convert_addr_dout_net : std_logic_vector( 10-1 downto 0 );
  signal convert_din1_dout_net : std_logic_vector( 32-1 downto 0 );
  signal convert_we_dout_net : std_logic_vector( 1-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_67_ss_ctrl_user_data_out_net : std_logic_vector( 32-1 downto 0 );
  signal cast_gw_dout_net : std_logic_vector( 32-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal slice2_y_net : std_logic_vector( 10-1 downto 0 );
  signal delay6_q_net : std_logic_vector( 32-1 downto 0 );
  signal concat_y_net : std_logic_vector( 32-1 downto 0 );
  signal data_choice_y_net : std_logic_vector( 32-1 downto 0 );
  signal register6_q_net : std_logic_vector( 1-1 downto 0 );
  signal never_op_net : std_logic_vector( 1-1 downto 0 );
  signal edge_op_y_net_x1 : std_logic_vector( 1-1 downto 0 );
  signal cast_dout_net : std_logic_vector( 32-1 downto 0 );
  signal concatenate_y_net_x0 : std_logic_vector( 32-1 downto 0 );
  signal add_del_q_net : std_logic_vector( 10-1 downto 0 );
  signal dat_del_q_net : std_logic_vector( 32-1 downto 0 );
  signal we_del_q_net : std_logic_vector( 1-1 downto 0 );
  signal reint1_output_port_net : std_logic_vector( 32-1 downto 0 );
  signal reinterpret4_output_port_net : std_logic_vector( 28-1 downto 0 );
  signal circ_or_y_net : std_logic_vector( 1-1 downto 0 );
  signal reinterpret2_output_port_net : std_logic_vector( 2-1 downto 0 );
  signal slice3_y_net : std_logic_vector( 1-1 downto 0 );
  signal slice1_y_net : std_logic_vector( 1-1 downto 0 );
  signal arm_op_net : std_logic_vector( 1-1 downto 0 );
  signal ri_output_port_net : std_logic_vector( 32-1 downto 0 );
  signal circ_op_net : std_logic_vector( 1-1 downto 0 );
begin
  arm_out <= arm_or_y_net;
  concatenate_y_net <= din;
  rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc6_sync_net <= we;
  edge_op_y_net_x0 <= trig;
  goto_78660204_we1 <= we_choice_y_net;
  goto_78660204_we4 <= logical6_y_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_67_ss_bram_addr <= convert_addr_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_67_ss_bram_data_in <= convert_din1_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_67_ss_bram_we <= convert_we_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_67_ss_ctrl_user_data_out_net <= rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_67_ss_ctrl_user_data_out;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_67_ss_status_user_data_in <= cast_gw_dout_net;
  clk_net <= clk_1;
  ce_net <= ce_1;
  add_gen : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_add_gen_x14 
  port map (
    din => data_choice_y_net,
    we => we_choice_y_net,
    go => register6_q_net,
    cont => never_op_net,
    init => edge_op_y_net_x1,
    clk_1 => clk_net,
    ce_1 => ce_net,
    add => slice2_y_net,
    dout => delay6_q_net,
    we_o => logical6_y_net,
    status => concat_y_net
  );
  basic_ctrl : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_basic_ctrl_x13 
  port map (
    din => cast_dout_net,
    we => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc6_sync_net,
    trig => edge_op_y_net_x0,
    ctrl => concatenate_y_net_x0,
    stopi => never_op_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    dout => data_choice_y_net,
    we_o => we_choice_y_net,
    go => register6_q_net,
    init => edge_op_y_net_x1
  );
  bram : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_bram_x13 
  port map (
    addr => add_del_q_net,
    data_in => dat_del_q_net,
    we => we_del_q_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_67_ss_bram_addr => convert_addr_dout_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_67_ss_bram_data_in => convert_din1_dout_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_67_ss_bram_we => convert_we_dout_net
  );
  ctrl : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_ctrl_x13 
  port map (
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_67_ss_ctrl_user_data_out => rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_67_ss_ctrl_user_data_out_net,
    in_reg => reint1_output_port_net
  );
  ctrl_combine : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_ctrl_combine_x13 
  port map (
    in1 => reinterpret4_output_port_net,
    in2 => circ_or_y_net,
    in3 => reinterpret2_output_port_net,
    in4 => arm_or_y_net,
    bus_out => concatenate_y_net_x0
  );
  ctrl_split : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_ctrl_split_x13 
  port map (
    bus_in => reint1_output_port_net,
    msb_out4 => reinterpret4_output_port_net,
    out3 => slice3_y_net,
    out2 => reinterpret2_output_port_net,
    lsb_out1 => slice1_y_net
  );
  status : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_status_x13 
  port map (
    out_reg => concat_y_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_67_ss_status_user_data_in => cast_gw_dout_net
  );
  add_del : entity xil_defaultlib.sysgen_delay_4e9264ffdf 
  port map (
    clr => '0',
    d => slice2_y_net,
    clk => clk_net,
    ce => ce_net,
    q => add_del_q_net
  );
  arm : entity xil_defaultlib.sysgen_constant_a7b8778750 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => arm_op_net
  );
  arm_or : entity xil_defaultlib.sysgen_logical_d7dc12cf31 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => slice1_y_net,
    d1 => arm_op_net,
    y => arm_or_y_net
  );
  cast : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 32,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 32,
    latency => 0,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => ri_output_port_net,
    clk => clk_net,
    ce => ce_net,
    dout => cast_dout_net
  );
  circ : entity xil_defaultlib.sysgen_constant_a7b8778750 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => circ_op_net
  );
  circ_or : entity xil_defaultlib.sysgen_logical_d7dc12cf31 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => slice3_y_net,
    d1 => circ_op_net,
    y => circ_or_y_net
  );
  dat_del : entity xil_defaultlib.sysgen_delay_5ec362a23c 
  port map (
    clr => '0',
    d => delay6_q_net,
    clk => clk_net,
    ce => ce_net,
    q => dat_del_q_net
  );
  never : entity xil_defaultlib.sysgen_constant_a7b8778750 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => never_op_net
  );
  ri : entity xil_defaultlib.sysgen_reinterpret_52bb84f12b 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => concatenate_y_net,
    output_port => ri_output_port_net
  );
  we_del : entity xil_defaultlib.sysgen_delay_e0740ee3f9 
  port map (
    clr => '0',
    d => logical6_y_net,
    clk => clk_net,
    ce => ce_net,
    q => we_del_q_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot6_67
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_67 is
  port (
    in_d0 : in std_logic_vector( 16-1 downto 0 );
    in_d1 : in std_logic_vector( 16-1 downto 0 );
    we : in std_logic_vector( 1-1 downto 0 );
    trig : in std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_67_ss_ctrl_user_data_out : in std_logic_vector( 32-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    arm_out : out std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_67_ss_bram_addr : out std_logic_vector( 10-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_67_ss_bram_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_67_ss_bram_we : out std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_67_ss_status_user_data_in : out std_logic_vector( 32-1 downto 0 );
    goto_78660204_we1 : out std_logic_vector( 1-1 downto 0 );
    goto_78660204_we4 : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_67;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_67 is 
  signal arm_or_y_net : std_logic_vector( 1-1 downto 0 );
  signal slice41_y_net : std_logic_vector( 16-1 downto 0 );
  signal slice42_y_net : std_logic_vector( 16-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc6_sync_net : std_logic_vector( 1-1 downto 0 );
  signal edge_op_y_net : std_logic_vector( 1-1 downto 0 );
  signal convert_addr_dout_net : std_logic_vector( 10-1 downto 0 );
  signal convert_din1_dout_net : std_logic_vector( 32-1 downto 0 );
  signal convert_we_dout_net : std_logic_vector( 1-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_67_ss_ctrl_user_data_out_net : std_logic_vector( 32-1 downto 0 );
  signal cast_gw_dout_net : std_logic_vector( 32-1 downto 0 );
  signal we_choice_y_net : std_logic_vector( 1-1 downto 0 );
  signal logical6_y_net : std_logic_vector( 1-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal concatenate_y_net : std_logic_vector( 32-1 downto 0 );
  signal assert_d0_dout_net : std_logic_vector( 16-1 downto 0 );
  signal assert_d1_dout_net : std_logic_vector( 16-1 downto 0 );
begin
  arm_out <= arm_or_y_net;
  slice41_y_net <= in_d0;
  slice42_y_net <= in_d1;
  rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc6_sync_net <= we;
  edge_op_y_net <= trig;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_67_ss_bram_addr <= convert_addr_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_67_ss_bram_data_in <= convert_din1_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_67_ss_bram_we <= convert_we_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_67_ss_ctrl_user_data_out_net <= rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_67_ss_ctrl_user_data_out;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_67_ss_status_user_data_in <= cast_gw_dout_net;
  goto_78660204_we1 <= we_choice_y_net;
  goto_78660204_we4 <= logical6_y_net;
  clk_net <= clk_1;
  ce_net <= ce_1;
  buscreate : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_buscreate_x14 
  port map (
    in1 => assert_d0_dout_net,
    in2 => assert_d1_dout_net,
    bus_out => concatenate_y_net
  );
  ss : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_ss_x14 
  port map (
    din => concatenate_y_net,
    we => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc6_sync_net,
    trig => edge_op_y_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_67_ss_ctrl_user_data_out => rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_67_ss_ctrl_user_data_out_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    arm_out => arm_or_y_net,
    goto_78660204_we1 => we_choice_y_net,
    goto_78660204_we4 => logical6_y_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_67_ss_bram_addr => convert_addr_dout_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_67_ss_bram_data_in => convert_din1_dout_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_67_ss_bram_we => convert_we_dout_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_67_ss_status_user_data_in => cast_gw_dout_net
  );
  assert_d0 : entity xil_defaultlib.xlpassthrough 
  generic map (
    din_width => 16,
    dout_width => 16
  )
  port map (
    din => slice41_y_net,
    dout => assert_d0_dout_net
  );
  assert_d1 : entity xil_defaultlib.xlpassthrough 
  generic map (
    din_width => 16,
    dout_width => 16
  )
  port map (
    din => slice42_y_net,
    dout => assert_d1_dout_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot7_01/buscreate
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_buscreate_x13 is
  port (
    in1 : in std_logic_vector( 16-1 downto 0 );
    in2 : in std_logic_vector( 16-1 downto 0 );
    bus_out : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_buscreate_x13;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_buscreate_x13 is 
  signal concatenate_y_net : std_logic_vector( 32-1 downto 0 );
  signal assert_d0_dout_net : std_logic_vector( 16-1 downto 0 );
  signal assert_d1_dout_net : std_logic_vector( 16-1 downto 0 );
  signal reinterpret1_output_port_net : std_logic_vector( 16-1 downto 0 );
  signal reinterpret2_output_port_net : std_logic_vector( 16-1 downto 0 );
begin
  bus_out <= concatenate_y_net;
  assert_d0_dout_net <= in1;
  assert_d1_dout_net <= in2;
  concatenate : entity xil_defaultlib.sysgen_concat_37649e01d1 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    in0 => reinterpret1_output_port_net,
    in1 => reinterpret2_output_port_net,
    y => concatenate_y_net
  );
  reinterpret1 : entity xil_defaultlib.sysgen_reinterpret_03c8cdbbc1 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => assert_d0_dout_net,
    output_port => reinterpret1_output_port_net
  );
  reinterpret2 : entity xil_defaultlib.sysgen_reinterpret_03c8cdbbc1 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => assert_d1_dout_net,
    output_port => reinterpret2_output_port_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot7_01/ss/add_gen/edge_detect
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x29 is
  port (
    in_x0 : in std_logic_vector( 1-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    out_x0 : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x29;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x29 is 
  signal edge_op_y_net : std_logic_vector( 1-1 downto 0 );
  signal slice3_y_net : std_logic_vector( 1-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal delay_q_net : std_logic_vector( 1-1 downto 0 );
  signal inverter_op_net : std_logic_vector( 1-1 downto 0 );
begin
  out_x0 <= edge_op_y_net;
  slice3_y_net <= in_x0;
  clk_net <= clk_1;
  ce_net <= ce_1;
  delay : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 1
  )
  port map (
    en => '1',
    rst => '1',
    d => slice3_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay_q_net
  );
  inverter : entity xil_defaultlib.sysgen_inverter_6233897471 
  port map (
    clr => '0',
    ip => slice3_y_net,
    clk => clk_net,
    ce => ce_net,
    op => inverter_op_net
  );
  edge_op : entity xil_defaultlib.sysgen_logical_9cc14fefba 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => inverter_op_net,
    d1 => delay_q_net,
    y => edge_op_y_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot7_01/ss/add_gen
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_add_gen_x12 is
  port (
    din : in std_logic_vector( 32-1 downto 0 );
    we : in std_logic_vector( 1-1 downto 0 );
    go : in std_logic_vector( 1-1 downto 0 );
    cont : in std_logic_vector( 1-1 downto 0 );
    init : in std_logic_vector( 1-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    add : out std_logic_vector( 10-1 downto 0 );
    dout : out std_logic_vector( 32-1 downto 0 );
    we_o : out std_logic_vector( 1-1 downto 0 );
    status : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_add_gen_x12;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_add_gen_x12 is 
  signal slice2_y_net : std_logic_vector( 10-1 downto 0 );
  signal delay6_q_net : std_logic_vector( 32-1 downto 0 );
  signal logical6_y_net : std_logic_vector( 1-1 downto 0 );
  signal concat_y_net : std_logic_vector( 32-1 downto 0 );
  signal data_choice_y_net : std_logic_vector( 32-1 downto 0 );
  signal we_choice_y_net : std_logic_vector( 1-1 downto 0 );
  signal register6_q_net : std_logic_vector( 1-1 downto 0 );
  signal never_op_net : std_logic_vector( 1-1 downto 0 );
  signal edge_op_y_net : std_logic_vector( 1-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal edge_op_y_net_x0 : std_logic_vector( 1-1 downto 0 );
  signal slice3_y_net : std_logic_vector( 1-1 downto 0 );
  signal shift_op_net : std_logic_vector( 19-1 downto 0 );
  signal inverter_op_net : std_logic_vector( 1-1 downto 0 );
  signal delay1_q_net : std_logic_vector( 12-1 downto 0 );
  signal convert_dout_net : std_logic_vector( 19-1 downto 0 );
  signal register5_q_net : std_logic_vector( 1-1 downto 0 );
  signal delay_q_net : std_logic_vector( 1-1 downto 0 );
  signal delay4_q_net : std_logic_vector( 1-1 downto 0 );
  signal slice1_y_net : std_logic_vector( 12-1 downto 0 );
  signal delay3_q_net : std_logic_vector( 1-1 downto 0 );
  signal inverter1_op_net : std_logic_vector( 1-1 downto 0 );
  signal logical1_y_net : std_logic_vector( 1-1 downto 0 );
  signal logical4_y_net : std_logic_vector( 1-1 downto 0 );
  signal add_gen_op_net : std_logic_vector( 13-1 downto 0 );
begin
  add <= slice2_y_net;
  dout <= delay6_q_net;
  we_o <= logical6_y_net;
  status <= concat_y_net;
  data_choice_y_net <= din;
  we_choice_y_net <= we;
  register6_q_net <= go;
  never_op_net <= cont;
  edge_op_y_net <= init;
  clk_net <= clk_1;
  ce_net <= ce_1;
  edge_detect : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x29 
  port map (
    in_x0 => slice3_y_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    out_x0 => edge_op_y_net_x0
  );
  concat : entity xil_defaultlib.sysgen_concat_fc8edfac0e 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    in0 => shift_op_net,
    in1 => inverter_op_net,
    in2 => delay1_q_net,
    y => concat_y_net
  );
  convert : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 1,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 19,
    latency => 0,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => register5_q_net,
    clk => clk_net,
    ce => ce_net,
    dout => convert_dout_net
  );
  delay : entity xil_defaultlib.sysgen_delay_e0740ee3f9 
  port map (
    clr => '0',
    d => delay4_q_net,
    clk => clk_net,
    ce => ce_net,
    q => delay_q_net
  );
  delay1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 12
  )
  port map (
    en => '1',
    rst => '1',
    d => slice1_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay1_q_net
  );
  delay3 : entity xil_defaultlib.sysgen_delay_e0740ee3f9 
  port map (
    clr => '0',
    d => never_op_net,
    clk => clk_net,
    ce => ce_net,
    q => delay3_q_net
  );
  delay4 : entity xil_defaultlib.sysgen_delay_e0740ee3f9 
  port map (
    clr => '0',
    d => edge_op_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay4_q_net
  );
  delay6 : entity xil_defaultlib.sysgen_delay_5ec362a23c 
  port map (
    clr => '0',
    d => data_choice_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay6_q_net
  );
  inverter : entity xil_defaultlib.sysgen_inverter_918b6bc6d0 
  port map (
    clr => '0',
    ip => register5_q_net,
    clk => clk_net,
    ce => ce_net,
    op => inverter_op_net
  );
  inverter1 : entity xil_defaultlib.sysgen_inverter_6233897471 
  port map (
    clr => '0',
    ip => edge_op_y_net_x0,
    clk => clk_net,
    ce => ce_net,
    op => inverter1_op_net
  );
  logical1 : entity xil_defaultlib.sysgen_logical_2486129911 
  port map (
    clr => '0',
    d0 => we_choice_y_net,
    d1 => register6_q_net,
    clk => clk_net,
    ce => ce_net,
    y => logical1_y_net
  );
  logical4 : entity xil_defaultlib.sysgen_logical_d7dc12cf31 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => delay3_q_net,
    d1 => inverter1_op_net,
    y => logical4_y_net
  );
  logical6 : entity xil_defaultlib.sysgen_logical_c05fefc67b 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => register5_q_net,
    d1 => logical4_y_net,
    d2 => logical1_y_net,
    y => logical6_y_net
  );
  register5 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlregister 
  generic map (
    d_width => 1,
    init_value => b"1"
  )
  port map (
    d => delay3_q_net,
    rst => delay_q_net,
    en => edge_op_y_net_x0,
    clk => clk_net,
    ce => ce_net,
    q => register5_q_net
  );
  shift : entity xil_defaultlib.sysgen_shift_5af4fe0a99 
  port map (
    clr => '0',
    ip => convert_dout_net,
    clk => clk_net,
    ce => ce_net,
    op => shift_op_net
  );
  add_gen : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlcounter_free 
  generic map (
    core_name0 => "rfdc_multi_eight_adcs_2048gsps_mts_c_counter_binary_v12_0_i1",
    op_arith => xlUnsigned,
    op_width => 13
  )
  port map (
    clr => '0',
    rst => delay4_q_net,
    en => logical6_y_net,
    clk => clk_net,
    ce => ce_net,
    op => add_gen_op_net
  );
  slice1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 0,
    new_msb => 11,
    x_width => 13,
    y_width => 12
  )
  port map (
    x => add_gen_op_net,
    y => slice1_y_net
  );
  slice2 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 2,
    new_msb => 11,
    x_width => 13,
    y_width => 10
  )
  port map (
    x => add_gen_op_net,
    y => slice2_y_net
  );
  slice3 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 12,
    new_msb => 12,
    x_width => 13,
    y_width => 1
  )
  port map (
    x => add_gen_op_net,
    y => slice3_y_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot7_01/ss/basic_ctrl/dram_munge
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_dram_munge_x8 is
  port (
    din : in std_logic_vector( 32-1 downto 0 );
    we : in std_logic_vector( 1-1 downto 0 );
    init : in std_logic_vector( 1-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    dout : out std_logic_vector( 32-1 downto 0 );
    we_o : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_dram_munge_x8;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_dram_munge_x8 is 
  signal data_choice_y_net : std_logic_vector( 32-1 downto 0 );
  signal we_choice_y_net : std_logic_vector( 1-1 downto 0 );
  signal cast_dout_net : std_logic_vector( 32-1 downto 0 );
  signal mux1_y_net_x0 : std_logic_vector( 1-1 downto 0 );
  signal edge_op_y_net : std_logic_vector( 1-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal concat_y_net : std_logic_vector( 80-1 downto 0 );
  signal constant_op_net : std_logic_vector( 8-1 downto 0 );
  signal register_q_net : std_logic_vector( 32-1 downto 0 );
  signal register1_q_net : std_logic_vector( 32-1 downto 0 );
  signal concat1_y_net : std_logic_vector( 80-1 downto 0 );
  signal register2_q_net : std_logic_vector( 32-1 downto 0 );
  signal register3_q_net : std_logic_vector( 32-1 downto 0 );
  signal delay_q_net : std_logic_vector( 1-1 downto 0 );
  signal logical_y_net : std_logic_vector( 1-1 downto 0 );
  signal delay1_q_net : std_logic_vector( 1-1 downto 0 );
  signal logical1_y_net : std_logic_vector( 1-1 downto 0 );
  signal relational3_op_net : std_logic_vector( 1-1 downto 0 );
  signal mux1_y_net : std_logic_vector( 80-1 downto 0 );
  signal dout_count_op_net : std_logic_vector( 1-1 downto 0 );
  signal relational_op_net : std_logic_vector( 1-1 downto 0 );
  signal relational1_op_net : std_logic_vector( 1-1 downto 0 );
  signal relational2_op_net : std_logic_vector( 1-1 downto 0 );
  signal input_count_op_net : std_logic_vector( 2-1 downto 0 );
  signal con0_op_net : std_logic_vector( 2-1 downto 0 );
  signal con1_op_net : std_logic_vector( 2-1 downto 0 );
  signal con2_op_net : std_logic_vector( 2-1 downto 0 );
  signal con3_op_net : std_logic_vector( 2-1 downto 0 );
  signal dram_op_net : std_logic_vector( 1-1 downto 0 );
begin
  dout <= data_choice_y_net;
  we_o <= we_choice_y_net;
  cast_dout_net <= din;
  mux1_y_net_x0 <= we;
  edge_op_y_net <= init;
  clk_net <= clk_1;
  ce_net <= ce_1;
  concat : entity xil_defaultlib.sysgen_concat_e7487baac7 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    in0 => constant_op_net,
    in1 => register_q_net,
    in2 => constant_op_net,
    in3 => register1_q_net,
    y => concat_y_net
  );
  concat1 : entity xil_defaultlib.sysgen_concat_e7487baac7 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    in0 => constant_op_net,
    in1 => register2_q_net,
    in2 => constant_op_net,
    in3 => register3_q_net,
    y => concat1_y_net
  );
  constant_x0 : entity xil_defaultlib.sysgen_constant_869e31f04d 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => constant_op_net
  );
  delay : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 1
  )
  port map (
    en => '1',
    rst => '1',
    d => logical_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay_q_net
  );
  delay1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 1
  )
  port map (
    en => '1',
    rst => '1',
    d => logical1_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay1_q_net
  );
  logical : entity xil_defaultlib.sysgen_logical_2486129911 
  port map (
    clr => '0',
    d0 => relational3_op_net,
    d1 => mux1_y_net_x0,
    clk => clk_net,
    ce => ce_net,
    y => logical_y_net
  );
  logical1 : entity xil_defaultlib.sysgen_logical_d7dc12cf31 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => logical_y_net,
    d1 => delay_q_net,
    y => logical1_y_net
  );
  mux1 : entity xil_defaultlib.sysgen_mux_71ee2b1026 
  port map (
    clr => '0',
    sel => dout_count_op_net,
    d0 => concat_y_net,
    d1 => concat1_y_net,
    clk => clk_net,
    ce => ce_net,
    y => mux1_y_net
  );
  register_x0 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlregister 
  generic map (
    d_width => 32,
    init_value => b"00000000000000000000000000000000"
  )
  port map (
    rst => "0",
    d => cast_dout_net,
    en => relational_op_net,
    clk => clk_net,
    ce => ce_net,
    q => register_q_net
  );
  register1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlregister 
  generic map (
    d_width => 32,
    init_value => b"00000000000000000000000000000000"
  )
  port map (
    rst => "0",
    d => cast_dout_net,
    en => relational1_op_net,
    clk => clk_net,
    ce => ce_net,
    q => register1_q_net
  );
  register2 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlregister 
  generic map (
    d_width => 32,
    init_value => b"00000000000000000000000000000000"
  )
  port map (
    rst => "0",
    d => cast_dout_net,
    en => relational2_op_net,
    clk => clk_net,
    ce => ce_net,
    q => register2_q_net
  );
  register3 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlregister 
  generic map (
    d_width => 32,
    init_value => b"00000000000000000000000000000000"
  )
  port map (
    rst => "0",
    d => cast_dout_net,
    en => relational3_op_net,
    clk => clk_net,
    ce => ce_net,
    q => register3_q_net
  );
  relational : entity xil_defaultlib.sysgen_relational_e5d6b5eaca 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    a => input_count_op_net,
    b => con0_op_net,
    op => relational_op_net
  );
  relational1 : entity xil_defaultlib.sysgen_relational_e5d6b5eaca 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    a => input_count_op_net,
    b => con1_op_net,
    op => relational1_op_net
  );
  relational2 : entity xil_defaultlib.sysgen_relational_e5d6b5eaca 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    a => input_count_op_net,
    b => con2_op_net,
    op => relational2_op_net
  );
  relational3 : entity xil_defaultlib.sysgen_relational_e5d6b5eaca 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    a => input_count_op_net,
    b => con3_op_net,
    op => relational3_op_net
  );
  con0 : entity xil_defaultlib.sysgen_constant_b58c3a1535 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => con0_op_net
  );
  con1 : entity xil_defaultlib.sysgen_constant_d3f27a6354 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => con1_op_net
  );
  con2 : entity xil_defaultlib.sysgen_constant_2fa4689d4e 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => con2_op_net
  );
  con3 : entity xil_defaultlib.sysgen_constant_31bab66ba6 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => con3_op_net
  );
  data_choice : entity xil_defaultlib.sysgen_mux_d624c1af44 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    sel => dram_op_net,
    d0 => cast_dout_net,
    d1 => mux1_y_net,
    y => data_choice_y_net
  );
  dout_count : entity xil_defaultlib.sysgen_counter_a9c1c293c2 
  port map (
    clr => '0',
    rst => edge_op_y_net,
    en => logical1_y_net,
    clk => clk_net,
    ce => ce_net,
    op => dout_count_op_net
  );
  dram : entity xil_defaultlib.sysgen_constant_a7b8778750 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => dram_op_net
  );
  input_count : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlcounter_free 
  generic map (
    core_name0 => "rfdc_multi_eight_adcs_2048gsps_mts_c_counter_binary_v12_0_i2",
    op_arith => xlUnsigned,
    op_width => 2
  )
  port map (
    clr => '0',
    rst => edge_op_y_net,
    en => mux1_y_net_x0,
    clk => clk_net,
    ce => ce_net,
    op => input_count_op_net
  );
  we_choice : entity xil_defaultlib.sysgen_mux_4874190f11 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    sel => dram_op_net,
    d0 => mux1_y_net_x0,
    d1 => delay1_q_net,
    y => we_choice_y_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot7_01/ss/basic_ctrl/edge_detect
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x17 is
  port (
    in_x0 : in std_logic_vector( 1-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    out_x0 : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x17;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x17 is 
  signal edge_op_y_net : std_logic_vector( 1-1 downto 0 );
  signal delay1_q_net : std_logic_vector( 1-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal delay_q_net : std_logic_vector( 1-1 downto 0 );
  signal inverter_op_net : std_logic_vector( 1-1 downto 0 );
begin
  out_x0 <= edge_op_y_net;
  delay1_q_net <= in_x0;
  clk_net <= clk_1;
  ce_net <= ce_1;
  delay : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 1
  )
  port map (
    en => '1',
    rst => '1',
    d => delay1_q_net,
    clk => clk_net,
    ce => ce_net,
    q => delay_q_net
  );
  inverter : entity xil_defaultlib.sysgen_inverter_6233897471 
  port map (
    clr => '0',
    ip => delay1_q_net,
    clk => clk_net,
    ce => ce_net,
    op => inverter_op_net
  );
  edge_op : entity xil_defaultlib.sysgen_logical_0f1aa1e2d7 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => inverter_op_net,
    d1 => delay_q_net,
    y => edge_op_y_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot7_01/ss/basic_ctrl
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_basic_ctrl_x8 is
  port (
    din : in std_logic_vector( 32-1 downto 0 );
    we : in std_logic_vector( 1-1 downto 0 );
    trig : in std_logic_vector( 1-1 downto 0 );
    ctrl : in std_logic_vector( 32-1 downto 0 );
    stopi : in std_logic_vector( 1-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    dout : out std_logic_vector( 32-1 downto 0 );
    we_o : out std_logic_vector( 1-1 downto 0 );
    go : out std_logic_vector( 1-1 downto 0 );
    init : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_basic_ctrl_x8;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_basic_ctrl_x8 is 
  signal data_choice_y_net : std_logic_vector( 32-1 downto 0 );
  signal we_choice_y_net : std_logic_vector( 1-1 downto 0 );
  signal register6_q_net : std_logic_vector( 1-1 downto 0 );
  signal edge_op_y_net_x0 : std_logic_vector( 1-1 downto 0 );
  signal cast_dout_net : std_logic_vector( 32-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc7_sync_net : std_logic_vector( 1-1 downto 0 );
  signal edge_op_y_net : std_logic_vector( 1-1 downto 0 );
  signal concatenate_y_net : std_logic_vector( 32-1 downto 0 );
  signal never_op_net : std_logic_vector( 1-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal mux1_y_net : std_logic_vector( 1-1 downto 0 );
  signal delay1_q_net : std_logic_vector( 1-1 downto 0 );
  signal constant_op_net : std_logic_vector( 1-1 downto 0 );
  signal constant1_op_net : std_logic_vector( 1-1 downto 0 );
  signal constant2_op_net : std_logic_vector( 1-1 downto 0 );
  signal enable_y_net : std_logic_vector( 1-1 downto 0 );
  signal delay2_q_net : std_logic_vector( 1-1 downto 0 );
  signal trig_src_y_net : std_logic_vector( 1-1 downto 0 );
  signal delay3_q_net : std_logic_vector( 1-1 downto 0 );
  signal valid_src_y_net : std_logic_vector( 1-1 downto 0 );
  signal inverter_op_net : std_logic_vector( 1-1 downto 0 );
  signal logical_y_net : std_logic_vector( 1-1 downto 0 );
  signal mux2_y_net : std_logic_vector( 1-1 downto 0 );
  signal register1_q_net : std_logic_vector( 1-1 downto 0 );
begin
  dout <= data_choice_y_net;
  we_o <= we_choice_y_net;
  go <= register6_q_net;
  init <= edge_op_y_net_x0;
  cast_dout_net <= din;
  rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc7_sync_net <= we;
  edge_op_y_net <= trig;
  concatenate_y_net <= ctrl;
  never_op_net <= stopi;
  clk_net <= clk_1;
  ce_net <= ce_1;
  dram_munge : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_dram_munge_x8 
  port map (
    din => cast_dout_net,
    we => mux1_y_net,
    init => edge_op_y_net_x0,
    clk_1 => clk_net,
    ce_1 => ce_net,
    dout => data_choice_y_net,
    we_o => we_choice_y_net
  );
  edge_detect : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x17 
  port map (
    in_x0 => delay1_q_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    out_x0 => edge_op_y_net_x0
  );
  constant_x0 : entity xil_defaultlib.sysgen_constant_c95a0b5efb 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => constant_op_net
  );
  constant1 : entity xil_defaultlib.sysgen_constant_c95a0b5efb 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => constant1_op_net
  );
  constant2 : entity xil_defaultlib.sysgen_constant_c95a0b5efb 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => constant2_op_net
  );
  delay1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 1
  )
  port map (
    en => '1',
    rst => '1',
    d => enable_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay1_q_net
  );
  delay2 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 1
  )
  port map (
    en => '1',
    rst => '1',
    d => trig_src_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay2_q_net
  );
  delay3 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 1
  )
  port map (
    en => '1',
    rst => '1',
    d => valid_src_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay3_q_net
  );
  inverter : entity xil_defaultlib.sysgen_inverter_6233897471 
  port map (
    clr => '0',
    ip => edge_op_y_net_x0,
    clk => clk_net,
    ce => ce_net,
    op => inverter_op_net
  );
  logical : entity xil_defaultlib.sysgen_logical_d26e5cda59 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => mux2_y_net,
    d1 => inverter_op_net,
    y => logical_y_net
  );
  mux1 : entity xil_defaultlib.sysgen_mux_4874190f11 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    sel => delay3_q_net,
    d0 => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc7_sync_net,
    d1 => constant2_op_net,
    y => mux1_y_net
  );
  mux2 : entity xil_defaultlib.sysgen_mux_4874190f11 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    sel => delay2_q_net,
    d0 => edge_op_y_net,
    d1 => constant1_op_net,
    y => mux2_y_net
  );
  register1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlregister 
  generic map (
    d_width => 1,
    init_value => b"0"
  )
  port map (
    d => constant_op_net,
    rst => logical_y_net,
    en => edge_op_y_net_x0,
    clk => clk_net,
    ce => ce_net,
    q => register1_q_net
  );
  register6 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlregister 
  generic map (
    d_width => 1,
    init_value => b"0"
  )
  port map (
    d => mux2_y_net,
    rst => edge_op_y_net_x0,
    en => register1_q_net,
    clk => clk_net,
    ce => ce_net,
    q => register6_q_net
  );
  enable : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 0,
    new_msb => 0,
    x_width => 32,
    y_width => 1
  )
  port map (
    x => concatenate_y_net,
    y => enable_y_net
  );
  trig_src : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 1,
    new_msb => 1,
    x_width => 32,
    y_width => 1
  )
  port map (
    x => concatenate_y_net,
    y => trig_src_y_net
  );
  valid_src : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 2,
    new_msb => 2,
    x_width => 32,
    y_width => 1
  )
  port map (
    x => concatenate_y_net,
    y => valid_src_y_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot7_01/ss/bram/calc_add
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_calc_add_x8 is
  port (
    in_x0 : in std_logic_vector( 10-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    out_x0 : out std_logic_vector( 10-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_calc_add_x8;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_calc_add_x8 is 
  signal mux_y_net : std_logic_vector( 10-1 downto 0 );
  signal add_del_q_net : std_logic_vector( 10-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal add_sub_s_net : std_logic_vector( 1-1 downto 0 );
  signal const_op_net : std_logic_vector( 1-1 downto 0 );
  signal lsw_y_net : std_logic_vector( 1-1 downto 0 );
  signal concat_y_net : std_logic_vector( 10-1 downto 0 );
  signal msw_y_net : std_logic_vector( 9-1 downto 0 );
  signal convert_addr_dout_net : std_logic_vector( 10-1 downto 0 );
  signal manipulate_op_net : std_logic_vector( 1-1 downto 0 );
begin
  out_x0 <= mux_y_net;
  add_del_q_net <= in_x0;
  clk_net <= clk_1;
  ce_net <= ce_1;
  add_sub : entity xil_defaultlib.sysgen_addsub_fd3b6c715c 
  port map (
    clr => '0',
    a => const_op_net,
    b => lsw_y_net,
    clk => clk_net,
    ce => ce_net,
    s => add_sub_s_net
  );
  concat : entity xil_defaultlib.sysgen_concat_f4b90dfa16 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    in0 => msw_y_net,
    in1 => add_sub_s_net,
    y => concat_y_net
  );
  const : entity xil_defaultlib.sysgen_constant_a7b8778750 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => const_op_net
  );
  convert_addr : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 10,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 10,
    latency => 0,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => add_del_q_net,
    clk => clk_net,
    ce => ce_net,
    dout => convert_addr_dout_net
  );
  lsw : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 0,
    new_msb => 0,
    x_width => 10,
    y_width => 1
  )
  port map (
    x => convert_addr_dout_net,
    y => lsw_y_net
  );
  manipulate : entity xil_defaultlib.sysgen_constant_a7b8778750 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => manipulate_op_net
  );
  msw : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 1,
    new_msb => 9,
    x_width => 10,
    y_width => 9
  )
  port map (
    x => convert_addr_dout_net,
    y => msw_y_net
  );
  mux : entity xil_defaultlib.sysgen_mux_4417594854 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    sel => manipulate_op_net,
    d0 => convert_addr_dout_net,
    d1 => concat_y_net,
    y => mux_y_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot7_01/ss/bram/munge_in
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_munge_in_x8 is
  port (
    din : in std_logic_vector( 32-1 downto 0 );
    dout : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_munge_in_x8;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_munge_in_x8 is 
  signal reinterpret_out_output_port_net : std_logic_vector( 32-1 downto 0 );
  signal dat_del_q_net : std_logic_vector( 32-1 downto 0 );
begin
  dout <= reinterpret_out_output_port_net;
  dat_del_q_net <= din;
  reinterpret_out : entity xil_defaultlib.sysgen_reinterpret_52bb84f12b 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => dat_del_q_net,
    output_port => reinterpret_out_output_port_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot7_01/ss/bram
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_bram_x8 is
  port (
    addr : in std_logic_vector( 10-1 downto 0 );
    data_in : in std_logic_vector( 32-1 downto 0 );
    we : in std_logic_vector( 1-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_01_ss_bram_addr : out std_logic_vector( 10-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_01_ss_bram_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_01_ss_bram_we : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_bram_x8;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_bram_x8 is 
  signal add_del_q_net : std_logic_vector( 10-1 downto 0 );
  signal dat_del_q_net : std_logic_vector( 32-1 downto 0 );
  signal we_del_q_net : std_logic_vector( 1-1 downto 0 );
  signal convert_addr_dout_net : std_logic_vector( 10-1 downto 0 );
  signal convert_din1_dout_net : std_logic_vector( 32-1 downto 0 );
  signal convert_we_dout_net : std_logic_vector( 1-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal mux_y_net : std_logic_vector( 10-1 downto 0 );
  signal reinterpret_out_output_port_net : std_logic_vector( 32-1 downto 0 );
begin
  add_del_q_net <= addr;
  dat_del_q_net <= data_in;
  we_del_q_net <= we;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_01_ss_bram_addr <= convert_addr_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_01_ss_bram_data_in <= convert_din1_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_01_ss_bram_we <= convert_we_dout_net;
  clk_net <= clk_1;
  ce_net <= ce_1;
  calc_add : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_calc_add_x8 
  port map (
    in_x0 => add_del_q_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    out_x0 => mux_y_net
  );
  munge_in : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_munge_in_x8 
  port map (
    din => dat_del_q_net,
    dout => reinterpret_out_output_port_net
  );
  convert_addr : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 10,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 10,
    latency => 0,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => mux_y_net,
    clk => clk_net,
    ce => ce_net,
    dout => convert_addr_dout_net
  );
  convert_din1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 32,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 32,
    latency => 0,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => reinterpret_out_output_port_net,
    clk => clk_net,
    ce => ce_net,
    dout => convert_din1_dout_net
  );
  convert_we : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 1,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 1,
    latency => 0,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => we_del_q_net,
    clk => clk_net,
    ce => ce_net,
    dout => convert_we_dout_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot7_01/ss/ctrl
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_ctrl_x8 is
  port (
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_01_ss_ctrl_user_data_out : in std_logic_vector( 32-1 downto 0 );
    in_reg : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_ctrl_x8;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_ctrl_x8 is 
  signal reint1_output_port_net : std_logic_vector( 32-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_01_ss_ctrl_user_data_out_net : std_logic_vector( 32-1 downto 0 );
  signal io_delay_q_net : std_logic_vector( 32-1 downto 0 );
  signal slice_reg_y_net : std_logic_vector( 32-1 downto 0 );
begin
  in_reg <= reint1_output_port_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_01_ss_ctrl_user_data_out_net <= rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_01_ss_ctrl_user_data_out;
  io_delay : entity xil_defaultlib.sysgen_delay_34e314c510 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d => rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_01_ss_ctrl_user_data_out_net,
    q => io_delay_q_net
  );
  slice_reg : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 0,
    new_msb => 31,
    x_width => 32,
    y_width => 32
  )
  port map (
    x => io_delay_q_net,
    y => slice_reg_y_net
  );
  reint1 : entity xil_defaultlib.sysgen_reinterpret_52bb84f12b 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => slice_reg_y_net,
    output_port => reint1_output_port_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot7_01/ss/ctrl_combine
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_ctrl_combine_x8 is
  port (
    in1 : in std_logic_vector( 28-1 downto 0 );
    in2 : in std_logic_vector( 1-1 downto 0 );
    in3 : in std_logic_vector( 2-1 downto 0 );
    in4 : in std_logic_vector( 1-1 downto 0 );
    bus_out : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_ctrl_combine_x8;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_ctrl_combine_x8 is 
  signal concatenate_y_net : std_logic_vector( 32-1 downto 0 );
  signal reinterpret4_output_port_net_x0 : std_logic_vector( 28-1 downto 0 );
  signal circ_or_y_net : std_logic_vector( 1-1 downto 0 );
  signal reinterpret2_output_port_net : std_logic_vector( 2-1 downto 0 );
  signal arm_or_y_net : std_logic_vector( 1-1 downto 0 );
  signal reinterpret1_output_port_net : std_logic_vector( 28-1 downto 0 );
  signal reinterpret2_output_port_net_x0 : std_logic_vector( 1-1 downto 0 );
  signal reinterpret3_output_port_net : std_logic_vector( 2-1 downto 0 );
  signal reinterpret4_output_port_net : std_logic_vector( 1-1 downto 0 );
begin
  bus_out <= concatenate_y_net;
  reinterpret4_output_port_net_x0 <= in1;
  circ_or_y_net <= in2;
  reinterpret2_output_port_net <= in3;
  arm_or_y_net <= in4;
  concatenate : entity xil_defaultlib.sysgen_concat_8611e618a5 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    in0 => reinterpret1_output_port_net,
    in1 => reinterpret2_output_port_net_x0,
    in2 => reinterpret3_output_port_net,
    in3 => reinterpret4_output_port_net,
    y => concatenate_y_net
  );
  reinterpret1 : entity xil_defaultlib.sysgen_reinterpret_f7e0b72e82 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => reinterpret4_output_port_net_x0,
    output_port => reinterpret1_output_port_net
  );
  reinterpret2 : entity xil_defaultlib.sysgen_reinterpret_317b92931a 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => circ_or_y_net,
    output_port => reinterpret2_output_port_net_x0
  );
  reinterpret3 : entity xil_defaultlib.sysgen_reinterpret_5dc9f217bd 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => reinterpret2_output_port_net,
    output_port => reinterpret3_output_port_net
  );
  reinterpret4 : entity xil_defaultlib.sysgen_reinterpret_317b92931a 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => arm_or_y_net,
    output_port => reinterpret4_output_port_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot7_01/ss/ctrl_split
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_ctrl_split_x8 is
  port (
    bus_in : in std_logic_vector( 32-1 downto 0 );
    msb_out4 : out std_logic_vector( 28-1 downto 0 );
    out3 : out std_logic_vector( 1-1 downto 0 );
    out2 : out std_logic_vector( 2-1 downto 0 );
    lsb_out1 : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_ctrl_split_x8;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_ctrl_split_x8 is 
  signal reinterpret4_output_port_net : std_logic_vector( 28-1 downto 0 );
  signal slice3_y_net : std_logic_vector( 1-1 downto 0 );
  signal reinterpret2_output_port_net : std_logic_vector( 2-1 downto 0 );
  signal slice1_y_net : std_logic_vector( 1-1 downto 0 );
  signal reint1_output_port_net : std_logic_vector( 32-1 downto 0 );
  signal slice2_y_net : std_logic_vector( 2-1 downto 0 );
  signal slice4_y_net : std_logic_vector( 28-1 downto 0 );
begin
  msb_out4 <= reinterpret4_output_port_net;
  out3 <= slice3_y_net;
  out2 <= reinterpret2_output_port_net;
  lsb_out1 <= slice1_y_net;
  reint1_output_port_net <= bus_in;
  reinterpret2 : entity xil_defaultlib.sysgen_reinterpret_5dc9f217bd 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => slice2_y_net,
    output_port => reinterpret2_output_port_net
  );
  reinterpret4 : entity xil_defaultlib.sysgen_reinterpret_f7e0b72e82 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => slice4_y_net,
    output_port => reinterpret4_output_port_net
  );
  slice1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 0,
    new_msb => 0,
    x_width => 32,
    y_width => 1
  )
  port map (
    x => reint1_output_port_net,
    y => slice1_y_net
  );
  slice2 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 1,
    new_msb => 2,
    x_width => 32,
    y_width => 2
  )
  port map (
    x => reint1_output_port_net,
    y => slice2_y_net
  );
  slice3 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 3,
    new_msb => 3,
    x_width => 32,
    y_width => 1
  )
  port map (
    x => reint1_output_port_net,
    y => slice3_y_net
  );
  slice4 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 4,
    new_msb => 31,
    x_width => 32,
    y_width => 28
  )
  port map (
    x => reint1_output_port_net,
    y => slice4_y_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot7_01/ss/status
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_status_x8 is
  port (
    out_reg : in std_logic_vector( 32-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_01_ss_status_user_data_in : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_status_x8;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_status_x8 is 
  signal concat_y_net : std_logic_vector( 32-1 downto 0 );
  signal cast_gw_dout_net : std_logic_vector( 32-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal io_delay_q_net : std_logic_vector( 32-1 downto 0 );
  signal reint1_output_port_net : std_logic_vector( 32-1 downto 0 );
  signal assert_reg_dout_net : std_logic_vector( 32-1 downto 0 );
begin
  concat_y_net <= out_reg;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_01_ss_status_user_data_in <= cast_gw_dout_net;
  clk_net <= clk_1;
  ce_net <= ce_1;
  io_delay : entity xil_defaultlib.sysgen_delay_34e314c510 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d => reint1_output_port_net,
    q => io_delay_q_net
  );
  cast_gw : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 32,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 32,
    latency => 1,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => io_delay_q_net,
    clk => clk_net,
    ce => ce_net,
    dout => cast_gw_dout_net
  );
  assert_reg : entity xil_defaultlib.xlpassthrough 
  generic map (
    din_width => 32,
    dout_width => 32
  )
  port map (
    din => concat_y_net,
    dout => assert_reg_dout_net
  );
  reint1 : entity xil_defaultlib.sysgen_reinterpret_52bb84f12b 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => assert_reg_dout_net,
    output_port => reint1_output_port_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot7_01/ss
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_ss_x13 is
  port (
    din : in std_logic_vector( 32-1 downto 0 );
    we : in std_logic_vector( 1-1 downto 0 );
    trig : in std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_01_ss_ctrl_user_data_out : in std_logic_vector( 32-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    arm_out : out std_logic_vector( 1-1 downto 0 );
    goto_20919917_we1 : out std_logic_vector( 1-1 downto 0 );
    goto_20919917_we4 : out std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_01_ss_bram_addr : out std_logic_vector( 10-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_01_ss_bram_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_01_ss_bram_we : out std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_01_ss_status_user_data_in : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_ss_x13;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_ss_x13 is 
  signal arm_or_y_net : std_logic_vector( 1-1 downto 0 );
  signal concatenate_y_net : std_logic_vector( 32-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc7_sync_net : std_logic_vector( 1-1 downto 0 );
  signal edge_op_y_net_x0 : std_logic_vector( 1-1 downto 0 );
  signal we_choice_y_net : std_logic_vector( 1-1 downto 0 );
  signal logical6_y_net : std_logic_vector( 1-1 downto 0 );
  signal convert_addr_dout_net : std_logic_vector( 10-1 downto 0 );
  signal convert_din1_dout_net : std_logic_vector( 32-1 downto 0 );
  signal convert_we_dout_net : std_logic_vector( 1-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_01_ss_ctrl_user_data_out_net : std_logic_vector( 32-1 downto 0 );
  signal cast_gw_dout_net : std_logic_vector( 32-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal slice2_y_net : std_logic_vector( 10-1 downto 0 );
  signal delay6_q_net : std_logic_vector( 32-1 downto 0 );
  signal concat_y_net : std_logic_vector( 32-1 downto 0 );
  signal data_choice_y_net : std_logic_vector( 32-1 downto 0 );
  signal register6_q_net : std_logic_vector( 1-1 downto 0 );
  signal never_op_net : std_logic_vector( 1-1 downto 0 );
  signal edge_op_y_net_x1 : std_logic_vector( 1-1 downto 0 );
  signal cast_dout_net : std_logic_vector( 32-1 downto 0 );
  signal concatenate_y_net_x0 : std_logic_vector( 32-1 downto 0 );
  signal add_del_q_net : std_logic_vector( 10-1 downto 0 );
  signal dat_del_q_net : std_logic_vector( 32-1 downto 0 );
  signal we_del_q_net : std_logic_vector( 1-1 downto 0 );
  signal reint1_output_port_net : std_logic_vector( 32-1 downto 0 );
  signal reinterpret4_output_port_net : std_logic_vector( 28-1 downto 0 );
  signal circ_or_y_net : std_logic_vector( 1-1 downto 0 );
  signal reinterpret2_output_port_net : std_logic_vector( 2-1 downto 0 );
  signal slice3_y_net : std_logic_vector( 1-1 downto 0 );
  signal slice1_y_net : std_logic_vector( 1-1 downto 0 );
  signal arm_op_net : std_logic_vector( 1-1 downto 0 );
  signal ri_output_port_net : std_logic_vector( 32-1 downto 0 );
  signal circ_op_net : std_logic_vector( 1-1 downto 0 );
begin
  arm_out <= arm_or_y_net;
  concatenate_y_net <= din;
  rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc7_sync_net <= we;
  edge_op_y_net_x0 <= trig;
  goto_20919917_we1 <= we_choice_y_net;
  goto_20919917_we4 <= logical6_y_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_01_ss_bram_addr <= convert_addr_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_01_ss_bram_data_in <= convert_din1_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_01_ss_bram_we <= convert_we_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_01_ss_ctrl_user_data_out_net <= rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_01_ss_ctrl_user_data_out;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_01_ss_status_user_data_in <= cast_gw_dout_net;
  clk_net <= clk_1;
  ce_net <= ce_1;
  add_gen : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_add_gen_x12 
  port map (
    din => data_choice_y_net,
    we => we_choice_y_net,
    go => register6_q_net,
    cont => never_op_net,
    init => edge_op_y_net_x1,
    clk_1 => clk_net,
    ce_1 => ce_net,
    add => slice2_y_net,
    dout => delay6_q_net,
    we_o => logical6_y_net,
    status => concat_y_net
  );
  basic_ctrl : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_basic_ctrl_x8 
  port map (
    din => cast_dout_net,
    we => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc7_sync_net,
    trig => edge_op_y_net_x0,
    ctrl => concatenate_y_net_x0,
    stopi => never_op_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    dout => data_choice_y_net,
    we_o => we_choice_y_net,
    go => register6_q_net,
    init => edge_op_y_net_x1
  );
  bram : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_bram_x8 
  port map (
    addr => add_del_q_net,
    data_in => dat_del_q_net,
    we => we_del_q_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_01_ss_bram_addr => convert_addr_dout_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_01_ss_bram_data_in => convert_din1_dout_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_01_ss_bram_we => convert_we_dout_net
  );
  ctrl : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_ctrl_x8 
  port map (
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_01_ss_ctrl_user_data_out => rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_01_ss_ctrl_user_data_out_net,
    in_reg => reint1_output_port_net
  );
  ctrl_combine : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_ctrl_combine_x8 
  port map (
    in1 => reinterpret4_output_port_net,
    in2 => circ_or_y_net,
    in3 => reinterpret2_output_port_net,
    in4 => arm_or_y_net,
    bus_out => concatenate_y_net_x0
  );
  ctrl_split : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_ctrl_split_x8 
  port map (
    bus_in => reint1_output_port_net,
    msb_out4 => reinterpret4_output_port_net,
    out3 => slice3_y_net,
    out2 => reinterpret2_output_port_net,
    lsb_out1 => slice1_y_net
  );
  status : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_status_x8 
  port map (
    out_reg => concat_y_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_01_ss_status_user_data_in => cast_gw_dout_net
  );
  add_del : entity xil_defaultlib.sysgen_delay_4e9264ffdf 
  port map (
    clr => '0',
    d => slice2_y_net,
    clk => clk_net,
    ce => ce_net,
    q => add_del_q_net
  );
  arm : entity xil_defaultlib.sysgen_constant_a7b8778750 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => arm_op_net
  );
  arm_or : entity xil_defaultlib.sysgen_logical_d7dc12cf31 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => slice1_y_net,
    d1 => arm_op_net,
    y => arm_or_y_net
  );
  cast : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 32,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 32,
    latency => 0,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => ri_output_port_net,
    clk => clk_net,
    ce => ce_net,
    dout => cast_dout_net
  );
  circ : entity xil_defaultlib.sysgen_constant_a7b8778750 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => circ_op_net
  );
  circ_or : entity xil_defaultlib.sysgen_logical_d7dc12cf31 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => slice3_y_net,
    d1 => circ_op_net,
    y => circ_or_y_net
  );
  dat_del : entity xil_defaultlib.sysgen_delay_5ec362a23c 
  port map (
    clr => '0',
    d => delay6_q_net,
    clk => clk_net,
    ce => ce_net,
    q => dat_del_q_net
  );
  never : entity xil_defaultlib.sysgen_constant_a7b8778750 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => never_op_net
  );
  ri : entity xil_defaultlib.sysgen_reinterpret_52bb84f12b 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => concatenate_y_net,
    output_port => ri_output_port_net
  );
  we_del : entity xil_defaultlib.sysgen_delay_e0740ee3f9 
  port map (
    clr => '0',
    d => logical6_y_net,
    clk => clk_net,
    ce => ce_net,
    q => we_del_q_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot7_01
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_01 is
  port (
    in_d0 : in std_logic_vector( 16-1 downto 0 );
    in_d1 : in std_logic_vector( 16-1 downto 0 );
    we : in std_logic_vector( 1-1 downto 0 );
    trig : in std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_01_ss_ctrl_user_data_out : in std_logic_vector( 32-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    arm_out : out std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_01_ss_bram_addr : out std_logic_vector( 10-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_01_ss_bram_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_01_ss_bram_we : out std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_01_ss_status_user_data_in : out std_logic_vector( 32-1 downto 0 );
    goto_20919917_we1 : out std_logic_vector( 1-1 downto 0 );
    goto_20919917_we4 : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_01;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_01 is 
  signal arm_or_y_net : std_logic_vector( 1-1 downto 0 );
  signal slice56_y_net : std_logic_vector( 16-1 downto 0 );
  signal slice54_y_net : std_logic_vector( 16-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc7_sync_net : std_logic_vector( 1-1 downto 0 );
  signal edge_op_y_net : std_logic_vector( 1-1 downto 0 );
  signal convert_addr_dout_net : std_logic_vector( 10-1 downto 0 );
  signal convert_din1_dout_net : std_logic_vector( 32-1 downto 0 );
  signal convert_we_dout_net : std_logic_vector( 1-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_01_ss_ctrl_user_data_out_net : std_logic_vector( 32-1 downto 0 );
  signal cast_gw_dout_net : std_logic_vector( 32-1 downto 0 );
  signal we_choice_y_net : std_logic_vector( 1-1 downto 0 );
  signal logical6_y_net : std_logic_vector( 1-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal concatenate_y_net : std_logic_vector( 32-1 downto 0 );
  signal assert_d0_dout_net : std_logic_vector( 16-1 downto 0 );
  signal assert_d1_dout_net : std_logic_vector( 16-1 downto 0 );
begin
  arm_out <= arm_or_y_net;
  slice56_y_net <= in_d0;
  slice54_y_net <= in_d1;
  rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc7_sync_net <= we;
  edge_op_y_net <= trig;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_01_ss_bram_addr <= convert_addr_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_01_ss_bram_data_in <= convert_din1_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_01_ss_bram_we <= convert_we_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_01_ss_ctrl_user_data_out_net <= rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_01_ss_ctrl_user_data_out;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_01_ss_status_user_data_in <= cast_gw_dout_net;
  goto_20919917_we1 <= we_choice_y_net;
  goto_20919917_we4 <= logical6_y_net;
  clk_net <= clk_1;
  ce_net <= ce_1;
  buscreate : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_buscreate_x13 
  port map (
    in1 => assert_d0_dout_net,
    in2 => assert_d1_dout_net,
    bus_out => concatenate_y_net
  );
  ss : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_ss_x13 
  port map (
    din => concatenate_y_net,
    we => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc7_sync_net,
    trig => edge_op_y_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_01_ss_ctrl_user_data_out => rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_01_ss_ctrl_user_data_out_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    arm_out => arm_or_y_net,
    goto_20919917_we1 => we_choice_y_net,
    goto_20919917_we4 => logical6_y_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_01_ss_bram_addr => convert_addr_dout_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_01_ss_bram_data_in => convert_din1_dout_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_01_ss_bram_we => convert_we_dout_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_01_ss_status_user_data_in => cast_gw_dout_net
  );
  assert_d0 : entity xil_defaultlib.xlpassthrough 
  generic map (
    din_width => 16,
    dout_width => 16
  )
  port map (
    din => slice56_y_net,
    dout => assert_d0_dout_net
  );
  assert_d1 : entity xil_defaultlib.xlpassthrough 
  generic map (
    din_width => 16,
    dout_width => 16
  )
  port map (
    din => slice54_y_net,
    dout => assert_d1_dout_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot7_23/buscreate
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_buscreate_x9 is
  port (
    in1 : in std_logic_vector( 16-1 downto 0 );
    in2 : in std_logic_vector( 16-1 downto 0 );
    bus_out : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_buscreate_x9;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_buscreate_x9 is 
  signal concatenate_y_net : std_logic_vector( 32-1 downto 0 );
  signal assert_d0_dout_net : std_logic_vector( 16-1 downto 0 );
  signal assert_d1_dout_net : std_logic_vector( 16-1 downto 0 );
  signal reinterpret1_output_port_net : std_logic_vector( 16-1 downto 0 );
  signal reinterpret2_output_port_net : std_logic_vector( 16-1 downto 0 );
begin
  bus_out <= concatenate_y_net;
  assert_d0_dout_net <= in1;
  assert_d1_dout_net <= in2;
  concatenate : entity xil_defaultlib.sysgen_concat_37649e01d1 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    in0 => reinterpret1_output_port_net,
    in1 => reinterpret2_output_port_net,
    y => concatenate_y_net
  );
  reinterpret1 : entity xil_defaultlib.sysgen_reinterpret_03c8cdbbc1 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => assert_d0_dout_net,
    output_port => reinterpret1_output_port_net
  );
  reinterpret2 : entity xil_defaultlib.sysgen_reinterpret_03c8cdbbc1 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => assert_d1_dout_net,
    output_port => reinterpret2_output_port_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot7_23/ss/add_gen/edge_detect
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x18 is
  port (
    in_x0 : in std_logic_vector( 1-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    out_x0 : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x18;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x18 is 
  signal edge_op_y_net : std_logic_vector( 1-1 downto 0 );
  signal slice3_y_net : std_logic_vector( 1-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal delay_q_net : std_logic_vector( 1-1 downto 0 );
  signal inverter_op_net : std_logic_vector( 1-1 downto 0 );
begin
  out_x0 <= edge_op_y_net;
  slice3_y_net <= in_x0;
  clk_net <= clk_1;
  ce_net <= ce_1;
  delay : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 1
  )
  port map (
    en => '1',
    rst => '1',
    d => slice3_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay_q_net
  );
  inverter : entity xil_defaultlib.sysgen_inverter_6233897471 
  port map (
    clr => '0',
    ip => slice3_y_net,
    clk => clk_net,
    ce => ce_net,
    op => inverter_op_net
  );
  edge_op : entity xil_defaultlib.sysgen_logical_9cc14fefba 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => inverter_op_net,
    d1 => delay_q_net,
    y => edge_op_y_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot7_23/ss/add_gen
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_add_gen_x8 is
  port (
    din : in std_logic_vector( 32-1 downto 0 );
    we : in std_logic_vector( 1-1 downto 0 );
    go : in std_logic_vector( 1-1 downto 0 );
    cont : in std_logic_vector( 1-1 downto 0 );
    init : in std_logic_vector( 1-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    add : out std_logic_vector( 10-1 downto 0 );
    dout : out std_logic_vector( 32-1 downto 0 );
    we_o : out std_logic_vector( 1-1 downto 0 );
    status : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_add_gen_x8;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_add_gen_x8 is 
  signal slice2_y_net : std_logic_vector( 10-1 downto 0 );
  signal delay6_q_net : std_logic_vector( 32-1 downto 0 );
  signal logical6_y_net : std_logic_vector( 1-1 downto 0 );
  signal concat_y_net : std_logic_vector( 32-1 downto 0 );
  signal data_choice_y_net : std_logic_vector( 32-1 downto 0 );
  signal we_choice_y_net : std_logic_vector( 1-1 downto 0 );
  signal register6_q_net : std_logic_vector( 1-1 downto 0 );
  signal never_op_net : std_logic_vector( 1-1 downto 0 );
  signal edge_op_y_net : std_logic_vector( 1-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal edge_op_y_net_x0 : std_logic_vector( 1-1 downto 0 );
  signal slice3_y_net : std_logic_vector( 1-1 downto 0 );
  signal shift_op_net : std_logic_vector( 19-1 downto 0 );
  signal inverter_op_net : std_logic_vector( 1-1 downto 0 );
  signal delay1_q_net : std_logic_vector( 12-1 downto 0 );
  signal convert_dout_net : std_logic_vector( 19-1 downto 0 );
  signal register5_q_net : std_logic_vector( 1-1 downto 0 );
  signal delay_q_net : std_logic_vector( 1-1 downto 0 );
  signal delay4_q_net : std_logic_vector( 1-1 downto 0 );
  signal slice1_y_net : std_logic_vector( 12-1 downto 0 );
  signal delay3_q_net : std_logic_vector( 1-1 downto 0 );
  signal inverter1_op_net : std_logic_vector( 1-1 downto 0 );
  signal logical1_y_net : std_logic_vector( 1-1 downto 0 );
  signal logical4_y_net : std_logic_vector( 1-1 downto 0 );
  signal add_gen_op_net : std_logic_vector( 13-1 downto 0 );
begin
  add <= slice2_y_net;
  dout <= delay6_q_net;
  we_o <= logical6_y_net;
  status <= concat_y_net;
  data_choice_y_net <= din;
  we_choice_y_net <= we;
  register6_q_net <= go;
  never_op_net <= cont;
  edge_op_y_net <= init;
  clk_net <= clk_1;
  ce_net <= ce_1;
  edge_detect : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x18 
  port map (
    in_x0 => slice3_y_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    out_x0 => edge_op_y_net_x0
  );
  concat : entity xil_defaultlib.sysgen_concat_fc8edfac0e 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    in0 => shift_op_net,
    in1 => inverter_op_net,
    in2 => delay1_q_net,
    y => concat_y_net
  );
  convert : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 1,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 19,
    latency => 0,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => register5_q_net,
    clk => clk_net,
    ce => ce_net,
    dout => convert_dout_net
  );
  delay : entity xil_defaultlib.sysgen_delay_e0740ee3f9 
  port map (
    clr => '0',
    d => delay4_q_net,
    clk => clk_net,
    ce => ce_net,
    q => delay_q_net
  );
  delay1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 12
  )
  port map (
    en => '1',
    rst => '1',
    d => slice1_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay1_q_net
  );
  delay3 : entity xil_defaultlib.sysgen_delay_e0740ee3f9 
  port map (
    clr => '0',
    d => never_op_net,
    clk => clk_net,
    ce => ce_net,
    q => delay3_q_net
  );
  delay4 : entity xil_defaultlib.sysgen_delay_e0740ee3f9 
  port map (
    clr => '0',
    d => edge_op_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay4_q_net
  );
  delay6 : entity xil_defaultlib.sysgen_delay_5ec362a23c 
  port map (
    clr => '0',
    d => data_choice_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay6_q_net
  );
  inverter : entity xil_defaultlib.sysgen_inverter_918b6bc6d0 
  port map (
    clr => '0',
    ip => register5_q_net,
    clk => clk_net,
    ce => ce_net,
    op => inverter_op_net
  );
  inverter1 : entity xil_defaultlib.sysgen_inverter_6233897471 
  port map (
    clr => '0',
    ip => edge_op_y_net_x0,
    clk => clk_net,
    ce => ce_net,
    op => inverter1_op_net
  );
  logical1 : entity xil_defaultlib.sysgen_logical_2486129911 
  port map (
    clr => '0',
    d0 => we_choice_y_net,
    d1 => register6_q_net,
    clk => clk_net,
    ce => ce_net,
    y => logical1_y_net
  );
  logical4 : entity xil_defaultlib.sysgen_logical_d7dc12cf31 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => delay3_q_net,
    d1 => inverter1_op_net,
    y => logical4_y_net
  );
  logical6 : entity xil_defaultlib.sysgen_logical_c05fefc67b 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => register5_q_net,
    d1 => logical4_y_net,
    d2 => logical1_y_net,
    y => logical6_y_net
  );
  register5 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlregister 
  generic map (
    d_width => 1,
    init_value => b"1"
  )
  port map (
    d => delay3_q_net,
    rst => delay_q_net,
    en => edge_op_y_net_x0,
    clk => clk_net,
    ce => ce_net,
    q => register5_q_net
  );
  shift : entity xil_defaultlib.sysgen_shift_5af4fe0a99 
  port map (
    clr => '0',
    ip => convert_dout_net,
    clk => clk_net,
    ce => ce_net,
    op => shift_op_net
  );
  add_gen : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlcounter_free 
  generic map (
    core_name0 => "rfdc_multi_eight_adcs_2048gsps_mts_c_counter_binary_v12_0_i1",
    op_arith => xlUnsigned,
    op_width => 13
  )
  port map (
    clr => '0',
    rst => delay4_q_net,
    en => logical6_y_net,
    clk => clk_net,
    ce => ce_net,
    op => add_gen_op_net
  );
  slice1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 0,
    new_msb => 11,
    x_width => 13,
    y_width => 12
  )
  port map (
    x => add_gen_op_net,
    y => slice1_y_net
  );
  slice2 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 2,
    new_msb => 11,
    x_width => 13,
    y_width => 10
  )
  port map (
    x => add_gen_op_net,
    y => slice2_y_net
  );
  slice3 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 12,
    new_msb => 12,
    x_width => 13,
    y_width => 1
  )
  port map (
    x => add_gen_op_net,
    y => slice3_y_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot7_23/ss/basic_ctrl/dram_munge
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_dram_munge_x7 is
  port (
    din : in std_logic_vector( 32-1 downto 0 );
    we : in std_logic_vector( 1-1 downto 0 );
    init : in std_logic_vector( 1-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    dout : out std_logic_vector( 32-1 downto 0 );
    we_o : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_dram_munge_x7;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_dram_munge_x7 is 
  signal data_choice_y_net : std_logic_vector( 32-1 downto 0 );
  signal we_choice_y_net : std_logic_vector( 1-1 downto 0 );
  signal cast_dout_net : std_logic_vector( 32-1 downto 0 );
  signal mux1_y_net_x0 : std_logic_vector( 1-1 downto 0 );
  signal edge_op_y_net : std_logic_vector( 1-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal concat_y_net : std_logic_vector( 80-1 downto 0 );
  signal constant_op_net : std_logic_vector( 8-1 downto 0 );
  signal register_q_net : std_logic_vector( 32-1 downto 0 );
  signal register1_q_net : std_logic_vector( 32-1 downto 0 );
  signal concat1_y_net : std_logic_vector( 80-1 downto 0 );
  signal register2_q_net : std_logic_vector( 32-1 downto 0 );
  signal register3_q_net : std_logic_vector( 32-1 downto 0 );
  signal delay_q_net : std_logic_vector( 1-1 downto 0 );
  signal logical_y_net : std_logic_vector( 1-1 downto 0 );
  signal delay1_q_net : std_logic_vector( 1-1 downto 0 );
  signal logical1_y_net : std_logic_vector( 1-1 downto 0 );
  signal relational3_op_net : std_logic_vector( 1-1 downto 0 );
  signal mux1_y_net : std_logic_vector( 80-1 downto 0 );
  signal dout_count_op_net : std_logic_vector( 1-1 downto 0 );
  signal relational_op_net : std_logic_vector( 1-1 downto 0 );
  signal relational1_op_net : std_logic_vector( 1-1 downto 0 );
  signal relational2_op_net : std_logic_vector( 1-1 downto 0 );
  signal input_count_op_net : std_logic_vector( 2-1 downto 0 );
  signal con0_op_net : std_logic_vector( 2-1 downto 0 );
  signal con1_op_net : std_logic_vector( 2-1 downto 0 );
  signal con2_op_net : std_logic_vector( 2-1 downto 0 );
  signal con3_op_net : std_logic_vector( 2-1 downto 0 );
  signal dram_op_net : std_logic_vector( 1-1 downto 0 );
begin
  dout <= data_choice_y_net;
  we_o <= we_choice_y_net;
  cast_dout_net <= din;
  mux1_y_net_x0 <= we;
  edge_op_y_net <= init;
  clk_net <= clk_1;
  ce_net <= ce_1;
  concat : entity xil_defaultlib.sysgen_concat_e7487baac7 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    in0 => constant_op_net,
    in1 => register_q_net,
    in2 => constant_op_net,
    in3 => register1_q_net,
    y => concat_y_net
  );
  concat1 : entity xil_defaultlib.sysgen_concat_e7487baac7 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    in0 => constant_op_net,
    in1 => register2_q_net,
    in2 => constant_op_net,
    in3 => register3_q_net,
    y => concat1_y_net
  );
  constant_x0 : entity xil_defaultlib.sysgen_constant_869e31f04d 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => constant_op_net
  );
  delay : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 1
  )
  port map (
    en => '1',
    rst => '1',
    d => logical_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay_q_net
  );
  delay1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 1
  )
  port map (
    en => '1',
    rst => '1',
    d => logical1_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay1_q_net
  );
  logical : entity xil_defaultlib.sysgen_logical_2486129911 
  port map (
    clr => '0',
    d0 => relational3_op_net,
    d1 => mux1_y_net_x0,
    clk => clk_net,
    ce => ce_net,
    y => logical_y_net
  );
  logical1 : entity xil_defaultlib.sysgen_logical_d7dc12cf31 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => logical_y_net,
    d1 => delay_q_net,
    y => logical1_y_net
  );
  mux1 : entity xil_defaultlib.sysgen_mux_71ee2b1026 
  port map (
    clr => '0',
    sel => dout_count_op_net,
    d0 => concat_y_net,
    d1 => concat1_y_net,
    clk => clk_net,
    ce => ce_net,
    y => mux1_y_net
  );
  register_x0 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlregister 
  generic map (
    d_width => 32,
    init_value => b"00000000000000000000000000000000"
  )
  port map (
    rst => "0",
    d => cast_dout_net,
    en => relational_op_net,
    clk => clk_net,
    ce => ce_net,
    q => register_q_net
  );
  register1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlregister 
  generic map (
    d_width => 32,
    init_value => b"00000000000000000000000000000000"
  )
  port map (
    rst => "0",
    d => cast_dout_net,
    en => relational1_op_net,
    clk => clk_net,
    ce => ce_net,
    q => register1_q_net
  );
  register2 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlregister 
  generic map (
    d_width => 32,
    init_value => b"00000000000000000000000000000000"
  )
  port map (
    rst => "0",
    d => cast_dout_net,
    en => relational2_op_net,
    clk => clk_net,
    ce => ce_net,
    q => register2_q_net
  );
  register3 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlregister 
  generic map (
    d_width => 32,
    init_value => b"00000000000000000000000000000000"
  )
  port map (
    rst => "0",
    d => cast_dout_net,
    en => relational3_op_net,
    clk => clk_net,
    ce => ce_net,
    q => register3_q_net
  );
  relational : entity xil_defaultlib.sysgen_relational_e5d6b5eaca 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    a => input_count_op_net,
    b => con0_op_net,
    op => relational_op_net
  );
  relational1 : entity xil_defaultlib.sysgen_relational_e5d6b5eaca 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    a => input_count_op_net,
    b => con1_op_net,
    op => relational1_op_net
  );
  relational2 : entity xil_defaultlib.sysgen_relational_e5d6b5eaca 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    a => input_count_op_net,
    b => con2_op_net,
    op => relational2_op_net
  );
  relational3 : entity xil_defaultlib.sysgen_relational_e5d6b5eaca 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    a => input_count_op_net,
    b => con3_op_net,
    op => relational3_op_net
  );
  con0 : entity xil_defaultlib.sysgen_constant_b58c3a1535 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => con0_op_net
  );
  con1 : entity xil_defaultlib.sysgen_constant_d3f27a6354 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => con1_op_net
  );
  con2 : entity xil_defaultlib.sysgen_constant_2fa4689d4e 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => con2_op_net
  );
  con3 : entity xil_defaultlib.sysgen_constant_31bab66ba6 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => con3_op_net
  );
  data_choice : entity xil_defaultlib.sysgen_mux_d624c1af44 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    sel => dram_op_net,
    d0 => cast_dout_net,
    d1 => mux1_y_net,
    y => data_choice_y_net
  );
  dout_count : entity xil_defaultlib.sysgen_counter_a9c1c293c2 
  port map (
    clr => '0',
    rst => edge_op_y_net,
    en => logical1_y_net,
    clk => clk_net,
    ce => ce_net,
    op => dout_count_op_net
  );
  dram : entity xil_defaultlib.sysgen_constant_a7b8778750 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => dram_op_net
  );
  input_count : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlcounter_free 
  generic map (
    core_name0 => "rfdc_multi_eight_adcs_2048gsps_mts_c_counter_binary_v12_0_i2",
    op_arith => xlUnsigned,
    op_width => 2
  )
  port map (
    clr => '0',
    rst => edge_op_y_net,
    en => mux1_y_net_x0,
    clk => clk_net,
    ce => ce_net,
    op => input_count_op_net
  );
  we_choice : entity xil_defaultlib.sysgen_mux_4874190f11 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    sel => dram_op_net,
    d0 => mux1_y_net_x0,
    d1 => delay1_q_net,
    y => we_choice_y_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot7_23/ss/basic_ctrl/edge_detect
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x15 is
  port (
    in_x0 : in std_logic_vector( 1-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    out_x0 : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x15;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x15 is 
  signal edge_op_y_net : std_logic_vector( 1-1 downto 0 );
  signal delay1_q_net : std_logic_vector( 1-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal delay_q_net : std_logic_vector( 1-1 downto 0 );
  signal inverter_op_net : std_logic_vector( 1-1 downto 0 );
begin
  out_x0 <= edge_op_y_net;
  delay1_q_net <= in_x0;
  clk_net <= clk_1;
  ce_net <= ce_1;
  delay : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 1
  )
  port map (
    en => '1',
    rst => '1',
    d => delay1_q_net,
    clk => clk_net,
    ce => ce_net,
    q => delay_q_net
  );
  inverter : entity xil_defaultlib.sysgen_inverter_6233897471 
  port map (
    clr => '0',
    ip => delay1_q_net,
    clk => clk_net,
    ce => ce_net,
    op => inverter_op_net
  );
  edge_op : entity xil_defaultlib.sysgen_logical_0f1aa1e2d7 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => inverter_op_net,
    d1 => delay_q_net,
    y => edge_op_y_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot7_23/ss/basic_ctrl
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_basic_ctrl_x7 is
  port (
    din : in std_logic_vector( 32-1 downto 0 );
    we : in std_logic_vector( 1-1 downto 0 );
    trig : in std_logic_vector( 1-1 downto 0 );
    ctrl : in std_logic_vector( 32-1 downto 0 );
    stopi : in std_logic_vector( 1-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    dout : out std_logic_vector( 32-1 downto 0 );
    we_o : out std_logic_vector( 1-1 downto 0 );
    go : out std_logic_vector( 1-1 downto 0 );
    init : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_basic_ctrl_x7;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_basic_ctrl_x7 is 
  signal data_choice_y_net : std_logic_vector( 32-1 downto 0 );
  signal we_choice_y_net : std_logic_vector( 1-1 downto 0 );
  signal register6_q_net : std_logic_vector( 1-1 downto 0 );
  signal edge_op_y_net_x0 : std_logic_vector( 1-1 downto 0 );
  signal cast_dout_net : std_logic_vector( 32-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc7_sync_net : std_logic_vector( 1-1 downto 0 );
  signal edge_op_y_net : std_logic_vector( 1-1 downto 0 );
  signal concatenate_y_net : std_logic_vector( 32-1 downto 0 );
  signal never_op_net : std_logic_vector( 1-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal mux1_y_net : std_logic_vector( 1-1 downto 0 );
  signal delay1_q_net : std_logic_vector( 1-1 downto 0 );
  signal constant_op_net : std_logic_vector( 1-1 downto 0 );
  signal constant1_op_net : std_logic_vector( 1-1 downto 0 );
  signal constant2_op_net : std_logic_vector( 1-1 downto 0 );
  signal enable_y_net : std_logic_vector( 1-1 downto 0 );
  signal delay2_q_net : std_logic_vector( 1-1 downto 0 );
  signal trig_src_y_net : std_logic_vector( 1-1 downto 0 );
  signal delay3_q_net : std_logic_vector( 1-1 downto 0 );
  signal valid_src_y_net : std_logic_vector( 1-1 downto 0 );
  signal inverter_op_net : std_logic_vector( 1-1 downto 0 );
  signal logical_y_net : std_logic_vector( 1-1 downto 0 );
  signal mux2_y_net : std_logic_vector( 1-1 downto 0 );
  signal register1_q_net : std_logic_vector( 1-1 downto 0 );
begin
  dout <= data_choice_y_net;
  we_o <= we_choice_y_net;
  go <= register6_q_net;
  init <= edge_op_y_net_x0;
  cast_dout_net <= din;
  rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc7_sync_net <= we;
  edge_op_y_net <= trig;
  concatenate_y_net <= ctrl;
  never_op_net <= stopi;
  clk_net <= clk_1;
  ce_net <= ce_1;
  dram_munge : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_dram_munge_x7 
  port map (
    din => cast_dout_net,
    we => mux1_y_net,
    init => edge_op_y_net_x0,
    clk_1 => clk_net,
    ce_1 => ce_net,
    dout => data_choice_y_net,
    we_o => we_choice_y_net
  );
  edge_detect : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x15 
  port map (
    in_x0 => delay1_q_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    out_x0 => edge_op_y_net_x0
  );
  constant_x0 : entity xil_defaultlib.sysgen_constant_c95a0b5efb 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => constant_op_net
  );
  constant1 : entity xil_defaultlib.sysgen_constant_c95a0b5efb 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => constant1_op_net
  );
  constant2 : entity xil_defaultlib.sysgen_constant_c95a0b5efb 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => constant2_op_net
  );
  delay1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 1
  )
  port map (
    en => '1',
    rst => '1',
    d => enable_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay1_q_net
  );
  delay2 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 1
  )
  port map (
    en => '1',
    rst => '1',
    d => trig_src_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay2_q_net
  );
  delay3 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 1
  )
  port map (
    en => '1',
    rst => '1',
    d => valid_src_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay3_q_net
  );
  inverter : entity xil_defaultlib.sysgen_inverter_6233897471 
  port map (
    clr => '0',
    ip => edge_op_y_net_x0,
    clk => clk_net,
    ce => ce_net,
    op => inverter_op_net
  );
  logical : entity xil_defaultlib.sysgen_logical_d26e5cda59 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => mux2_y_net,
    d1 => inverter_op_net,
    y => logical_y_net
  );
  mux1 : entity xil_defaultlib.sysgen_mux_4874190f11 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    sel => delay3_q_net,
    d0 => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc7_sync_net,
    d1 => constant2_op_net,
    y => mux1_y_net
  );
  mux2 : entity xil_defaultlib.sysgen_mux_4874190f11 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    sel => delay2_q_net,
    d0 => edge_op_y_net,
    d1 => constant1_op_net,
    y => mux2_y_net
  );
  register1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlregister 
  generic map (
    d_width => 1,
    init_value => b"0"
  )
  port map (
    d => constant_op_net,
    rst => logical_y_net,
    en => edge_op_y_net_x0,
    clk => clk_net,
    ce => ce_net,
    q => register1_q_net
  );
  register6 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlregister 
  generic map (
    d_width => 1,
    init_value => b"0"
  )
  port map (
    d => mux2_y_net,
    rst => edge_op_y_net_x0,
    en => register1_q_net,
    clk => clk_net,
    ce => ce_net,
    q => register6_q_net
  );
  enable : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 0,
    new_msb => 0,
    x_width => 32,
    y_width => 1
  )
  port map (
    x => concatenate_y_net,
    y => enable_y_net
  );
  trig_src : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 1,
    new_msb => 1,
    x_width => 32,
    y_width => 1
  )
  port map (
    x => concatenate_y_net,
    y => trig_src_y_net
  );
  valid_src : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 2,
    new_msb => 2,
    x_width => 32,
    y_width => 1
  )
  port map (
    x => concatenate_y_net,
    y => valid_src_y_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot7_23/ss/bram/calc_add
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_calc_add_x7 is
  port (
    in_x0 : in std_logic_vector( 10-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    out_x0 : out std_logic_vector( 10-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_calc_add_x7;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_calc_add_x7 is 
  signal mux_y_net : std_logic_vector( 10-1 downto 0 );
  signal add_del_q_net : std_logic_vector( 10-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal add_sub_s_net : std_logic_vector( 1-1 downto 0 );
  signal const_op_net : std_logic_vector( 1-1 downto 0 );
  signal lsw_y_net : std_logic_vector( 1-1 downto 0 );
  signal concat_y_net : std_logic_vector( 10-1 downto 0 );
  signal msw_y_net : std_logic_vector( 9-1 downto 0 );
  signal convert_addr_dout_net : std_logic_vector( 10-1 downto 0 );
  signal manipulate_op_net : std_logic_vector( 1-1 downto 0 );
begin
  out_x0 <= mux_y_net;
  add_del_q_net <= in_x0;
  clk_net <= clk_1;
  ce_net <= ce_1;
  add_sub : entity xil_defaultlib.sysgen_addsub_fd3b6c715c 
  port map (
    clr => '0',
    a => const_op_net,
    b => lsw_y_net,
    clk => clk_net,
    ce => ce_net,
    s => add_sub_s_net
  );
  concat : entity xil_defaultlib.sysgen_concat_f4b90dfa16 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    in0 => msw_y_net,
    in1 => add_sub_s_net,
    y => concat_y_net
  );
  const : entity xil_defaultlib.sysgen_constant_a7b8778750 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => const_op_net
  );
  convert_addr : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 10,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 10,
    latency => 0,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => add_del_q_net,
    clk => clk_net,
    ce => ce_net,
    dout => convert_addr_dout_net
  );
  lsw : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 0,
    new_msb => 0,
    x_width => 10,
    y_width => 1
  )
  port map (
    x => convert_addr_dout_net,
    y => lsw_y_net
  );
  manipulate : entity xil_defaultlib.sysgen_constant_a7b8778750 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => manipulate_op_net
  );
  msw : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 1,
    new_msb => 9,
    x_width => 10,
    y_width => 9
  )
  port map (
    x => convert_addr_dout_net,
    y => msw_y_net
  );
  mux : entity xil_defaultlib.sysgen_mux_4417594854 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    sel => manipulate_op_net,
    d0 => convert_addr_dout_net,
    d1 => concat_y_net,
    y => mux_y_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot7_23/ss/bram/munge_in
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_munge_in_x7 is
  port (
    din : in std_logic_vector( 32-1 downto 0 );
    dout : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_munge_in_x7;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_munge_in_x7 is 
  signal reinterpret_out_output_port_net : std_logic_vector( 32-1 downto 0 );
  signal dat_del_q_net : std_logic_vector( 32-1 downto 0 );
begin
  dout <= reinterpret_out_output_port_net;
  dat_del_q_net <= din;
  reinterpret_out : entity xil_defaultlib.sysgen_reinterpret_52bb84f12b 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => dat_del_q_net,
    output_port => reinterpret_out_output_port_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot7_23/ss/bram
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_bram_x7 is
  port (
    addr : in std_logic_vector( 10-1 downto 0 );
    data_in : in std_logic_vector( 32-1 downto 0 );
    we : in std_logic_vector( 1-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_23_ss_bram_addr : out std_logic_vector( 10-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_23_ss_bram_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_23_ss_bram_we : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_bram_x7;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_bram_x7 is 
  signal add_del_q_net : std_logic_vector( 10-1 downto 0 );
  signal dat_del_q_net : std_logic_vector( 32-1 downto 0 );
  signal we_del_q_net : std_logic_vector( 1-1 downto 0 );
  signal convert_addr_dout_net : std_logic_vector( 10-1 downto 0 );
  signal convert_din1_dout_net : std_logic_vector( 32-1 downto 0 );
  signal convert_we_dout_net : std_logic_vector( 1-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal mux_y_net : std_logic_vector( 10-1 downto 0 );
  signal reinterpret_out_output_port_net : std_logic_vector( 32-1 downto 0 );
begin
  add_del_q_net <= addr;
  dat_del_q_net <= data_in;
  we_del_q_net <= we;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_23_ss_bram_addr <= convert_addr_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_23_ss_bram_data_in <= convert_din1_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_23_ss_bram_we <= convert_we_dout_net;
  clk_net <= clk_1;
  ce_net <= ce_1;
  calc_add : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_calc_add_x7 
  port map (
    in_x0 => add_del_q_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    out_x0 => mux_y_net
  );
  munge_in : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_munge_in_x7 
  port map (
    din => dat_del_q_net,
    dout => reinterpret_out_output_port_net
  );
  convert_addr : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 10,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 10,
    latency => 0,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => mux_y_net,
    clk => clk_net,
    ce => ce_net,
    dout => convert_addr_dout_net
  );
  convert_din1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 32,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 32,
    latency => 0,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => reinterpret_out_output_port_net,
    clk => clk_net,
    ce => ce_net,
    dout => convert_din1_dout_net
  );
  convert_we : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 1,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 1,
    latency => 0,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => we_del_q_net,
    clk => clk_net,
    ce => ce_net,
    dout => convert_we_dout_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot7_23/ss/ctrl
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_ctrl_x7 is
  port (
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_23_ss_ctrl_user_data_out : in std_logic_vector( 32-1 downto 0 );
    in_reg : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_ctrl_x7;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_ctrl_x7 is 
  signal reint1_output_port_net : std_logic_vector( 32-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_23_ss_ctrl_user_data_out_net : std_logic_vector( 32-1 downto 0 );
  signal io_delay_q_net : std_logic_vector( 32-1 downto 0 );
  signal slice_reg_y_net : std_logic_vector( 32-1 downto 0 );
begin
  in_reg <= reint1_output_port_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_23_ss_ctrl_user_data_out_net <= rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_23_ss_ctrl_user_data_out;
  io_delay : entity xil_defaultlib.sysgen_delay_34e314c510 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d => rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_23_ss_ctrl_user_data_out_net,
    q => io_delay_q_net
  );
  slice_reg : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 0,
    new_msb => 31,
    x_width => 32,
    y_width => 32
  )
  port map (
    x => io_delay_q_net,
    y => slice_reg_y_net
  );
  reint1 : entity xil_defaultlib.sysgen_reinterpret_52bb84f12b 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => slice_reg_y_net,
    output_port => reint1_output_port_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot7_23/ss/ctrl_combine
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_ctrl_combine_x7 is
  port (
    in1 : in std_logic_vector( 28-1 downto 0 );
    in2 : in std_logic_vector( 1-1 downto 0 );
    in3 : in std_logic_vector( 2-1 downto 0 );
    in4 : in std_logic_vector( 1-1 downto 0 );
    bus_out : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_ctrl_combine_x7;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_ctrl_combine_x7 is 
  signal concatenate_y_net : std_logic_vector( 32-1 downto 0 );
  signal reinterpret4_output_port_net_x0 : std_logic_vector( 28-1 downto 0 );
  signal circ_or_y_net : std_logic_vector( 1-1 downto 0 );
  signal reinterpret2_output_port_net : std_logic_vector( 2-1 downto 0 );
  signal arm_or_y_net : std_logic_vector( 1-1 downto 0 );
  signal reinterpret1_output_port_net : std_logic_vector( 28-1 downto 0 );
  signal reinterpret2_output_port_net_x0 : std_logic_vector( 1-1 downto 0 );
  signal reinterpret3_output_port_net : std_logic_vector( 2-1 downto 0 );
  signal reinterpret4_output_port_net : std_logic_vector( 1-1 downto 0 );
begin
  bus_out <= concatenate_y_net;
  reinterpret4_output_port_net_x0 <= in1;
  circ_or_y_net <= in2;
  reinterpret2_output_port_net <= in3;
  arm_or_y_net <= in4;
  concatenate : entity xil_defaultlib.sysgen_concat_8611e618a5 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    in0 => reinterpret1_output_port_net,
    in1 => reinterpret2_output_port_net_x0,
    in2 => reinterpret3_output_port_net,
    in3 => reinterpret4_output_port_net,
    y => concatenate_y_net
  );
  reinterpret1 : entity xil_defaultlib.sysgen_reinterpret_f7e0b72e82 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => reinterpret4_output_port_net_x0,
    output_port => reinterpret1_output_port_net
  );
  reinterpret2 : entity xil_defaultlib.sysgen_reinterpret_317b92931a 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => circ_or_y_net,
    output_port => reinterpret2_output_port_net_x0
  );
  reinterpret3 : entity xil_defaultlib.sysgen_reinterpret_5dc9f217bd 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => reinterpret2_output_port_net,
    output_port => reinterpret3_output_port_net
  );
  reinterpret4 : entity xil_defaultlib.sysgen_reinterpret_317b92931a 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => arm_or_y_net,
    output_port => reinterpret4_output_port_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot7_23/ss/ctrl_split
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_ctrl_split_x7 is
  port (
    bus_in : in std_logic_vector( 32-1 downto 0 );
    msb_out4 : out std_logic_vector( 28-1 downto 0 );
    out3 : out std_logic_vector( 1-1 downto 0 );
    out2 : out std_logic_vector( 2-1 downto 0 );
    lsb_out1 : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_ctrl_split_x7;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_ctrl_split_x7 is 
  signal reinterpret4_output_port_net : std_logic_vector( 28-1 downto 0 );
  signal slice3_y_net : std_logic_vector( 1-1 downto 0 );
  signal reinterpret2_output_port_net : std_logic_vector( 2-1 downto 0 );
  signal slice1_y_net : std_logic_vector( 1-1 downto 0 );
  signal reint1_output_port_net : std_logic_vector( 32-1 downto 0 );
  signal slice2_y_net : std_logic_vector( 2-1 downto 0 );
  signal slice4_y_net : std_logic_vector( 28-1 downto 0 );
begin
  msb_out4 <= reinterpret4_output_port_net;
  out3 <= slice3_y_net;
  out2 <= reinterpret2_output_port_net;
  lsb_out1 <= slice1_y_net;
  reint1_output_port_net <= bus_in;
  reinterpret2 : entity xil_defaultlib.sysgen_reinterpret_5dc9f217bd 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => slice2_y_net,
    output_port => reinterpret2_output_port_net
  );
  reinterpret4 : entity xil_defaultlib.sysgen_reinterpret_f7e0b72e82 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => slice4_y_net,
    output_port => reinterpret4_output_port_net
  );
  slice1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 0,
    new_msb => 0,
    x_width => 32,
    y_width => 1
  )
  port map (
    x => reint1_output_port_net,
    y => slice1_y_net
  );
  slice2 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 1,
    new_msb => 2,
    x_width => 32,
    y_width => 2
  )
  port map (
    x => reint1_output_port_net,
    y => slice2_y_net
  );
  slice3 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 3,
    new_msb => 3,
    x_width => 32,
    y_width => 1
  )
  port map (
    x => reint1_output_port_net,
    y => slice3_y_net
  );
  slice4 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 4,
    new_msb => 31,
    x_width => 32,
    y_width => 28
  )
  port map (
    x => reint1_output_port_net,
    y => slice4_y_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot7_23/ss/status
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_status_x7 is
  port (
    out_reg : in std_logic_vector( 32-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_23_ss_status_user_data_in : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_status_x7;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_status_x7 is 
  signal concat_y_net : std_logic_vector( 32-1 downto 0 );
  signal cast_gw_dout_net : std_logic_vector( 32-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal io_delay_q_net : std_logic_vector( 32-1 downto 0 );
  signal reint1_output_port_net : std_logic_vector( 32-1 downto 0 );
  signal assert_reg_dout_net : std_logic_vector( 32-1 downto 0 );
begin
  concat_y_net <= out_reg;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_23_ss_status_user_data_in <= cast_gw_dout_net;
  clk_net <= clk_1;
  ce_net <= ce_1;
  io_delay : entity xil_defaultlib.sysgen_delay_34e314c510 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d => reint1_output_port_net,
    q => io_delay_q_net
  );
  cast_gw : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 32,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 32,
    latency => 1,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => io_delay_q_net,
    clk => clk_net,
    ce => ce_net,
    dout => cast_gw_dout_net
  );
  assert_reg : entity xil_defaultlib.xlpassthrough 
  generic map (
    din_width => 32,
    dout_width => 32
  )
  port map (
    din => concat_y_net,
    dout => assert_reg_dout_net
  );
  reint1 : entity xil_defaultlib.sysgen_reinterpret_52bb84f12b 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => assert_reg_dout_net,
    output_port => reint1_output_port_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot7_23/ss
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_ss_x9 is
  port (
    din : in std_logic_vector( 32-1 downto 0 );
    we : in std_logic_vector( 1-1 downto 0 );
    trig : in std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_23_ss_ctrl_user_data_out : in std_logic_vector( 32-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    arm_out : out std_logic_vector( 1-1 downto 0 );
    goto_22826541_we1 : out std_logic_vector( 1-1 downto 0 );
    goto_22826541_we4 : out std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_23_ss_bram_addr : out std_logic_vector( 10-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_23_ss_bram_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_23_ss_bram_we : out std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_23_ss_status_user_data_in : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_ss_x9;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_ss_x9 is 
  signal arm_or_y_net : std_logic_vector( 1-1 downto 0 );
  signal concatenate_y_net : std_logic_vector( 32-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc7_sync_net : std_logic_vector( 1-1 downto 0 );
  signal edge_op_y_net_x0 : std_logic_vector( 1-1 downto 0 );
  signal we_choice_y_net : std_logic_vector( 1-1 downto 0 );
  signal logical6_y_net : std_logic_vector( 1-1 downto 0 );
  signal convert_addr_dout_net : std_logic_vector( 10-1 downto 0 );
  signal convert_din1_dout_net : std_logic_vector( 32-1 downto 0 );
  signal convert_we_dout_net : std_logic_vector( 1-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_23_ss_ctrl_user_data_out_net : std_logic_vector( 32-1 downto 0 );
  signal cast_gw_dout_net : std_logic_vector( 32-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal slice2_y_net : std_logic_vector( 10-1 downto 0 );
  signal delay6_q_net : std_logic_vector( 32-1 downto 0 );
  signal concat_y_net : std_logic_vector( 32-1 downto 0 );
  signal data_choice_y_net : std_logic_vector( 32-1 downto 0 );
  signal register6_q_net : std_logic_vector( 1-1 downto 0 );
  signal never_op_net : std_logic_vector( 1-1 downto 0 );
  signal edge_op_y_net_x1 : std_logic_vector( 1-1 downto 0 );
  signal cast_dout_net : std_logic_vector( 32-1 downto 0 );
  signal concatenate_y_net_x0 : std_logic_vector( 32-1 downto 0 );
  signal add_del_q_net : std_logic_vector( 10-1 downto 0 );
  signal dat_del_q_net : std_logic_vector( 32-1 downto 0 );
  signal we_del_q_net : std_logic_vector( 1-1 downto 0 );
  signal reint1_output_port_net : std_logic_vector( 32-1 downto 0 );
  signal reinterpret4_output_port_net : std_logic_vector( 28-1 downto 0 );
  signal circ_or_y_net : std_logic_vector( 1-1 downto 0 );
  signal reinterpret2_output_port_net : std_logic_vector( 2-1 downto 0 );
  signal slice3_y_net : std_logic_vector( 1-1 downto 0 );
  signal slice1_y_net : std_logic_vector( 1-1 downto 0 );
  signal arm_op_net : std_logic_vector( 1-1 downto 0 );
  signal ri_output_port_net : std_logic_vector( 32-1 downto 0 );
  signal circ_op_net : std_logic_vector( 1-1 downto 0 );
begin
  arm_out <= arm_or_y_net;
  concatenate_y_net <= din;
  rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc7_sync_net <= we;
  edge_op_y_net_x0 <= trig;
  goto_22826541_we1 <= we_choice_y_net;
  goto_22826541_we4 <= logical6_y_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_23_ss_bram_addr <= convert_addr_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_23_ss_bram_data_in <= convert_din1_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_23_ss_bram_we <= convert_we_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_23_ss_ctrl_user_data_out_net <= rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_23_ss_ctrl_user_data_out;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_23_ss_status_user_data_in <= cast_gw_dout_net;
  clk_net <= clk_1;
  ce_net <= ce_1;
  add_gen : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_add_gen_x8 
  port map (
    din => data_choice_y_net,
    we => we_choice_y_net,
    go => register6_q_net,
    cont => never_op_net,
    init => edge_op_y_net_x1,
    clk_1 => clk_net,
    ce_1 => ce_net,
    add => slice2_y_net,
    dout => delay6_q_net,
    we_o => logical6_y_net,
    status => concat_y_net
  );
  basic_ctrl : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_basic_ctrl_x7 
  port map (
    din => cast_dout_net,
    we => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc7_sync_net,
    trig => edge_op_y_net_x0,
    ctrl => concatenate_y_net_x0,
    stopi => never_op_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    dout => data_choice_y_net,
    we_o => we_choice_y_net,
    go => register6_q_net,
    init => edge_op_y_net_x1
  );
  bram : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_bram_x7 
  port map (
    addr => add_del_q_net,
    data_in => dat_del_q_net,
    we => we_del_q_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_23_ss_bram_addr => convert_addr_dout_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_23_ss_bram_data_in => convert_din1_dout_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_23_ss_bram_we => convert_we_dout_net
  );
  ctrl : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_ctrl_x7 
  port map (
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_23_ss_ctrl_user_data_out => rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_23_ss_ctrl_user_data_out_net,
    in_reg => reint1_output_port_net
  );
  ctrl_combine : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_ctrl_combine_x7 
  port map (
    in1 => reinterpret4_output_port_net,
    in2 => circ_or_y_net,
    in3 => reinterpret2_output_port_net,
    in4 => arm_or_y_net,
    bus_out => concatenate_y_net_x0
  );
  ctrl_split : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_ctrl_split_x7 
  port map (
    bus_in => reint1_output_port_net,
    msb_out4 => reinterpret4_output_port_net,
    out3 => slice3_y_net,
    out2 => reinterpret2_output_port_net,
    lsb_out1 => slice1_y_net
  );
  status : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_status_x7 
  port map (
    out_reg => concat_y_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_23_ss_status_user_data_in => cast_gw_dout_net
  );
  add_del : entity xil_defaultlib.sysgen_delay_4e9264ffdf 
  port map (
    clr => '0',
    d => slice2_y_net,
    clk => clk_net,
    ce => ce_net,
    q => add_del_q_net
  );
  arm : entity xil_defaultlib.sysgen_constant_a7b8778750 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => arm_op_net
  );
  arm_or : entity xil_defaultlib.sysgen_logical_d7dc12cf31 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => slice1_y_net,
    d1 => arm_op_net,
    y => arm_or_y_net
  );
  cast : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 32,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 32,
    latency => 0,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => ri_output_port_net,
    clk => clk_net,
    ce => ce_net,
    dout => cast_dout_net
  );
  circ : entity xil_defaultlib.sysgen_constant_a7b8778750 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => circ_op_net
  );
  circ_or : entity xil_defaultlib.sysgen_logical_d7dc12cf31 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => slice3_y_net,
    d1 => circ_op_net,
    y => circ_or_y_net
  );
  dat_del : entity xil_defaultlib.sysgen_delay_5ec362a23c 
  port map (
    clr => '0',
    d => delay6_q_net,
    clk => clk_net,
    ce => ce_net,
    q => dat_del_q_net
  );
  never : entity xil_defaultlib.sysgen_constant_a7b8778750 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => never_op_net
  );
  ri : entity xil_defaultlib.sysgen_reinterpret_52bb84f12b 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => concatenate_y_net,
    output_port => ri_output_port_net
  );
  we_del : entity xil_defaultlib.sysgen_delay_e0740ee3f9 
  port map (
    clr => '0',
    d => logical6_y_net,
    clk => clk_net,
    ce => ce_net,
    q => we_del_q_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot7_23
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_23 is
  port (
    in_d0 : in std_logic_vector( 16-1 downto 0 );
    in_d1 : in std_logic_vector( 16-1 downto 0 );
    we : in std_logic_vector( 1-1 downto 0 );
    trig : in std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_23_ss_ctrl_user_data_out : in std_logic_vector( 32-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    arm_out : out std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_23_ss_bram_addr : out std_logic_vector( 10-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_23_ss_bram_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_23_ss_bram_we : out std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_23_ss_status_user_data_in : out std_logic_vector( 32-1 downto 0 );
    goto_22826541_we1 : out std_logic_vector( 1-1 downto 0 );
    goto_22826541_we4 : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_23;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_23 is 
  signal arm_or_y_net : std_logic_vector( 1-1 downto 0 );
  signal slice57_y_net : std_logic_vector( 16-1 downto 0 );
  signal slice53_y_net : std_logic_vector( 16-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc7_sync_net : std_logic_vector( 1-1 downto 0 );
  signal edge_op_y_net : std_logic_vector( 1-1 downto 0 );
  signal convert_addr_dout_net : std_logic_vector( 10-1 downto 0 );
  signal convert_din1_dout_net : std_logic_vector( 32-1 downto 0 );
  signal convert_we_dout_net : std_logic_vector( 1-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_23_ss_ctrl_user_data_out_net : std_logic_vector( 32-1 downto 0 );
  signal cast_gw_dout_net : std_logic_vector( 32-1 downto 0 );
  signal we_choice_y_net : std_logic_vector( 1-1 downto 0 );
  signal logical6_y_net : std_logic_vector( 1-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal concatenate_y_net : std_logic_vector( 32-1 downto 0 );
  signal assert_d0_dout_net : std_logic_vector( 16-1 downto 0 );
  signal assert_d1_dout_net : std_logic_vector( 16-1 downto 0 );
begin
  arm_out <= arm_or_y_net;
  slice57_y_net <= in_d0;
  slice53_y_net <= in_d1;
  rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc7_sync_net <= we;
  edge_op_y_net <= trig;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_23_ss_bram_addr <= convert_addr_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_23_ss_bram_data_in <= convert_din1_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_23_ss_bram_we <= convert_we_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_23_ss_ctrl_user_data_out_net <= rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_23_ss_ctrl_user_data_out;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_23_ss_status_user_data_in <= cast_gw_dout_net;
  goto_22826541_we1 <= we_choice_y_net;
  goto_22826541_we4 <= logical6_y_net;
  clk_net <= clk_1;
  ce_net <= ce_1;
  buscreate : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_buscreate_x9 
  port map (
    in1 => assert_d0_dout_net,
    in2 => assert_d1_dout_net,
    bus_out => concatenate_y_net
  );
  ss : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_ss_x9 
  port map (
    din => concatenate_y_net,
    we => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc7_sync_net,
    trig => edge_op_y_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_23_ss_ctrl_user_data_out => rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_23_ss_ctrl_user_data_out_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    arm_out => arm_or_y_net,
    goto_22826541_we1 => we_choice_y_net,
    goto_22826541_we4 => logical6_y_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_23_ss_bram_addr => convert_addr_dout_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_23_ss_bram_data_in => convert_din1_dout_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_23_ss_bram_we => convert_we_dout_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_23_ss_status_user_data_in => cast_gw_dout_net
  );
  assert_d0 : entity xil_defaultlib.xlpassthrough 
  generic map (
    din_width => 16,
    dout_width => 16
  )
  port map (
    din => slice57_y_net,
    dout => assert_d0_dout_net
  );
  assert_d1 : entity xil_defaultlib.xlpassthrough 
  generic map (
    din_width => 16,
    dout_width => 16
  )
  port map (
    din => slice53_y_net,
    dout => assert_d1_dout_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot7_45/buscreate
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_buscreate_x8 is
  port (
    in1 : in std_logic_vector( 16-1 downto 0 );
    in2 : in std_logic_vector( 16-1 downto 0 );
    bus_out : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_buscreate_x8;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_buscreate_x8 is 
  signal concatenate_y_net : std_logic_vector( 32-1 downto 0 );
  signal assert_d0_dout_net : std_logic_vector( 16-1 downto 0 );
  signal assert_d1_dout_net : std_logic_vector( 16-1 downto 0 );
  signal reinterpret1_output_port_net : std_logic_vector( 16-1 downto 0 );
  signal reinterpret2_output_port_net : std_logic_vector( 16-1 downto 0 );
begin
  bus_out <= concatenate_y_net;
  assert_d0_dout_net <= in1;
  assert_d1_dout_net <= in2;
  concatenate : entity xil_defaultlib.sysgen_concat_37649e01d1 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    in0 => reinterpret1_output_port_net,
    in1 => reinterpret2_output_port_net,
    y => concatenate_y_net
  );
  reinterpret1 : entity xil_defaultlib.sysgen_reinterpret_03c8cdbbc1 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => assert_d0_dout_net,
    output_port => reinterpret1_output_port_net
  );
  reinterpret2 : entity xil_defaultlib.sysgen_reinterpret_03c8cdbbc1 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => assert_d1_dout_net,
    output_port => reinterpret2_output_port_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot7_45/ss/add_gen/edge_detect
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x16 is
  port (
    in_x0 : in std_logic_vector( 1-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    out_x0 : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x16;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x16 is 
  signal edge_op_y_net : std_logic_vector( 1-1 downto 0 );
  signal slice3_y_net : std_logic_vector( 1-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal delay_q_net : std_logic_vector( 1-1 downto 0 );
  signal inverter_op_net : std_logic_vector( 1-1 downto 0 );
begin
  out_x0 <= edge_op_y_net;
  slice3_y_net <= in_x0;
  clk_net <= clk_1;
  ce_net <= ce_1;
  delay : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 1
  )
  port map (
    en => '1',
    rst => '1',
    d => slice3_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay_q_net
  );
  inverter : entity xil_defaultlib.sysgen_inverter_6233897471 
  port map (
    clr => '0',
    ip => slice3_y_net,
    clk => clk_net,
    ce => ce_net,
    op => inverter_op_net
  );
  edge_op : entity xil_defaultlib.sysgen_logical_9cc14fefba 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => inverter_op_net,
    d1 => delay_q_net,
    y => edge_op_y_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot7_45/ss/add_gen
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_add_gen_x7 is
  port (
    din : in std_logic_vector( 32-1 downto 0 );
    we : in std_logic_vector( 1-1 downto 0 );
    go : in std_logic_vector( 1-1 downto 0 );
    cont : in std_logic_vector( 1-1 downto 0 );
    init : in std_logic_vector( 1-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    add : out std_logic_vector( 10-1 downto 0 );
    dout : out std_logic_vector( 32-1 downto 0 );
    we_o : out std_logic_vector( 1-1 downto 0 );
    status : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_add_gen_x7;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_add_gen_x7 is 
  signal slice2_y_net : std_logic_vector( 10-1 downto 0 );
  signal delay6_q_net : std_logic_vector( 32-1 downto 0 );
  signal logical6_y_net : std_logic_vector( 1-1 downto 0 );
  signal concat_y_net : std_logic_vector( 32-1 downto 0 );
  signal data_choice_y_net : std_logic_vector( 32-1 downto 0 );
  signal we_choice_y_net : std_logic_vector( 1-1 downto 0 );
  signal register6_q_net : std_logic_vector( 1-1 downto 0 );
  signal never_op_net : std_logic_vector( 1-1 downto 0 );
  signal edge_op_y_net : std_logic_vector( 1-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal edge_op_y_net_x0 : std_logic_vector( 1-1 downto 0 );
  signal slice3_y_net : std_logic_vector( 1-1 downto 0 );
  signal shift_op_net : std_logic_vector( 19-1 downto 0 );
  signal inverter_op_net : std_logic_vector( 1-1 downto 0 );
  signal delay1_q_net : std_logic_vector( 12-1 downto 0 );
  signal convert_dout_net : std_logic_vector( 19-1 downto 0 );
  signal register5_q_net : std_logic_vector( 1-1 downto 0 );
  signal delay_q_net : std_logic_vector( 1-1 downto 0 );
  signal delay4_q_net : std_logic_vector( 1-1 downto 0 );
  signal slice1_y_net : std_logic_vector( 12-1 downto 0 );
  signal delay3_q_net : std_logic_vector( 1-1 downto 0 );
  signal inverter1_op_net : std_logic_vector( 1-1 downto 0 );
  signal logical1_y_net : std_logic_vector( 1-1 downto 0 );
  signal logical4_y_net : std_logic_vector( 1-1 downto 0 );
  signal add_gen_op_net : std_logic_vector( 13-1 downto 0 );
begin
  add <= slice2_y_net;
  dout <= delay6_q_net;
  we_o <= logical6_y_net;
  status <= concat_y_net;
  data_choice_y_net <= din;
  we_choice_y_net <= we;
  register6_q_net <= go;
  never_op_net <= cont;
  edge_op_y_net <= init;
  clk_net <= clk_1;
  ce_net <= ce_1;
  edge_detect : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x16 
  port map (
    in_x0 => slice3_y_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    out_x0 => edge_op_y_net_x0
  );
  concat : entity xil_defaultlib.sysgen_concat_fc8edfac0e 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    in0 => shift_op_net,
    in1 => inverter_op_net,
    in2 => delay1_q_net,
    y => concat_y_net
  );
  convert : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 1,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 19,
    latency => 0,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => register5_q_net,
    clk => clk_net,
    ce => ce_net,
    dout => convert_dout_net
  );
  delay : entity xil_defaultlib.sysgen_delay_e0740ee3f9 
  port map (
    clr => '0',
    d => delay4_q_net,
    clk => clk_net,
    ce => ce_net,
    q => delay_q_net
  );
  delay1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 12
  )
  port map (
    en => '1',
    rst => '1',
    d => slice1_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay1_q_net
  );
  delay3 : entity xil_defaultlib.sysgen_delay_e0740ee3f9 
  port map (
    clr => '0',
    d => never_op_net,
    clk => clk_net,
    ce => ce_net,
    q => delay3_q_net
  );
  delay4 : entity xil_defaultlib.sysgen_delay_e0740ee3f9 
  port map (
    clr => '0',
    d => edge_op_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay4_q_net
  );
  delay6 : entity xil_defaultlib.sysgen_delay_5ec362a23c 
  port map (
    clr => '0',
    d => data_choice_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay6_q_net
  );
  inverter : entity xil_defaultlib.sysgen_inverter_918b6bc6d0 
  port map (
    clr => '0',
    ip => register5_q_net,
    clk => clk_net,
    ce => ce_net,
    op => inverter_op_net
  );
  inverter1 : entity xil_defaultlib.sysgen_inverter_6233897471 
  port map (
    clr => '0',
    ip => edge_op_y_net_x0,
    clk => clk_net,
    ce => ce_net,
    op => inverter1_op_net
  );
  logical1 : entity xil_defaultlib.sysgen_logical_2486129911 
  port map (
    clr => '0',
    d0 => we_choice_y_net,
    d1 => register6_q_net,
    clk => clk_net,
    ce => ce_net,
    y => logical1_y_net
  );
  logical4 : entity xil_defaultlib.sysgen_logical_d7dc12cf31 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => delay3_q_net,
    d1 => inverter1_op_net,
    y => logical4_y_net
  );
  logical6 : entity xil_defaultlib.sysgen_logical_c05fefc67b 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => register5_q_net,
    d1 => logical4_y_net,
    d2 => logical1_y_net,
    y => logical6_y_net
  );
  register5 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlregister 
  generic map (
    d_width => 1,
    init_value => b"1"
  )
  port map (
    d => delay3_q_net,
    rst => delay_q_net,
    en => edge_op_y_net_x0,
    clk => clk_net,
    ce => ce_net,
    q => register5_q_net
  );
  shift : entity xil_defaultlib.sysgen_shift_5af4fe0a99 
  port map (
    clr => '0',
    ip => convert_dout_net,
    clk => clk_net,
    ce => ce_net,
    op => shift_op_net
  );
  add_gen : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlcounter_free 
  generic map (
    core_name0 => "rfdc_multi_eight_adcs_2048gsps_mts_c_counter_binary_v12_0_i1",
    op_arith => xlUnsigned,
    op_width => 13
  )
  port map (
    clr => '0',
    rst => delay4_q_net,
    en => logical6_y_net,
    clk => clk_net,
    ce => ce_net,
    op => add_gen_op_net
  );
  slice1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 0,
    new_msb => 11,
    x_width => 13,
    y_width => 12
  )
  port map (
    x => add_gen_op_net,
    y => slice1_y_net
  );
  slice2 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 2,
    new_msb => 11,
    x_width => 13,
    y_width => 10
  )
  port map (
    x => add_gen_op_net,
    y => slice2_y_net
  );
  slice3 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 12,
    new_msb => 12,
    x_width => 13,
    y_width => 1
  )
  port map (
    x => add_gen_op_net,
    y => slice3_y_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot7_45/ss/basic_ctrl/dram_munge
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_dram_munge_x10 is
  port (
    din : in std_logic_vector( 32-1 downto 0 );
    we : in std_logic_vector( 1-1 downto 0 );
    init : in std_logic_vector( 1-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    dout : out std_logic_vector( 32-1 downto 0 );
    we_o : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_dram_munge_x10;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_dram_munge_x10 is 
  signal data_choice_y_net : std_logic_vector( 32-1 downto 0 );
  signal we_choice_y_net : std_logic_vector( 1-1 downto 0 );
  signal cast_dout_net : std_logic_vector( 32-1 downto 0 );
  signal mux1_y_net_x0 : std_logic_vector( 1-1 downto 0 );
  signal edge_op_y_net : std_logic_vector( 1-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal concat_y_net : std_logic_vector( 80-1 downto 0 );
  signal constant_op_net : std_logic_vector( 8-1 downto 0 );
  signal register_q_net : std_logic_vector( 32-1 downto 0 );
  signal register1_q_net : std_logic_vector( 32-1 downto 0 );
  signal concat1_y_net : std_logic_vector( 80-1 downto 0 );
  signal register2_q_net : std_logic_vector( 32-1 downto 0 );
  signal register3_q_net : std_logic_vector( 32-1 downto 0 );
  signal delay_q_net : std_logic_vector( 1-1 downto 0 );
  signal logical_y_net : std_logic_vector( 1-1 downto 0 );
  signal delay1_q_net : std_logic_vector( 1-1 downto 0 );
  signal logical1_y_net : std_logic_vector( 1-1 downto 0 );
  signal relational3_op_net : std_logic_vector( 1-1 downto 0 );
  signal mux1_y_net : std_logic_vector( 80-1 downto 0 );
  signal dout_count_op_net : std_logic_vector( 1-1 downto 0 );
  signal relational_op_net : std_logic_vector( 1-1 downto 0 );
  signal relational1_op_net : std_logic_vector( 1-1 downto 0 );
  signal relational2_op_net : std_logic_vector( 1-1 downto 0 );
  signal input_count_op_net : std_logic_vector( 2-1 downto 0 );
  signal con0_op_net : std_logic_vector( 2-1 downto 0 );
  signal con1_op_net : std_logic_vector( 2-1 downto 0 );
  signal con2_op_net : std_logic_vector( 2-1 downto 0 );
  signal con3_op_net : std_logic_vector( 2-1 downto 0 );
  signal dram_op_net : std_logic_vector( 1-1 downto 0 );
begin
  dout <= data_choice_y_net;
  we_o <= we_choice_y_net;
  cast_dout_net <= din;
  mux1_y_net_x0 <= we;
  edge_op_y_net <= init;
  clk_net <= clk_1;
  ce_net <= ce_1;
  concat : entity xil_defaultlib.sysgen_concat_e7487baac7 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    in0 => constant_op_net,
    in1 => register_q_net,
    in2 => constant_op_net,
    in3 => register1_q_net,
    y => concat_y_net
  );
  concat1 : entity xil_defaultlib.sysgen_concat_e7487baac7 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    in0 => constant_op_net,
    in1 => register2_q_net,
    in2 => constant_op_net,
    in3 => register3_q_net,
    y => concat1_y_net
  );
  constant_x0 : entity xil_defaultlib.sysgen_constant_869e31f04d 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => constant_op_net
  );
  delay : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 1
  )
  port map (
    en => '1',
    rst => '1',
    d => logical_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay_q_net
  );
  delay1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 1
  )
  port map (
    en => '1',
    rst => '1',
    d => logical1_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay1_q_net
  );
  logical : entity xil_defaultlib.sysgen_logical_2486129911 
  port map (
    clr => '0',
    d0 => relational3_op_net,
    d1 => mux1_y_net_x0,
    clk => clk_net,
    ce => ce_net,
    y => logical_y_net
  );
  logical1 : entity xil_defaultlib.sysgen_logical_d7dc12cf31 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => logical_y_net,
    d1 => delay_q_net,
    y => logical1_y_net
  );
  mux1 : entity xil_defaultlib.sysgen_mux_71ee2b1026 
  port map (
    clr => '0',
    sel => dout_count_op_net,
    d0 => concat_y_net,
    d1 => concat1_y_net,
    clk => clk_net,
    ce => ce_net,
    y => mux1_y_net
  );
  register_x0 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlregister 
  generic map (
    d_width => 32,
    init_value => b"00000000000000000000000000000000"
  )
  port map (
    rst => "0",
    d => cast_dout_net,
    en => relational_op_net,
    clk => clk_net,
    ce => ce_net,
    q => register_q_net
  );
  register1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlregister 
  generic map (
    d_width => 32,
    init_value => b"00000000000000000000000000000000"
  )
  port map (
    rst => "0",
    d => cast_dout_net,
    en => relational1_op_net,
    clk => clk_net,
    ce => ce_net,
    q => register1_q_net
  );
  register2 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlregister 
  generic map (
    d_width => 32,
    init_value => b"00000000000000000000000000000000"
  )
  port map (
    rst => "0",
    d => cast_dout_net,
    en => relational2_op_net,
    clk => clk_net,
    ce => ce_net,
    q => register2_q_net
  );
  register3 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlregister 
  generic map (
    d_width => 32,
    init_value => b"00000000000000000000000000000000"
  )
  port map (
    rst => "0",
    d => cast_dout_net,
    en => relational3_op_net,
    clk => clk_net,
    ce => ce_net,
    q => register3_q_net
  );
  relational : entity xil_defaultlib.sysgen_relational_e5d6b5eaca 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    a => input_count_op_net,
    b => con0_op_net,
    op => relational_op_net
  );
  relational1 : entity xil_defaultlib.sysgen_relational_e5d6b5eaca 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    a => input_count_op_net,
    b => con1_op_net,
    op => relational1_op_net
  );
  relational2 : entity xil_defaultlib.sysgen_relational_e5d6b5eaca 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    a => input_count_op_net,
    b => con2_op_net,
    op => relational2_op_net
  );
  relational3 : entity xil_defaultlib.sysgen_relational_e5d6b5eaca 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    a => input_count_op_net,
    b => con3_op_net,
    op => relational3_op_net
  );
  con0 : entity xil_defaultlib.sysgen_constant_b58c3a1535 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => con0_op_net
  );
  con1 : entity xil_defaultlib.sysgen_constant_d3f27a6354 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => con1_op_net
  );
  con2 : entity xil_defaultlib.sysgen_constant_2fa4689d4e 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => con2_op_net
  );
  con3 : entity xil_defaultlib.sysgen_constant_31bab66ba6 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => con3_op_net
  );
  data_choice : entity xil_defaultlib.sysgen_mux_d624c1af44 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    sel => dram_op_net,
    d0 => cast_dout_net,
    d1 => mux1_y_net,
    y => data_choice_y_net
  );
  dout_count : entity xil_defaultlib.sysgen_counter_a9c1c293c2 
  port map (
    clr => '0',
    rst => edge_op_y_net,
    en => logical1_y_net,
    clk => clk_net,
    ce => ce_net,
    op => dout_count_op_net
  );
  dram : entity xil_defaultlib.sysgen_constant_a7b8778750 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => dram_op_net
  );
  input_count : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlcounter_free 
  generic map (
    core_name0 => "rfdc_multi_eight_adcs_2048gsps_mts_c_counter_binary_v12_0_i2",
    op_arith => xlUnsigned,
    op_width => 2
  )
  port map (
    clr => '0',
    rst => edge_op_y_net,
    en => mux1_y_net_x0,
    clk => clk_net,
    ce => ce_net,
    op => input_count_op_net
  );
  we_choice : entity xil_defaultlib.sysgen_mux_4874190f11 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    sel => dram_op_net,
    d0 => mux1_y_net_x0,
    d1 => delay1_q_net,
    y => we_choice_y_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot7_45/ss/basic_ctrl/edge_detect
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x20 is
  port (
    in_x0 : in std_logic_vector( 1-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    out_x0 : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x20;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x20 is 
  signal edge_op_y_net : std_logic_vector( 1-1 downto 0 );
  signal delay1_q_net : std_logic_vector( 1-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal delay_q_net : std_logic_vector( 1-1 downto 0 );
  signal inverter_op_net : std_logic_vector( 1-1 downto 0 );
begin
  out_x0 <= edge_op_y_net;
  delay1_q_net <= in_x0;
  clk_net <= clk_1;
  ce_net <= ce_1;
  delay : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 1
  )
  port map (
    en => '1',
    rst => '1',
    d => delay1_q_net,
    clk => clk_net,
    ce => ce_net,
    q => delay_q_net
  );
  inverter : entity xil_defaultlib.sysgen_inverter_6233897471 
  port map (
    clr => '0',
    ip => delay1_q_net,
    clk => clk_net,
    ce => ce_net,
    op => inverter_op_net
  );
  edge_op : entity xil_defaultlib.sysgen_logical_0f1aa1e2d7 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => inverter_op_net,
    d1 => delay_q_net,
    y => edge_op_y_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot7_45/ss/basic_ctrl
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_basic_ctrl_x9 is
  port (
    din : in std_logic_vector( 32-1 downto 0 );
    we : in std_logic_vector( 1-1 downto 0 );
    trig : in std_logic_vector( 1-1 downto 0 );
    ctrl : in std_logic_vector( 32-1 downto 0 );
    stopi : in std_logic_vector( 1-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    dout : out std_logic_vector( 32-1 downto 0 );
    we_o : out std_logic_vector( 1-1 downto 0 );
    go : out std_logic_vector( 1-1 downto 0 );
    init : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_basic_ctrl_x9;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_basic_ctrl_x9 is 
  signal data_choice_y_net : std_logic_vector( 32-1 downto 0 );
  signal we_choice_y_net : std_logic_vector( 1-1 downto 0 );
  signal register6_q_net : std_logic_vector( 1-1 downto 0 );
  signal edge_op_y_net_x0 : std_logic_vector( 1-1 downto 0 );
  signal cast_dout_net : std_logic_vector( 32-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc7_sync_net : std_logic_vector( 1-1 downto 0 );
  signal edge_op_y_net : std_logic_vector( 1-1 downto 0 );
  signal concatenate_y_net : std_logic_vector( 32-1 downto 0 );
  signal never_op_net : std_logic_vector( 1-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal mux1_y_net : std_logic_vector( 1-1 downto 0 );
  signal delay1_q_net : std_logic_vector( 1-1 downto 0 );
  signal constant_op_net : std_logic_vector( 1-1 downto 0 );
  signal constant1_op_net : std_logic_vector( 1-1 downto 0 );
  signal constant2_op_net : std_logic_vector( 1-1 downto 0 );
  signal enable_y_net : std_logic_vector( 1-1 downto 0 );
  signal delay2_q_net : std_logic_vector( 1-1 downto 0 );
  signal trig_src_y_net : std_logic_vector( 1-1 downto 0 );
  signal delay3_q_net : std_logic_vector( 1-1 downto 0 );
  signal valid_src_y_net : std_logic_vector( 1-1 downto 0 );
  signal inverter_op_net : std_logic_vector( 1-1 downto 0 );
  signal logical_y_net : std_logic_vector( 1-1 downto 0 );
  signal mux2_y_net : std_logic_vector( 1-1 downto 0 );
  signal register1_q_net : std_logic_vector( 1-1 downto 0 );
begin
  dout <= data_choice_y_net;
  we_o <= we_choice_y_net;
  go <= register6_q_net;
  init <= edge_op_y_net_x0;
  cast_dout_net <= din;
  rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc7_sync_net <= we;
  edge_op_y_net <= trig;
  concatenate_y_net <= ctrl;
  never_op_net <= stopi;
  clk_net <= clk_1;
  ce_net <= ce_1;
  dram_munge : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_dram_munge_x10 
  port map (
    din => cast_dout_net,
    we => mux1_y_net,
    init => edge_op_y_net_x0,
    clk_1 => clk_net,
    ce_1 => ce_net,
    dout => data_choice_y_net,
    we_o => we_choice_y_net
  );
  edge_detect : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x20 
  port map (
    in_x0 => delay1_q_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    out_x0 => edge_op_y_net_x0
  );
  constant_x0 : entity xil_defaultlib.sysgen_constant_c95a0b5efb 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => constant_op_net
  );
  constant1 : entity xil_defaultlib.sysgen_constant_c95a0b5efb 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => constant1_op_net
  );
  constant2 : entity xil_defaultlib.sysgen_constant_c95a0b5efb 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => constant2_op_net
  );
  delay1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 1
  )
  port map (
    en => '1',
    rst => '1',
    d => enable_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay1_q_net
  );
  delay2 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 1
  )
  port map (
    en => '1',
    rst => '1',
    d => trig_src_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay2_q_net
  );
  delay3 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 1
  )
  port map (
    en => '1',
    rst => '1',
    d => valid_src_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay3_q_net
  );
  inverter : entity xil_defaultlib.sysgen_inverter_6233897471 
  port map (
    clr => '0',
    ip => edge_op_y_net_x0,
    clk => clk_net,
    ce => ce_net,
    op => inverter_op_net
  );
  logical : entity xil_defaultlib.sysgen_logical_d26e5cda59 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => mux2_y_net,
    d1 => inverter_op_net,
    y => logical_y_net
  );
  mux1 : entity xil_defaultlib.sysgen_mux_4874190f11 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    sel => delay3_q_net,
    d0 => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc7_sync_net,
    d1 => constant2_op_net,
    y => mux1_y_net
  );
  mux2 : entity xil_defaultlib.sysgen_mux_4874190f11 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    sel => delay2_q_net,
    d0 => edge_op_y_net,
    d1 => constant1_op_net,
    y => mux2_y_net
  );
  register1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlregister 
  generic map (
    d_width => 1,
    init_value => b"0"
  )
  port map (
    d => constant_op_net,
    rst => logical_y_net,
    en => edge_op_y_net_x0,
    clk => clk_net,
    ce => ce_net,
    q => register1_q_net
  );
  register6 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlregister 
  generic map (
    d_width => 1,
    init_value => b"0"
  )
  port map (
    d => mux2_y_net,
    rst => edge_op_y_net_x0,
    en => register1_q_net,
    clk => clk_net,
    ce => ce_net,
    q => register6_q_net
  );
  enable : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 0,
    new_msb => 0,
    x_width => 32,
    y_width => 1
  )
  port map (
    x => concatenate_y_net,
    y => enable_y_net
  );
  trig_src : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 1,
    new_msb => 1,
    x_width => 32,
    y_width => 1
  )
  port map (
    x => concatenate_y_net,
    y => trig_src_y_net
  );
  valid_src : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 2,
    new_msb => 2,
    x_width => 32,
    y_width => 1
  )
  port map (
    x => concatenate_y_net,
    y => valid_src_y_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot7_45/ss/bram/calc_add
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_calc_add_x10 is
  port (
    in_x0 : in std_logic_vector( 10-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    out_x0 : out std_logic_vector( 10-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_calc_add_x10;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_calc_add_x10 is 
  signal mux_y_net : std_logic_vector( 10-1 downto 0 );
  signal add_del_q_net : std_logic_vector( 10-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal add_sub_s_net : std_logic_vector( 1-1 downto 0 );
  signal const_op_net : std_logic_vector( 1-1 downto 0 );
  signal lsw_y_net : std_logic_vector( 1-1 downto 0 );
  signal concat_y_net : std_logic_vector( 10-1 downto 0 );
  signal msw_y_net : std_logic_vector( 9-1 downto 0 );
  signal convert_addr_dout_net : std_logic_vector( 10-1 downto 0 );
  signal manipulate_op_net : std_logic_vector( 1-1 downto 0 );
begin
  out_x0 <= mux_y_net;
  add_del_q_net <= in_x0;
  clk_net <= clk_1;
  ce_net <= ce_1;
  add_sub : entity xil_defaultlib.sysgen_addsub_fd3b6c715c 
  port map (
    clr => '0',
    a => const_op_net,
    b => lsw_y_net,
    clk => clk_net,
    ce => ce_net,
    s => add_sub_s_net
  );
  concat : entity xil_defaultlib.sysgen_concat_f4b90dfa16 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    in0 => msw_y_net,
    in1 => add_sub_s_net,
    y => concat_y_net
  );
  const : entity xil_defaultlib.sysgen_constant_a7b8778750 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => const_op_net
  );
  convert_addr : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 10,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 10,
    latency => 0,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => add_del_q_net,
    clk => clk_net,
    ce => ce_net,
    dout => convert_addr_dout_net
  );
  lsw : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 0,
    new_msb => 0,
    x_width => 10,
    y_width => 1
  )
  port map (
    x => convert_addr_dout_net,
    y => lsw_y_net
  );
  manipulate : entity xil_defaultlib.sysgen_constant_a7b8778750 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => manipulate_op_net
  );
  msw : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 1,
    new_msb => 9,
    x_width => 10,
    y_width => 9
  )
  port map (
    x => convert_addr_dout_net,
    y => msw_y_net
  );
  mux : entity xil_defaultlib.sysgen_mux_4417594854 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    sel => manipulate_op_net,
    d0 => convert_addr_dout_net,
    d1 => concat_y_net,
    y => mux_y_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot7_45/ss/bram/munge_in
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_munge_in_x10 is
  port (
    din : in std_logic_vector( 32-1 downto 0 );
    dout : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_munge_in_x10;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_munge_in_x10 is 
  signal reinterpret_out_output_port_net : std_logic_vector( 32-1 downto 0 );
  signal dat_del_q_net : std_logic_vector( 32-1 downto 0 );
begin
  dout <= reinterpret_out_output_port_net;
  dat_del_q_net <= din;
  reinterpret_out : entity xil_defaultlib.sysgen_reinterpret_52bb84f12b 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => dat_del_q_net,
    output_port => reinterpret_out_output_port_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot7_45/ss/bram
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_bram_x10 is
  port (
    addr : in std_logic_vector( 10-1 downto 0 );
    data_in : in std_logic_vector( 32-1 downto 0 );
    we : in std_logic_vector( 1-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_45_ss_bram_addr : out std_logic_vector( 10-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_45_ss_bram_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_45_ss_bram_we : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_bram_x10;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_bram_x10 is 
  signal add_del_q_net : std_logic_vector( 10-1 downto 0 );
  signal dat_del_q_net : std_logic_vector( 32-1 downto 0 );
  signal we_del_q_net : std_logic_vector( 1-1 downto 0 );
  signal convert_addr_dout_net : std_logic_vector( 10-1 downto 0 );
  signal convert_din1_dout_net : std_logic_vector( 32-1 downto 0 );
  signal convert_we_dout_net : std_logic_vector( 1-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal mux_y_net : std_logic_vector( 10-1 downto 0 );
  signal reinterpret_out_output_port_net : std_logic_vector( 32-1 downto 0 );
begin
  add_del_q_net <= addr;
  dat_del_q_net <= data_in;
  we_del_q_net <= we;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_45_ss_bram_addr <= convert_addr_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_45_ss_bram_data_in <= convert_din1_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_45_ss_bram_we <= convert_we_dout_net;
  clk_net <= clk_1;
  ce_net <= ce_1;
  calc_add : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_calc_add_x10 
  port map (
    in_x0 => add_del_q_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    out_x0 => mux_y_net
  );
  munge_in : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_munge_in_x10 
  port map (
    din => dat_del_q_net,
    dout => reinterpret_out_output_port_net
  );
  convert_addr : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 10,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 10,
    latency => 0,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => mux_y_net,
    clk => clk_net,
    ce => ce_net,
    dout => convert_addr_dout_net
  );
  convert_din1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 32,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 32,
    latency => 0,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => reinterpret_out_output_port_net,
    clk => clk_net,
    ce => ce_net,
    dout => convert_din1_dout_net
  );
  convert_we : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 1,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 1,
    latency => 0,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => we_del_q_net,
    clk => clk_net,
    ce => ce_net,
    dout => convert_we_dout_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot7_45/ss/ctrl
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_ctrl_x10 is
  port (
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_45_ss_ctrl_user_data_out : in std_logic_vector( 32-1 downto 0 );
    in_reg : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_ctrl_x10;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_ctrl_x10 is 
  signal reint1_output_port_net : std_logic_vector( 32-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_45_ss_ctrl_user_data_out_net : std_logic_vector( 32-1 downto 0 );
  signal io_delay_q_net : std_logic_vector( 32-1 downto 0 );
  signal slice_reg_y_net : std_logic_vector( 32-1 downto 0 );
begin
  in_reg <= reint1_output_port_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_45_ss_ctrl_user_data_out_net <= rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_45_ss_ctrl_user_data_out;
  io_delay : entity xil_defaultlib.sysgen_delay_34e314c510 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d => rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_45_ss_ctrl_user_data_out_net,
    q => io_delay_q_net
  );
  slice_reg : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 0,
    new_msb => 31,
    x_width => 32,
    y_width => 32
  )
  port map (
    x => io_delay_q_net,
    y => slice_reg_y_net
  );
  reint1 : entity xil_defaultlib.sysgen_reinterpret_52bb84f12b 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => slice_reg_y_net,
    output_port => reint1_output_port_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot7_45/ss/ctrl_combine
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_ctrl_combine_x10 is
  port (
    in1 : in std_logic_vector( 28-1 downto 0 );
    in2 : in std_logic_vector( 1-1 downto 0 );
    in3 : in std_logic_vector( 2-1 downto 0 );
    in4 : in std_logic_vector( 1-1 downto 0 );
    bus_out : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_ctrl_combine_x10;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_ctrl_combine_x10 is 
  signal concatenate_y_net : std_logic_vector( 32-1 downto 0 );
  signal reinterpret4_output_port_net_x0 : std_logic_vector( 28-1 downto 0 );
  signal circ_or_y_net : std_logic_vector( 1-1 downto 0 );
  signal reinterpret2_output_port_net : std_logic_vector( 2-1 downto 0 );
  signal arm_or_y_net : std_logic_vector( 1-1 downto 0 );
  signal reinterpret1_output_port_net : std_logic_vector( 28-1 downto 0 );
  signal reinterpret2_output_port_net_x0 : std_logic_vector( 1-1 downto 0 );
  signal reinterpret3_output_port_net : std_logic_vector( 2-1 downto 0 );
  signal reinterpret4_output_port_net : std_logic_vector( 1-1 downto 0 );
begin
  bus_out <= concatenate_y_net;
  reinterpret4_output_port_net_x0 <= in1;
  circ_or_y_net <= in2;
  reinterpret2_output_port_net <= in3;
  arm_or_y_net <= in4;
  concatenate : entity xil_defaultlib.sysgen_concat_8611e618a5 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    in0 => reinterpret1_output_port_net,
    in1 => reinterpret2_output_port_net_x0,
    in2 => reinterpret3_output_port_net,
    in3 => reinterpret4_output_port_net,
    y => concatenate_y_net
  );
  reinterpret1 : entity xil_defaultlib.sysgen_reinterpret_f7e0b72e82 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => reinterpret4_output_port_net_x0,
    output_port => reinterpret1_output_port_net
  );
  reinterpret2 : entity xil_defaultlib.sysgen_reinterpret_317b92931a 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => circ_or_y_net,
    output_port => reinterpret2_output_port_net_x0
  );
  reinterpret3 : entity xil_defaultlib.sysgen_reinterpret_5dc9f217bd 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => reinterpret2_output_port_net,
    output_port => reinterpret3_output_port_net
  );
  reinterpret4 : entity xil_defaultlib.sysgen_reinterpret_317b92931a 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => arm_or_y_net,
    output_port => reinterpret4_output_port_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot7_45/ss/ctrl_split
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_ctrl_split_x10 is
  port (
    bus_in : in std_logic_vector( 32-1 downto 0 );
    msb_out4 : out std_logic_vector( 28-1 downto 0 );
    out3 : out std_logic_vector( 1-1 downto 0 );
    out2 : out std_logic_vector( 2-1 downto 0 );
    lsb_out1 : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_ctrl_split_x10;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_ctrl_split_x10 is 
  signal reinterpret4_output_port_net : std_logic_vector( 28-1 downto 0 );
  signal slice3_y_net : std_logic_vector( 1-1 downto 0 );
  signal reinterpret2_output_port_net : std_logic_vector( 2-1 downto 0 );
  signal slice1_y_net : std_logic_vector( 1-1 downto 0 );
  signal reint1_output_port_net : std_logic_vector( 32-1 downto 0 );
  signal slice2_y_net : std_logic_vector( 2-1 downto 0 );
  signal slice4_y_net : std_logic_vector( 28-1 downto 0 );
begin
  msb_out4 <= reinterpret4_output_port_net;
  out3 <= slice3_y_net;
  out2 <= reinterpret2_output_port_net;
  lsb_out1 <= slice1_y_net;
  reint1_output_port_net <= bus_in;
  reinterpret2 : entity xil_defaultlib.sysgen_reinterpret_5dc9f217bd 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => slice2_y_net,
    output_port => reinterpret2_output_port_net
  );
  reinterpret4 : entity xil_defaultlib.sysgen_reinterpret_f7e0b72e82 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => slice4_y_net,
    output_port => reinterpret4_output_port_net
  );
  slice1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 0,
    new_msb => 0,
    x_width => 32,
    y_width => 1
  )
  port map (
    x => reint1_output_port_net,
    y => slice1_y_net
  );
  slice2 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 1,
    new_msb => 2,
    x_width => 32,
    y_width => 2
  )
  port map (
    x => reint1_output_port_net,
    y => slice2_y_net
  );
  slice3 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 3,
    new_msb => 3,
    x_width => 32,
    y_width => 1
  )
  port map (
    x => reint1_output_port_net,
    y => slice3_y_net
  );
  slice4 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 4,
    new_msb => 31,
    x_width => 32,
    y_width => 28
  )
  port map (
    x => reint1_output_port_net,
    y => slice4_y_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot7_45/ss/status
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_status_x10 is
  port (
    out_reg : in std_logic_vector( 32-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_45_ss_status_user_data_in : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_status_x10;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_status_x10 is 
  signal concat_y_net : std_logic_vector( 32-1 downto 0 );
  signal cast_gw_dout_net : std_logic_vector( 32-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal io_delay_q_net : std_logic_vector( 32-1 downto 0 );
  signal reint1_output_port_net : std_logic_vector( 32-1 downto 0 );
  signal assert_reg_dout_net : std_logic_vector( 32-1 downto 0 );
begin
  concat_y_net <= out_reg;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_45_ss_status_user_data_in <= cast_gw_dout_net;
  clk_net <= clk_1;
  ce_net <= ce_1;
  io_delay : entity xil_defaultlib.sysgen_delay_34e314c510 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d => reint1_output_port_net,
    q => io_delay_q_net
  );
  cast_gw : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 32,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 32,
    latency => 1,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => io_delay_q_net,
    clk => clk_net,
    ce => ce_net,
    dout => cast_gw_dout_net
  );
  assert_reg : entity xil_defaultlib.xlpassthrough 
  generic map (
    din_width => 32,
    dout_width => 32
  )
  port map (
    din => concat_y_net,
    dout => assert_reg_dout_net
  );
  reint1 : entity xil_defaultlib.sysgen_reinterpret_52bb84f12b 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => assert_reg_dout_net,
    output_port => reint1_output_port_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot7_45/ss
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_ss_x8 is
  port (
    din : in std_logic_vector( 32-1 downto 0 );
    we : in std_logic_vector( 1-1 downto 0 );
    trig : in std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_45_ss_ctrl_user_data_out : in std_logic_vector( 32-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    arm_out : out std_logic_vector( 1-1 downto 0 );
    goto_24733165_we1 : out std_logic_vector( 1-1 downto 0 );
    goto_24733165_we4 : out std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_45_ss_bram_addr : out std_logic_vector( 10-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_45_ss_bram_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_45_ss_bram_we : out std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_45_ss_status_user_data_in : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_ss_x8;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_ss_x8 is 
  signal arm_or_y_net : std_logic_vector( 1-1 downto 0 );
  signal concatenate_y_net : std_logic_vector( 32-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc7_sync_net : std_logic_vector( 1-1 downto 0 );
  signal edge_op_y_net_x0 : std_logic_vector( 1-1 downto 0 );
  signal we_choice_y_net : std_logic_vector( 1-1 downto 0 );
  signal logical6_y_net : std_logic_vector( 1-1 downto 0 );
  signal convert_addr_dout_net : std_logic_vector( 10-1 downto 0 );
  signal convert_din1_dout_net : std_logic_vector( 32-1 downto 0 );
  signal convert_we_dout_net : std_logic_vector( 1-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_45_ss_ctrl_user_data_out_net : std_logic_vector( 32-1 downto 0 );
  signal cast_gw_dout_net : std_logic_vector( 32-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal slice2_y_net : std_logic_vector( 10-1 downto 0 );
  signal delay6_q_net : std_logic_vector( 32-1 downto 0 );
  signal concat_y_net : std_logic_vector( 32-1 downto 0 );
  signal data_choice_y_net : std_logic_vector( 32-1 downto 0 );
  signal register6_q_net : std_logic_vector( 1-1 downto 0 );
  signal never_op_net : std_logic_vector( 1-1 downto 0 );
  signal edge_op_y_net_x1 : std_logic_vector( 1-1 downto 0 );
  signal cast_dout_net : std_logic_vector( 32-1 downto 0 );
  signal concatenate_y_net_x0 : std_logic_vector( 32-1 downto 0 );
  signal add_del_q_net : std_logic_vector( 10-1 downto 0 );
  signal dat_del_q_net : std_logic_vector( 32-1 downto 0 );
  signal we_del_q_net : std_logic_vector( 1-1 downto 0 );
  signal reint1_output_port_net : std_logic_vector( 32-1 downto 0 );
  signal reinterpret4_output_port_net : std_logic_vector( 28-1 downto 0 );
  signal circ_or_y_net : std_logic_vector( 1-1 downto 0 );
  signal reinterpret2_output_port_net : std_logic_vector( 2-1 downto 0 );
  signal slice3_y_net : std_logic_vector( 1-1 downto 0 );
  signal slice1_y_net : std_logic_vector( 1-1 downto 0 );
  signal arm_op_net : std_logic_vector( 1-1 downto 0 );
  signal ri_output_port_net : std_logic_vector( 32-1 downto 0 );
  signal circ_op_net : std_logic_vector( 1-1 downto 0 );
begin
  arm_out <= arm_or_y_net;
  concatenate_y_net <= din;
  rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc7_sync_net <= we;
  edge_op_y_net_x0 <= trig;
  goto_24733165_we1 <= we_choice_y_net;
  goto_24733165_we4 <= logical6_y_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_45_ss_bram_addr <= convert_addr_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_45_ss_bram_data_in <= convert_din1_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_45_ss_bram_we <= convert_we_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_45_ss_ctrl_user_data_out_net <= rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_45_ss_ctrl_user_data_out;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_45_ss_status_user_data_in <= cast_gw_dout_net;
  clk_net <= clk_1;
  ce_net <= ce_1;
  add_gen : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_add_gen_x7 
  port map (
    din => data_choice_y_net,
    we => we_choice_y_net,
    go => register6_q_net,
    cont => never_op_net,
    init => edge_op_y_net_x1,
    clk_1 => clk_net,
    ce_1 => ce_net,
    add => slice2_y_net,
    dout => delay6_q_net,
    we_o => logical6_y_net,
    status => concat_y_net
  );
  basic_ctrl : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_basic_ctrl_x9 
  port map (
    din => cast_dout_net,
    we => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc7_sync_net,
    trig => edge_op_y_net_x0,
    ctrl => concatenate_y_net_x0,
    stopi => never_op_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    dout => data_choice_y_net,
    we_o => we_choice_y_net,
    go => register6_q_net,
    init => edge_op_y_net_x1
  );
  bram : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_bram_x10 
  port map (
    addr => add_del_q_net,
    data_in => dat_del_q_net,
    we => we_del_q_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_45_ss_bram_addr => convert_addr_dout_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_45_ss_bram_data_in => convert_din1_dout_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_45_ss_bram_we => convert_we_dout_net
  );
  ctrl : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_ctrl_x10 
  port map (
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_45_ss_ctrl_user_data_out => rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_45_ss_ctrl_user_data_out_net,
    in_reg => reint1_output_port_net
  );
  ctrl_combine : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_ctrl_combine_x10 
  port map (
    in1 => reinterpret4_output_port_net,
    in2 => circ_or_y_net,
    in3 => reinterpret2_output_port_net,
    in4 => arm_or_y_net,
    bus_out => concatenate_y_net_x0
  );
  ctrl_split : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_ctrl_split_x10 
  port map (
    bus_in => reint1_output_port_net,
    msb_out4 => reinterpret4_output_port_net,
    out3 => slice3_y_net,
    out2 => reinterpret2_output_port_net,
    lsb_out1 => slice1_y_net
  );
  status : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_status_x10 
  port map (
    out_reg => concat_y_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_45_ss_status_user_data_in => cast_gw_dout_net
  );
  add_del : entity xil_defaultlib.sysgen_delay_4e9264ffdf 
  port map (
    clr => '0',
    d => slice2_y_net,
    clk => clk_net,
    ce => ce_net,
    q => add_del_q_net
  );
  arm : entity xil_defaultlib.sysgen_constant_a7b8778750 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => arm_op_net
  );
  arm_or : entity xil_defaultlib.sysgen_logical_d7dc12cf31 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => slice1_y_net,
    d1 => arm_op_net,
    y => arm_or_y_net
  );
  cast : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 32,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 32,
    latency => 0,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => ri_output_port_net,
    clk => clk_net,
    ce => ce_net,
    dout => cast_dout_net
  );
  circ : entity xil_defaultlib.sysgen_constant_a7b8778750 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => circ_op_net
  );
  circ_or : entity xil_defaultlib.sysgen_logical_d7dc12cf31 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => slice3_y_net,
    d1 => circ_op_net,
    y => circ_or_y_net
  );
  dat_del : entity xil_defaultlib.sysgen_delay_5ec362a23c 
  port map (
    clr => '0',
    d => delay6_q_net,
    clk => clk_net,
    ce => ce_net,
    q => dat_del_q_net
  );
  never : entity xil_defaultlib.sysgen_constant_a7b8778750 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => never_op_net
  );
  ri : entity xil_defaultlib.sysgen_reinterpret_52bb84f12b 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => concatenate_y_net,
    output_port => ri_output_port_net
  );
  we_del : entity xil_defaultlib.sysgen_delay_e0740ee3f9 
  port map (
    clr => '0',
    d => logical6_y_net,
    clk => clk_net,
    ce => ce_net,
    q => we_del_q_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot7_45
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_45 is
  port (
    in_d0 : in std_logic_vector( 16-1 downto 0 );
    in_d1 : in std_logic_vector( 16-1 downto 0 );
    we : in std_logic_vector( 1-1 downto 0 );
    trig : in std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_45_ss_ctrl_user_data_out : in std_logic_vector( 32-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    arm_out : out std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_45_ss_bram_addr : out std_logic_vector( 10-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_45_ss_bram_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_45_ss_bram_we : out std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_45_ss_status_user_data_in : out std_logic_vector( 32-1 downto 0 );
    goto_24733165_we1 : out std_logic_vector( 1-1 downto 0 );
    goto_24733165_we4 : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_45;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_45 is 
  signal arm_or_y_net : std_logic_vector( 1-1 downto 0 );
  signal slice49_y_net : std_logic_vector( 16-1 downto 0 );
  signal slice52_y_net : std_logic_vector( 16-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc7_sync_net : std_logic_vector( 1-1 downto 0 );
  signal edge_op_y_net : std_logic_vector( 1-1 downto 0 );
  signal convert_addr_dout_net : std_logic_vector( 10-1 downto 0 );
  signal convert_din1_dout_net : std_logic_vector( 32-1 downto 0 );
  signal convert_we_dout_net : std_logic_vector( 1-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_45_ss_ctrl_user_data_out_net : std_logic_vector( 32-1 downto 0 );
  signal cast_gw_dout_net : std_logic_vector( 32-1 downto 0 );
  signal we_choice_y_net : std_logic_vector( 1-1 downto 0 );
  signal logical6_y_net : std_logic_vector( 1-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal concatenate_y_net : std_logic_vector( 32-1 downto 0 );
  signal assert_d0_dout_net : std_logic_vector( 16-1 downto 0 );
  signal assert_d1_dout_net : std_logic_vector( 16-1 downto 0 );
begin
  arm_out <= arm_or_y_net;
  slice49_y_net <= in_d0;
  slice52_y_net <= in_d1;
  rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc7_sync_net <= we;
  edge_op_y_net <= trig;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_45_ss_bram_addr <= convert_addr_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_45_ss_bram_data_in <= convert_din1_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_45_ss_bram_we <= convert_we_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_45_ss_ctrl_user_data_out_net <= rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_45_ss_ctrl_user_data_out;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_45_ss_status_user_data_in <= cast_gw_dout_net;
  goto_24733165_we1 <= we_choice_y_net;
  goto_24733165_we4 <= logical6_y_net;
  clk_net <= clk_1;
  ce_net <= ce_1;
  buscreate : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_buscreate_x8 
  port map (
    in1 => assert_d0_dout_net,
    in2 => assert_d1_dout_net,
    bus_out => concatenate_y_net
  );
  ss : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_ss_x8 
  port map (
    din => concatenate_y_net,
    we => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc7_sync_net,
    trig => edge_op_y_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_45_ss_ctrl_user_data_out => rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_45_ss_ctrl_user_data_out_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    arm_out => arm_or_y_net,
    goto_24733165_we1 => we_choice_y_net,
    goto_24733165_we4 => logical6_y_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_45_ss_bram_addr => convert_addr_dout_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_45_ss_bram_data_in => convert_din1_dout_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_45_ss_bram_we => convert_we_dout_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_45_ss_status_user_data_in => cast_gw_dout_net
  );
  assert_d0 : entity xil_defaultlib.xlpassthrough 
  generic map (
    din_width => 16,
    dout_width => 16
  )
  port map (
    din => slice49_y_net,
    dout => assert_d0_dout_net
  );
  assert_d1 : entity xil_defaultlib.xlpassthrough 
  generic map (
    din_width => 16,
    dout_width => 16
  )
  port map (
    din => slice52_y_net,
    dout => assert_d1_dout_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot7_67/buscreate
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_buscreate_x10 is
  port (
    in1 : in std_logic_vector( 16-1 downto 0 );
    in2 : in std_logic_vector( 16-1 downto 0 );
    bus_out : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_buscreate_x10;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_buscreate_x10 is 
  signal concatenate_y_net : std_logic_vector( 32-1 downto 0 );
  signal assert_d0_dout_net : std_logic_vector( 16-1 downto 0 );
  signal assert_d1_dout_net : std_logic_vector( 16-1 downto 0 );
  signal reinterpret1_output_port_net : std_logic_vector( 16-1 downto 0 );
  signal reinterpret2_output_port_net : std_logic_vector( 16-1 downto 0 );
begin
  bus_out <= concatenate_y_net;
  assert_d0_dout_net <= in1;
  assert_d1_dout_net <= in2;
  concatenate : entity xil_defaultlib.sysgen_concat_37649e01d1 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    in0 => reinterpret1_output_port_net,
    in1 => reinterpret2_output_port_net,
    y => concatenate_y_net
  );
  reinterpret1 : entity xil_defaultlib.sysgen_reinterpret_03c8cdbbc1 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => assert_d0_dout_net,
    output_port => reinterpret1_output_port_net
  );
  reinterpret2 : entity xil_defaultlib.sysgen_reinterpret_03c8cdbbc1 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => assert_d1_dout_net,
    output_port => reinterpret2_output_port_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot7_67/ss/add_gen/edge_detect
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x21 is
  port (
    in_x0 : in std_logic_vector( 1-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    out_x0 : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x21;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x21 is 
  signal edge_op_y_net : std_logic_vector( 1-1 downto 0 );
  signal slice3_y_net : std_logic_vector( 1-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal delay_q_net : std_logic_vector( 1-1 downto 0 );
  signal inverter_op_net : std_logic_vector( 1-1 downto 0 );
begin
  out_x0 <= edge_op_y_net;
  slice3_y_net <= in_x0;
  clk_net <= clk_1;
  ce_net <= ce_1;
  delay : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 1
  )
  port map (
    en => '1',
    rst => '1',
    d => slice3_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay_q_net
  );
  inverter : entity xil_defaultlib.sysgen_inverter_6233897471 
  port map (
    clr => '0',
    ip => slice3_y_net,
    clk => clk_net,
    ce => ce_net,
    op => inverter_op_net
  );
  edge_op : entity xil_defaultlib.sysgen_logical_9cc14fefba 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => inverter_op_net,
    d1 => delay_q_net,
    y => edge_op_y_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot7_67/ss/add_gen
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_add_gen_x9 is
  port (
    din : in std_logic_vector( 32-1 downto 0 );
    we : in std_logic_vector( 1-1 downto 0 );
    go : in std_logic_vector( 1-1 downto 0 );
    cont : in std_logic_vector( 1-1 downto 0 );
    init : in std_logic_vector( 1-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    add : out std_logic_vector( 10-1 downto 0 );
    dout : out std_logic_vector( 32-1 downto 0 );
    we_o : out std_logic_vector( 1-1 downto 0 );
    status : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_add_gen_x9;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_add_gen_x9 is 
  signal slice2_y_net : std_logic_vector( 10-1 downto 0 );
  signal delay6_q_net : std_logic_vector( 32-1 downto 0 );
  signal logical6_y_net : std_logic_vector( 1-1 downto 0 );
  signal concat_y_net : std_logic_vector( 32-1 downto 0 );
  signal data_choice_y_net : std_logic_vector( 32-1 downto 0 );
  signal we_choice_y_net : std_logic_vector( 1-1 downto 0 );
  signal register6_q_net : std_logic_vector( 1-1 downto 0 );
  signal never_op_net : std_logic_vector( 1-1 downto 0 );
  signal edge_op_y_net : std_logic_vector( 1-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal edge_op_y_net_x0 : std_logic_vector( 1-1 downto 0 );
  signal slice3_y_net : std_logic_vector( 1-1 downto 0 );
  signal shift_op_net : std_logic_vector( 19-1 downto 0 );
  signal inverter_op_net : std_logic_vector( 1-1 downto 0 );
  signal delay1_q_net : std_logic_vector( 12-1 downto 0 );
  signal convert_dout_net : std_logic_vector( 19-1 downto 0 );
  signal register5_q_net : std_logic_vector( 1-1 downto 0 );
  signal delay_q_net : std_logic_vector( 1-1 downto 0 );
  signal delay4_q_net : std_logic_vector( 1-1 downto 0 );
  signal slice1_y_net : std_logic_vector( 12-1 downto 0 );
  signal delay3_q_net : std_logic_vector( 1-1 downto 0 );
  signal inverter1_op_net : std_logic_vector( 1-1 downto 0 );
  signal logical1_y_net : std_logic_vector( 1-1 downto 0 );
  signal logical4_y_net : std_logic_vector( 1-1 downto 0 );
  signal add_gen_op_net : std_logic_vector( 13-1 downto 0 );
begin
  add <= slice2_y_net;
  dout <= delay6_q_net;
  we_o <= logical6_y_net;
  status <= concat_y_net;
  data_choice_y_net <= din;
  we_choice_y_net <= we;
  register6_q_net <= go;
  never_op_net <= cont;
  edge_op_y_net <= init;
  clk_net <= clk_1;
  ce_net <= ce_1;
  edge_detect : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x21 
  port map (
    in_x0 => slice3_y_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    out_x0 => edge_op_y_net_x0
  );
  concat : entity xil_defaultlib.sysgen_concat_fc8edfac0e 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    in0 => shift_op_net,
    in1 => inverter_op_net,
    in2 => delay1_q_net,
    y => concat_y_net
  );
  convert : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 1,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 19,
    latency => 0,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => register5_q_net,
    clk => clk_net,
    ce => ce_net,
    dout => convert_dout_net
  );
  delay : entity xil_defaultlib.sysgen_delay_e0740ee3f9 
  port map (
    clr => '0',
    d => delay4_q_net,
    clk => clk_net,
    ce => ce_net,
    q => delay_q_net
  );
  delay1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 12
  )
  port map (
    en => '1',
    rst => '1',
    d => slice1_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay1_q_net
  );
  delay3 : entity xil_defaultlib.sysgen_delay_e0740ee3f9 
  port map (
    clr => '0',
    d => never_op_net,
    clk => clk_net,
    ce => ce_net,
    q => delay3_q_net
  );
  delay4 : entity xil_defaultlib.sysgen_delay_e0740ee3f9 
  port map (
    clr => '0',
    d => edge_op_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay4_q_net
  );
  delay6 : entity xil_defaultlib.sysgen_delay_5ec362a23c 
  port map (
    clr => '0',
    d => data_choice_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay6_q_net
  );
  inverter : entity xil_defaultlib.sysgen_inverter_918b6bc6d0 
  port map (
    clr => '0',
    ip => register5_q_net,
    clk => clk_net,
    ce => ce_net,
    op => inverter_op_net
  );
  inverter1 : entity xil_defaultlib.sysgen_inverter_6233897471 
  port map (
    clr => '0',
    ip => edge_op_y_net_x0,
    clk => clk_net,
    ce => ce_net,
    op => inverter1_op_net
  );
  logical1 : entity xil_defaultlib.sysgen_logical_2486129911 
  port map (
    clr => '0',
    d0 => we_choice_y_net,
    d1 => register6_q_net,
    clk => clk_net,
    ce => ce_net,
    y => logical1_y_net
  );
  logical4 : entity xil_defaultlib.sysgen_logical_d7dc12cf31 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => delay3_q_net,
    d1 => inverter1_op_net,
    y => logical4_y_net
  );
  logical6 : entity xil_defaultlib.sysgen_logical_c05fefc67b 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => register5_q_net,
    d1 => logical4_y_net,
    d2 => logical1_y_net,
    y => logical6_y_net
  );
  register5 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlregister 
  generic map (
    d_width => 1,
    init_value => b"1"
  )
  port map (
    d => delay3_q_net,
    rst => delay_q_net,
    en => edge_op_y_net_x0,
    clk => clk_net,
    ce => ce_net,
    q => register5_q_net
  );
  shift : entity xil_defaultlib.sysgen_shift_5af4fe0a99 
  port map (
    clr => '0',
    ip => convert_dout_net,
    clk => clk_net,
    ce => ce_net,
    op => shift_op_net
  );
  add_gen : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlcounter_free 
  generic map (
    core_name0 => "rfdc_multi_eight_adcs_2048gsps_mts_c_counter_binary_v12_0_i1",
    op_arith => xlUnsigned,
    op_width => 13
  )
  port map (
    clr => '0',
    rst => delay4_q_net,
    en => logical6_y_net,
    clk => clk_net,
    ce => ce_net,
    op => add_gen_op_net
  );
  slice1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 0,
    new_msb => 11,
    x_width => 13,
    y_width => 12
  )
  port map (
    x => add_gen_op_net,
    y => slice1_y_net
  );
  slice2 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 2,
    new_msb => 11,
    x_width => 13,
    y_width => 10
  )
  port map (
    x => add_gen_op_net,
    y => slice2_y_net
  );
  slice3 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 12,
    new_msb => 12,
    x_width => 13,
    y_width => 1
  )
  port map (
    x => add_gen_op_net,
    y => slice3_y_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot7_67/ss/basic_ctrl/dram_munge
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_dram_munge_x9 is
  port (
    din : in std_logic_vector( 32-1 downto 0 );
    we : in std_logic_vector( 1-1 downto 0 );
    init : in std_logic_vector( 1-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    dout : out std_logic_vector( 32-1 downto 0 );
    we_o : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_dram_munge_x9;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_dram_munge_x9 is 
  signal data_choice_y_net : std_logic_vector( 32-1 downto 0 );
  signal we_choice_y_net : std_logic_vector( 1-1 downto 0 );
  signal cast_dout_net : std_logic_vector( 32-1 downto 0 );
  signal mux1_y_net_x0 : std_logic_vector( 1-1 downto 0 );
  signal edge_op_y_net : std_logic_vector( 1-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal concat_y_net : std_logic_vector( 80-1 downto 0 );
  signal constant_op_net : std_logic_vector( 8-1 downto 0 );
  signal register_q_net : std_logic_vector( 32-1 downto 0 );
  signal register1_q_net : std_logic_vector( 32-1 downto 0 );
  signal concat1_y_net : std_logic_vector( 80-1 downto 0 );
  signal register2_q_net : std_logic_vector( 32-1 downto 0 );
  signal register3_q_net : std_logic_vector( 32-1 downto 0 );
  signal delay_q_net : std_logic_vector( 1-1 downto 0 );
  signal logical_y_net : std_logic_vector( 1-1 downto 0 );
  signal delay1_q_net : std_logic_vector( 1-1 downto 0 );
  signal logical1_y_net : std_logic_vector( 1-1 downto 0 );
  signal relational3_op_net : std_logic_vector( 1-1 downto 0 );
  signal mux1_y_net : std_logic_vector( 80-1 downto 0 );
  signal dout_count_op_net : std_logic_vector( 1-1 downto 0 );
  signal relational_op_net : std_logic_vector( 1-1 downto 0 );
  signal relational1_op_net : std_logic_vector( 1-1 downto 0 );
  signal relational2_op_net : std_logic_vector( 1-1 downto 0 );
  signal input_count_op_net : std_logic_vector( 2-1 downto 0 );
  signal con0_op_net : std_logic_vector( 2-1 downto 0 );
  signal con1_op_net : std_logic_vector( 2-1 downto 0 );
  signal con2_op_net : std_logic_vector( 2-1 downto 0 );
  signal con3_op_net : std_logic_vector( 2-1 downto 0 );
  signal dram_op_net : std_logic_vector( 1-1 downto 0 );
begin
  dout <= data_choice_y_net;
  we_o <= we_choice_y_net;
  cast_dout_net <= din;
  mux1_y_net_x0 <= we;
  edge_op_y_net <= init;
  clk_net <= clk_1;
  ce_net <= ce_1;
  concat : entity xil_defaultlib.sysgen_concat_e7487baac7 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    in0 => constant_op_net,
    in1 => register_q_net,
    in2 => constant_op_net,
    in3 => register1_q_net,
    y => concat_y_net
  );
  concat1 : entity xil_defaultlib.sysgen_concat_e7487baac7 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    in0 => constant_op_net,
    in1 => register2_q_net,
    in2 => constant_op_net,
    in3 => register3_q_net,
    y => concat1_y_net
  );
  constant_x0 : entity xil_defaultlib.sysgen_constant_869e31f04d 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => constant_op_net
  );
  delay : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 1
  )
  port map (
    en => '1',
    rst => '1',
    d => logical_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay_q_net
  );
  delay1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 1
  )
  port map (
    en => '1',
    rst => '1',
    d => logical1_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay1_q_net
  );
  logical : entity xil_defaultlib.sysgen_logical_2486129911 
  port map (
    clr => '0',
    d0 => relational3_op_net,
    d1 => mux1_y_net_x0,
    clk => clk_net,
    ce => ce_net,
    y => logical_y_net
  );
  logical1 : entity xil_defaultlib.sysgen_logical_d7dc12cf31 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => logical_y_net,
    d1 => delay_q_net,
    y => logical1_y_net
  );
  mux1 : entity xil_defaultlib.sysgen_mux_71ee2b1026 
  port map (
    clr => '0',
    sel => dout_count_op_net,
    d0 => concat_y_net,
    d1 => concat1_y_net,
    clk => clk_net,
    ce => ce_net,
    y => mux1_y_net
  );
  register_x0 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlregister 
  generic map (
    d_width => 32,
    init_value => b"00000000000000000000000000000000"
  )
  port map (
    rst => "0",
    d => cast_dout_net,
    en => relational_op_net,
    clk => clk_net,
    ce => ce_net,
    q => register_q_net
  );
  register1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlregister 
  generic map (
    d_width => 32,
    init_value => b"00000000000000000000000000000000"
  )
  port map (
    rst => "0",
    d => cast_dout_net,
    en => relational1_op_net,
    clk => clk_net,
    ce => ce_net,
    q => register1_q_net
  );
  register2 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlregister 
  generic map (
    d_width => 32,
    init_value => b"00000000000000000000000000000000"
  )
  port map (
    rst => "0",
    d => cast_dout_net,
    en => relational2_op_net,
    clk => clk_net,
    ce => ce_net,
    q => register2_q_net
  );
  register3 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlregister 
  generic map (
    d_width => 32,
    init_value => b"00000000000000000000000000000000"
  )
  port map (
    rst => "0",
    d => cast_dout_net,
    en => relational3_op_net,
    clk => clk_net,
    ce => ce_net,
    q => register3_q_net
  );
  relational : entity xil_defaultlib.sysgen_relational_e5d6b5eaca 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    a => input_count_op_net,
    b => con0_op_net,
    op => relational_op_net
  );
  relational1 : entity xil_defaultlib.sysgen_relational_e5d6b5eaca 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    a => input_count_op_net,
    b => con1_op_net,
    op => relational1_op_net
  );
  relational2 : entity xil_defaultlib.sysgen_relational_e5d6b5eaca 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    a => input_count_op_net,
    b => con2_op_net,
    op => relational2_op_net
  );
  relational3 : entity xil_defaultlib.sysgen_relational_e5d6b5eaca 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    a => input_count_op_net,
    b => con3_op_net,
    op => relational3_op_net
  );
  con0 : entity xil_defaultlib.sysgen_constant_b58c3a1535 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => con0_op_net
  );
  con1 : entity xil_defaultlib.sysgen_constant_d3f27a6354 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => con1_op_net
  );
  con2 : entity xil_defaultlib.sysgen_constant_2fa4689d4e 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => con2_op_net
  );
  con3 : entity xil_defaultlib.sysgen_constant_31bab66ba6 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => con3_op_net
  );
  data_choice : entity xil_defaultlib.sysgen_mux_d624c1af44 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    sel => dram_op_net,
    d0 => cast_dout_net,
    d1 => mux1_y_net,
    y => data_choice_y_net
  );
  dout_count : entity xil_defaultlib.sysgen_counter_a9c1c293c2 
  port map (
    clr => '0',
    rst => edge_op_y_net,
    en => logical1_y_net,
    clk => clk_net,
    ce => ce_net,
    op => dout_count_op_net
  );
  dram : entity xil_defaultlib.sysgen_constant_a7b8778750 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => dram_op_net
  );
  input_count : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlcounter_free 
  generic map (
    core_name0 => "rfdc_multi_eight_adcs_2048gsps_mts_c_counter_binary_v12_0_i2",
    op_arith => xlUnsigned,
    op_width => 2
  )
  port map (
    clr => '0',
    rst => edge_op_y_net,
    en => mux1_y_net_x0,
    clk => clk_net,
    ce => ce_net,
    op => input_count_op_net
  );
  we_choice : entity xil_defaultlib.sysgen_mux_4874190f11 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    sel => dram_op_net,
    d0 => mux1_y_net_x0,
    d1 => delay1_q_net,
    y => we_choice_y_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot7_67/ss/basic_ctrl/edge_detect
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x19 is
  port (
    in_x0 : in std_logic_vector( 1-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    out_x0 : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x19;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x19 is 
  signal edge_op_y_net : std_logic_vector( 1-1 downto 0 );
  signal delay1_q_net : std_logic_vector( 1-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal delay_q_net : std_logic_vector( 1-1 downto 0 );
  signal inverter_op_net : std_logic_vector( 1-1 downto 0 );
begin
  out_x0 <= edge_op_y_net;
  delay1_q_net <= in_x0;
  clk_net <= clk_1;
  ce_net <= ce_1;
  delay : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 1
  )
  port map (
    en => '1',
    rst => '1',
    d => delay1_q_net,
    clk => clk_net,
    ce => ce_net,
    q => delay_q_net
  );
  inverter : entity xil_defaultlib.sysgen_inverter_6233897471 
  port map (
    clr => '0',
    ip => delay1_q_net,
    clk => clk_net,
    ce => ce_net,
    op => inverter_op_net
  );
  edge_op : entity xil_defaultlib.sysgen_logical_0f1aa1e2d7 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => inverter_op_net,
    d1 => delay_q_net,
    y => edge_op_y_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot7_67/ss/basic_ctrl
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_basic_ctrl_x10 is
  port (
    din : in std_logic_vector( 32-1 downto 0 );
    we : in std_logic_vector( 1-1 downto 0 );
    trig : in std_logic_vector( 1-1 downto 0 );
    ctrl : in std_logic_vector( 32-1 downto 0 );
    stopi : in std_logic_vector( 1-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    dout : out std_logic_vector( 32-1 downto 0 );
    we_o : out std_logic_vector( 1-1 downto 0 );
    go : out std_logic_vector( 1-1 downto 0 );
    init : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_basic_ctrl_x10;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_basic_ctrl_x10 is 
  signal data_choice_y_net : std_logic_vector( 32-1 downto 0 );
  signal we_choice_y_net : std_logic_vector( 1-1 downto 0 );
  signal register6_q_net : std_logic_vector( 1-1 downto 0 );
  signal edge_op_y_net_x0 : std_logic_vector( 1-1 downto 0 );
  signal cast_dout_net : std_logic_vector( 32-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc7_sync_net : std_logic_vector( 1-1 downto 0 );
  signal edge_op_y_net : std_logic_vector( 1-1 downto 0 );
  signal concatenate_y_net : std_logic_vector( 32-1 downto 0 );
  signal never_op_net : std_logic_vector( 1-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal mux1_y_net : std_logic_vector( 1-1 downto 0 );
  signal delay1_q_net : std_logic_vector( 1-1 downto 0 );
  signal constant_op_net : std_logic_vector( 1-1 downto 0 );
  signal constant1_op_net : std_logic_vector( 1-1 downto 0 );
  signal constant2_op_net : std_logic_vector( 1-1 downto 0 );
  signal enable_y_net : std_logic_vector( 1-1 downto 0 );
  signal delay2_q_net : std_logic_vector( 1-1 downto 0 );
  signal trig_src_y_net : std_logic_vector( 1-1 downto 0 );
  signal delay3_q_net : std_logic_vector( 1-1 downto 0 );
  signal valid_src_y_net : std_logic_vector( 1-1 downto 0 );
  signal inverter_op_net : std_logic_vector( 1-1 downto 0 );
  signal logical_y_net : std_logic_vector( 1-1 downto 0 );
  signal mux2_y_net : std_logic_vector( 1-1 downto 0 );
  signal register1_q_net : std_logic_vector( 1-1 downto 0 );
begin
  dout <= data_choice_y_net;
  we_o <= we_choice_y_net;
  go <= register6_q_net;
  init <= edge_op_y_net_x0;
  cast_dout_net <= din;
  rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc7_sync_net <= we;
  edge_op_y_net <= trig;
  concatenate_y_net <= ctrl;
  never_op_net <= stopi;
  clk_net <= clk_1;
  ce_net <= ce_1;
  dram_munge : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_dram_munge_x9 
  port map (
    din => cast_dout_net,
    we => mux1_y_net,
    init => edge_op_y_net_x0,
    clk_1 => clk_net,
    ce_1 => ce_net,
    dout => data_choice_y_net,
    we_o => we_choice_y_net
  );
  edge_detect : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x19 
  port map (
    in_x0 => delay1_q_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    out_x0 => edge_op_y_net_x0
  );
  constant_x0 : entity xil_defaultlib.sysgen_constant_c95a0b5efb 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => constant_op_net
  );
  constant1 : entity xil_defaultlib.sysgen_constant_c95a0b5efb 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => constant1_op_net
  );
  constant2 : entity xil_defaultlib.sysgen_constant_c95a0b5efb 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => constant2_op_net
  );
  delay1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 1
  )
  port map (
    en => '1',
    rst => '1',
    d => enable_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay1_q_net
  );
  delay2 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 1
  )
  port map (
    en => '1',
    rst => '1',
    d => trig_src_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay2_q_net
  );
  delay3 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xldelay 
  generic map (
    latency => 1,
    reg_retiming => 0,
    reset => 0,
    width => 1
  )
  port map (
    en => '1',
    rst => '1',
    d => valid_src_y_net,
    clk => clk_net,
    ce => ce_net,
    q => delay3_q_net
  );
  inverter : entity xil_defaultlib.sysgen_inverter_6233897471 
  port map (
    clr => '0',
    ip => edge_op_y_net_x0,
    clk => clk_net,
    ce => ce_net,
    op => inverter_op_net
  );
  logical : entity xil_defaultlib.sysgen_logical_d26e5cda59 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => mux2_y_net,
    d1 => inverter_op_net,
    y => logical_y_net
  );
  mux1 : entity xil_defaultlib.sysgen_mux_4874190f11 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    sel => delay3_q_net,
    d0 => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc7_sync_net,
    d1 => constant2_op_net,
    y => mux1_y_net
  );
  mux2 : entity xil_defaultlib.sysgen_mux_4874190f11 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    sel => delay2_q_net,
    d0 => edge_op_y_net,
    d1 => constant1_op_net,
    y => mux2_y_net
  );
  register1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlregister 
  generic map (
    d_width => 1,
    init_value => b"0"
  )
  port map (
    d => constant_op_net,
    rst => logical_y_net,
    en => edge_op_y_net_x0,
    clk => clk_net,
    ce => ce_net,
    q => register1_q_net
  );
  register6 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlregister 
  generic map (
    d_width => 1,
    init_value => b"0"
  )
  port map (
    d => mux2_y_net,
    rst => edge_op_y_net_x0,
    en => register1_q_net,
    clk => clk_net,
    ce => ce_net,
    q => register6_q_net
  );
  enable : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 0,
    new_msb => 0,
    x_width => 32,
    y_width => 1
  )
  port map (
    x => concatenate_y_net,
    y => enable_y_net
  );
  trig_src : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 1,
    new_msb => 1,
    x_width => 32,
    y_width => 1
  )
  port map (
    x => concatenate_y_net,
    y => trig_src_y_net
  );
  valid_src : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 2,
    new_msb => 2,
    x_width => 32,
    y_width => 1
  )
  port map (
    x => concatenate_y_net,
    y => valid_src_y_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot7_67/ss/bram/calc_add
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_calc_add_x9 is
  port (
    in_x0 : in std_logic_vector( 10-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    out_x0 : out std_logic_vector( 10-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_calc_add_x9;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_calc_add_x9 is 
  signal mux_y_net : std_logic_vector( 10-1 downto 0 );
  signal add_del_q_net : std_logic_vector( 10-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal add_sub_s_net : std_logic_vector( 1-1 downto 0 );
  signal const_op_net : std_logic_vector( 1-1 downto 0 );
  signal lsw_y_net : std_logic_vector( 1-1 downto 0 );
  signal concat_y_net : std_logic_vector( 10-1 downto 0 );
  signal msw_y_net : std_logic_vector( 9-1 downto 0 );
  signal convert_addr_dout_net : std_logic_vector( 10-1 downto 0 );
  signal manipulate_op_net : std_logic_vector( 1-1 downto 0 );
begin
  out_x0 <= mux_y_net;
  add_del_q_net <= in_x0;
  clk_net <= clk_1;
  ce_net <= ce_1;
  add_sub : entity xil_defaultlib.sysgen_addsub_fd3b6c715c 
  port map (
    clr => '0',
    a => const_op_net,
    b => lsw_y_net,
    clk => clk_net,
    ce => ce_net,
    s => add_sub_s_net
  );
  concat : entity xil_defaultlib.sysgen_concat_f4b90dfa16 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    in0 => msw_y_net,
    in1 => add_sub_s_net,
    y => concat_y_net
  );
  const : entity xil_defaultlib.sysgen_constant_a7b8778750 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => const_op_net
  );
  convert_addr : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 10,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 10,
    latency => 0,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => add_del_q_net,
    clk => clk_net,
    ce => ce_net,
    dout => convert_addr_dout_net
  );
  lsw : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 0,
    new_msb => 0,
    x_width => 10,
    y_width => 1
  )
  port map (
    x => convert_addr_dout_net,
    y => lsw_y_net
  );
  manipulate : entity xil_defaultlib.sysgen_constant_a7b8778750 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => manipulate_op_net
  );
  msw : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 1,
    new_msb => 9,
    x_width => 10,
    y_width => 9
  )
  port map (
    x => convert_addr_dout_net,
    y => msw_y_net
  );
  mux : entity xil_defaultlib.sysgen_mux_4417594854 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    sel => manipulate_op_net,
    d0 => convert_addr_dout_net,
    d1 => concat_y_net,
    y => mux_y_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot7_67/ss/bram/munge_in
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_munge_in_x9 is
  port (
    din : in std_logic_vector( 32-1 downto 0 );
    dout : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_munge_in_x9;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_munge_in_x9 is 
  signal reinterpret_out_output_port_net : std_logic_vector( 32-1 downto 0 );
  signal dat_del_q_net : std_logic_vector( 32-1 downto 0 );
begin
  dout <= reinterpret_out_output_port_net;
  dat_del_q_net <= din;
  reinterpret_out : entity xil_defaultlib.sysgen_reinterpret_52bb84f12b 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => dat_del_q_net,
    output_port => reinterpret_out_output_port_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot7_67/ss/bram
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_bram_x9 is
  port (
    addr : in std_logic_vector( 10-1 downto 0 );
    data_in : in std_logic_vector( 32-1 downto 0 );
    we : in std_logic_vector( 1-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_67_ss_bram_addr : out std_logic_vector( 10-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_67_ss_bram_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_67_ss_bram_we : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_bram_x9;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_bram_x9 is 
  signal add_del_q_net : std_logic_vector( 10-1 downto 0 );
  signal dat_del_q_net : std_logic_vector( 32-1 downto 0 );
  signal we_del_q_net : std_logic_vector( 1-1 downto 0 );
  signal convert_addr_dout_net : std_logic_vector( 10-1 downto 0 );
  signal convert_din1_dout_net : std_logic_vector( 32-1 downto 0 );
  signal convert_we_dout_net : std_logic_vector( 1-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal mux_y_net : std_logic_vector( 10-1 downto 0 );
  signal reinterpret_out_output_port_net : std_logic_vector( 32-1 downto 0 );
begin
  add_del_q_net <= addr;
  dat_del_q_net <= data_in;
  we_del_q_net <= we;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_67_ss_bram_addr <= convert_addr_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_67_ss_bram_data_in <= convert_din1_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_67_ss_bram_we <= convert_we_dout_net;
  clk_net <= clk_1;
  ce_net <= ce_1;
  calc_add : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_calc_add_x9 
  port map (
    in_x0 => add_del_q_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    out_x0 => mux_y_net
  );
  munge_in : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_munge_in_x9 
  port map (
    din => dat_del_q_net,
    dout => reinterpret_out_output_port_net
  );
  convert_addr : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 10,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 10,
    latency => 0,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => mux_y_net,
    clk => clk_net,
    ce => ce_net,
    dout => convert_addr_dout_net
  );
  convert_din1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 32,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 32,
    latency => 0,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => reinterpret_out_output_port_net,
    clk => clk_net,
    ce => ce_net,
    dout => convert_din1_dout_net
  );
  convert_we : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 1,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 1,
    latency => 0,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => we_del_q_net,
    clk => clk_net,
    ce => ce_net,
    dout => convert_we_dout_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot7_67/ss/ctrl
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_ctrl_x9 is
  port (
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_67_ss_ctrl_user_data_out : in std_logic_vector( 32-1 downto 0 );
    in_reg : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_ctrl_x9;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_ctrl_x9 is 
  signal reint1_output_port_net : std_logic_vector( 32-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_67_ss_ctrl_user_data_out_net : std_logic_vector( 32-1 downto 0 );
  signal io_delay_q_net : std_logic_vector( 32-1 downto 0 );
  signal slice_reg_y_net : std_logic_vector( 32-1 downto 0 );
begin
  in_reg <= reint1_output_port_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_67_ss_ctrl_user_data_out_net <= rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_67_ss_ctrl_user_data_out;
  io_delay : entity xil_defaultlib.sysgen_delay_34e314c510 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d => rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_67_ss_ctrl_user_data_out_net,
    q => io_delay_q_net
  );
  slice_reg : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 0,
    new_msb => 31,
    x_width => 32,
    y_width => 32
  )
  port map (
    x => io_delay_q_net,
    y => slice_reg_y_net
  );
  reint1 : entity xil_defaultlib.sysgen_reinterpret_52bb84f12b 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => slice_reg_y_net,
    output_port => reint1_output_port_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot7_67/ss/ctrl_combine
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_ctrl_combine_x9 is
  port (
    in1 : in std_logic_vector( 28-1 downto 0 );
    in2 : in std_logic_vector( 1-1 downto 0 );
    in3 : in std_logic_vector( 2-1 downto 0 );
    in4 : in std_logic_vector( 1-1 downto 0 );
    bus_out : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_ctrl_combine_x9;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_ctrl_combine_x9 is 
  signal concatenate_y_net : std_logic_vector( 32-1 downto 0 );
  signal reinterpret4_output_port_net_x0 : std_logic_vector( 28-1 downto 0 );
  signal circ_or_y_net : std_logic_vector( 1-1 downto 0 );
  signal reinterpret2_output_port_net : std_logic_vector( 2-1 downto 0 );
  signal arm_or_y_net : std_logic_vector( 1-1 downto 0 );
  signal reinterpret1_output_port_net : std_logic_vector( 28-1 downto 0 );
  signal reinterpret2_output_port_net_x0 : std_logic_vector( 1-1 downto 0 );
  signal reinterpret3_output_port_net : std_logic_vector( 2-1 downto 0 );
  signal reinterpret4_output_port_net : std_logic_vector( 1-1 downto 0 );
begin
  bus_out <= concatenate_y_net;
  reinterpret4_output_port_net_x0 <= in1;
  circ_or_y_net <= in2;
  reinterpret2_output_port_net <= in3;
  arm_or_y_net <= in4;
  concatenate : entity xil_defaultlib.sysgen_concat_8611e618a5 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    in0 => reinterpret1_output_port_net,
    in1 => reinterpret2_output_port_net_x0,
    in2 => reinterpret3_output_port_net,
    in3 => reinterpret4_output_port_net,
    y => concatenate_y_net
  );
  reinterpret1 : entity xil_defaultlib.sysgen_reinterpret_f7e0b72e82 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => reinterpret4_output_port_net_x0,
    output_port => reinterpret1_output_port_net
  );
  reinterpret2 : entity xil_defaultlib.sysgen_reinterpret_317b92931a 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => circ_or_y_net,
    output_port => reinterpret2_output_port_net_x0
  );
  reinterpret3 : entity xil_defaultlib.sysgen_reinterpret_5dc9f217bd 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => reinterpret2_output_port_net,
    output_port => reinterpret3_output_port_net
  );
  reinterpret4 : entity xil_defaultlib.sysgen_reinterpret_317b92931a 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => arm_or_y_net,
    output_port => reinterpret4_output_port_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot7_67/ss/ctrl_split
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_ctrl_split_x9 is
  port (
    bus_in : in std_logic_vector( 32-1 downto 0 );
    msb_out4 : out std_logic_vector( 28-1 downto 0 );
    out3 : out std_logic_vector( 1-1 downto 0 );
    out2 : out std_logic_vector( 2-1 downto 0 );
    lsb_out1 : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_ctrl_split_x9;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_ctrl_split_x9 is 
  signal reinterpret4_output_port_net : std_logic_vector( 28-1 downto 0 );
  signal slice3_y_net : std_logic_vector( 1-1 downto 0 );
  signal reinterpret2_output_port_net : std_logic_vector( 2-1 downto 0 );
  signal slice1_y_net : std_logic_vector( 1-1 downto 0 );
  signal reint1_output_port_net : std_logic_vector( 32-1 downto 0 );
  signal slice2_y_net : std_logic_vector( 2-1 downto 0 );
  signal slice4_y_net : std_logic_vector( 28-1 downto 0 );
begin
  msb_out4 <= reinterpret4_output_port_net;
  out3 <= slice3_y_net;
  out2 <= reinterpret2_output_port_net;
  lsb_out1 <= slice1_y_net;
  reint1_output_port_net <= bus_in;
  reinterpret2 : entity xil_defaultlib.sysgen_reinterpret_5dc9f217bd 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => slice2_y_net,
    output_port => reinterpret2_output_port_net
  );
  reinterpret4 : entity xil_defaultlib.sysgen_reinterpret_f7e0b72e82 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => slice4_y_net,
    output_port => reinterpret4_output_port_net
  );
  slice1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 0,
    new_msb => 0,
    x_width => 32,
    y_width => 1
  )
  port map (
    x => reint1_output_port_net,
    y => slice1_y_net
  );
  slice2 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 1,
    new_msb => 2,
    x_width => 32,
    y_width => 2
  )
  port map (
    x => reint1_output_port_net,
    y => slice2_y_net
  );
  slice3 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 3,
    new_msb => 3,
    x_width => 32,
    y_width => 1
  )
  port map (
    x => reint1_output_port_net,
    y => slice3_y_net
  );
  slice4 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 4,
    new_msb => 31,
    x_width => 32,
    y_width => 28
  )
  port map (
    x => reint1_output_port_net,
    y => slice4_y_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot7_67/ss/status
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_status_x9 is
  port (
    out_reg : in std_logic_vector( 32-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_67_ss_status_user_data_in : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_status_x9;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_status_x9 is 
  signal concat_y_net : std_logic_vector( 32-1 downto 0 );
  signal cast_gw_dout_net : std_logic_vector( 32-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal io_delay_q_net : std_logic_vector( 32-1 downto 0 );
  signal reint1_output_port_net : std_logic_vector( 32-1 downto 0 );
  signal assert_reg_dout_net : std_logic_vector( 32-1 downto 0 );
begin
  concat_y_net <= out_reg;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_67_ss_status_user_data_in <= cast_gw_dout_net;
  clk_net <= clk_1;
  ce_net <= ce_1;
  io_delay : entity xil_defaultlib.sysgen_delay_34e314c510 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d => reint1_output_port_net,
    q => io_delay_q_net
  );
  cast_gw : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 32,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 32,
    latency => 1,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => io_delay_q_net,
    clk => clk_net,
    ce => ce_net,
    dout => cast_gw_dout_net
  );
  assert_reg : entity xil_defaultlib.xlpassthrough 
  generic map (
    din_width => 32,
    dout_width => 32
  )
  port map (
    din => concat_y_net,
    dout => assert_reg_dout_net
  );
  reint1 : entity xil_defaultlib.sysgen_reinterpret_52bb84f12b 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => assert_reg_dout_net,
    output_port => reint1_output_port_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot7_67/ss
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_ss_x10 is
  port (
    din : in std_logic_vector( 32-1 downto 0 );
    we : in std_logic_vector( 1-1 downto 0 );
    trig : in std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_67_ss_ctrl_user_data_out : in std_logic_vector( 32-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    arm_out : out std_logic_vector( 1-1 downto 0 );
    goto_26639789_we1 : out std_logic_vector( 1-1 downto 0 );
    goto_26639789_we4 : out std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_67_ss_bram_addr : out std_logic_vector( 10-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_67_ss_bram_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_67_ss_bram_we : out std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_67_ss_status_user_data_in : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_ss_x10;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_ss_x10 is 
  signal arm_or_y_net : std_logic_vector( 1-1 downto 0 );
  signal concatenate_y_net : std_logic_vector( 32-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc7_sync_net : std_logic_vector( 1-1 downto 0 );
  signal edge_op_y_net_x0 : std_logic_vector( 1-1 downto 0 );
  signal we_choice_y_net : std_logic_vector( 1-1 downto 0 );
  signal logical6_y_net : std_logic_vector( 1-1 downto 0 );
  signal convert_addr_dout_net : std_logic_vector( 10-1 downto 0 );
  signal convert_din1_dout_net : std_logic_vector( 32-1 downto 0 );
  signal convert_we_dout_net : std_logic_vector( 1-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_67_ss_ctrl_user_data_out_net : std_logic_vector( 32-1 downto 0 );
  signal cast_gw_dout_net : std_logic_vector( 32-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal slice2_y_net : std_logic_vector( 10-1 downto 0 );
  signal delay6_q_net : std_logic_vector( 32-1 downto 0 );
  signal concat_y_net : std_logic_vector( 32-1 downto 0 );
  signal data_choice_y_net : std_logic_vector( 32-1 downto 0 );
  signal register6_q_net : std_logic_vector( 1-1 downto 0 );
  signal never_op_net : std_logic_vector( 1-1 downto 0 );
  signal edge_op_y_net_x1 : std_logic_vector( 1-1 downto 0 );
  signal cast_dout_net : std_logic_vector( 32-1 downto 0 );
  signal concatenate_y_net_x0 : std_logic_vector( 32-1 downto 0 );
  signal add_del_q_net : std_logic_vector( 10-1 downto 0 );
  signal dat_del_q_net : std_logic_vector( 32-1 downto 0 );
  signal we_del_q_net : std_logic_vector( 1-1 downto 0 );
  signal reint1_output_port_net : std_logic_vector( 32-1 downto 0 );
  signal reinterpret4_output_port_net : std_logic_vector( 28-1 downto 0 );
  signal circ_or_y_net : std_logic_vector( 1-1 downto 0 );
  signal reinterpret2_output_port_net : std_logic_vector( 2-1 downto 0 );
  signal slice3_y_net : std_logic_vector( 1-1 downto 0 );
  signal slice1_y_net : std_logic_vector( 1-1 downto 0 );
  signal arm_op_net : std_logic_vector( 1-1 downto 0 );
  signal ri_output_port_net : std_logic_vector( 32-1 downto 0 );
  signal circ_op_net : std_logic_vector( 1-1 downto 0 );
begin
  arm_out <= arm_or_y_net;
  concatenate_y_net <= din;
  rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc7_sync_net <= we;
  edge_op_y_net_x0 <= trig;
  goto_26639789_we1 <= we_choice_y_net;
  goto_26639789_we4 <= logical6_y_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_67_ss_bram_addr <= convert_addr_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_67_ss_bram_data_in <= convert_din1_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_67_ss_bram_we <= convert_we_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_67_ss_ctrl_user_data_out_net <= rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_67_ss_ctrl_user_data_out;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_67_ss_status_user_data_in <= cast_gw_dout_net;
  clk_net <= clk_1;
  ce_net <= ce_1;
  add_gen : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_add_gen_x9 
  port map (
    din => data_choice_y_net,
    we => we_choice_y_net,
    go => register6_q_net,
    cont => never_op_net,
    init => edge_op_y_net_x1,
    clk_1 => clk_net,
    ce_1 => ce_net,
    add => slice2_y_net,
    dout => delay6_q_net,
    we_o => logical6_y_net,
    status => concat_y_net
  );
  basic_ctrl : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_basic_ctrl_x10 
  port map (
    din => cast_dout_net,
    we => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc7_sync_net,
    trig => edge_op_y_net_x0,
    ctrl => concatenate_y_net_x0,
    stopi => never_op_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    dout => data_choice_y_net,
    we_o => we_choice_y_net,
    go => register6_q_net,
    init => edge_op_y_net_x1
  );
  bram : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_bram_x9 
  port map (
    addr => add_del_q_net,
    data_in => dat_del_q_net,
    we => we_del_q_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_67_ss_bram_addr => convert_addr_dout_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_67_ss_bram_data_in => convert_din1_dout_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_67_ss_bram_we => convert_we_dout_net
  );
  ctrl : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_ctrl_x9 
  port map (
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_67_ss_ctrl_user_data_out => rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_67_ss_ctrl_user_data_out_net,
    in_reg => reint1_output_port_net
  );
  ctrl_combine : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_ctrl_combine_x9 
  port map (
    in1 => reinterpret4_output_port_net,
    in2 => circ_or_y_net,
    in3 => reinterpret2_output_port_net,
    in4 => arm_or_y_net,
    bus_out => concatenate_y_net_x0
  );
  ctrl_split : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_ctrl_split_x9 
  port map (
    bus_in => reint1_output_port_net,
    msb_out4 => reinterpret4_output_port_net,
    out3 => slice3_y_net,
    out2 => reinterpret2_output_port_net,
    lsb_out1 => slice1_y_net
  );
  status : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_status_x9 
  port map (
    out_reg => concat_y_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_67_ss_status_user_data_in => cast_gw_dout_net
  );
  add_del : entity xil_defaultlib.sysgen_delay_4e9264ffdf 
  port map (
    clr => '0',
    d => slice2_y_net,
    clk => clk_net,
    ce => ce_net,
    q => add_del_q_net
  );
  arm : entity xil_defaultlib.sysgen_constant_a7b8778750 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => arm_op_net
  );
  arm_or : entity xil_defaultlib.sysgen_logical_d7dc12cf31 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => slice1_y_net,
    d1 => arm_op_net,
    y => arm_or_y_net
  );
  cast : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 32,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 32,
    latency => 0,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => ri_output_port_net,
    clk => clk_net,
    ce => ce_net,
    dout => cast_dout_net
  );
  circ : entity xil_defaultlib.sysgen_constant_a7b8778750 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => circ_op_net
  );
  circ_or : entity xil_defaultlib.sysgen_logical_d7dc12cf31 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d0 => slice3_y_net,
    d1 => circ_op_net,
    y => circ_or_y_net
  );
  dat_del : entity xil_defaultlib.sysgen_delay_5ec362a23c 
  port map (
    clr => '0',
    d => delay6_q_net,
    clk => clk_net,
    ce => ce_net,
    q => dat_del_q_net
  );
  never : entity xil_defaultlib.sysgen_constant_a7b8778750 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    op => never_op_net
  );
  ri : entity xil_defaultlib.sysgen_reinterpret_52bb84f12b 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => concatenate_y_net,
    output_port => ri_output_port_net
  );
  we_del : entity xil_defaultlib.sysgen_delay_e0740ee3f9 
  port map (
    clr => '0',
    d => logical6_y_net,
    clk => clk_net,
    ce => ce_net,
    q => we_del_q_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/snapshot7_67
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_67 is
  port (
    in_d0 : in std_logic_vector( 16-1 downto 0 );
    in_d1 : in std_logic_vector( 16-1 downto 0 );
    we : in std_logic_vector( 1-1 downto 0 );
    trig : in std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_67_ss_ctrl_user_data_out : in std_logic_vector( 32-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    arm_out : out std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_67_ss_bram_addr : out std_logic_vector( 10-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_67_ss_bram_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_67_ss_bram_we : out std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_67_ss_status_user_data_in : out std_logic_vector( 32-1 downto 0 );
    goto_26639789_we1 : out std_logic_vector( 1-1 downto 0 );
    goto_26639789_we4 : out std_logic_vector( 1-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_67;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_67 is 
  signal arm_or_y_net : std_logic_vector( 1-1 downto 0 );
  signal slice50_y_net : std_logic_vector( 16-1 downto 0 );
  signal slice51_y_net : std_logic_vector( 16-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc7_sync_net : std_logic_vector( 1-1 downto 0 );
  signal edge_op_y_net : std_logic_vector( 1-1 downto 0 );
  signal convert_addr_dout_net : std_logic_vector( 10-1 downto 0 );
  signal convert_din1_dout_net : std_logic_vector( 32-1 downto 0 );
  signal convert_we_dout_net : std_logic_vector( 1-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_67_ss_ctrl_user_data_out_net : std_logic_vector( 32-1 downto 0 );
  signal cast_gw_dout_net : std_logic_vector( 32-1 downto 0 );
  signal we_choice_y_net : std_logic_vector( 1-1 downto 0 );
  signal logical6_y_net : std_logic_vector( 1-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal concatenate_y_net : std_logic_vector( 32-1 downto 0 );
  signal assert_d0_dout_net : std_logic_vector( 16-1 downto 0 );
  signal assert_d1_dout_net : std_logic_vector( 16-1 downto 0 );
begin
  arm_out <= arm_or_y_net;
  slice50_y_net <= in_d0;
  slice51_y_net <= in_d1;
  rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc7_sync_net <= we;
  edge_op_y_net <= trig;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_67_ss_bram_addr <= convert_addr_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_67_ss_bram_data_in <= convert_din1_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_67_ss_bram_we <= convert_we_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_67_ss_ctrl_user_data_out_net <= rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_67_ss_ctrl_user_data_out;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_67_ss_status_user_data_in <= cast_gw_dout_net;
  goto_26639789_we1 <= we_choice_y_net;
  goto_26639789_we4 <= logical6_y_net;
  clk_net <= clk_1;
  ce_net <= ce_1;
  buscreate : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_buscreate_x10 
  port map (
    in1 => assert_d0_dout_net,
    in2 => assert_d1_dout_net,
    bus_out => concatenate_y_net
  );
  ss : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_ss_x10 
  port map (
    din => concatenate_y_net,
    we => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc7_sync_net,
    trig => edge_op_y_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_67_ss_ctrl_user_data_out => rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_67_ss_ctrl_user_data_out_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    arm_out => arm_or_y_net,
    goto_26639789_we1 => we_choice_y_net,
    goto_26639789_we4 => logical6_y_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_67_ss_bram_addr => convert_addr_dout_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_67_ss_bram_data_in => convert_din1_dout_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_67_ss_bram_we => convert_we_dout_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_67_ss_status_user_data_in => cast_gw_dout_net
  );
  assert_d0 : entity xil_defaultlib.xlpassthrough 
  generic map (
    din_width => 16,
    dout_width => 16
  )
  port map (
    din => slice50_y_net,
    dout => assert_d0_dout_net
  );
  assert_d1 : entity xil_defaultlib.xlpassthrough 
  generic map (
    din_width => 16,
    dout_width => 16
  )
  port map (
    din => slice51_y_net,
    dout => assert_d1_dout_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/sync_state0
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_sync_state0 is
  port (
    out_sync_state : in std_logic_vector( 1-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    rfdc_multi_eight_adcs_2048gsps_mts_sync_state0_user_data_in : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_sync_state0;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_sync_state0 is 
  signal rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc0_sync_net : std_logic_vector( 1-1 downto 0 );
  signal cast_gw_dout_net : std_logic_vector( 32-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal io_delay_q_net : std_logic_vector( 1-1 downto 0 );
  signal reint1_output_port_net : std_logic_vector( 1-1 downto 0 );
  signal assert_sync_state_dout_net : std_logic_vector( 1-1 downto 0 );
begin
  rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc0_sync_net <= out_sync_state;
  rfdc_multi_eight_adcs_2048gsps_mts_sync_state0_user_data_in <= cast_gw_dout_net;
  clk_net <= clk_1;
  ce_net <= ce_1;
  io_delay : entity xil_defaultlib.sysgen_delay_dcfb8a9294 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d => reint1_output_port_net,
    q => io_delay_q_net
  );
  cast_gw : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 1,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 32,
    latency => 1,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => io_delay_q_net,
    clk => clk_net,
    ce => ce_net,
    dout => cast_gw_dout_net
  );
  assert_sync_state : entity xil_defaultlib.xlpassthrough 
  generic map (
    din_width => 1,
    dout_width => 1
  )
  port map (
    din => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc0_sync_net,
    dout => assert_sync_state_dout_net
  );
  reint1 : entity xil_defaultlib.sysgen_reinterpret_317b92931a 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => assert_sync_state_dout_net,
    output_port => reint1_output_port_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/sync_state1
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_sync_state1 is
  port (
    out_sync_state : in std_logic_vector( 1-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    rfdc_multi_eight_adcs_2048gsps_mts_sync_state1_user_data_in : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_sync_state1;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_sync_state1 is 
  signal rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc1_sync_net : std_logic_vector( 1-1 downto 0 );
  signal cast_gw_dout_net : std_logic_vector( 32-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal io_delay_q_net : std_logic_vector( 1-1 downto 0 );
  signal reint1_output_port_net : std_logic_vector( 1-1 downto 0 );
  signal assert_sync_state_dout_net : std_logic_vector( 1-1 downto 0 );
begin
  rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc1_sync_net <= out_sync_state;
  rfdc_multi_eight_adcs_2048gsps_mts_sync_state1_user_data_in <= cast_gw_dout_net;
  clk_net <= clk_1;
  ce_net <= ce_1;
  io_delay : entity xil_defaultlib.sysgen_delay_dcfb8a9294 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d => reint1_output_port_net,
    q => io_delay_q_net
  );
  cast_gw : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 1,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 32,
    latency => 1,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => io_delay_q_net,
    clk => clk_net,
    ce => ce_net,
    dout => cast_gw_dout_net
  );
  assert_sync_state : entity xil_defaultlib.xlpassthrough 
  generic map (
    din_width => 1,
    dout_width => 1
  )
  port map (
    din => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc1_sync_net,
    dout => assert_sync_state_dout_net
  );
  reint1 : entity xil_defaultlib.sysgen_reinterpret_317b92931a 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => assert_sync_state_dout_net,
    output_port => reint1_output_port_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/sync_state2
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_sync_state2 is
  port (
    out_sync_state : in std_logic_vector( 1-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    rfdc_multi_eight_adcs_2048gsps_mts_sync_state2_user_data_in : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_sync_state2;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_sync_state2 is 
  signal rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc2_sync_net : std_logic_vector( 1-1 downto 0 );
  signal cast_gw_dout_net : std_logic_vector( 32-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal io_delay_q_net : std_logic_vector( 1-1 downto 0 );
  signal reint1_output_port_net : std_logic_vector( 1-1 downto 0 );
  signal assert_sync_state_dout_net : std_logic_vector( 1-1 downto 0 );
begin
  rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc2_sync_net <= out_sync_state;
  rfdc_multi_eight_adcs_2048gsps_mts_sync_state2_user_data_in <= cast_gw_dout_net;
  clk_net <= clk_1;
  ce_net <= ce_1;
  io_delay : entity xil_defaultlib.sysgen_delay_dcfb8a9294 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d => reint1_output_port_net,
    q => io_delay_q_net
  );
  cast_gw : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 1,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 32,
    latency => 1,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => io_delay_q_net,
    clk => clk_net,
    ce => ce_net,
    dout => cast_gw_dout_net
  );
  assert_sync_state : entity xil_defaultlib.xlpassthrough 
  generic map (
    din_width => 1,
    dout_width => 1
  )
  port map (
    din => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc2_sync_net,
    dout => assert_sync_state_dout_net
  );
  reint1 : entity xil_defaultlib.sysgen_reinterpret_317b92931a 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => assert_sync_state_dout_net,
    output_port => reint1_output_port_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/sync_state3
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_sync_state3 is
  port (
    out_sync_state : in std_logic_vector( 1-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    rfdc_multi_eight_adcs_2048gsps_mts_sync_state3_user_data_in : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_sync_state3;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_sync_state3 is 
  signal rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc3_sync_net : std_logic_vector( 1-1 downto 0 );
  signal cast_gw_dout_net : std_logic_vector( 32-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal io_delay_q_net : std_logic_vector( 1-1 downto 0 );
  signal reint1_output_port_net : std_logic_vector( 1-1 downto 0 );
  signal assert_sync_state_dout_net : std_logic_vector( 1-1 downto 0 );
begin
  rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc3_sync_net <= out_sync_state;
  rfdc_multi_eight_adcs_2048gsps_mts_sync_state3_user_data_in <= cast_gw_dout_net;
  clk_net <= clk_1;
  ce_net <= ce_1;
  io_delay : entity xil_defaultlib.sysgen_delay_dcfb8a9294 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d => reint1_output_port_net,
    q => io_delay_q_net
  );
  cast_gw : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 1,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 32,
    latency => 1,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => io_delay_q_net,
    clk => clk_net,
    ce => ce_net,
    dout => cast_gw_dout_net
  );
  assert_sync_state : entity xil_defaultlib.xlpassthrough 
  generic map (
    din_width => 1,
    dout_width => 1
  )
  port map (
    din => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc3_sync_net,
    dout => assert_sync_state_dout_net
  );
  reint1 : entity xil_defaultlib.sysgen_reinterpret_317b92931a 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => assert_sync_state_dout_net,
    output_port => reint1_output_port_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/sync_state4
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_sync_state4 is
  port (
    out_sync_state : in std_logic_vector( 1-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    rfdc_multi_eight_adcs_2048gsps_mts_sync_state4_user_data_in : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_sync_state4;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_sync_state4 is 
  signal rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc4_sync_net : std_logic_vector( 1-1 downto 0 );
  signal cast_gw_dout_net : std_logic_vector( 32-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal io_delay_q_net : std_logic_vector( 1-1 downto 0 );
  signal reint1_output_port_net : std_logic_vector( 1-1 downto 0 );
  signal assert_sync_state_dout_net : std_logic_vector( 1-1 downto 0 );
begin
  rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc4_sync_net <= out_sync_state;
  rfdc_multi_eight_adcs_2048gsps_mts_sync_state4_user_data_in <= cast_gw_dout_net;
  clk_net <= clk_1;
  ce_net <= ce_1;
  io_delay : entity xil_defaultlib.sysgen_delay_dcfb8a9294 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d => reint1_output_port_net,
    q => io_delay_q_net
  );
  cast_gw : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 1,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 32,
    latency => 1,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => io_delay_q_net,
    clk => clk_net,
    ce => ce_net,
    dout => cast_gw_dout_net
  );
  assert_sync_state : entity xil_defaultlib.xlpassthrough 
  generic map (
    din_width => 1,
    dout_width => 1
  )
  port map (
    din => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc4_sync_net,
    dout => assert_sync_state_dout_net
  );
  reint1 : entity xil_defaultlib.sysgen_reinterpret_317b92931a 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => assert_sync_state_dout_net,
    output_port => reint1_output_port_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/sync_state5
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_sync_state5 is
  port (
    out_sync_state : in std_logic_vector( 1-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    rfdc_multi_eight_adcs_2048gsps_mts_sync_state5_user_data_in : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_sync_state5;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_sync_state5 is 
  signal rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc5_sync_net : std_logic_vector( 1-1 downto 0 );
  signal cast_gw_dout_net : std_logic_vector( 32-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal io_delay_q_net : std_logic_vector( 1-1 downto 0 );
  signal reint1_output_port_net : std_logic_vector( 1-1 downto 0 );
  signal assert_sync_state_dout_net : std_logic_vector( 1-1 downto 0 );
begin
  rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc5_sync_net <= out_sync_state;
  rfdc_multi_eight_adcs_2048gsps_mts_sync_state5_user_data_in <= cast_gw_dout_net;
  clk_net <= clk_1;
  ce_net <= ce_1;
  io_delay : entity xil_defaultlib.sysgen_delay_dcfb8a9294 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d => reint1_output_port_net,
    q => io_delay_q_net
  );
  cast_gw : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 1,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 32,
    latency => 1,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => io_delay_q_net,
    clk => clk_net,
    ce => ce_net,
    dout => cast_gw_dout_net
  );
  assert_sync_state : entity xil_defaultlib.xlpassthrough 
  generic map (
    din_width => 1,
    dout_width => 1
  )
  port map (
    din => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc5_sync_net,
    dout => assert_sync_state_dout_net
  );
  reint1 : entity xil_defaultlib.sysgen_reinterpret_317b92931a 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => assert_sync_state_dout_net,
    output_port => reint1_output_port_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/sync_state6
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_sync_state6 is
  port (
    out_sync_state : in std_logic_vector( 1-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    rfdc_multi_eight_adcs_2048gsps_mts_sync_state6_user_data_in : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_sync_state6;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_sync_state6 is 
  signal rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc6_sync_net : std_logic_vector( 1-1 downto 0 );
  signal cast_gw_dout_net : std_logic_vector( 32-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal io_delay_q_net : std_logic_vector( 1-1 downto 0 );
  signal reint1_output_port_net : std_logic_vector( 1-1 downto 0 );
  signal assert_sync_state_dout_net : std_logic_vector( 1-1 downto 0 );
begin
  rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc6_sync_net <= out_sync_state;
  rfdc_multi_eight_adcs_2048gsps_mts_sync_state6_user_data_in <= cast_gw_dout_net;
  clk_net <= clk_1;
  ce_net <= ce_1;
  io_delay : entity xil_defaultlib.sysgen_delay_dcfb8a9294 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d => reint1_output_port_net,
    q => io_delay_q_net
  );
  cast_gw : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 1,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 32,
    latency => 1,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => io_delay_q_net,
    clk => clk_net,
    ce => ce_net,
    dout => cast_gw_dout_net
  );
  assert_sync_state : entity xil_defaultlib.xlpassthrough 
  generic map (
    din_width => 1,
    dout_width => 1
  )
  port map (
    din => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc6_sync_net,
    dout => assert_sync_state_dout_net
  );
  reint1 : entity xil_defaultlib.sysgen_reinterpret_317b92931a 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => assert_sync_state_dout_net,
    output_port => reint1_output_port_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts/sync_state7
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_sync_state7 is
  port (
    out_sync_state : in std_logic_vector( 1-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    rfdc_multi_eight_adcs_2048gsps_mts_sync_state7_user_data_in : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_sync_state7;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_sync_state7 is 
  signal rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc7_sync_net : std_logic_vector( 1-1 downto 0 );
  signal cast_gw_dout_net : std_logic_vector( 32-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal io_delay_q_net : std_logic_vector( 1-1 downto 0 );
  signal reint1_output_port_net : std_logic_vector( 1-1 downto 0 );
  signal assert_sync_state_dout_net : std_logic_vector( 1-1 downto 0 );
begin
  rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc7_sync_net <= out_sync_state;
  rfdc_multi_eight_adcs_2048gsps_mts_sync_state7_user_data_in <= cast_gw_dout_net;
  clk_net <= clk_1;
  ce_net <= ce_1;
  io_delay : entity xil_defaultlib.sysgen_delay_dcfb8a9294 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    d => reint1_output_port_net,
    q => io_delay_q_net
  );
  cast_gw : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlconvert 
  generic map (
    bool_conversion => 0,
    din_arith => 1,
    din_bin_pt => 0,
    din_width => 1,
    dout_arith => 1,
    dout_bin_pt => 0,
    dout_width => 32,
    latency => 1,
    overflow => xlWrap,
    quantization => xlTruncate
  )
  port map (
    clr => '0',
    en => "1",
    din => io_delay_q_net,
    clk => clk_net,
    ce => ce_net,
    dout => cast_gw_dout_net
  );
  assert_sync_state : entity xil_defaultlib.xlpassthrough 
  generic map (
    din_width => 1,
    dout_width => 1
  )
  port map (
    din => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc7_sync_net,
    dout => assert_sync_state_dout_net
  );
  reint1 : entity xil_defaultlib.sysgen_reinterpret_317b92931a 
  port map (
    clk => '0',
    ce => '0',
    clr => '0',
    input_port => assert_sync_state_dout_net,
    output_port => reint1_output_port_net
  );
end structural;
-- Generated from Simulink block rfdc_multi_eight_adcs_2048gsps_mts_struct
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_struct is
  port (
    rfdc_multi_eight_adcs_2048gsps_mts_led_cntrl_user_data_out : in std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_reg_cntrl_user_data_out : in std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc0_dout : in std_logic_vector( 128-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc0_sync : in std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc1_dout : in std_logic_vector( 128-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc1_sync : in std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc2_dout : in std_logic_vector( 128-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc2_sync : in std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc3_dout : in std_logic_vector( 128-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc3_sync : in std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc4_dout : in std_logic_vector( 128-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc4_sync : in std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc5_dout : in std_logic_vector( 128-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc5_sync : in std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc6_dout : in std_logic_vector( 128-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc6_sync : in std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc7_dout : in std_logic_vector( 128-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc7_sync : in std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_01_ss_bram_data_out : in std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_01_ss_ctrl_user_data_out : in std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_23_ss_bram_data_out : in std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_23_ss_ctrl_user_data_out : in std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_45_ss_bram_data_out : in std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_45_ss_ctrl_user_data_out : in std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_67_ss_bram_data_out : in std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_67_ss_ctrl_user_data_out : in std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_01_ss_bram_data_out : in std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_01_ss_ctrl_user_data_out : in std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_23_ss_bram_data_out : in std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_23_ss_ctrl_user_data_out : in std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_45_ss_bram_data_out : in std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_45_ss_ctrl_user_data_out : in std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_67_ss_bram_data_out : in std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_67_ss_ctrl_user_data_out : in std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_01_ss_bram_data_out : in std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_01_ss_ctrl_user_data_out : in std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_23_ss_bram_data_out : in std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_23_ss_ctrl_user_data_out : in std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_45_ss_bram_data_out : in std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_45_ss_ctrl_user_data_out : in std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_67_ss_bram_data_out : in std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_67_ss_ctrl_user_data_out : in std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_01_ss_bram_data_out : in std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_01_ss_ctrl_user_data_out : in std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_23_ss_bram_data_out : in std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_23_ss_ctrl_user_data_out : in std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_45_ss_bram_data_out : in std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_45_ss_ctrl_user_data_out : in std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_67_ss_bram_data_out : in std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_67_ss_ctrl_user_data_out : in std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_01_ss_bram_data_out : in std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_01_ss_ctrl_user_data_out : in std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_23_ss_bram_data_out : in std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_23_ss_ctrl_user_data_out : in std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_45_ss_bram_data_out : in std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_45_ss_ctrl_user_data_out : in std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_67_ss_bram_data_out : in std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_67_ss_ctrl_user_data_out : in std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_01_ss_bram_data_out : in std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_01_ss_ctrl_user_data_out : in std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_23_ss_bram_data_out : in std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_23_ss_ctrl_user_data_out : in std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_45_ss_bram_data_out : in std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_45_ss_ctrl_user_data_out : in std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_67_ss_bram_data_out : in std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_67_ss_ctrl_user_data_out : in std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_01_ss_bram_data_out : in std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_01_ss_ctrl_user_data_out : in std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_23_ss_bram_data_out : in std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_23_ss_ctrl_user_data_out : in std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_45_ss_bram_data_out : in std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_45_ss_ctrl_user_data_out : in std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_67_ss_bram_data_out : in std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_67_ss_ctrl_user_data_out : in std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_01_ss_bram_data_out : in std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_01_ss_ctrl_user_data_out : in std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_23_ss_bram_data_out : in std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_23_ss_ctrl_user_data_out : in std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_45_ss_bram_data_out : in std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_45_ss_ctrl_user_data_out : in std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_67_ss_bram_data_out : in std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_67_ss_ctrl_user_data_out : in std_logic_vector( 32-1 downto 0 );
    clk_1 : in std_logic;
    ce_1 : in std_logic;
    rfdc_multi_eight_adcs_2048gsps_mts_gpio_led_gateway : out std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_gpio_led1_gateway : out std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_01_ss_bram_addr : out std_logic_vector( 10-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_01_ss_bram_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_01_ss_bram_we : out std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_01_ss_status_user_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_23_ss_bram_addr : out std_logic_vector( 10-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_23_ss_bram_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_23_ss_bram_we : out std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_23_ss_status_user_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_45_ss_bram_addr : out std_logic_vector( 10-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_45_ss_bram_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_45_ss_bram_we : out std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_45_ss_status_user_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_67_ss_bram_addr : out std_logic_vector( 10-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_67_ss_bram_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_67_ss_bram_we : out std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_67_ss_status_user_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_01_ss_bram_addr : out std_logic_vector( 10-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_01_ss_bram_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_01_ss_bram_we : out std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_01_ss_status_user_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_23_ss_bram_addr : out std_logic_vector( 10-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_23_ss_bram_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_23_ss_bram_we : out std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_23_ss_status_user_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_45_ss_bram_addr : out std_logic_vector( 10-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_45_ss_bram_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_45_ss_bram_we : out std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_45_ss_status_user_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_67_ss_bram_addr : out std_logic_vector( 10-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_67_ss_bram_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_67_ss_bram_we : out std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_67_ss_status_user_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_01_ss_bram_addr : out std_logic_vector( 10-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_01_ss_bram_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_01_ss_bram_we : out std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_01_ss_status_user_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_23_ss_bram_addr : out std_logic_vector( 10-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_23_ss_bram_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_23_ss_bram_we : out std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_23_ss_status_user_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_45_ss_bram_addr : out std_logic_vector( 10-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_45_ss_bram_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_45_ss_bram_we : out std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_45_ss_status_user_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_67_ss_bram_addr : out std_logic_vector( 10-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_67_ss_bram_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_67_ss_bram_we : out std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_67_ss_status_user_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_01_ss_bram_addr : out std_logic_vector( 10-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_01_ss_bram_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_01_ss_bram_we : out std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_01_ss_status_user_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_23_ss_bram_addr : out std_logic_vector( 10-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_23_ss_bram_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_23_ss_bram_we : out std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_23_ss_status_user_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_45_ss_bram_addr : out std_logic_vector( 10-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_45_ss_bram_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_45_ss_bram_we : out std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_45_ss_status_user_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_67_ss_bram_addr : out std_logic_vector( 10-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_67_ss_bram_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_67_ss_bram_we : out std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_67_ss_status_user_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_01_ss_bram_addr : out std_logic_vector( 10-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_01_ss_bram_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_01_ss_bram_we : out std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_01_ss_status_user_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_23_ss_bram_addr : out std_logic_vector( 10-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_23_ss_bram_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_23_ss_bram_we : out std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_23_ss_status_user_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_45_ss_bram_addr : out std_logic_vector( 10-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_45_ss_bram_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_45_ss_bram_we : out std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_45_ss_status_user_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_67_ss_bram_addr : out std_logic_vector( 10-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_67_ss_bram_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_67_ss_bram_we : out std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_67_ss_status_user_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_01_ss_bram_addr : out std_logic_vector( 10-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_01_ss_bram_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_01_ss_bram_we : out std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_01_ss_status_user_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_23_ss_bram_addr : out std_logic_vector( 10-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_23_ss_bram_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_23_ss_bram_we : out std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_23_ss_status_user_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_45_ss_bram_addr : out std_logic_vector( 10-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_45_ss_bram_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_45_ss_bram_we : out std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_45_ss_status_user_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_67_ss_bram_addr : out std_logic_vector( 10-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_67_ss_bram_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_67_ss_bram_we : out std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_67_ss_status_user_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_01_ss_bram_addr : out std_logic_vector( 10-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_01_ss_bram_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_01_ss_bram_we : out std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_01_ss_status_user_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_23_ss_bram_addr : out std_logic_vector( 10-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_23_ss_bram_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_23_ss_bram_we : out std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_23_ss_status_user_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_45_ss_bram_addr : out std_logic_vector( 10-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_45_ss_bram_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_45_ss_bram_we : out std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_45_ss_status_user_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_67_ss_bram_addr : out std_logic_vector( 10-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_67_ss_bram_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_67_ss_bram_we : out std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_67_ss_status_user_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_01_ss_bram_addr : out std_logic_vector( 10-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_01_ss_bram_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_01_ss_bram_we : out std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_01_ss_status_user_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_23_ss_bram_addr : out std_logic_vector( 10-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_23_ss_bram_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_23_ss_bram_we : out std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_23_ss_status_user_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_45_ss_bram_addr : out std_logic_vector( 10-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_45_ss_bram_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_45_ss_bram_we : out std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_45_ss_status_user_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_67_ss_bram_addr : out std_logic_vector( 10-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_67_ss_bram_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_67_ss_bram_we : out std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_67_ss_status_user_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_sync_state0_user_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_sync_state1_user_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_sync_state2_user_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_sync_state3_user_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_sync_state4_user_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_sync_state5_user_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_sync_state6_user_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_sync_state7_user_data_in : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts_struct;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_struct is 
  signal counter_led_op_net : std_logic_vector( 28-1 downto 0 );
  signal convert_dout_net : std_logic_vector( 1-1 downto 0 );
  signal convert_dout_net_x0 : std_logic_vector( 1-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_led_cntrl_user_data_out_net : std_logic_vector( 32-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_reg_cntrl_user_data_out_net : std_logic_vector( 32-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc0_dout_net : std_logic_vector( 128-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc0_sync_net : std_logic_vector( 1-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc1_dout_net : std_logic_vector( 128-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc1_sync_net : std_logic_vector( 1-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc2_dout_net : std_logic_vector( 128-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc2_sync_net : std_logic_vector( 1-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc3_dout_net : std_logic_vector( 128-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc3_sync_net : std_logic_vector( 1-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc4_dout_net : std_logic_vector( 128-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc4_sync_net : std_logic_vector( 1-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc5_dout_net : std_logic_vector( 128-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc5_sync_net : std_logic_vector( 1-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc6_dout_net : std_logic_vector( 128-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc6_sync_net : std_logic_vector( 1-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc7_dout_net : std_logic_vector( 128-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc7_sync_net : std_logic_vector( 1-1 downto 0 );
  signal convert_addr_dout_net : std_logic_vector( 10-1 downto 0 );
  signal convert_din1_dout_net : std_logic_vector( 32-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_01_ss_bram_data_out_net : std_logic_vector( 32-1 downto 0 );
  signal convert_we_dout_net : std_logic_vector( 1-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_01_ss_ctrl_user_data_out_net : std_logic_vector( 32-1 downto 0 );
  signal cast_gw_dout_net : std_logic_vector( 32-1 downto 0 );
  signal convert_addr_dout_net_x0 : std_logic_vector( 10-1 downto 0 );
  signal convert_din1_dout_net_x0 : std_logic_vector( 32-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_23_ss_bram_data_out_net : std_logic_vector( 32-1 downto 0 );
  signal convert_we_dout_net_x0 : std_logic_vector( 1-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_23_ss_ctrl_user_data_out_net : std_logic_vector( 32-1 downto 0 );
  signal cast_gw_dout_net_x0 : std_logic_vector( 32-1 downto 0 );
  signal convert_addr_dout_net_x24 : std_logic_vector( 10-1 downto 0 );
  signal convert_din1_dout_net_x23 : std_logic_vector( 32-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_45_ss_bram_data_out_net : std_logic_vector( 32-1 downto 0 );
  signal convert_we_dout_net_x22 : std_logic_vector( 1-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_45_ss_ctrl_user_data_out_net : std_logic_vector( 32-1 downto 0 );
  signal cast_gw_dout_net_x32 : std_logic_vector( 32-1 downto 0 );
  signal convert_addr_dout_net_x23 : std_logic_vector( 10-1 downto 0 );
  signal convert_din1_dout_net_x24 : std_logic_vector( 32-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_67_ss_bram_data_out_net : std_logic_vector( 32-1 downto 0 );
  signal convert_we_dout_net_x23 : std_logic_vector( 1-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_67_ss_ctrl_user_data_out_net : std_logic_vector( 32-1 downto 0 );
  signal cast_gw_dout_net_x33 : std_logic_vector( 32-1 downto 0 );
  signal convert_addr_dout_net_x25 : std_logic_vector( 10-1 downto 0 );
  signal convert_din1_dout_net_x25 : std_logic_vector( 32-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_01_ss_bram_data_out_net : std_logic_vector( 32-1 downto 0 );
  signal convert_we_dout_net_x24 : std_logic_vector( 1-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_01_ss_ctrl_user_data_out_net : std_logic_vector( 32-1 downto 0 );
  signal cast_gw_dout_net_x29 : std_logic_vector( 32-1 downto 0 );
  signal convert_addr_dout_net_x21 : std_logic_vector( 10-1 downto 0 );
  signal convert_din1_dout_net_x21 : std_logic_vector( 32-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_23_ss_bram_data_out_net : std_logic_vector( 32-1 downto 0 );
  signal convert_we_dout_net_x20 : std_logic_vector( 1-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_23_ss_ctrl_user_data_out_net : std_logic_vector( 32-1 downto 0 );
  signal cast_gw_dout_net_x30 : std_logic_vector( 32-1 downto 0 );
  signal convert_addr_dout_net_x22 : std_logic_vector( 10-1 downto 0 );
  signal convert_din1_dout_net_x22 : std_logic_vector( 32-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_45_ss_bram_data_out_net : std_logic_vector( 32-1 downto 0 );
  signal convert_we_dout_net_x21 : std_logic_vector( 1-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_45_ss_ctrl_user_data_out_net : std_logic_vector( 32-1 downto 0 );
  signal cast_gw_dout_net_x31 : std_logic_vector( 32-1 downto 0 );
  signal convert_addr_dout_net_x28 : std_logic_vector( 10-1 downto 0 );
  signal convert_din1_dout_net_x29 : std_logic_vector( 32-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_67_ss_bram_data_out_net : std_logic_vector( 32-1 downto 0 );
  signal convert_we_dout_net_x27 : std_logic_vector( 1-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_67_ss_ctrl_user_data_out_net : std_logic_vector( 32-1 downto 0 );
  signal cast_gw_dout_net_x37 : std_logic_vector( 32-1 downto 0 );
  signal convert_addr_dout_net_x29 : std_logic_vector( 10-1 downto 0 );
  signal convert_din1_dout_net_x28 : std_logic_vector( 32-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_01_ss_bram_data_out_net : std_logic_vector( 32-1 downto 0 );
  signal convert_we_dout_net_x29 : std_logic_vector( 1-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_01_ss_ctrl_user_data_out_net : std_logic_vector( 32-1 downto 0 );
  signal cast_gw_dout_net_x38 : std_logic_vector( 32-1 downto 0 );
  signal convert_addr_dout_net_x30 : std_logic_vector( 10-1 downto 0 );
  signal convert_din1_dout_net_x30 : std_logic_vector( 32-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_23_ss_bram_data_out_net : std_logic_vector( 32-1 downto 0 );
  signal convert_we_dout_net_x30 : std_logic_vector( 1-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_23_ss_ctrl_user_data_out_net : std_logic_vector( 32-1 downto 0 );
  signal cast_gw_dout_net_x35 : std_logic_vector( 32-1 downto 0 );
  signal convert_addr_dout_net_x26 : std_logic_vector( 10-1 downto 0 );
  signal convert_din1_dout_net_x26 : std_logic_vector( 32-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_45_ss_bram_data_out_net : std_logic_vector( 32-1 downto 0 );
  signal convert_we_dout_net_x25 : std_logic_vector( 1-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_45_ss_ctrl_user_data_out_net : std_logic_vector( 32-1 downto 0 );
  signal cast_gw_dout_net_x34 : std_logic_vector( 32-1 downto 0 );
  signal convert_addr_dout_net_x27 : std_logic_vector( 10-1 downto 0 );
  signal convert_din1_dout_net_x27 : std_logic_vector( 32-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_67_ss_bram_data_out_net : std_logic_vector( 32-1 downto 0 );
  signal convert_we_dout_net_x26 : std_logic_vector( 1-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_67_ss_ctrl_user_data_out_net : std_logic_vector( 32-1 downto 0 );
  signal cast_gw_dout_net_x36 : std_logic_vector( 32-1 downto 0 );
  signal convert_addr_dout_net_x13 : std_logic_vector( 10-1 downto 0 );
  signal convert_din1_dout_net_x12 : std_logic_vector( 32-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_01_ss_bram_data_out_net : std_logic_vector( 32-1 downto 0 );
  signal convert_we_dout_net_x13 : std_logic_vector( 1-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_01_ss_ctrl_user_data_out_net : std_logic_vector( 32-1 downto 0 );
  signal cast_gw_dout_net_x22 : std_logic_vector( 32-1 downto 0 );
  signal convert_addr_dout_net_x14 : std_logic_vector( 10-1 downto 0 );
  signal convert_din1_dout_net_x13 : std_logic_vector( 32-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_23_ss_bram_data_out_net : std_logic_vector( 32-1 downto 0 );
  signal convert_we_dout_net_x12 : std_logic_vector( 1-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_23_ss_ctrl_user_data_out_net : std_logic_vector( 32-1 downto 0 );
  signal cast_gw_dout_net_x23 : std_logic_vector( 32-1 downto 0 );
  signal convert_addr_dout_net_x15 : std_logic_vector( 10-1 downto 0 );
  signal convert_din1_dout_net_x15 : std_logic_vector( 32-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_45_ss_bram_data_out_net : std_logic_vector( 32-1 downto 0 );
  signal convert_we_dout_net_x14 : std_logic_vector( 1-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_45_ss_ctrl_user_data_out_net : std_logic_vector( 32-1 downto 0 );
  signal cast_gw_dout_net_x19 : std_logic_vector( 32-1 downto 0 );
  signal convert_addr_dout_net_x10 : std_logic_vector( 10-1 downto 0 );
  signal convert_din1_dout_net_x10 : std_logic_vector( 32-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_67_ss_bram_data_out_net : std_logic_vector( 32-1 downto 0 );
  signal convert_we_dout_net_x10 : std_logic_vector( 1-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_67_ss_ctrl_user_data_out_net : std_logic_vector( 32-1 downto 0 );
  signal cast_gw_dout_net_x20 : std_logic_vector( 32-1 downto 0 );
  signal convert_addr_dout_net_x11 : std_logic_vector( 10-1 downto 0 );
  signal convert_din1_dout_net_x11 : std_logic_vector( 32-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_01_ss_bram_data_out_net : std_logic_vector( 32-1 downto 0 );
  signal convert_we_dout_net_x11 : std_logic_vector( 1-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_01_ss_ctrl_user_data_out_net : std_logic_vector( 32-1 downto 0 );
  signal cast_gw_dout_net_x21 : std_logic_vector( 32-1 downto 0 );
  signal convert_addr_dout_net_x12 : std_logic_vector( 10-1 downto 0 );
  signal convert_din1_dout_net_x14 : std_logic_vector( 32-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_23_ss_bram_data_out_net : std_logic_vector( 32-1 downto 0 );
  signal convert_we_dout_net_x17 : std_logic_vector( 1-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_23_ss_ctrl_user_data_out_net : std_logic_vector( 32-1 downto 0 );
  signal cast_gw_dout_net_x27 : std_logic_vector( 32-1 downto 0 );
  signal convert_addr_dout_net_x19 : std_logic_vector( 10-1 downto 0 );
  signal convert_din1_dout_net_x19 : std_logic_vector( 32-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_45_ss_bram_data_out_net : std_logic_vector( 32-1 downto 0 );
  signal convert_we_dout_net_x18 : std_logic_vector( 1-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_45_ss_ctrl_user_data_out_net : std_logic_vector( 32-1 downto 0 );
  signal cast_gw_dout_net_x28 : std_logic_vector( 32-1 downto 0 );
  signal convert_addr_dout_net_x20 : std_logic_vector( 10-1 downto 0 );
  signal convert_din1_dout_net_x20 : std_logic_vector( 32-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_67_ss_bram_data_out_net : std_logic_vector( 32-1 downto 0 );
  signal convert_we_dout_net_x19 : std_logic_vector( 1-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_67_ss_ctrl_user_data_out_net : std_logic_vector( 32-1 downto 0 );
  signal cast_gw_dout_net_x25 : std_logic_vector( 32-1 downto 0 );
  signal convert_addr_dout_net_x16 : std_logic_vector( 10-1 downto 0 );
  signal convert_din1_dout_net_x16 : std_logic_vector( 32-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_01_ss_bram_data_out_net : std_logic_vector( 32-1 downto 0 );
  signal convert_we_dout_net_x15 : std_logic_vector( 1-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_01_ss_ctrl_user_data_out_net : std_logic_vector( 32-1 downto 0 );
  signal cast_gw_dout_net_x24 : std_logic_vector( 32-1 downto 0 );
  signal convert_addr_dout_net_x17 : std_logic_vector( 10-1 downto 0 );
  signal convert_din1_dout_net_x17 : std_logic_vector( 32-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_23_ss_bram_data_out_net : std_logic_vector( 32-1 downto 0 );
  signal convert_we_dout_net_x16 : std_logic_vector( 1-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_23_ss_ctrl_user_data_out_net : std_logic_vector( 32-1 downto 0 );
  signal cast_gw_dout_net_x26 : std_logic_vector( 32-1 downto 0 );
  signal convert_addr_dout_net_x18 : std_logic_vector( 10-1 downto 0 );
  signal convert_din1_dout_net_x18 : std_logic_vector( 32-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_45_ss_bram_data_out_net : std_logic_vector( 32-1 downto 0 );
  signal convert_we_dout_net_x28 : std_logic_vector( 1-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_45_ss_ctrl_user_data_out_net : std_logic_vector( 32-1 downto 0 );
  signal cast_gw_dout_net_x16 : std_logic_vector( 32-1 downto 0 );
  signal convert_addr_dout_net_x6 : std_logic_vector( 10-1 downto 0 );
  signal convert_din1_dout_net_x6 : std_logic_vector( 32-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_67_ss_bram_data_out_net : std_logic_vector( 32-1 downto 0 );
  signal convert_we_dout_net_x6 : std_logic_vector( 1-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_67_ss_ctrl_user_data_out_net : std_logic_vector( 32-1 downto 0 );
  signal cast_gw_dout_net_x14 : std_logic_vector( 32-1 downto 0 );
  signal convert_addr_dout_net_x5 : std_logic_vector( 10-1 downto 0 );
  signal convert_din1_dout_net_x5 : std_logic_vector( 32-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_01_ss_bram_data_out_net : std_logic_vector( 32-1 downto 0 );
  signal convert_we_dout_net_x5 : std_logic_vector( 1-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_01_ss_ctrl_user_data_out_net : std_logic_vector( 32-1 downto 0 );
  signal cast_gw_dout_net_x15 : std_logic_vector( 32-1 downto 0 );
  signal convert_addr_dout_net_x9 : std_logic_vector( 10-1 downto 0 );
  signal convert_din1_dout_net_x9 : std_logic_vector( 32-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_23_ss_bram_data_out_net : std_logic_vector( 32-1 downto 0 );
  signal convert_we_dout_net_x9 : std_logic_vector( 1-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_23_ss_ctrl_user_data_out_net : std_logic_vector( 32-1 downto 0 );
  signal cast_gw_dout_net_x18 : std_logic_vector( 32-1 downto 0 );
  signal convert_addr_dout_net_x8 : std_logic_vector( 10-1 downto 0 );
  signal convert_din1_dout_net_x8 : std_logic_vector( 32-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_45_ss_bram_data_out_net : std_logic_vector( 32-1 downto 0 );
  signal convert_we_dout_net_x7 : std_logic_vector( 1-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_45_ss_ctrl_user_data_out_net : std_logic_vector( 32-1 downto 0 );
  signal cast_gw_dout_net_x17 : std_logic_vector( 32-1 downto 0 );
  signal convert_addr_dout_net_x7 : std_logic_vector( 10-1 downto 0 );
  signal convert_din1_dout_net_x7 : std_logic_vector( 32-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_67_ss_bram_data_out_net : std_logic_vector( 32-1 downto 0 );
  signal convert_we_dout_net_x8 : std_logic_vector( 1-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_67_ss_ctrl_user_data_out_net : std_logic_vector( 32-1 downto 0 );
  signal cast_gw_dout_net_x3 : std_logic_vector( 32-1 downto 0 );
  signal convert_addr_dout_net_x3 : std_logic_vector( 10-1 downto 0 );
  signal convert_din1_dout_net_x3 : std_logic_vector( 32-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_01_ss_bram_data_out_net : std_logic_vector( 32-1 downto 0 );
  signal convert_we_dout_net_x2 : std_logic_vector( 1-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_01_ss_ctrl_user_data_out_net : std_logic_vector( 32-1 downto 0 );
  signal cast_gw_dout_net_x2 : std_logic_vector( 32-1 downto 0 );
  signal convert_addr_dout_net_x2 : std_logic_vector( 10-1 downto 0 );
  signal convert_din1_dout_net_x1 : std_logic_vector( 32-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_23_ss_bram_data_out_net : std_logic_vector( 32-1 downto 0 );
  signal convert_we_dout_net_x1 : std_logic_vector( 1-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_23_ss_ctrl_user_data_out_net : std_logic_vector( 32-1 downto 0 );
  signal cast_gw_dout_net_x1 : std_logic_vector( 32-1 downto 0 );
  signal convert_addr_dout_net_x1 : std_logic_vector( 10-1 downto 0 );
  signal convert_din1_dout_net_x2 : std_logic_vector( 32-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_45_ss_bram_data_out_net : std_logic_vector( 32-1 downto 0 );
  signal convert_we_dout_net_x4 : std_logic_vector( 1-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_45_ss_ctrl_user_data_out_net : std_logic_vector( 32-1 downto 0 );
  signal cast_gw_dout_net_x13 : std_logic_vector( 32-1 downto 0 );
  signal convert_addr_dout_net_x4 : std_logic_vector( 10-1 downto 0 );
  signal convert_din1_dout_net_x4 : std_logic_vector( 32-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_67_ss_bram_data_out_net : std_logic_vector( 32-1 downto 0 );
  signal convert_we_dout_net_x3 : std_logic_vector( 1-1 downto 0 );
  signal rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_67_ss_ctrl_user_data_out_net : std_logic_vector( 32-1 downto 0 );
  signal cast_gw_dout_net_x12 : std_logic_vector( 32-1 downto 0 );
  signal cast_gw_dout_net_x11 : std_logic_vector( 32-1 downto 0 );
  signal cast_gw_dout_net_x10 : std_logic_vector( 32-1 downto 0 );
  signal cast_gw_dout_net_x9 : std_logic_vector( 32-1 downto 0 );
  signal cast_gw_dout_net_x8 : std_logic_vector( 32-1 downto 0 );
  signal cast_gw_dout_net_x7 : std_logic_vector( 32-1 downto 0 );
  signal cast_gw_dout_net_x6 : std_logic_vector( 32-1 downto 0 );
  signal cast_gw_dout_net_x5 : std_logic_vector( 32-1 downto 0 );
  signal cast_gw_dout_net_x4 : std_logic_vector( 32-1 downto 0 );
  signal clk_net : std_logic;
  signal ce_net : std_logic;
  signal edge_op_y_net : std_logic_vector( 1-1 downto 0 );
  signal slice_rst_cntrl_y_net : std_logic_vector( 1-1 downto 0 );
  signal slice_msb_y_net : std_logic_vector( 1-1 downto 0 );
  signal slice_led_cntrl_y_net : std_logic_vector( 1-1 downto 0 );
  signal arm_or_y_net : std_logic_vector( 1-1 downto 0 );
  signal slice_y_net : std_logic_vector( 16-1 downto 0 );
  signal slice7_y_net : std_logic_vector( 16-1 downto 0 );
  signal we_choice_y_net : std_logic_vector( 1-1 downto 0 );
  signal logical6_y_net : std_logic_vector( 1-1 downto 0 );
  signal arm_or_y_net_x0 : std_logic_vector( 1-1 downto 0 );
  signal slice1_y_net : std_logic_vector( 16-1 downto 0 );
  signal slice6_y_net : std_logic_vector( 16-1 downto 0 );
  signal we_choice_y_net_x0 : std_logic_vector( 1-1 downto 0 );
  signal logical6_y_net_x0 : std_logic_vector( 1-1 downto 0 );
  signal arm_or_y_net_x22 : std_logic_vector( 1-1 downto 0 );
  signal slice2_y_net : std_logic_vector( 16-1 downto 0 );
  signal slice5_y_net : std_logic_vector( 16-1 downto 0 );
  signal we_choice_y_net_x23 : std_logic_vector( 1-1 downto 0 );
  signal logical6_y_net_x9 : std_logic_vector( 1-1 downto 0 );
  signal arm_or_y_net_x23 : std_logic_vector( 1-1 downto 0 );
  signal slice3_y_net : std_logic_vector( 16-1 downto 0 );
  signal slice4_y_net : std_logic_vector( 16-1 downto 0 );
  signal we_choice_y_net_x24 : std_logic_vector( 1-1 downto 0 );
  signal logical6_y_net_x24 : std_logic_vector( 1-1 downto 0 );
  signal arm_or_y_net_x25 : std_logic_vector( 1-1 downto 0 );
  signal slice8_y_net : std_logic_vector( 16-1 downto 0 );
  signal slice15_y_net : std_logic_vector( 16-1 downto 0 );
  signal we_choice_y_net_x25 : std_logic_vector( 1-1 downto 0 );
  signal logical6_y_net_x25 : std_logic_vector( 1-1 downto 0 );
  signal arm_or_y_net_x20 : std_logic_vector( 1-1 downto 0 );
  signal slice9_y_net : std_logic_vector( 16-1 downto 0 );
  signal slice14_y_net : std_logic_vector( 16-1 downto 0 );
  signal we_choice_y_net_x21 : std_logic_vector( 1-1 downto 0 );
  signal logical6_y_net_x21 : std_logic_vector( 1-1 downto 0 );
  signal arm_or_y_net_x21 : std_logic_vector( 1-1 downto 0 );
  signal slice10_y_net : std_logic_vector( 16-1 downto 0 );
  signal slice13_y_net : std_logic_vector( 16-1 downto 0 );
  signal we_choice_y_net_x22 : std_logic_vector( 1-1 downto 0 );
  signal logical6_y_net_x22 : std_logic_vector( 1-1 downto 0 );
  signal arm_or_y_net_x24 : std_logic_vector( 1-1 downto 0 );
  signal slice11_y_net : std_logic_vector( 16-1 downto 0 );
  signal slice12_y_net : std_logic_vector( 16-1 downto 0 );
  signal we_choice_y_net_x28 : std_logic_vector( 1-1 downto 0 );
  signal logical6_y_net_x23 : std_logic_vector( 1-1 downto 0 );
  signal arm_or_y_net_x29 : std_logic_vector( 1-1 downto 0 );
  signal slice22_y_net : std_logic_vector( 16-1 downto 0 );
  signal slice21_y_net : std_logic_vector( 16-1 downto 0 );
  signal we_choice_y_net_x29 : std_logic_vector( 1-1 downto 0 );
  signal logical6_y_net_x29 : std_logic_vector( 1-1 downto 0 );
  signal arm_or_y_net_x30 : std_logic_vector( 1-1 downto 0 );
  signal slice23_y_net : std_logic_vector( 16-1 downto 0 );
  signal slice20_y_net : std_logic_vector( 16-1 downto 0 );
  signal we_choice_y_net_x30 : std_logic_vector( 1-1 downto 0 );
  signal logical6_y_net_x30 : std_logic_vector( 1-1 downto 0 );
  signal arm_or_y_net_x26 : std_logic_vector( 1-1 downto 0 );
  signal slice16_y_net : std_logic_vector( 16-1 downto 0 );
  signal slice19_y_net : std_logic_vector( 16-1 downto 0 );
  signal we_choice_y_net_x26 : std_logic_vector( 1-1 downto 0 );
  signal logical6_y_net_x26 : std_logic_vector( 1-1 downto 0 );
  signal arm_or_y_net_x27 : std_logic_vector( 1-1 downto 0 );
  signal slice17_y_net : std_logic_vector( 16-1 downto 0 );
  signal slice18_y_net : std_logic_vector( 16-1 downto 0 );
  signal we_choice_y_net_x27 : std_logic_vector( 1-1 downto 0 );
  signal logical6_y_net_x27 : std_logic_vector( 1-1 downto 0 );
  signal arm_or_y_net_x28 : std_logic_vector( 1-1 downto 0 );
  signal slice30_y_net : std_logic_vector( 16-1 downto 0 );
  signal slice29_y_net : std_logic_vector( 16-1 downto 0 );
  signal we_choice_y_net_x19 : std_logic_vector( 1-1 downto 0 );
  signal logical6_y_net_x28 : std_logic_vector( 1-1 downto 0 );
  signal arm_or_y_net_x13 : std_logic_vector( 1-1 downto 0 );
  signal slice31_y_net : std_logic_vector( 16-1 downto 0 );
  signal slice28_y_net : std_logic_vector( 16-1 downto 0 );
  signal we_choice_y_net_x13 : std_logic_vector( 1-1 downto 0 );
  signal logical6_y_net_x14 : std_logic_vector( 1-1 downto 0 );
  signal arm_or_y_net_x14 : std_logic_vector( 1-1 downto 0 );
  signal slice24_y_net : std_logic_vector( 16-1 downto 0 );
  signal slice27_y_net : std_logic_vector( 16-1 downto 0 );
  signal we_choice_y_net_x14 : std_logic_vector( 1-1 downto 0 );
  signal logical6_y_net_x15 : std_logic_vector( 1-1 downto 0 );
  signal arm_or_y_net_x11 : std_logic_vector( 1-1 downto 0 );
  signal slice25_y_net : std_logic_vector( 16-1 downto 0 );
  signal slice26_y_net : std_logic_vector( 16-1 downto 0 );
  signal we_choice_y_net_x10 : std_logic_vector( 1-1 downto 0 );
  signal logical6_y_net_x11 : std_logic_vector( 1-1 downto 0 );
  signal arm_or_y_net_x10 : std_logic_vector( 1-1 downto 0 );
  signal slice32_y_net : std_logic_vector( 16-1 downto 0 );
  signal slice61_y_net : std_logic_vector( 16-1 downto 0 );
  signal we_choice_y_net_x11 : std_logic_vector( 1-1 downto 0 );
  signal logical6_y_net_x12 : std_logic_vector( 1-1 downto 0 );
  signal arm_or_y_net_x12 : std_logic_vector( 1-1 downto 0 );
  signal slice33_y_net : std_logic_vector( 16-1 downto 0 );
  signal slice60_y_net : std_logic_vector( 16-1 downto 0 );
  signal we_choice_y_net_x12 : std_logic_vector( 1-1 downto 0 );
  signal logical6_y_net_x13 : std_logic_vector( 1-1 downto 0 );
  signal arm_or_y_net_x18 : std_logic_vector( 1-1 downto 0 );
  signal slice44_y_net : std_logic_vector( 16-1 downto 0 );
  signal slice59_y_net : std_logic_vector( 16-1 downto 0 );
  signal we_choice_y_net_x18 : std_logic_vector( 1-1 downto 0 );
  signal logical6_y_net_x19 : std_logic_vector( 1-1 downto 0 );
  signal arm_or_y_net_x19 : std_logic_vector( 1-1 downto 0 );
  signal slice55_y_net : std_logic_vector( 16-1 downto 0 );
  signal slice58_y_net : std_logic_vector( 16-1 downto 0 );
  signal we_choice_y_net_x20 : std_logic_vector( 1-1 downto 0 );
  signal logical6_y_net_x20 : std_logic_vector( 1-1 downto 0 );
  signal arm_or_y_net_x15 : std_logic_vector( 1-1 downto 0 );
  signal slice62_y_net : std_logic_vector( 16-1 downto 0 );
  signal slice39_y_net : std_logic_vector( 16-1 downto 0 );
  signal we_choice_y_net_x16 : std_logic_vector( 1-1 downto 0 );
  signal logical6_y_net_x16 : std_logic_vector( 1-1 downto 0 );
  signal arm_or_y_net_x16 : std_logic_vector( 1-1 downto 0 );
  signal slice63_y_net : std_logic_vector( 16-1 downto 0 );
  signal slice38_y_net : std_logic_vector( 16-1 downto 0 );
  signal we_choice_y_net_x15 : std_logic_vector( 1-1 downto 0 );
  signal logical6_y_net_x17 : std_logic_vector( 1-1 downto 0 );
  signal arm_or_y_net_x17 : std_logic_vector( 1-1 downto 0 );
  signal slice34_y_net : std_logic_vector( 16-1 downto 0 );
  signal slice37_y_net : std_logic_vector( 16-1 downto 0 );
  signal we_choice_y_net_x17 : std_logic_vector( 1-1 downto 0 );
  signal logical6_y_net_x18 : std_logic_vector( 1-1 downto 0 );
  signal arm_or_y_net_x7 : std_logic_vector( 1-1 downto 0 );
  signal slice35_y_net : std_logic_vector( 16-1 downto 0 );
  signal slice36_y_net : std_logic_vector( 16-1 downto 0 );
  signal we_choice_y_net_x7 : std_logic_vector( 1-1 downto 0 );
  signal logical6_y_net_x7 : std_logic_vector( 1-1 downto 0 );
  signal arm_or_y_net_x6 : std_logic_vector( 1-1 downto 0 );
  signal slice47_y_net : std_logic_vector( 16-1 downto 0 );
  signal slice46_y_net : std_logic_vector( 16-1 downto 0 );
  signal we_choice_y_net_x5 : std_logic_vector( 1-1 downto 0 );
  signal logical6_y_net_x6 : std_logic_vector( 1-1 downto 0 );
  signal arm_or_y_net_x5 : std_logic_vector( 1-1 downto 0 );
  signal slice48_y_net : std_logic_vector( 16-1 downto 0 );
  signal slice45_y_net : std_logic_vector( 16-1 downto 0 );
  signal we_choice_y_net_x6 : std_logic_vector( 1-1 downto 0 );
  signal logical6_y_net_x5 : std_logic_vector( 1-1 downto 0 );
  signal arm_or_y_net_x9 : std_logic_vector( 1-1 downto 0 );
  signal slice40_y_net : std_logic_vector( 16-1 downto 0 );
  signal slice43_y_net : std_logic_vector( 16-1 downto 0 );
  signal we_choice_y_net_x9 : std_logic_vector( 1-1 downto 0 );
  signal logical6_y_net_x10 : std_logic_vector( 1-1 downto 0 );
  signal arm_or_y_net_x8 : std_logic_vector( 1-1 downto 0 );
  signal slice41_y_net : std_logic_vector( 16-1 downto 0 );
  signal slice42_y_net : std_logic_vector( 16-1 downto 0 );
  signal we_choice_y_net_x8 : std_logic_vector( 1-1 downto 0 );
  signal logical6_y_net_x8 : std_logic_vector( 1-1 downto 0 );
  signal arm_or_y_net_x3 : std_logic_vector( 1-1 downto 0 );
  signal slice56_y_net : std_logic_vector( 16-1 downto 0 );
  signal slice54_y_net : std_logic_vector( 16-1 downto 0 );
  signal we_choice_y_net_x3 : std_logic_vector( 1-1 downto 0 );
  signal logical6_y_net_x3 : std_logic_vector( 1-1 downto 0 );
  signal arm_or_y_net_x2 : std_logic_vector( 1-1 downto 0 );
  signal slice57_y_net : std_logic_vector( 16-1 downto 0 );
  signal slice53_y_net : std_logic_vector( 16-1 downto 0 );
  signal we_choice_y_net_x2 : std_logic_vector( 1-1 downto 0 );
  signal logical6_y_net_x1 : std_logic_vector( 1-1 downto 0 );
  signal arm_or_y_net_x1 : std_logic_vector( 1-1 downto 0 );
  signal slice49_y_net : std_logic_vector( 16-1 downto 0 );
  signal slice52_y_net : std_logic_vector( 16-1 downto 0 );
  signal we_choice_y_net_x1 : std_logic_vector( 1-1 downto 0 );
  signal logical6_y_net_x2 : std_logic_vector( 1-1 downto 0 );
  signal arm_or_y_net_x4 : std_logic_vector( 1-1 downto 0 );
  signal slice50_y_net : std_logic_vector( 16-1 downto 0 );
  signal slice51_y_net : std_logic_vector( 16-1 downto 0 );
  signal we_choice_y_net_x4 : std_logic_vector( 1-1 downto 0 );
  signal logical6_y_net_x4 : std_logic_vector( 1-1 downto 0 );
begin
  rfdc_multi_eight_adcs_2048gsps_mts_gpio_led_gateway <= convert_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_gpio_led1_gateway <= convert_dout_net_x0;
  rfdc_multi_eight_adcs_2048gsps_mts_led_cntrl_user_data_out_net <= rfdc_multi_eight_adcs_2048gsps_mts_led_cntrl_user_data_out;
  rfdc_multi_eight_adcs_2048gsps_mts_reg_cntrl_user_data_out_net <= rfdc_multi_eight_adcs_2048gsps_mts_reg_cntrl_user_data_out;
  rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc0_dout_net <= rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc0_dout;
  rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc0_sync_net <= rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc0_sync;
  rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc1_dout_net <= rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc1_dout;
  rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc1_sync_net <= rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc1_sync;
  rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc2_dout_net <= rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc2_dout;
  rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc2_sync_net <= rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc2_sync;
  rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc3_dout_net <= rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc3_dout;
  rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc3_sync_net <= rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc3_sync;
  rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc4_dout_net <= rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc4_dout;
  rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc4_sync_net <= rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc4_sync;
  rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc5_dout_net <= rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc5_dout;
  rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc5_sync_net <= rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc5_sync;
  rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc6_dout_net <= rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc6_dout;
  rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc6_sync_net <= rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc6_sync;
  rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc7_dout_net <= rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc7_dout;
  rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc7_sync_net <= rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc7_sync;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_01_ss_bram_addr <= convert_addr_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_01_ss_bram_data_in <= convert_din1_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_01_ss_bram_data_out_net <= rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_01_ss_bram_data_out;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_01_ss_bram_we <= convert_we_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_01_ss_ctrl_user_data_out_net <= rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_01_ss_ctrl_user_data_out;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_01_ss_status_user_data_in <= cast_gw_dout_net;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_23_ss_bram_addr <= convert_addr_dout_net_x0;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_23_ss_bram_data_in <= convert_din1_dout_net_x0;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_23_ss_bram_data_out_net <= rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_23_ss_bram_data_out;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_23_ss_bram_we <= convert_we_dout_net_x0;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_23_ss_ctrl_user_data_out_net <= rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_23_ss_ctrl_user_data_out;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_23_ss_status_user_data_in <= cast_gw_dout_net_x0;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_45_ss_bram_addr <= convert_addr_dout_net_x24;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_45_ss_bram_data_in <= convert_din1_dout_net_x23;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_45_ss_bram_data_out_net <= rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_45_ss_bram_data_out;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_45_ss_bram_we <= convert_we_dout_net_x22;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_45_ss_ctrl_user_data_out_net <= rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_45_ss_ctrl_user_data_out;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_45_ss_status_user_data_in <= cast_gw_dout_net_x32;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_67_ss_bram_addr <= convert_addr_dout_net_x23;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_67_ss_bram_data_in <= convert_din1_dout_net_x24;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_67_ss_bram_data_out_net <= rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_67_ss_bram_data_out;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_67_ss_bram_we <= convert_we_dout_net_x23;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_67_ss_ctrl_user_data_out_net <= rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_67_ss_ctrl_user_data_out;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_67_ss_status_user_data_in <= cast_gw_dout_net_x33;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_01_ss_bram_addr <= convert_addr_dout_net_x25;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_01_ss_bram_data_in <= convert_din1_dout_net_x25;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_01_ss_bram_data_out_net <= rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_01_ss_bram_data_out;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_01_ss_bram_we <= convert_we_dout_net_x24;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_01_ss_ctrl_user_data_out_net <= rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_01_ss_ctrl_user_data_out;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_01_ss_status_user_data_in <= cast_gw_dout_net_x29;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_23_ss_bram_addr <= convert_addr_dout_net_x21;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_23_ss_bram_data_in <= convert_din1_dout_net_x21;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_23_ss_bram_data_out_net <= rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_23_ss_bram_data_out;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_23_ss_bram_we <= convert_we_dout_net_x20;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_23_ss_ctrl_user_data_out_net <= rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_23_ss_ctrl_user_data_out;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_23_ss_status_user_data_in <= cast_gw_dout_net_x30;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_45_ss_bram_addr <= convert_addr_dout_net_x22;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_45_ss_bram_data_in <= convert_din1_dout_net_x22;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_45_ss_bram_data_out_net <= rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_45_ss_bram_data_out;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_45_ss_bram_we <= convert_we_dout_net_x21;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_45_ss_ctrl_user_data_out_net <= rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_45_ss_ctrl_user_data_out;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_45_ss_status_user_data_in <= cast_gw_dout_net_x31;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_67_ss_bram_addr <= convert_addr_dout_net_x28;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_67_ss_bram_data_in <= convert_din1_dout_net_x29;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_67_ss_bram_data_out_net <= rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_67_ss_bram_data_out;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_67_ss_bram_we <= convert_we_dout_net_x27;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_67_ss_ctrl_user_data_out_net <= rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_67_ss_ctrl_user_data_out;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_67_ss_status_user_data_in <= cast_gw_dout_net_x37;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_01_ss_bram_addr <= convert_addr_dout_net_x29;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_01_ss_bram_data_in <= convert_din1_dout_net_x28;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_01_ss_bram_data_out_net <= rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_01_ss_bram_data_out;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_01_ss_bram_we <= convert_we_dout_net_x29;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_01_ss_ctrl_user_data_out_net <= rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_01_ss_ctrl_user_data_out;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_01_ss_status_user_data_in <= cast_gw_dout_net_x38;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_23_ss_bram_addr <= convert_addr_dout_net_x30;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_23_ss_bram_data_in <= convert_din1_dout_net_x30;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_23_ss_bram_data_out_net <= rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_23_ss_bram_data_out;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_23_ss_bram_we <= convert_we_dout_net_x30;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_23_ss_ctrl_user_data_out_net <= rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_23_ss_ctrl_user_data_out;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_23_ss_status_user_data_in <= cast_gw_dout_net_x35;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_45_ss_bram_addr <= convert_addr_dout_net_x26;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_45_ss_bram_data_in <= convert_din1_dout_net_x26;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_45_ss_bram_data_out_net <= rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_45_ss_bram_data_out;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_45_ss_bram_we <= convert_we_dout_net_x25;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_45_ss_ctrl_user_data_out_net <= rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_45_ss_ctrl_user_data_out;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_45_ss_status_user_data_in <= cast_gw_dout_net_x34;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_67_ss_bram_addr <= convert_addr_dout_net_x27;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_67_ss_bram_data_in <= convert_din1_dout_net_x27;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_67_ss_bram_data_out_net <= rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_67_ss_bram_data_out;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_67_ss_bram_we <= convert_we_dout_net_x26;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_67_ss_ctrl_user_data_out_net <= rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_67_ss_ctrl_user_data_out;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_67_ss_status_user_data_in <= cast_gw_dout_net_x36;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_01_ss_bram_addr <= convert_addr_dout_net_x13;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_01_ss_bram_data_in <= convert_din1_dout_net_x12;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_01_ss_bram_data_out_net <= rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_01_ss_bram_data_out;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_01_ss_bram_we <= convert_we_dout_net_x13;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_01_ss_ctrl_user_data_out_net <= rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_01_ss_ctrl_user_data_out;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_01_ss_status_user_data_in <= cast_gw_dout_net_x22;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_23_ss_bram_addr <= convert_addr_dout_net_x14;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_23_ss_bram_data_in <= convert_din1_dout_net_x13;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_23_ss_bram_data_out_net <= rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_23_ss_bram_data_out;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_23_ss_bram_we <= convert_we_dout_net_x12;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_23_ss_ctrl_user_data_out_net <= rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_23_ss_ctrl_user_data_out;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_23_ss_status_user_data_in <= cast_gw_dout_net_x23;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_45_ss_bram_addr <= convert_addr_dout_net_x15;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_45_ss_bram_data_in <= convert_din1_dout_net_x15;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_45_ss_bram_data_out_net <= rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_45_ss_bram_data_out;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_45_ss_bram_we <= convert_we_dout_net_x14;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_45_ss_ctrl_user_data_out_net <= rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_45_ss_ctrl_user_data_out;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_45_ss_status_user_data_in <= cast_gw_dout_net_x19;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_67_ss_bram_addr <= convert_addr_dout_net_x10;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_67_ss_bram_data_in <= convert_din1_dout_net_x10;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_67_ss_bram_data_out_net <= rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_67_ss_bram_data_out;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_67_ss_bram_we <= convert_we_dout_net_x10;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_67_ss_ctrl_user_data_out_net <= rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_67_ss_ctrl_user_data_out;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_67_ss_status_user_data_in <= cast_gw_dout_net_x20;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_01_ss_bram_addr <= convert_addr_dout_net_x11;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_01_ss_bram_data_in <= convert_din1_dout_net_x11;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_01_ss_bram_data_out_net <= rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_01_ss_bram_data_out;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_01_ss_bram_we <= convert_we_dout_net_x11;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_01_ss_ctrl_user_data_out_net <= rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_01_ss_ctrl_user_data_out;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_01_ss_status_user_data_in <= cast_gw_dout_net_x21;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_23_ss_bram_addr <= convert_addr_dout_net_x12;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_23_ss_bram_data_in <= convert_din1_dout_net_x14;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_23_ss_bram_data_out_net <= rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_23_ss_bram_data_out;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_23_ss_bram_we <= convert_we_dout_net_x17;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_23_ss_ctrl_user_data_out_net <= rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_23_ss_ctrl_user_data_out;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_23_ss_status_user_data_in <= cast_gw_dout_net_x27;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_45_ss_bram_addr <= convert_addr_dout_net_x19;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_45_ss_bram_data_in <= convert_din1_dout_net_x19;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_45_ss_bram_data_out_net <= rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_45_ss_bram_data_out;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_45_ss_bram_we <= convert_we_dout_net_x18;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_45_ss_ctrl_user_data_out_net <= rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_45_ss_ctrl_user_data_out;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_45_ss_status_user_data_in <= cast_gw_dout_net_x28;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_67_ss_bram_addr <= convert_addr_dout_net_x20;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_67_ss_bram_data_in <= convert_din1_dout_net_x20;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_67_ss_bram_data_out_net <= rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_67_ss_bram_data_out;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_67_ss_bram_we <= convert_we_dout_net_x19;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_67_ss_ctrl_user_data_out_net <= rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_67_ss_ctrl_user_data_out;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_67_ss_status_user_data_in <= cast_gw_dout_net_x25;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_01_ss_bram_addr <= convert_addr_dout_net_x16;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_01_ss_bram_data_in <= convert_din1_dout_net_x16;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_01_ss_bram_data_out_net <= rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_01_ss_bram_data_out;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_01_ss_bram_we <= convert_we_dout_net_x15;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_01_ss_ctrl_user_data_out_net <= rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_01_ss_ctrl_user_data_out;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_01_ss_status_user_data_in <= cast_gw_dout_net_x24;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_23_ss_bram_addr <= convert_addr_dout_net_x17;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_23_ss_bram_data_in <= convert_din1_dout_net_x17;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_23_ss_bram_data_out_net <= rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_23_ss_bram_data_out;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_23_ss_bram_we <= convert_we_dout_net_x16;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_23_ss_ctrl_user_data_out_net <= rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_23_ss_ctrl_user_data_out;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_23_ss_status_user_data_in <= cast_gw_dout_net_x26;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_45_ss_bram_addr <= convert_addr_dout_net_x18;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_45_ss_bram_data_in <= convert_din1_dout_net_x18;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_45_ss_bram_data_out_net <= rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_45_ss_bram_data_out;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_45_ss_bram_we <= convert_we_dout_net_x28;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_45_ss_ctrl_user_data_out_net <= rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_45_ss_ctrl_user_data_out;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_45_ss_status_user_data_in <= cast_gw_dout_net_x16;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_67_ss_bram_addr <= convert_addr_dout_net_x6;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_67_ss_bram_data_in <= convert_din1_dout_net_x6;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_67_ss_bram_data_out_net <= rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_67_ss_bram_data_out;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_67_ss_bram_we <= convert_we_dout_net_x6;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_67_ss_ctrl_user_data_out_net <= rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_67_ss_ctrl_user_data_out;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_67_ss_status_user_data_in <= cast_gw_dout_net_x14;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_01_ss_bram_addr <= convert_addr_dout_net_x5;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_01_ss_bram_data_in <= convert_din1_dout_net_x5;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_01_ss_bram_data_out_net <= rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_01_ss_bram_data_out;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_01_ss_bram_we <= convert_we_dout_net_x5;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_01_ss_ctrl_user_data_out_net <= rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_01_ss_ctrl_user_data_out;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_01_ss_status_user_data_in <= cast_gw_dout_net_x15;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_23_ss_bram_addr <= convert_addr_dout_net_x9;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_23_ss_bram_data_in <= convert_din1_dout_net_x9;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_23_ss_bram_data_out_net <= rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_23_ss_bram_data_out;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_23_ss_bram_we <= convert_we_dout_net_x9;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_23_ss_ctrl_user_data_out_net <= rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_23_ss_ctrl_user_data_out;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_23_ss_status_user_data_in <= cast_gw_dout_net_x18;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_45_ss_bram_addr <= convert_addr_dout_net_x8;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_45_ss_bram_data_in <= convert_din1_dout_net_x8;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_45_ss_bram_data_out_net <= rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_45_ss_bram_data_out;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_45_ss_bram_we <= convert_we_dout_net_x7;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_45_ss_ctrl_user_data_out_net <= rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_45_ss_ctrl_user_data_out;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_45_ss_status_user_data_in <= cast_gw_dout_net_x17;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_67_ss_bram_addr <= convert_addr_dout_net_x7;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_67_ss_bram_data_in <= convert_din1_dout_net_x7;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_67_ss_bram_data_out_net <= rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_67_ss_bram_data_out;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_67_ss_bram_we <= convert_we_dout_net_x8;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_67_ss_ctrl_user_data_out_net <= rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_67_ss_ctrl_user_data_out;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_67_ss_status_user_data_in <= cast_gw_dout_net_x3;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_01_ss_bram_addr <= convert_addr_dout_net_x3;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_01_ss_bram_data_in <= convert_din1_dout_net_x3;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_01_ss_bram_data_out_net <= rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_01_ss_bram_data_out;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_01_ss_bram_we <= convert_we_dout_net_x2;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_01_ss_ctrl_user_data_out_net <= rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_01_ss_ctrl_user_data_out;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_01_ss_status_user_data_in <= cast_gw_dout_net_x2;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_23_ss_bram_addr <= convert_addr_dout_net_x2;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_23_ss_bram_data_in <= convert_din1_dout_net_x1;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_23_ss_bram_data_out_net <= rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_23_ss_bram_data_out;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_23_ss_bram_we <= convert_we_dout_net_x1;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_23_ss_ctrl_user_data_out_net <= rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_23_ss_ctrl_user_data_out;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_23_ss_status_user_data_in <= cast_gw_dout_net_x1;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_45_ss_bram_addr <= convert_addr_dout_net_x1;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_45_ss_bram_data_in <= convert_din1_dout_net_x2;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_45_ss_bram_data_out_net <= rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_45_ss_bram_data_out;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_45_ss_bram_we <= convert_we_dout_net_x4;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_45_ss_ctrl_user_data_out_net <= rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_45_ss_ctrl_user_data_out;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_45_ss_status_user_data_in <= cast_gw_dout_net_x13;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_67_ss_bram_addr <= convert_addr_dout_net_x4;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_67_ss_bram_data_in <= convert_din1_dout_net_x4;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_67_ss_bram_data_out_net <= rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_67_ss_bram_data_out;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_67_ss_bram_we <= convert_we_dout_net_x3;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_67_ss_ctrl_user_data_out_net <= rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_67_ss_ctrl_user_data_out;
  rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_67_ss_status_user_data_in <= cast_gw_dout_net_x12;
  rfdc_multi_eight_adcs_2048gsps_mts_sync_state0_user_data_in <= cast_gw_dout_net_x11;
  rfdc_multi_eight_adcs_2048gsps_mts_sync_state1_user_data_in <= cast_gw_dout_net_x10;
  rfdc_multi_eight_adcs_2048gsps_mts_sync_state2_user_data_in <= cast_gw_dout_net_x9;
  rfdc_multi_eight_adcs_2048gsps_mts_sync_state3_user_data_in <= cast_gw_dout_net_x8;
  rfdc_multi_eight_adcs_2048gsps_mts_sync_state4_user_data_in <= cast_gw_dout_net_x7;
  rfdc_multi_eight_adcs_2048gsps_mts_sync_state5_user_data_in <= cast_gw_dout_net_x6;
  rfdc_multi_eight_adcs_2048gsps_mts_sync_state6_user_data_in <= cast_gw_dout_net_x5;
  rfdc_multi_eight_adcs_2048gsps_mts_sync_state7_user_data_in <= cast_gw_dout_net_x4;
  clk_net <= clk_1;
  ce_net <= ce_1;
  edge_detect : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_edge_detect_x41 
  port map (
    in_x0 => slice_rst_cntrl_y_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    out_x0 => edge_op_y_net
  );
  gpio_led : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_gpio_led 
  port map (
    gpio_out => slice_msb_y_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    rfdc_multi_eight_adcs_2048gsps_mts_gpio_led_gateway => convert_dout_net
  );
  gpio_led1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_gpio_led1 
  port map (
    gpio_out => slice_led_cntrl_y_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    rfdc_multi_eight_adcs_2048gsps_mts_gpio_led1_gateway => convert_dout_net_x0
  );
  led_cntrl : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_led_cntrl 
  port map (
    rfdc_multi_eight_adcs_2048gsps_mts_led_cntrl_user_data_out => rfdc_multi_eight_adcs_2048gsps_mts_led_cntrl_user_data_out_net,
    in_led_cntrl => slice_led_cntrl_y_net
  );
  reg_cntrl : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_reg_cntrl 
  port map (
    rfdc_multi_eight_adcs_2048gsps_mts_reg_cntrl_user_data_out => rfdc_multi_eight_adcs_2048gsps_mts_reg_cntrl_user_data_out_net,
    in_rst_cntrl => slice_rst_cntrl_y_net
  );
  rfdc_v0_4 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4 
  port map (
    rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc0_dout => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc0_dout_net,
    rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc0_sync => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc0_sync_net,
    rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc1_dout => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc1_dout_net,
    rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc1_sync => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc1_sync_net,
    rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc2_dout => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc2_dout_net,
    rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc2_sync => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc2_sync_net,
    rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc3_dout => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc3_dout_net,
    rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc3_sync => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc3_sync_net,
    rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc4_dout => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc4_dout_net,
    rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc4_sync => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc4_sync_net,
    rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc5_dout => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc5_dout_net,
    rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc5_sync => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc5_sync_net,
    rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc6_dout => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc6_dout_net,
    rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc6_sync => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc6_sync_net,
    rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc7_dout => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc7_dout_net,
    rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc7_sync => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc7_sync_net
  );
  snapshot0_01 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_01 
  port map (
    in_d0 => slice_y_net,
    in_d1 => slice7_y_net,
    we => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc0_sync_net,
    trig => edge_op_y_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_01_ss_ctrl_user_data_out => rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_01_ss_ctrl_user_data_out_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    arm_out => arm_or_y_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_01_ss_bram_addr => convert_addr_dout_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_01_ss_bram_data_in => convert_din1_dout_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_01_ss_bram_we => convert_we_dout_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_01_ss_status_user_data_in => cast_gw_dout_net,
    goto_116627366_we1 => we_choice_y_net,
    goto_116627366_we4 => logical6_y_net
  );
  snapshot0_23 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_23 
  port map (
    in_d0 => slice1_y_net,
    in_d1 => slice6_y_net,
    we => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc0_sync_net,
    trig => edge_op_y_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_23_ss_ctrl_user_data_out => rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_23_ss_ctrl_user_data_out_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    arm_out => arm_or_y_net_x0,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_23_ss_bram_addr => convert_addr_dout_net_x0,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_23_ss_bram_data_in => convert_din1_dout_net_x0,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_23_ss_bram_we => convert_we_dout_net_x0,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_23_ss_status_user_data_in => cast_gw_dout_net_x0,
    goto_118533990_we1 => we_choice_y_net_x0,
    goto_118533990_we4 => logical6_y_net_x0
  );
  snapshot0_45 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_45 
  port map (
    in_d0 => slice2_y_net,
    in_d1 => slice5_y_net,
    we => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc0_sync_net,
    trig => edge_op_y_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_45_ss_ctrl_user_data_out => rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_45_ss_ctrl_user_data_out_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    arm_out => arm_or_y_net_x22,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_45_ss_bram_addr => convert_addr_dout_net_x24,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_45_ss_bram_data_in => convert_din1_dout_net_x23,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_45_ss_bram_we => convert_we_dout_net_x22,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_45_ss_status_user_data_in => cast_gw_dout_net_x32,
    goto_120440614_we1 => we_choice_y_net_x23,
    goto_120440614_we4 => logical6_y_net_x9
  );
  snapshot0_67 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_67 
  port map (
    in_d0 => slice3_y_net,
    in_d1 => slice4_y_net,
    we => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc0_sync_net,
    trig => edge_op_y_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_67_ss_ctrl_user_data_out => rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_67_ss_ctrl_user_data_out_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    arm_out => arm_or_y_net_x23,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_67_ss_bram_addr => convert_addr_dout_net_x23,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_67_ss_bram_data_in => convert_din1_dout_net_x24,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_67_ss_bram_we => convert_we_dout_net_x23,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_67_ss_status_user_data_in => cast_gw_dout_net_x33,
    goto_122347238_we1 => we_choice_y_net_x24,
    goto_122347238_we4 => logical6_y_net_x24
  );
  snapshot1_01 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_01 
  port map (
    in_d0 => slice8_y_net,
    in_d1 => slice15_y_net,
    we => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc1_sync_net,
    trig => edge_op_y_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_01_ss_ctrl_user_data_out => rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_01_ss_ctrl_user_data_out_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    arm_out => arm_or_y_net_x25,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_01_ss_bram_addr => convert_addr_dout_net_x25,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_01_ss_bram_data_in => convert_din1_dout_net_x25,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_01_ss_bram_we => convert_we_dout_net_x24,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_01_ss_status_user_data_in => cast_gw_dout_net_x29,
    goto_64606951_we1 => we_choice_y_net_x25,
    goto_64606951_we4 => logical6_y_net_x25
  );
  snapshot1_23 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_23 
  port map (
    in_d0 => slice9_y_net,
    in_d1 => slice14_y_net,
    we => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc1_sync_net,
    trig => edge_op_y_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_23_ss_ctrl_user_data_out => rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_23_ss_ctrl_user_data_out_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    arm_out => arm_or_y_net_x20,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_23_ss_bram_addr => convert_addr_dout_net_x21,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_23_ss_bram_data_in => convert_din1_dout_net_x21,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_23_ss_bram_we => convert_we_dout_net_x20,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_23_ss_status_user_data_in => cast_gw_dout_net_x30,
    goto_66513575_we1 => we_choice_y_net_x21,
    goto_66513575_we4 => logical6_y_net_x21
  );
  snapshot1_45 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_45 
  port map (
    in_d0 => slice10_y_net,
    in_d1 => slice13_y_net,
    we => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc1_sync_net,
    trig => edge_op_y_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_45_ss_ctrl_user_data_out => rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_45_ss_ctrl_user_data_out_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    arm_out => arm_or_y_net_x21,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_45_ss_bram_addr => convert_addr_dout_net_x22,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_45_ss_bram_data_in => convert_din1_dout_net_x22,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_45_ss_bram_we => convert_we_dout_net_x21,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_45_ss_status_user_data_in => cast_gw_dout_net_x31,
    goto_68420199_we1 => we_choice_y_net_x22,
    goto_68420199_we4 => logical6_y_net_x22
  );
  snapshot1_67 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_67 
  port map (
    in_d0 => slice11_y_net,
    in_d1 => slice12_y_net,
    we => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc1_sync_net,
    trig => edge_op_y_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_67_ss_ctrl_user_data_out => rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_67_ss_ctrl_user_data_out_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    arm_out => arm_or_y_net_x24,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_67_ss_bram_addr => convert_addr_dout_net_x28,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_67_ss_bram_data_in => convert_din1_dout_net_x29,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_67_ss_bram_we => convert_we_dout_net_x27,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_67_ss_status_user_data_in => cast_gw_dout_net_x37,
    goto_70326823_we1 => we_choice_y_net_x28,
    goto_70326823_we4 => logical6_y_net_x23
  );
  snapshot2_01 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_01 
  port map (
    in_d0 => slice22_y_net,
    in_d1 => slice21_y_net,
    we => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc2_sync_net,
    trig => edge_op_y_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_01_ss_ctrl_user_data_out => rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_01_ss_ctrl_user_data_out_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    arm_out => arm_or_y_net_x29,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_01_ss_bram_addr => convert_addr_dout_net_x29,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_01_ss_bram_data_in => convert_din1_dout_net_x28,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_01_ss_bram_we => convert_we_dout_net_x29,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_01_ss_status_user_data_in => cast_gw_dout_net_x38,
    goto_12586536_we1 => we_choice_y_net_x29,
    goto_12586536_we4 => logical6_y_net_x29
  );
  snapshot2_23 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_23 
  port map (
    in_d0 => slice23_y_net,
    in_d1 => slice20_y_net,
    we => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc2_sync_net,
    trig => edge_op_y_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_23_ss_ctrl_user_data_out => rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_23_ss_ctrl_user_data_out_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    arm_out => arm_or_y_net_x30,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_23_ss_bram_addr => convert_addr_dout_net_x30,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_23_ss_bram_data_in => convert_din1_dout_net_x30,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_23_ss_bram_we => convert_we_dout_net_x30,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_23_ss_status_user_data_in => cast_gw_dout_net_x35,
    goto_14493160_we1 => we_choice_y_net_x30,
    goto_14493160_we4 => logical6_y_net_x30
  );
  snapshot2_45 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_45 
  port map (
    in_d0 => slice16_y_net,
    in_d1 => slice19_y_net,
    we => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc2_sync_net,
    trig => edge_op_y_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_45_ss_ctrl_user_data_out => rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_45_ss_ctrl_user_data_out_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    arm_out => arm_or_y_net_x26,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_45_ss_bram_addr => convert_addr_dout_net_x26,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_45_ss_bram_data_in => convert_din1_dout_net_x26,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_45_ss_bram_we => convert_we_dout_net_x25,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_45_ss_status_user_data_in => cast_gw_dout_net_x34,
    goto_16399784_we1 => we_choice_y_net_x26,
    goto_16399784_we4 => logical6_y_net_x26
  );
  snapshot2_67 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_67 
  port map (
    in_d0 => slice17_y_net,
    in_d1 => slice18_y_net,
    we => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc2_sync_net,
    trig => edge_op_y_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_67_ss_ctrl_user_data_out => rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_67_ss_ctrl_user_data_out_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    arm_out => arm_or_y_net_x27,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_67_ss_bram_addr => convert_addr_dout_net_x27,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_67_ss_bram_data_in => convert_din1_dout_net_x27,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_67_ss_bram_we => convert_we_dout_net_x26,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_67_ss_status_user_data_in => cast_gw_dout_net_x36,
    goto_18306408_we1 => we_choice_y_net_x27,
    goto_18306408_we4 => logical6_y_net_x27
  );
  snapshot3_01 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_01 
  port map (
    in_d0 => slice30_y_net,
    in_d1 => slice29_y_net,
    we => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc3_sync_net,
    trig => edge_op_y_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_01_ss_ctrl_user_data_out => rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_01_ss_ctrl_user_data_out_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    arm_out => arm_or_y_net_x28,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_01_ss_bram_addr => convert_addr_dout_net_x13,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_01_ss_bram_data_in => convert_din1_dout_net_x12,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_01_ss_bram_we => convert_we_dout_net_x13,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_01_ss_status_user_data_in => cast_gw_dout_net_x22,
    goto_94783849_we1 => we_choice_y_net_x19,
    goto_94783849_we4 => logical6_y_net_x28
  );
  snapshot3_23 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_23 
  port map (
    in_d0 => slice31_y_net,
    in_d1 => slice28_y_net,
    we => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc3_sync_net,
    trig => edge_op_y_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_23_ss_ctrl_user_data_out => rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_23_ss_ctrl_user_data_out_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    arm_out => arm_or_y_net_x13,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_23_ss_bram_addr => convert_addr_dout_net_x14,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_23_ss_bram_data_in => convert_din1_dout_net_x13,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_23_ss_bram_we => convert_we_dout_net_x12,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_23_ss_status_user_data_in => cast_gw_dout_net_x23,
    goto_96690473_we1 => we_choice_y_net_x13,
    goto_96690473_we4 => logical6_y_net_x14
  );
  snapshot3_45 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_45 
  port map (
    in_d0 => slice24_y_net,
    in_d1 => slice27_y_net,
    we => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc3_sync_net,
    trig => edge_op_y_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_45_ss_ctrl_user_data_out => rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_45_ss_ctrl_user_data_out_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    arm_out => arm_or_y_net_x14,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_45_ss_bram_addr => convert_addr_dout_net_x15,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_45_ss_bram_data_in => convert_din1_dout_net_x15,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_45_ss_bram_we => convert_we_dout_net_x14,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_45_ss_status_user_data_in => cast_gw_dout_net_x19,
    goto_98597097_we1 => we_choice_y_net_x14,
    goto_98597097_we4 => logical6_y_net_x15
  );
  snapshot3_67 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_67 
  port map (
    in_d0 => slice25_y_net,
    in_d1 => slice26_y_net,
    we => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc3_sync_net,
    trig => edge_op_y_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_67_ss_ctrl_user_data_out => rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_67_ss_ctrl_user_data_out_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    arm_out => arm_or_y_net_x11,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_67_ss_bram_addr => convert_addr_dout_net_x10,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_67_ss_bram_data_in => convert_din1_dout_net_x10,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_67_ss_bram_we => convert_we_dout_net_x10,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_67_ss_status_user_data_in => cast_gw_dout_net_x20,
    goto_100503721_we1 => we_choice_y_net_x10,
    goto_100503721_we4 => logical6_y_net_x11
  );
  snapshot4_01 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_01 
  port map (
    in_d0 => slice32_y_net,
    in_d1 => slice61_y_net,
    we => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc4_sync_net,
    trig => edge_op_y_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_01_ss_ctrl_user_data_out => rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_01_ss_ctrl_user_data_out_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    arm_out => arm_or_y_net_x10,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_01_ss_bram_addr => convert_addr_dout_net_x11,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_01_ss_bram_data_in => convert_din1_dout_net_x11,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_01_ss_bram_we => convert_we_dout_net_x11,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_01_ss_status_user_data_in => cast_gw_dout_net_x21,
    goto_42763434_we1 => we_choice_y_net_x11,
    goto_42763434_we4 => logical6_y_net_x12
  );
  snapshot4_23 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_23 
  port map (
    in_d0 => slice33_y_net,
    in_d1 => slice60_y_net,
    we => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc4_sync_net,
    trig => edge_op_y_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_23_ss_ctrl_user_data_out => rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_23_ss_ctrl_user_data_out_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    arm_out => arm_or_y_net_x12,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_23_ss_bram_addr => convert_addr_dout_net_x12,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_23_ss_bram_data_in => convert_din1_dout_net_x14,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_23_ss_bram_we => convert_we_dout_net_x17,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_23_ss_status_user_data_in => cast_gw_dout_net_x27,
    goto_44670058_we1 => we_choice_y_net_x12,
    goto_44670058_we4 => logical6_y_net_x13
  );
  snapshot4_45 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_45 
  port map (
    in_d0 => slice44_y_net,
    in_d1 => slice59_y_net,
    we => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc4_sync_net,
    trig => edge_op_y_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_45_ss_ctrl_user_data_out => rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_45_ss_ctrl_user_data_out_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    arm_out => arm_or_y_net_x18,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_45_ss_bram_addr => convert_addr_dout_net_x19,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_45_ss_bram_data_in => convert_din1_dout_net_x19,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_45_ss_bram_we => convert_we_dout_net_x18,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_45_ss_status_user_data_in => cast_gw_dout_net_x28,
    goto_46576682_we1 => we_choice_y_net_x18,
    goto_46576682_we4 => logical6_y_net_x19
  );
  snapshot4_67 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_67 
  port map (
    in_d0 => slice55_y_net,
    in_d1 => slice58_y_net,
    we => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc4_sync_net,
    trig => edge_op_y_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_67_ss_ctrl_user_data_out => rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_67_ss_ctrl_user_data_out_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    arm_out => arm_or_y_net_x19,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_67_ss_bram_addr => convert_addr_dout_net_x20,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_67_ss_bram_data_in => convert_din1_dout_net_x20,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_67_ss_bram_we => convert_we_dout_net_x19,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_67_ss_status_user_data_in => cast_gw_dout_net_x25,
    goto_48483306_we1 => we_choice_y_net_x20,
    goto_48483306_we4 => logical6_y_net_x20
  );
  snapshot5_01 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_01 
  port map (
    in_d0 => slice62_y_net,
    in_d1 => slice39_y_net,
    we => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc5_sync_net,
    trig => edge_op_y_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_01_ss_ctrl_user_data_out => rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_01_ss_ctrl_user_data_out_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    arm_out => arm_or_y_net_x15,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_01_ss_bram_addr => convert_addr_dout_net_x16,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_01_ss_bram_data_in => convert_din1_dout_net_x16,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_01_ss_bram_we => convert_we_dout_net_x15,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_01_ss_status_user_data_in => cast_gw_dout_net_x24,
    goto_124960747_we1 => we_choice_y_net_x16,
    goto_124960747_we4 => logical6_y_net_x16
  );
  snapshot5_23 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_23 
  port map (
    in_d0 => slice63_y_net,
    in_d1 => slice38_y_net,
    we => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc5_sync_net,
    trig => edge_op_y_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_23_ss_ctrl_user_data_out => rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_23_ss_ctrl_user_data_out_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    arm_out => arm_or_y_net_x16,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_23_ss_bram_addr => convert_addr_dout_net_x17,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_23_ss_bram_data_in => convert_din1_dout_net_x17,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_23_ss_bram_we => convert_we_dout_net_x16,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_23_ss_status_user_data_in => cast_gw_dout_net_x26,
    goto_126867371_we1 => we_choice_y_net_x15,
    goto_126867371_we4 => logical6_y_net_x17
  );
  snapshot5_45 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_45 
  port map (
    in_d0 => slice34_y_net,
    in_d1 => slice37_y_net,
    we => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc5_sync_net,
    trig => edge_op_y_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_45_ss_ctrl_user_data_out => rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_45_ss_ctrl_user_data_out_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    arm_out => arm_or_y_net_x17,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_45_ss_bram_addr => convert_addr_dout_net_x18,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_45_ss_bram_data_in => convert_din1_dout_net_x18,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_45_ss_bram_we => convert_we_dout_net_x28,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_45_ss_status_user_data_in => cast_gw_dout_net_x16,
    goto_128773995_we1 => we_choice_y_net_x17,
    goto_128773995_we4 => logical6_y_net_x18
  );
  snapshot5_67 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_67 
  port map (
    in_d0 => slice35_y_net,
    in_d1 => slice36_y_net,
    we => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc5_sync_net,
    trig => edge_op_y_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_67_ss_ctrl_user_data_out => rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_67_ss_ctrl_user_data_out_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    arm_out => arm_or_y_net_x7,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_67_ss_bram_addr => convert_addr_dout_net_x6,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_67_ss_bram_data_in => convert_din1_dout_net_x6,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_67_ss_bram_we => convert_we_dout_net_x6,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_67_ss_status_user_data_in => cast_gw_dout_net_x14,
    goto_130680619_we1 => we_choice_y_net_x7,
    goto_130680619_we4 => logical6_y_net_x7
  );
  snapshot6_01 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_01 
  port map (
    in_d0 => slice47_y_net,
    in_d1 => slice46_y_net,
    we => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc6_sync_net,
    trig => edge_op_y_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_01_ss_ctrl_user_data_out => rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_01_ss_ctrl_user_data_out_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    arm_out => arm_or_y_net_x6,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_01_ss_bram_addr => convert_addr_dout_net_x5,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_01_ss_bram_data_in => convert_din1_dout_net_x5,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_01_ss_bram_we => convert_we_dout_net_x5,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_01_ss_status_user_data_in => cast_gw_dout_net_x15,
    goto_72940332_we1 => we_choice_y_net_x5,
    goto_72940332_we4 => logical6_y_net_x6
  );
  snapshot6_23 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_23 
  port map (
    in_d0 => slice48_y_net,
    in_d1 => slice45_y_net,
    we => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc6_sync_net,
    trig => edge_op_y_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_23_ss_ctrl_user_data_out => rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_23_ss_ctrl_user_data_out_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    arm_out => arm_or_y_net_x5,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_23_ss_bram_addr => convert_addr_dout_net_x9,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_23_ss_bram_data_in => convert_din1_dout_net_x9,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_23_ss_bram_we => convert_we_dout_net_x9,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_23_ss_status_user_data_in => cast_gw_dout_net_x18,
    goto_74846956_we1 => we_choice_y_net_x6,
    goto_74846956_we4 => logical6_y_net_x5
  );
  snapshot6_45 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_45 
  port map (
    in_d0 => slice40_y_net,
    in_d1 => slice43_y_net,
    we => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc6_sync_net,
    trig => edge_op_y_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_45_ss_ctrl_user_data_out => rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_45_ss_ctrl_user_data_out_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    arm_out => arm_or_y_net_x9,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_45_ss_bram_addr => convert_addr_dout_net_x8,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_45_ss_bram_data_in => convert_din1_dout_net_x8,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_45_ss_bram_we => convert_we_dout_net_x7,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_45_ss_status_user_data_in => cast_gw_dout_net_x17,
    goto_76753580_we1 => we_choice_y_net_x9,
    goto_76753580_we4 => logical6_y_net_x10
  );
  snapshot6_67 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_67 
  port map (
    in_d0 => slice41_y_net,
    in_d1 => slice42_y_net,
    we => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc6_sync_net,
    trig => edge_op_y_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_67_ss_ctrl_user_data_out => rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_67_ss_ctrl_user_data_out_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    arm_out => arm_or_y_net_x8,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_67_ss_bram_addr => convert_addr_dout_net_x7,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_67_ss_bram_data_in => convert_din1_dout_net_x7,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_67_ss_bram_we => convert_we_dout_net_x8,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_67_ss_status_user_data_in => cast_gw_dout_net_x3,
    goto_78660204_we1 => we_choice_y_net_x8,
    goto_78660204_we4 => logical6_y_net_x8
  );
  snapshot7_01 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_01 
  port map (
    in_d0 => slice56_y_net,
    in_d1 => slice54_y_net,
    we => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc7_sync_net,
    trig => edge_op_y_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_01_ss_ctrl_user_data_out => rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_01_ss_ctrl_user_data_out_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    arm_out => arm_or_y_net_x3,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_01_ss_bram_addr => convert_addr_dout_net_x3,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_01_ss_bram_data_in => convert_din1_dout_net_x3,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_01_ss_bram_we => convert_we_dout_net_x2,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_01_ss_status_user_data_in => cast_gw_dout_net_x2,
    goto_20919917_we1 => we_choice_y_net_x3,
    goto_20919917_we4 => logical6_y_net_x3
  );
  snapshot7_23 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_23 
  port map (
    in_d0 => slice57_y_net,
    in_d1 => slice53_y_net,
    we => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc7_sync_net,
    trig => edge_op_y_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_23_ss_ctrl_user_data_out => rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_23_ss_ctrl_user_data_out_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    arm_out => arm_or_y_net_x2,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_23_ss_bram_addr => convert_addr_dout_net_x2,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_23_ss_bram_data_in => convert_din1_dout_net_x1,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_23_ss_bram_we => convert_we_dout_net_x1,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_23_ss_status_user_data_in => cast_gw_dout_net_x1,
    goto_22826541_we1 => we_choice_y_net_x2,
    goto_22826541_we4 => logical6_y_net_x1
  );
  snapshot7_45 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_45 
  port map (
    in_d0 => slice49_y_net,
    in_d1 => slice52_y_net,
    we => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc7_sync_net,
    trig => edge_op_y_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_45_ss_ctrl_user_data_out => rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_45_ss_ctrl_user_data_out_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    arm_out => arm_or_y_net_x1,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_45_ss_bram_addr => convert_addr_dout_net_x1,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_45_ss_bram_data_in => convert_din1_dout_net_x2,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_45_ss_bram_we => convert_we_dout_net_x4,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_45_ss_status_user_data_in => cast_gw_dout_net_x13,
    goto_24733165_we1 => we_choice_y_net_x1,
    goto_24733165_we4 => logical6_y_net_x2
  );
  snapshot7_67 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_67 
  port map (
    in_d0 => slice50_y_net,
    in_d1 => slice51_y_net,
    we => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc7_sync_net,
    trig => edge_op_y_net,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_67_ss_ctrl_user_data_out => rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_67_ss_ctrl_user_data_out_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    arm_out => arm_or_y_net_x4,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_67_ss_bram_addr => convert_addr_dout_net_x4,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_67_ss_bram_data_in => convert_din1_dout_net_x4,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_67_ss_bram_we => convert_we_dout_net_x3,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_67_ss_status_user_data_in => cast_gw_dout_net_x12,
    goto_26639789_we1 => we_choice_y_net_x4,
    goto_26639789_we4 => logical6_y_net_x4
  );
  sync_state0 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_sync_state0 
  port map (
    out_sync_state => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc0_sync_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    rfdc_multi_eight_adcs_2048gsps_mts_sync_state0_user_data_in => cast_gw_dout_net_x11
  );
  sync_state1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_sync_state1 
  port map (
    out_sync_state => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc1_sync_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    rfdc_multi_eight_adcs_2048gsps_mts_sync_state1_user_data_in => cast_gw_dout_net_x10
  );
  sync_state2 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_sync_state2 
  port map (
    out_sync_state => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc2_sync_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    rfdc_multi_eight_adcs_2048gsps_mts_sync_state2_user_data_in => cast_gw_dout_net_x9
  );
  sync_state3 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_sync_state3 
  port map (
    out_sync_state => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc3_sync_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    rfdc_multi_eight_adcs_2048gsps_mts_sync_state3_user_data_in => cast_gw_dout_net_x8
  );
  sync_state4 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_sync_state4 
  port map (
    out_sync_state => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc4_sync_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    rfdc_multi_eight_adcs_2048gsps_mts_sync_state4_user_data_in => cast_gw_dout_net_x7
  );
  sync_state5 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_sync_state5 
  port map (
    out_sync_state => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc5_sync_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    rfdc_multi_eight_adcs_2048gsps_mts_sync_state5_user_data_in => cast_gw_dout_net_x6
  );
  sync_state6 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_sync_state6 
  port map (
    out_sync_state => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc6_sync_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    rfdc_multi_eight_adcs_2048gsps_mts_sync_state6_user_data_in => cast_gw_dout_net_x5
  );
  sync_state7 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_sync_state7 
  port map (
    out_sync_state => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc7_sync_net,
    clk_1 => clk_net,
    ce_1 => ce_net,
    rfdc_multi_eight_adcs_2048gsps_mts_sync_state7_user_data_in => cast_gw_dout_net_x4
  );
  slice : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 0,
    new_msb => 15,
    x_width => 128,
    y_width => 16
  )
  port map (
    x => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc0_dout_net,
    y => slice_y_net
  );
  slice1 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 32,
    new_msb => 47,
    x_width => 128,
    y_width => 16
  )
  port map (
    x => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc0_dout_net,
    y => slice1_y_net
  );
  slice10 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 64,
    new_msb => 79,
    x_width => 128,
    y_width => 16
  )
  port map (
    x => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc1_dout_net,
    y => slice10_y_net
  );
  slice11 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 96,
    new_msb => 111,
    x_width => 128,
    y_width => 16
  )
  port map (
    x => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc1_dout_net,
    y => slice11_y_net
  );
  slice12 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 112,
    new_msb => 127,
    x_width => 128,
    y_width => 16
  )
  port map (
    x => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc1_dout_net,
    y => slice12_y_net
  );
  slice13 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 80,
    new_msb => 95,
    x_width => 128,
    y_width => 16
  )
  port map (
    x => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc1_dout_net,
    y => slice13_y_net
  );
  slice14 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 48,
    new_msb => 63,
    x_width => 128,
    y_width => 16
  )
  port map (
    x => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc1_dout_net,
    y => slice14_y_net
  );
  slice15 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 16,
    new_msb => 31,
    x_width => 128,
    y_width => 16
  )
  port map (
    x => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc1_dout_net,
    y => slice15_y_net
  );
  slice16 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 64,
    new_msb => 79,
    x_width => 128,
    y_width => 16
  )
  port map (
    x => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc2_dout_net,
    y => slice16_y_net
  );
  slice17 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 96,
    new_msb => 111,
    x_width => 128,
    y_width => 16
  )
  port map (
    x => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc2_dout_net,
    y => slice17_y_net
  );
  slice18 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 112,
    new_msb => 127,
    x_width => 128,
    y_width => 16
  )
  port map (
    x => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc2_dout_net,
    y => slice18_y_net
  );
  slice19 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 80,
    new_msb => 95,
    x_width => 128,
    y_width => 16
  )
  port map (
    x => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc2_dout_net,
    y => slice19_y_net
  );
  slice2 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 64,
    new_msb => 79,
    x_width => 128,
    y_width => 16
  )
  port map (
    x => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc0_dout_net,
    y => slice2_y_net
  );
  slice20 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 48,
    new_msb => 63,
    x_width => 128,
    y_width => 16
  )
  port map (
    x => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc2_dout_net,
    y => slice20_y_net
  );
  slice21 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 16,
    new_msb => 31,
    x_width => 128,
    y_width => 16
  )
  port map (
    x => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc2_dout_net,
    y => slice21_y_net
  );
  slice22 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 0,
    new_msb => 15,
    x_width => 128,
    y_width => 16
  )
  port map (
    x => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc2_dout_net,
    y => slice22_y_net
  );
  slice23 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 32,
    new_msb => 47,
    x_width => 128,
    y_width => 16
  )
  port map (
    x => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc2_dout_net,
    y => slice23_y_net
  );
  slice24 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 64,
    new_msb => 79,
    x_width => 128,
    y_width => 16
  )
  port map (
    x => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc3_dout_net,
    y => slice24_y_net
  );
  slice25 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 96,
    new_msb => 111,
    x_width => 128,
    y_width => 16
  )
  port map (
    x => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc3_dout_net,
    y => slice25_y_net
  );
  slice26 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 112,
    new_msb => 127,
    x_width => 128,
    y_width => 16
  )
  port map (
    x => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc3_dout_net,
    y => slice26_y_net
  );
  slice27 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 80,
    new_msb => 95,
    x_width => 128,
    y_width => 16
  )
  port map (
    x => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc3_dout_net,
    y => slice27_y_net
  );
  slice28 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 48,
    new_msb => 63,
    x_width => 128,
    y_width => 16
  )
  port map (
    x => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc3_dout_net,
    y => slice28_y_net
  );
  slice29 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 16,
    new_msb => 31,
    x_width => 128,
    y_width => 16
  )
  port map (
    x => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc3_dout_net,
    y => slice29_y_net
  );
  slice3 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 96,
    new_msb => 111,
    x_width => 128,
    y_width => 16
  )
  port map (
    x => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc0_dout_net,
    y => slice3_y_net
  );
  slice30 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 0,
    new_msb => 15,
    x_width => 128,
    y_width => 16
  )
  port map (
    x => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc3_dout_net,
    y => slice30_y_net
  );
  slice31 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 32,
    new_msb => 47,
    x_width => 128,
    y_width => 16
  )
  port map (
    x => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc3_dout_net,
    y => slice31_y_net
  );
  slice32 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 0,
    new_msb => 15,
    x_width => 128,
    y_width => 16
  )
  port map (
    x => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc4_dout_net,
    y => slice32_y_net
  );
  slice33 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 32,
    new_msb => 47,
    x_width => 128,
    y_width => 16
  )
  port map (
    x => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc4_dout_net,
    y => slice33_y_net
  );
  slice34 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 64,
    new_msb => 79,
    x_width => 128,
    y_width => 16
  )
  port map (
    x => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc5_dout_net,
    y => slice34_y_net
  );
  slice35 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 96,
    new_msb => 111,
    x_width => 128,
    y_width => 16
  )
  port map (
    x => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc5_dout_net,
    y => slice35_y_net
  );
  slice36 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 112,
    new_msb => 127,
    x_width => 128,
    y_width => 16
  )
  port map (
    x => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc5_dout_net,
    y => slice36_y_net
  );
  slice37 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 80,
    new_msb => 95,
    x_width => 128,
    y_width => 16
  )
  port map (
    x => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc5_dout_net,
    y => slice37_y_net
  );
  slice38 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 48,
    new_msb => 63,
    x_width => 128,
    y_width => 16
  )
  port map (
    x => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc5_dout_net,
    y => slice38_y_net
  );
  slice39 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 16,
    new_msb => 31,
    x_width => 128,
    y_width => 16
  )
  port map (
    x => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc5_dout_net,
    y => slice39_y_net
  );
  slice4 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 112,
    new_msb => 127,
    x_width => 128,
    y_width => 16
  )
  port map (
    x => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc0_dout_net,
    y => slice4_y_net
  );
  slice40 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 64,
    new_msb => 79,
    x_width => 128,
    y_width => 16
  )
  port map (
    x => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc6_dout_net,
    y => slice40_y_net
  );
  slice41 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 96,
    new_msb => 111,
    x_width => 128,
    y_width => 16
  )
  port map (
    x => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc6_dout_net,
    y => slice41_y_net
  );
  slice42 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 112,
    new_msb => 127,
    x_width => 128,
    y_width => 16
  )
  port map (
    x => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc6_dout_net,
    y => slice42_y_net
  );
  slice43 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 80,
    new_msb => 95,
    x_width => 128,
    y_width => 16
  )
  port map (
    x => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc6_dout_net,
    y => slice43_y_net
  );
  slice44 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 64,
    new_msb => 79,
    x_width => 128,
    y_width => 16
  )
  port map (
    x => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc4_dout_net,
    y => slice44_y_net
  );
  slice45 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 48,
    new_msb => 63,
    x_width => 128,
    y_width => 16
  )
  port map (
    x => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc6_dout_net,
    y => slice45_y_net
  );
  slice46 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 16,
    new_msb => 31,
    x_width => 128,
    y_width => 16
  )
  port map (
    x => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc6_dout_net,
    y => slice46_y_net
  );
  slice47 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 0,
    new_msb => 15,
    x_width => 128,
    y_width => 16
  )
  port map (
    x => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc6_dout_net,
    y => slice47_y_net
  );
  slice48 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 32,
    new_msb => 47,
    x_width => 128,
    y_width => 16
  )
  port map (
    x => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc6_dout_net,
    y => slice48_y_net
  );
  slice49 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 64,
    new_msb => 79,
    x_width => 128,
    y_width => 16
  )
  port map (
    x => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc7_dout_net,
    y => slice49_y_net
  );
  slice5 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 80,
    new_msb => 95,
    x_width => 128,
    y_width => 16
  )
  port map (
    x => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc0_dout_net,
    y => slice5_y_net
  );
  slice50 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 96,
    new_msb => 111,
    x_width => 128,
    y_width => 16
  )
  port map (
    x => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc7_dout_net,
    y => slice50_y_net
  );
  slice51 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 112,
    new_msb => 127,
    x_width => 128,
    y_width => 16
  )
  port map (
    x => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc7_dout_net,
    y => slice51_y_net
  );
  slice52 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 80,
    new_msb => 95,
    x_width => 128,
    y_width => 16
  )
  port map (
    x => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc7_dout_net,
    y => slice52_y_net
  );
  slice53 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 48,
    new_msb => 63,
    x_width => 128,
    y_width => 16
  )
  port map (
    x => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc7_dout_net,
    y => slice53_y_net
  );
  slice54 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 16,
    new_msb => 31,
    x_width => 128,
    y_width => 16
  )
  port map (
    x => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc7_dout_net,
    y => slice54_y_net
  );
  slice55 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 96,
    new_msb => 111,
    x_width => 128,
    y_width => 16
  )
  port map (
    x => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc4_dout_net,
    y => slice55_y_net
  );
  slice56 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 0,
    new_msb => 15,
    x_width => 128,
    y_width => 16
  )
  port map (
    x => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc7_dout_net,
    y => slice56_y_net
  );
  slice57 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 32,
    new_msb => 47,
    x_width => 128,
    y_width => 16
  )
  port map (
    x => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc7_dout_net,
    y => slice57_y_net
  );
  slice58 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 112,
    new_msb => 127,
    x_width => 128,
    y_width => 16
  )
  port map (
    x => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc4_dout_net,
    y => slice58_y_net
  );
  slice59 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 80,
    new_msb => 95,
    x_width => 128,
    y_width => 16
  )
  port map (
    x => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc4_dout_net,
    y => slice59_y_net
  );
  slice6 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 48,
    new_msb => 63,
    x_width => 128,
    y_width => 16
  )
  port map (
    x => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc0_dout_net,
    y => slice6_y_net
  );
  slice60 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 48,
    new_msb => 63,
    x_width => 128,
    y_width => 16
  )
  port map (
    x => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc4_dout_net,
    y => slice60_y_net
  );
  slice61 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 16,
    new_msb => 31,
    x_width => 128,
    y_width => 16
  )
  port map (
    x => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc4_dout_net,
    y => slice61_y_net
  );
  slice62 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 0,
    new_msb => 15,
    x_width => 128,
    y_width => 16
  )
  port map (
    x => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc5_dout_net,
    y => slice62_y_net
  );
  slice63 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 32,
    new_msb => 47,
    x_width => 128,
    y_width => 16
  )
  port map (
    x => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc5_dout_net,
    y => slice63_y_net
  );
  slice7 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 16,
    new_msb => 31,
    x_width => 128,
    y_width => 16
  )
  port map (
    x => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc0_dout_net,
    y => slice7_y_net
  );
  slice8 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 0,
    new_msb => 15,
    x_width => 128,
    y_width => 16
  )
  port map (
    x => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc1_dout_net,
    y => slice8_y_net
  );
  slice9 : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 32,
    new_msb => 47,
    x_width => 128,
    y_width => 16
  )
  port map (
    x => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc1_dout_net,
    y => slice9_y_net
  );
  counter_led : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlcounter_free 
  generic map (
    core_name0 => "rfdc_multi_eight_adcs_2048gsps_mts_c_counter_binary_v12_0_i0",
    op_arith => xlUnsigned,
    op_width => 28
  )
  port map (
    en => "1",
    rst => "0",
    clr => '0',
    clk => clk_net,
    ce => ce_net,
    op => counter_led_op_net
  );
  slice_msb : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_xlslice 
  generic map (
    new_lsb => 27,
    new_msb => 27,
    x_width => 28,
    y_width => 1
  )
  port map (
    x => counter_led_op_net,
    y => slice_msb_y_net
  );
end structural;
-- Generated from Simulink block 
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts_default_clock_driver is
  port (
    rfdc_multi_eight_adcs_2048gsps_mts_sysclk : in std_logic;
    rfdc_multi_eight_adcs_2048gsps_mts_sysce : in std_logic;
    rfdc_multi_eight_adcs_2048gsps_mts_sysclr : in std_logic;
    rfdc_multi_eight_adcs_2048gsps_mts_clk1 : out std_logic;
    rfdc_multi_eight_adcs_2048gsps_mts_ce1 : out std_logic
  );
end rfdc_multi_eight_adcs_2048gsps_mts_default_clock_driver;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts_default_clock_driver is 
begin
  clockdriver : entity xil_defaultlib.xlclockdriver 
  generic map (
    period => 1,
    log_2_period => 1
  )
  port map (
    sysclk => rfdc_multi_eight_adcs_2048gsps_mts_sysclk,
    sysce => rfdc_multi_eight_adcs_2048gsps_mts_sysce,
    sysclr => rfdc_multi_eight_adcs_2048gsps_mts_sysclr,
    clk => rfdc_multi_eight_adcs_2048gsps_mts_clk1,
    ce => rfdc_multi_eight_adcs_2048gsps_mts_ce1
  );
end structural;
-- Generated from Simulink block 
library IEEE;
use IEEE.std_logic_1164.all;
library xil_defaultlib;
use xil_defaultlib.conv_pkg.all;
entity rfdc_multi_eight_adcs_2048gsps_mts is
  port (
    rfdc_multi_eight_adcs_2048gsps_mts_led_cntrl_user_data_out : in std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_reg_cntrl_user_data_out : in std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc0_dout : in std_logic_vector( 128-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc0_sync : in std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc1_dout : in std_logic_vector( 128-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc1_sync : in std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc2_dout : in std_logic_vector( 128-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc2_sync : in std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc3_dout : in std_logic_vector( 128-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc3_sync : in std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc4_dout : in std_logic_vector( 128-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc4_sync : in std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc5_dout : in std_logic_vector( 128-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc5_sync : in std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc6_dout : in std_logic_vector( 128-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc6_sync : in std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc7_dout : in std_logic_vector( 128-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc7_sync : in std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_01_ss_bram_data_out : in std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_01_ss_ctrl_user_data_out : in std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_23_ss_bram_data_out : in std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_23_ss_ctrl_user_data_out : in std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_45_ss_bram_data_out : in std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_45_ss_ctrl_user_data_out : in std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_67_ss_bram_data_out : in std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_67_ss_ctrl_user_data_out : in std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_01_ss_bram_data_out : in std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_01_ss_ctrl_user_data_out : in std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_23_ss_bram_data_out : in std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_23_ss_ctrl_user_data_out : in std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_45_ss_bram_data_out : in std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_45_ss_ctrl_user_data_out : in std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_67_ss_bram_data_out : in std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_67_ss_ctrl_user_data_out : in std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_01_ss_bram_data_out : in std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_01_ss_ctrl_user_data_out : in std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_23_ss_bram_data_out : in std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_23_ss_ctrl_user_data_out : in std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_45_ss_bram_data_out : in std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_45_ss_ctrl_user_data_out : in std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_67_ss_bram_data_out : in std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_67_ss_ctrl_user_data_out : in std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_01_ss_bram_data_out : in std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_01_ss_ctrl_user_data_out : in std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_23_ss_bram_data_out : in std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_23_ss_ctrl_user_data_out : in std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_45_ss_bram_data_out : in std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_45_ss_ctrl_user_data_out : in std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_67_ss_bram_data_out : in std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_67_ss_ctrl_user_data_out : in std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_01_ss_bram_data_out : in std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_01_ss_ctrl_user_data_out : in std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_23_ss_bram_data_out : in std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_23_ss_ctrl_user_data_out : in std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_45_ss_bram_data_out : in std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_45_ss_ctrl_user_data_out : in std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_67_ss_bram_data_out : in std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_67_ss_ctrl_user_data_out : in std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_01_ss_bram_data_out : in std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_01_ss_ctrl_user_data_out : in std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_23_ss_bram_data_out : in std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_23_ss_ctrl_user_data_out : in std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_45_ss_bram_data_out : in std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_45_ss_ctrl_user_data_out : in std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_67_ss_bram_data_out : in std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_67_ss_ctrl_user_data_out : in std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_01_ss_bram_data_out : in std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_01_ss_ctrl_user_data_out : in std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_23_ss_bram_data_out : in std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_23_ss_ctrl_user_data_out : in std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_45_ss_bram_data_out : in std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_45_ss_ctrl_user_data_out : in std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_67_ss_bram_data_out : in std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_67_ss_ctrl_user_data_out : in std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_01_ss_bram_data_out : in std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_01_ss_ctrl_user_data_out : in std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_23_ss_bram_data_out : in std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_23_ss_ctrl_user_data_out : in std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_45_ss_bram_data_out : in std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_45_ss_ctrl_user_data_out : in std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_67_ss_bram_data_out : in std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_67_ss_ctrl_user_data_out : in std_logic_vector( 32-1 downto 0 );
    clk : in std_logic;
    rfdc_multi_eight_adcs_2048gsps_mts_gpio_led_gateway : out std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_gpio_led1_gateway : out std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_01_ss_bram_addr : out std_logic_vector( 10-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_01_ss_bram_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_01_ss_bram_we : out std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_01_ss_status_user_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_23_ss_bram_addr : out std_logic_vector( 10-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_23_ss_bram_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_23_ss_bram_we : out std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_23_ss_status_user_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_45_ss_bram_addr : out std_logic_vector( 10-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_45_ss_bram_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_45_ss_bram_we : out std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_45_ss_status_user_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_67_ss_bram_addr : out std_logic_vector( 10-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_67_ss_bram_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_67_ss_bram_we : out std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_67_ss_status_user_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_01_ss_bram_addr : out std_logic_vector( 10-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_01_ss_bram_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_01_ss_bram_we : out std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_01_ss_status_user_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_23_ss_bram_addr : out std_logic_vector( 10-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_23_ss_bram_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_23_ss_bram_we : out std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_23_ss_status_user_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_45_ss_bram_addr : out std_logic_vector( 10-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_45_ss_bram_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_45_ss_bram_we : out std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_45_ss_status_user_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_67_ss_bram_addr : out std_logic_vector( 10-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_67_ss_bram_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_67_ss_bram_we : out std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_67_ss_status_user_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_01_ss_bram_addr : out std_logic_vector( 10-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_01_ss_bram_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_01_ss_bram_we : out std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_01_ss_status_user_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_23_ss_bram_addr : out std_logic_vector( 10-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_23_ss_bram_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_23_ss_bram_we : out std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_23_ss_status_user_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_45_ss_bram_addr : out std_logic_vector( 10-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_45_ss_bram_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_45_ss_bram_we : out std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_45_ss_status_user_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_67_ss_bram_addr : out std_logic_vector( 10-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_67_ss_bram_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_67_ss_bram_we : out std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_67_ss_status_user_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_01_ss_bram_addr : out std_logic_vector( 10-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_01_ss_bram_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_01_ss_bram_we : out std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_01_ss_status_user_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_23_ss_bram_addr : out std_logic_vector( 10-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_23_ss_bram_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_23_ss_bram_we : out std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_23_ss_status_user_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_45_ss_bram_addr : out std_logic_vector( 10-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_45_ss_bram_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_45_ss_bram_we : out std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_45_ss_status_user_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_67_ss_bram_addr : out std_logic_vector( 10-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_67_ss_bram_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_67_ss_bram_we : out std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_67_ss_status_user_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_01_ss_bram_addr : out std_logic_vector( 10-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_01_ss_bram_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_01_ss_bram_we : out std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_01_ss_status_user_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_23_ss_bram_addr : out std_logic_vector( 10-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_23_ss_bram_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_23_ss_bram_we : out std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_23_ss_status_user_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_45_ss_bram_addr : out std_logic_vector( 10-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_45_ss_bram_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_45_ss_bram_we : out std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_45_ss_status_user_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_67_ss_bram_addr : out std_logic_vector( 10-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_67_ss_bram_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_67_ss_bram_we : out std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_67_ss_status_user_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_01_ss_bram_addr : out std_logic_vector( 10-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_01_ss_bram_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_01_ss_bram_we : out std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_01_ss_status_user_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_23_ss_bram_addr : out std_logic_vector( 10-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_23_ss_bram_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_23_ss_bram_we : out std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_23_ss_status_user_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_45_ss_bram_addr : out std_logic_vector( 10-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_45_ss_bram_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_45_ss_bram_we : out std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_45_ss_status_user_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_67_ss_bram_addr : out std_logic_vector( 10-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_67_ss_bram_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_67_ss_bram_we : out std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_67_ss_status_user_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_01_ss_bram_addr : out std_logic_vector( 10-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_01_ss_bram_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_01_ss_bram_we : out std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_01_ss_status_user_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_23_ss_bram_addr : out std_logic_vector( 10-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_23_ss_bram_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_23_ss_bram_we : out std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_23_ss_status_user_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_45_ss_bram_addr : out std_logic_vector( 10-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_45_ss_bram_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_45_ss_bram_we : out std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_45_ss_status_user_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_67_ss_bram_addr : out std_logic_vector( 10-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_67_ss_bram_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_67_ss_bram_we : out std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_67_ss_status_user_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_01_ss_bram_addr : out std_logic_vector( 10-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_01_ss_bram_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_01_ss_bram_we : out std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_01_ss_status_user_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_23_ss_bram_addr : out std_logic_vector( 10-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_23_ss_bram_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_23_ss_bram_we : out std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_23_ss_status_user_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_45_ss_bram_addr : out std_logic_vector( 10-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_45_ss_bram_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_45_ss_bram_we : out std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_45_ss_status_user_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_67_ss_bram_addr : out std_logic_vector( 10-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_67_ss_bram_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_67_ss_bram_we : out std_logic_vector( 1-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_67_ss_status_user_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_sync_state0_user_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_sync_state1_user_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_sync_state2_user_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_sync_state3_user_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_sync_state4_user_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_sync_state5_user_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_sync_state6_user_data_in : out std_logic_vector( 32-1 downto 0 );
    rfdc_multi_eight_adcs_2048gsps_mts_sync_state7_user_data_in : out std_logic_vector( 32-1 downto 0 )
  );
end rfdc_multi_eight_adcs_2048gsps_mts;
architecture structural of rfdc_multi_eight_adcs_2048gsps_mts is 
  attribute core_generation_info : string;
  attribute core_generation_info of structural : architecture is "rfdc_multi_eight_adcs_2048gsps_mts,sysgen_core_2018_3,{,compilation=HDL Netlist,block_icon_display=Default,family=zynquplusRFSOC,part=xczu28dr,speed=-2-e,package=ffvg1517,synthesis_language=vhdl,hdl_library=xil_defaultlib,synthesis_strategy=Vivado Synthesis Defaults,implementation_strategy=Vivado Implementation Defaults,testbench=0,interface_doc=0,ce_clr=0,clock_period=3.9062,system_simulink_period=1,waveform_viewer=0,axilite_interface=0,ip_catalog_plugin=0,hwcosim_burst_mode=0,simulation_time=10,addsub=32,assert=104,concat=192,constant=544,convert=234,counter=97,delay=691,inv=193,logical=417,mux=224,register=352,reinterpret=424,relational=128,shift=32,slice=483,}";
  signal clk_1_net : std_logic;
  signal ce_1_net : std_logic;
begin
  rfdc_multi_eight_adcs_2048gsps_mts_default_clock_driver : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_default_clock_driver 
  port map (
    rfdc_multi_eight_adcs_2048gsps_mts_sysclk => clk,
    rfdc_multi_eight_adcs_2048gsps_mts_sysce => '1',
    rfdc_multi_eight_adcs_2048gsps_mts_sysclr => '0',
    rfdc_multi_eight_adcs_2048gsps_mts_clk1 => clk_1_net,
    rfdc_multi_eight_adcs_2048gsps_mts_ce1 => ce_1_net
  );
  rfdc_multi_eight_adcs_2048gsps_mts_struct : entity xil_defaultlib.rfdc_multi_eight_adcs_2048gsps_mts_struct 
  port map (
    rfdc_multi_eight_adcs_2048gsps_mts_led_cntrl_user_data_out => rfdc_multi_eight_adcs_2048gsps_mts_led_cntrl_user_data_out,
    rfdc_multi_eight_adcs_2048gsps_mts_reg_cntrl_user_data_out => rfdc_multi_eight_adcs_2048gsps_mts_reg_cntrl_user_data_out,
    rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc0_dout => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc0_dout,
    rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc0_sync => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc0_sync,
    rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc1_dout => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc1_dout,
    rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc1_sync => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc1_sync,
    rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc2_dout => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc2_dout,
    rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc2_sync => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc2_sync,
    rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc3_dout => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc3_dout,
    rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc3_sync => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc3_sync,
    rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc4_dout => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc4_dout,
    rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc4_sync => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc4_sync,
    rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc5_dout => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc5_dout,
    rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc5_sync => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc5_sync,
    rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc6_dout => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc6_dout,
    rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc6_sync => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc6_sync,
    rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc7_dout => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc7_dout,
    rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc7_sync => rfdc_multi_eight_adcs_2048gsps_mts_rfdc_v0_4_adc7_sync,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_01_ss_bram_data_out => rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_01_ss_bram_data_out,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_01_ss_ctrl_user_data_out => rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_01_ss_ctrl_user_data_out,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_23_ss_bram_data_out => rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_23_ss_bram_data_out,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_23_ss_ctrl_user_data_out => rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_23_ss_ctrl_user_data_out,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_45_ss_bram_data_out => rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_45_ss_bram_data_out,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_45_ss_ctrl_user_data_out => rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_45_ss_ctrl_user_data_out,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_67_ss_bram_data_out => rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_67_ss_bram_data_out,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_67_ss_ctrl_user_data_out => rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_67_ss_ctrl_user_data_out,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_01_ss_bram_data_out => rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_01_ss_bram_data_out,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_01_ss_ctrl_user_data_out => rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_01_ss_ctrl_user_data_out,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_23_ss_bram_data_out => rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_23_ss_bram_data_out,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_23_ss_ctrl_user_data_out => rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_23_ss_ctrl_user_data_out,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_45_ss_bram_data_out => rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_45_ss_bram_data_out,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_45_ss_ctrl_user_data_out => rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_45_ss_ctrl_user_data_out,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_67_ss_bram_data_out => rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_67_ss_bram_data_out,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_67_ss_ctrl_user_data_out => rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_67_ss_ctrl_user_data_out,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_01_ss_bram_data_out => rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_01_ss_bram_data_out,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_01_ss_ctrl_user_data_out => rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_01_ss_ctrl_user_data_out,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_23_ss_bram_data_out => rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_23_ss_bram_data_out,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_23_ss_ctrl_user_data_out => rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_23_ss_ctrl_user_data_out,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_45_ss_bram_data_out => rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_45_ss_bram_data_out,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_45_ss_ctrl_user_data_out => rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_45_ss_ctrl_user_data_out,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_67_ss_bram_data_out => rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_67_ss_bram_data_out,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_67_ss_ctrl_user_data_out => rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_67_ss_ctrl_user_data_out,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_01_ss_bram_data_out => rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_01_ss_bram_data_out,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_01_ss_ctrl_user_data_out => rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_01_ss_ctrl_user_data_out,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_23_ss_bram_data_out => rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_23_ss_bram_data_out,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_23_ss_ctrl_user_data_out => rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_23_ss_ctrl_user_data_out,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_45_ss_bram_data_out => rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_45_ss_bram_data_out,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_45_ss_ctrl_user_data_out => rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_45_ss_ctrl_user_data_out,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_67_ss_bram_data_out => rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_67_ss_bram_data_out,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_67_ss_ctrl_user_data_out => rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_67_ss_ctrl_user_data_out,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_01_ss_bram_data_out => rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_01_ss_bram_data_out,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_01_ss_ctrl_user_data_out => rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_01_ss_ctrl_user_data_out,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_23_ss_bram_data_out => rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_23_ss_bram_data_out,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_23_ss_ctrl_user_data_out => rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_23_ss_ctrl_user_data_out,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_45_ss_bram_data_out => rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_45_ss_bram_data_out,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_45_ss_ctrl_user_data_out => rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_45_ss_ctrl_user_data_out,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_67_ss_bram_data_out => rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_67_ss_bram_data_out,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_67_ss_ctrl_user_data_out => rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_67_ss_ctrl_user_data_out,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_01_ss_bram_data_out => rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_01_ss_bram_data_out,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_01_ss_ctrl_user_data_out => rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_01_ss_ctrl_user_data_out,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_23_ss_bram_data_out => rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_23_ss_bram_data_out,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_23_ss_ctrl_user_data_out => rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_23_ss_ctrl_user_data_out,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_45_ss_bram_data_out => rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_45_ss_bram_data_out,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_45_ss_ctrl_user_data_out => rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_45_ss_ctrl_user_data_out,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_67_ss_bram_data_out => rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_67_ss_bram_data_out,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_67_ss_ctrl_user_data_out => rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_67_ss_ctrl_user_data_out,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_01_ss_bram_data_out => rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_01_ss_bram_data_out,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_01_ss_ctrl_user_data_out => rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_01_ss_ctrl_user_data_out,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_23_ss_bram_data_out => rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_23_ss_bram_data_out,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_23_ss_ctrl_user_data_out => rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_23_ss_ctrl_user_data_out,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_45_ss_bram_data_out => rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_45_ss_bram_data_out,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_45_ss_ctrl_user_data_out => rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_45_ss_ctrl_user_data_out,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_67_ss_bram_data_out => rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_67_ss_bram_data_out,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_67_ss_ctrl_user_data_out => rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_67_ss_ctrl_user_data_out,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_01_ss_bram_data_out => rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_01_ss_bram_data_out,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_01_ss_ctrl_user_data_out => rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_01_ss_ctrl_user_data_out,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_23_ss_bram_data_out => rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_23_ss_bram_data_out,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_23_ss_ctrl_user_data_out => rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_23_ss_ctrl_user_data_out,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_45_ss_bram_data_out => rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_45_ss_bram_data_out,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_45_ss_ctrl_user_data_out => rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_45_ss_ctrl_user_data_out,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_67_ss_bram_data_out => rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_67_ss_bram_data_out,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_67_ss_ctrl_user_data_out => rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_67_ss_ctrl_user_data_out,
    clk_1 => clk_1_net,
    ce_1 => ce_1_net,
    rfdc_multi_eight_adcs_2048gsps_mts_gpio_led_gateway => rfdc_multi_eight_adcs_2048gsps_mts_gpio_led_gateway,
    rfdc_multi_eight_adcs_2048gsps_mts_gpio_led1_gateway => rfdc_multi_eight_adcs_2048gsps_mts_gpio_led1_gateway,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_01_ss_bram_addr => rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_01_ss_bram_addr,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_01_ss_bram_data_in => rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_01_ss_bram_data_in,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_01_ss_bram_we => rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_01_ss_bram_we,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_01_ss_status_user_data_in => rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_01_ss_status_user_data_in,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_23_ss_bram_addr => rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_23_ss_bram_addr,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_23_ss_bram_data_in => rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_23_ss_bram_data_in,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_23_ss_bram_we => rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_23_ss_bram_we,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_23_ss_status_user_data_in => rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_23_ss_status_user_data_in,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_45_ss_bram_addr => rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_45_ss_bram_addr,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_45_ss_bram_data_in => rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_45_ss_bram_data_in,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_45_ss_bram_we => rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_45_ss_bram_we,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_45_ss_status_user_data_in => rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_45_ss_status_user_data_in,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_67_ss_bram_addr => rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_67_ss_bram_addr,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_67_ss_bram_data_in => rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_67_ss_bram_data_in,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_67_ss_bram_we => rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_67_ss_bram_we,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_67_ss_status_user_data_in => rfdc_multi_eight_adcs_2048gsps_mts_snapshot0_67_ss_status_user_data_in,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_01_ss_bram_addr => rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_01_ss_bram_addr,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_01_ss_bram_data_in => rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_01_ss_bram_data_in,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_01_ss_bram_we => rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_01_ss_bram_we,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_01_ss_status_user_data_in => rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_01_ss_status_user_data_in,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_23_ss_bram_addr => rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_23_ss_bram_addr,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_23_ss_bram_data_in => rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_23_ss_bram_data_in,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_23_ss_bram_we => rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_23_ss_bram_we,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_23_ss_status_user_data_in => rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_23_ss_status_user_data_in,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_45_ss_bram_addr => rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_45_ss_bram_addr,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_45_ss_bram_data_in => rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_45_ss_bram_data_in,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_45_ss_bram_we => rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_45_ss_bram_we,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_45_ss_status_user_data_in => rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_45_ss_status_user_data_in,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_67_ss_bram_addr => rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_67_ss_bram_addr,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_67_ss_bram_data_in => rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_67_ss_bram_data_in,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_67_ss_bram_we => rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_67_ss_bram_we,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_67_ss_status_user_data_in => rfdc_multi_eight_adcs_2048gsps_mts_snapshot1_67_ss_status_user_data_in,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_01_ss_bram_addr => rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_01_ss_bram_addr,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_01_ss_bram_data_in => rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_01_ss_bram_data_in,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_01_ss_bram_we => rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_01_ss_bram_we,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_01_ss_status_user_data_in => rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_01_ss_status_user_data_in,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_23_ss_bram_addr => rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_23_ss_bram_addr,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_23_ss_bram_data_in => rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_23_ss_bram_data_in,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_23_ss_bram_we => rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_23_ss_bram_we,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_23_ss_status_user_data_in => rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_23_ss_status_user_data_in,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_45_ss_bram_addr => rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_45_ss_bram_addr,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_45_ss_bram_data_in => rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_45_ss_bram_data_in,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_45_ss_bram_we => rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_45_ss_bram_we,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_45_ss_status_user_data_in => rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_45_ss_status_user_data_in,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_67_ss_bram_addr => rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_67_ss_bram_addr,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_67_ss_bram_data_in => rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_67_ss_bram_data_in,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_67_ss_bram_we => rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_67_ss_bram_we,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_67_ss_status_user_data_in => rfdc_multi_eight_adcs_2048gsps_mts_snapshot2_67_ss_status_user_data_in,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_01_ss_bram_addr => rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_01_ss_bram_addr,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_01_ss_bram_data_in => rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_01_ss_bram_data_in,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_01_ss_bram_we => rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_01_ss_bram_we,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_01_ss_status_user_data_in => rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_01_ss_status_user_data_in,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_23_ss_bram_addr => rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_23_ss_bram_addr,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_23_ss_bram_data_in => rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_23_ss_bram_data_in,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_23_ss_bram_we => rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_23_ss_bram_we,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_23_ss_status_user_data_in => rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_23_ss_status_user_data_in,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_45_ss_bram_addr => rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_45_ss_bram_addr,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_45_ss_bram_data_in => rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_45_ss_bram_data_in,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_45_ss_bram_we => rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_45_ss_bram_we,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_45_ss_status_user_data_in => rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_45_ss_status_user_data_in,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_67_ss_bram_addr => rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_67_ss_bram_addr,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_67_ss_bram_data_in => rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_67_ss_bram_data_in,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_67_ss_bram_we => rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_67_ss_bram_we,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_67_ss_status_user_data_in => rfdc_multi_eight_adcs_2048gsps_mts_snapshot3_67_ss_status_user_data_in,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_01_ss_bram_addr => rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_01_ss_bram_addr,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_01_ss_bram_data_in => rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_01_ss_bram_data_in,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_01_ss_bram_we => rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_01_ss_bram_we,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_01_ss_status_user_data_in => rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_01_ss_status_user_data_in,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_23_ss_bram_addr => rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_23_ss_bram_addr,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_23_ss_bram_data_in => rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_23_ss_bram_data_in,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_23_ss_bram_we => rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_23_ss_bram_we,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_23_ss_status_user_data_in => rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_23_ss_status_user_data_in,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_45_ss_bram_addr => rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_45_ss_bram_addr,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_45_ss_bram_data_in => rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_45_ss_bram_data_in,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_45_ss_bram_we => rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_45_ss_bram_we,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_45_ss_status_user_data_in => rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_45_ss_status_user_data_in,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_67_ss_bram_addr => rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_67_ss_bram_addr,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_67_ss_bram_data_in => rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_67_ss_bram_data_in,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_67_ss_bram_we => rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_67_ss_bram_we,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_67_ss_status_user_data_in => rfdc_multi_eight_adcs_2048gsps_mts_snapshot4_67_ss_status_user_data_in,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_01_ss_bram_addr => rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_01_ss_bram_addr,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_01_ss_bram_data_in => rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_01_ss_bram_data_in,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_01_ss_bram_we => rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_01_ss_bram_we,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_01_ss_status_user_data_in => rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_01_ss_status_user_data_in,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_23_ss_bram_addr => rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_23_ss_bram_addr,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_23_ss_bram_data_in => rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_23_ss_bram_data_in,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_23_ss_bram_we => rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_23_ss_bram_we,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_23_ss_status_user_data_in => rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_23_ss_status_user_data_in,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_45_ss_bram_addr => rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_45_ss_bram_addr,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_45_ss_bram_data_in => rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_45_ss_bram_data_in,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_45_ss_bram_we => rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_45_ss_bram_we,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_45_ss_status_user_data_in => rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_45_ss_status_user_data_in,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_67_ss_bram_addr => rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_67_ss_bram_addr,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_67_ss_bram_data_in => rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_67_ss_bram_data_in,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_67_ss_bram_we => rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_67_ss_bram_we,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_67_ss_status_user_data_in => rfdc_multi_eight_adcs_2048gsps_mts_snapshot5_67_ss_status_user_data_in,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_01_ss_bram_addr => rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_01_ss_bram_addr,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_01_ss_bram_data_in => rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_01_ss_bram_data_in,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_01_ss_bram_we => rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_01_ss_bram_we,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_01_ss_status_user_data_in => rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_01_ss_status_user_data_in,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_23_ss_bram_addr => rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_23_ss_bram_addr,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_23_ss_bram_data_in => rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_23_ss_bram_data_in,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_23_ss_bram_we => rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_23_ss_bram_we,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_23_ss_status_user_data_in => rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_23_ss_status_user_data_in,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_45_ss_bram_addr => rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_45_ss_bram_addr,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_45_ss_bram_data_in => rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_45_ss_bram_data_in,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_45_ss_bram_we => rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_45_ss_bram_we,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_45_ss_status_user_data_in => rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_45_ss_status_user_data_in,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_67_ss_bram_addr => rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_67_ss_bram_addr,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_67_ss_bram_data_in => rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_67_ss_bram_data_in,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_67_ss_bram_we => rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_67_ss_bram_we,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_67_ss_status_user_data_in => rfdc_multi_eight_adcs_2048gsps_mts_snapshot6_67_ss_status_user_data_in,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_01_ss_bram_addr => rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_01_ss_bram_addr,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_01_ss_bram_data_in => rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_01_ss_bram_data_in,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_01_ss_bram_we => rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_01_ss_bram_we,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_01_ss_status_user_data_in => rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_01_ss_status_user_data_in,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_23_ss_bram_addr => rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_23_ss_bram_addr,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_23_ss_bram_data_in => rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_23_ss_bram_data_in,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_23_ss_bram_we => rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_23_ss_bram_we,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_23_ss_status_user_data_in => rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_23_ss_status_user_data_in,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_45_ss_bram_addr => rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_45_ss_bram_addr,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_45_ss_bram_data_in => rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_45_ss_bram_data_in,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_45_ss_bram_we => rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_45_ss_bram_we,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_45_ss_status_user_data_in => rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_45_ss_status_user_data_in,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_67_ss_bram_addr => rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_67_ss_bram_addr,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_67_ss_bram_data_in => rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_67_ss_bram_data_in,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_67_ss_bram_we => rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_67_ss_bram_we,
    rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_67_ss_status_user_data_in => rfdc_multi_eight_adcs_2048gsps_mts_snapshot7_67_ss_status_user_data_in,
    rfdc_multi_eight_adcs_2048gsps_mts_sync_state0_user_data_in => rfdc_multi_eight_adcs_2048gsps_mts_sync_state0_user_data_in,
    rfdc_multi_eight_adcs_2048gsps_mts_sync_state1_user_data_in => rfdc_multi_eight_adcs_2048gsps_mts_sync_state1_user_data_in,
    rfdc_multi_eight_adcs_2048gsps_mts_sync_state2_user_data_in => rfdc_multi_eight_adcs_2048gsps_mts_sync_state2_user_data_in,
    rfdc_multi_eight_adcs_2048gsps_mts_sync_state3_user_data_in => rfdc_multi_eight_adcs_2048gsps_mts_sync_state3_user_data_in,
    rfdc_multi_eight_adcs_2048gsps_mts_sync_state4_user_data_in => rfdc_multi_eight_adcs_2048gsps_mts_sync_state4_user_data_in,
    rfdc_multi_eight_adcs_2048gsps_mts_sync_state5_user_data_in => rfdc_multi_eight_adcs_2048gsps_mts_sync_state5_user_data_in,
    rfdc_multi_eight_adcs_2048gsps_mts_sync_state6_user_data_in => rfdc_multi_eight_adcs_2048gsps_mts_sync_state6_user_data_in,
    rfdc_multi_eight_adcs_2048gsps_mts_sync_state7_user_data_in => rfdc_multi_eight_adcs_2048gsps_mts_sync_state7_user_data_in
  );
end structural;
