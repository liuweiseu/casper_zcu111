// MODULE top, AUTOMATICALLY GENERATED BY PYTHON

/**/
`default_nettype wire


module top (
  // gpio: led0_gbe0_pulse_tx
    output [0:0] tengbe_test_led0_gbe0_pulse_tx_ext,
  // gpio: led1_gbe0_up
    output [0:0] tengbe_test_led1_gbe0_up_ext,
  // ten_gbe: gbe0
    input mgt_rx_n1,
    input mgt_rx_p1,
    input ref_clk_n0,
    input ref_clk_p0,
    output mgt_tx_n1,
    output mgt_tx_p1,
  // zcu111: ZCU111
    input clk_100_n,
    input clk_100_p
  );




/*
  _____ _                   _     
 / ____(_)                 | |    
| (___  _  __ _ _ __   __ _| |___ 
 \___ \| |/ _` | '_ \ / _` | / __|
 ____) | | (_| | | | | (_| | \__ \ 
|_____/|_|\__, |_| |_|\__,_|_|___/
          __/ |                  
         |___/                   
*/
  // gpio: led0_gbe0_pulse_tx
  wire [0:0] tengbe_test_led0_gbe0_pulse_tx_gateway;
  // gpio: led1_gbe0_up
  wire [0:0] tengbe_test_led1_gbe0_up_gateway;
  // sw_reg: dest_ip
  wire [31:0] tengbe_test_dest_ip_out;
  wire [31:0] tengbe_test_dest_ip_user_data_out;
  // sw_reg: dest_port
  wire [31:0] tengbe_test_dest_port_out;
  wire [31:0] tengbe_test_dest_port_user_data_out;
  // sw_reg: gbe0/rxbadctr
  wire [31:0] tengbe_test_gbe0_rxbadctr_in;
  wire [31:0] tengbe_test_gbe0_rxbadctr_user_data_in;
  // sw_reg: gbe0/rxctr
  wire [31:0] tengbe_test_gbe0_rxctr_in;
  wire [31:0] tengbe_test_gbe0_rxctr_user_data_in;
  // sw_reg: gbe0/rxeofctr
  wire [31:0] tengbe_test_gbe0_rxeofctr_in;
  wire [31:0] tengbe_test_gbe0_rxeofctr_user_data_in;
  // sw_reg: gbe0/rxofctr
  wire [31:0] tengbe_test_gbe0_rxofctr_in;
  wire [31:0] tengbe_test_gbe0_rxofctr_user_data_in;
  // sw_reg: gbe0/rxvldctr
  wire [31:0] tengbe_test_gbe0_rxvldctr_in;
  wire [31:0] tengbe_test_gbe0_rxvldctr_user_data_in;
  // sw_reg: gbe0/txctr
  wire [31:0] tengbe_test_gbe0_txctr_in;
  wire [31:0] tengbe_test_gbe0_txctr_user_data_in;
  // sw_reg: gbe0/txfullctr
  wire [31:0] tengbe_test_gbe0_txfullctr_in;
  wire [31:0] tengbe_test_gbe0_txfullctr_user_data_in;
  // sw_reg: gbe0/txofctr
  wire [31:0] tengbe_test_gbe0_txofctr_in;
  wire [31:0] tengbe_test_gbe0_txofctr_user_data_in;
  // sw_reg: gbe0/txvldctr
  wire [31:0] tengbe_test_gbe0_txvldctr_in;
  wire [31:0] tengbe_test_gbe0_txvldctr_user_data_in;
  // sw_reg: gbe0_linkup
  wire [31:0] tengbe_test_gbe0_linkup_in;
  wire [31:0] tengbe_test_gbe0_linkup_user_data_in;
  // sw_reg: gbe0_tx_cnt
  wire [31:0] tengbe_test_gbe0_tx_cnt_in;
  wire [31:0] tengbe_test_gbe0_tx_cnt_user_data_in;
  // sw_reg: pkt_sim/enable
  wire [31:0] tengbe_test_pkt_sim_enable_out;
  wire [31:0] tengbe_test_pkt_sim_enable_user_data_out;
  // sw_reg: pkt_sim/payload_len
  wire [31:0] tengbe_test_pkt_sim_payload_len_out;
  wire [31:0] tengbe_test_pkt_sim_payload_len_user_data_out;
  // sw_reg: pkt_sim/period
  wire [31:0] tengbe_test_pkt_sim_period_out;
  wire [31:0] tengbe_test_pkt_sim_period_user_data_out;
  // sw_reg: rst
  wire [31:0] tengbe_test_rst_out;
  wire [31:0] tengbe_test_rst_user_data_out;
  // sw_reg: tx_snapshot/ss/ctrl
  wire [31:0] tengbe_test_tx_snapshot_ss_ctrl_out;
  wire [31:0] tengbe_test_tx_snapshot_ss_ctrl_user_data_out;
  // sw_reg: tx_snapshot/ss/status
  wire [31:0] tengbe_test_tx_snapshot_ss_status_in;
  wire [31:0] tengbe_test_tx_snapshot_ss_status_user_data_in;
  // sys_block: xps:sys_block0
  wire axil_clk;
  wire axil_rst_n;
  wire [0:0] tengbe_test_dest_ip_out_we;
  wire [0:0] tengbe_test_dest_port_out_we;
  wire [0:0] tengbe_test_gbe0_linkup_in_we;
  wire [0:0] tengbe_test_gbe0_rxbadctr_in_we;
  wire [0:0] tengbe_test_gbe0_rxctr_in_we;
  wire [0:0] tengbe_test_gbe0_rxeofctr_in_we;
  wire [0:0] tengbe_test_gbe0_rxofctr_in_we;
  wire [0:0] tengbe_test_gbe0_rxvldctr_in_we;
  wire [0:0] tengbe_test_gbe0_tx_cnt_in_we;
  wire [0:0] tengbe_test_gbe0_txctr_in_we;
  wire [0:0] tengbe_test_gbe0_txfullctr_in_we;
  wire [0:0] tengbe_test_gbe0_txofctr_in_we;
  wire [0:0] tengbe_test_gbe0_txvldctr_in_we;
  wire [0:0] tengbe_test_pkt_sim_enable_out_we;
  wire [0:0] tengbe_test_pkt_sim_payload_len_out_we;
  wire [0:0] tengbe_test_pkt_sim_period_out_we;
  wire [0:0] tengbe_test_rst_out_we;
  wire [31:0] tengbe_test_sys_board_id_in;
  wire [0:0] tengbe_test_sys_board_id_in_we;
  wire [31:0] tengbe_test_sys_clkcounter_in;
  wire [0:0] tengbe_test_sys_clkcounter_in_we;
  wire [31:0] tengbe_test_sys_rev_in;
  wire [0:0] tengbe_test_sys_rev_in_we;
  wire [31:0] tengbe_test_sys_rev_rcs_in;
  wire [0:0] tengbe_test_sys_rev_rcs_in_we;
  wire [31:0] tengbe_test_sys_scratchpad_out;
  wire [0:0] tengbe_test_sys_scratchpad_out_we;
  wire [11:0] tengbe_test_tx_snapshot_ss_bram_addr;
  wire [31:0] tengbe_test_tx_snapshot_ss_bram_data_in;
  wire [31:0] tengbe_test_tx_snapshot_ss_bram_data_out;
  wire [0:0] tengbe_test_tx_snapshot_ss_bram_we;
  wire [0:0] tengbe_test_tx_snapshot_ss_ctrl_out_we;
  wire [0:0] tengbe_test_tx_snapshot_ss_status_in_we;
  // ten_gbe: gbe0
  wire axil_rst;
  wire core_clk_156_0;
  wire dclk0;
  wire gt_reset_all_0;
  wire gt_reset_rx_done_out_0;
  wire gt_reset_tx_done_out_0;
  wire gtwiz_reset_qpll0lock_in;
  wire gtwiz_reset_qpll0reset_out;
  wire gtwiz_reset_qpll1lock_in;
  wire gtwiz_reset_qpll1reset_out;
  wire gtwiz_reset_rx_datapath_out_0;
  wire gtwiz_reset_tx_datapath_out_0;
  wire [31:0] m_axi4lite_gbe0_araddr;
  wire m_axi4lite_gbe0_arready;
  wire m_axi4lite_gbe0_arvalid;
  wire [31:0] m_axi4lite_gbe0_awaddr;
  wire m_axi4lite_gbe0_awready;
  wire m_axi4lite_gbe0_awvalid;
  wire m_axi4lite_gbe0_bready;
  wire [1:0] m_axi4lite_gbe0_bresp;
  wire m_axi4lite_gbe0_bvalid;
  wire [31:0] m_axi4lite_gbe0_rdata;
  wire m_axi4lite_gbe0_rready;
  wire [1:0] m_axi4lite_gbe0_rresp;
  wire m_axi4lite_gbe0_rvalid;
  wire [31:0] m_axi4lite_gbe0_wdata;
  wire m_axi4lite_gbe0_wready;
  wire [3:0] m_axi4lite_gbe0_wstrb;
  wire m_axi4lite_gbe0_wvalid;
  wire [2:0] mgt_rxeqmix1;
  wire [3:0] mgt_txdiffctrl1;
  wire [4:0] mgt_txpostemphasis1;
  wire [3:0] mgt_txpreemphasis1;
  wire qpll0clk_in;
  wire qpll0refclk_in;
  wire qpll1clk_in;
  wire qpll1refclk_in;
  wire rx_clk_out_0;
  wire rx_core_reset_out;
  wire rx_serdes_reset_0;
  wire stat_rx_block_lock_0;
  wire tengbe_test_gbe0_led_rx;
  wire tengbe_test_gbe0_led_tx;
  wire tengbe_test_gbe0_led_up;
  wire tengbe_test_gbe0_rst;
  wire tengbe_test_gbe0_rx_ack;
  wire tengbe_test_gbe0_rx_bad_frame;
  wire [63:0] tengbe_test_gbe0_rx_data;
  wire tengbe_test_gbe0_rx_end_of_frame;
  wire tengbe_test_gbe0_rx_overrun;
  wire tengbe_test_gbe0_rx_overrun_ack;
  wire [31:0] tengbe_test_gbe0_rx_source_ip;
  wire [15:0] tengbe_test_gbe0_rx_source_port;
  wire tengbe_test_gbe0_rx_valid;
  wire tengbe_test_gbe0_tx_afull;
  wire [63:0] tengbe_test_gbe0_tx_data;
  wire [31:0] tengbe_test_gbe0_tx_dest_ip;
  wire [15:0] tengbe_test_gbe0_tx_dest_port;
  wire tengbe_test_gbe0_tx_end_of_frame;
  wire tengbe_test_gbe0_tx_overflow;
  wire tengbe_test_gbe0_tx_valid;
  wire tengbe_test_gbe0_wb_cyc;
  wire tengbe_test_gbe0_wb_stb;
  wire tengbe_test_gbe0_wb_we;
  wire tengbe_test_gbe0wb_ack;
  wire [31:0] tengbe_test_gbe0wb_adr;
  wire [31:0] tengbe_test_gbe0wb_dat_i;
  wire [31:0] tengbe_test_gbe0wb_dat_o;
  wire tengbe_test_gbe0wb_err;
  wire tengbe_test_gbe0wb_rst;
  wire [3:0] tengbe_test_gbe0wb_sel;
  wire tx_core_reset_out;
  wire tx_mii_clk_0;
  wire [7:0] xgmii_rxc1;
  wire [63:0] xgmii_rxd1;
  wire [7:0] xgmii_txc1;
  wire [63:0] xgmii_txd1;
  // xsg: ZCU111
  wire user_clk;
  wire user_clk180;
  wire user_clk270;
  wire user_clk90;
  // zcu111: ZCU111
  wire [39:0] M_AXI_RFDC_araddr;
  wire [2:0] M_AXI_RFDC_arprot;
  wire M_AXI_RFDC_arready;
  wire M_AXI_RFDC_arvalid;
  wire [39:0] M_AXI_RFDC_awaddr;
  wire [2:0] M_AXI_RFDC_awprot;
  wire M_AXI_RFDC_awready;
  wire M_AXI_RFDC_awvalid;
  wire M_AXI_RFDC_bready;
  wire [1:0] M_AXI_RFDC_bresp;
  wire M_AXI_RFDC_bvalid;
  wire [31:0] M_AXI_RFDC_rdata;
  wire M_AXI_RFDC_rready;
  wire [1:0] M_AXI_RFDC_rresp;
  wire M_AXI_RFDC_rvalid;
  wire [31:0] M_AXI_RFDC_wdata;
  wire M_AXI_RFDC_wready;
  wire [3:0] M_AXI_RFDC_wstrb;
  wire M_AXI_RFDC_wvalid;
  wire [39:0] M_AXI_araddr;
  wire [2:0] M_AXI_arprot;
  wire M_AXI_arready;
  wire M_AXI_arvalid;
  wire [39:0] M_AXI_awaddr;
  wire [2:0] M_AXI_awprot;
  wire M_AXI_awready;
  wire M_AXI_awvalid;
  wire M_AXI_bready;
  wire [1:0] M_AXI_bresp;
  wire M_AXI_bvalid;
  wire [31:0] M_AXI_rdata;
  wire M_AXI_rready;
  wire [1:0] M_AXI_rresp;
  wire M_AXI_rvalid;
  wire [31:0] M_AXI_wdata;
  wire M_AXI_wready;
  wire [3:0] M_AXI_wstrb;
  wire M_AXI_wvalid;
  wire clk_200;
  wire sys_clk;
  wire sys_clk180;
  wire sys_clk270;
  wire sys_clk90;
  wire sys_clk_rst;

/*
  _____           _                            
 |_   _|         | |                           
   | |  _ __  ___| |_ __ _ _ __   ___ ___  ___ 
   | | | '_ \/ __| __/ _` | '_ \ / __/ _ \/ __|
  _| |_| | | \__ \ || (_| | | | | (_|  __/\__ \ 
 |_____|_| |_|___/\__\__,_|_| |_|\___\___||___/
*/
  // gpio: led0_gbe0_pulse_tx
  gpio_simulink2ext #(
    .CLK_PHASE(0),
    .DDR(0),
    .REG_IOB("true"),
    .WIDTH(1)
  ) tengbe_test_led0_gbe0_pulse_tx (
    .clk(user_clk),
    .clk90(user_clk90),
    .gateway(tengbe_test_led0_gbe0_pulse_tx_gateway),
    .io_pad(tengbe_test_led0_gbe0_pulse_tx_ext)
  );

  // gpio: led1_gbe0_up
  gpio_simulink2ext #(
    .CLK_PHASE(0),
    .DDR(0),
    .REG_IOB("true"),
    .WIDTH(1)
  ) tengbe_test_led1_gbe0_up (
    .clk(user_clk),
    .clk90(user_clk90),
    .gateway(tengbe_test_led1_gbe0_up_gateway),
    .io_pad(tengbe_test_led1_gbe0_up_ext)
  );

  // sw_reg: dest_ip
  cdc_synchroniser #(
    .G_BUS_WIDTH(32)
  ) tengbe_test_dest_ip (
    .IP_BUS(tengbe_test_dest_ip_out),
    .IP_BUS_VALID(tengbe_test_dest_ip_out_we),
    .IP_CLK(user_clk),
    .IP_RESET(user_rst),
    .OP_BUS(tengbe_test_dest_ip_user_data_out)
  );

  // sw_reg: dest_port
  cdc_synchroniser #(
    .G_BUS_WIDTH(32)
  ) tengbe_test_dest_port (
    .IP_BUS(tengbe_test_dest_port_out),
    .IP_BUS_VALID(tengbe_test_dest_port_out_we),
    .IP_CLK(user_clk),
    .IP_RESET(user_rst),
    .OP_BUS(tengbe_test_dest_port_user_data_out)
  );

  // sw_reg: gbe0/rxbadctr
  cdc_synchroniser #(
    .G_BUS_WIDTH(32)
  ) tengbe_test_gbe0_rxbadctr (
    .IP_BUS(tengbe_test_gbe0_rxbadctr_user_data_in),
    .IP_BUS_VALID(1'b01),
    .IP_CLK(axil_clk),
    .IP_RESET(axil_rst),
    .OP_BUS(tengbe_test_gbe0_rxbadctr_in)
  );

  // sw_reg: gbe0/rxctr
  cdc_synchroniser #(
    .G_BUS_WIDTH(32)
  ) tengbe_test_gbe0_rxctr (
    .IP_BUS(tengbe_test_gbe0_rxctr_user_data_in),
    .IP_BUS_VALID(1'b01),
    .IP_CLK(axil_clk),
    .IP_RESET(axil_rst),
    .OP_BUS(tengbe_test_gbe0_rxctr_in)
  );

  // sw_reg: gbe0/rxeofctr
  cdc_synchroniser #(
    .G_BUS_WIDTH(32)
  ) tengbe_test_gbe0_rxeofctr (
    .IP_BUS(tengbe_test_gbe0_rxeofctr_user_data_in),
    .IP_BUS_VALID(1'b01),
    .IP_CLK(axil_clk),
    .IP_RESET(axil_rst),
    .OP_BUS(tengbe_test_gbe0_rxeofctr_in)
  );

  // sw_reg: gbe0/rxofctr
  cdc_synchroniser #(
    .G_BUS_WIDTH(32)
  ) tengbe_test_gbe0_rxofctr (
    .IP_BUS(tengbe_test_gbe0_rxofctr_user_data_in),
    .IP_BUS_VALID(1'b01),
    .IP_CLK(axil_clk),
    .IP_RESET(axil_rst),
    .OP_BUS(tengbe_test_gbe0_rxofctr_in)
  );

  // sw_reg: gbe0/rxvldctr
  cdc_synchroniser #(
    .G_BUS_WIDTH(32)
  ) tengbe_test_gbe0_rxvldctr (
    .IP_BUS(tengbe_test_gbe0_rxvldctr_user_data_in),
    .IP_BUS_VALID(1'b01),
    .IP_CLK(axil_clk),
    .IP_RESET(axil_rst),
    .OP_BUS(tengbe_test_gbe0_rxvldctr_in)
  );

  // sw_reg: gbe0/txctr
  cdc_synchroniser #(
    .G_BUS_WIDTH(32)
  ) tengbe_test_gbe0_txctr (
    .IP_BUS(tengbe_test_gbe0_txctr_user_data_in),
    .IP_BUS_VALID(1'b01),
    .IP_CLK(axil_clk),
    .IP_RESET(axil_rst),
    .OP_BUS(tengbe_test_gbe0_txctr_in)
  );

  // sw_reg: gbe0/txfullctr
  cdc_synchroniser #(
    .G_BUS_WIDTH(32)
  ) tengbe_test_gbe0_txfullctr (
    .IP_BUS(tengbe_test_gbe0_txfullctr_user_data_in),
    .IP_BUS_VALID(1'b01),
    .IP_CLK(axil_clk),
    .IP_RESET(axil_rst),
    .OP_BUS(tengbe_test_gbe0_txfullctr_in)
  );

  // sw_reg: gbe0/txofctr
  cdc_synchroniser #(
    .G_BUS_WIDTH(32)
  ) tengbe_test_gbe0_txofctr (
    .IP_BUS(tengbe_test_gbe0_txofctr_user_data_in),
    .IP_BUS_VALID(1'b01),
    .IP_CLK(axil_clk),
    .IP_RESET(axil_rst),
    .OP_BUS(tengbe_test_gbe0_txofctr_in)
  );

  // sw_reg: gbe0/txvldctr
  cdc_synchroniser #(
    .G_BUS_WIDTH(32)
  ) tengbe_test_gbe0_txvldctr (
    .IP_BUS(tengbe_test_gbe0_txvldctr_user_data_in),
    .IP_BUS_VALID(1'b01),
    .IP_CLK(axil_clk),
    .IP_RESET(axil_rst),
    .OP_BUS(tengbe_test_gbe0_txvldctr_in)
  );

  // sw_reg: gbe0_linkup
  cdc_synchroniser #(
    .G_BUS_WIDTH(32)
  ) tengbe_test_gbe0_linkup (
    .IP_BUS(tengbe_test_gbe0_linkup_user_data_in),
    .IP_BUS_VALID(1'b01),
    .IP_CLK(axil_clk),
    .IP_RESET(axil_rst),
    .OP_BUS(tengbe_test_gbe0_linkup_in)
  );

  // sw_reg: gbe0_tx_cnt
  cdc_synchroniser #(
    .G_BUS_WIDTH(32)
  ) tengbe_test_gbe0_tx_cnt (
    .IP_BUS(tengbe_test_gbe0_tx_cnt_user_data_in),
    .IP_BUS_VALID(1'b01),
    .IP_CLK(axil_clk),
    .IP_RESET(axil_rst),
    .OP_BUS(tengbe_test_gbe0_tx_cnt_in)
  );

  // sw_reg: pkt_sim/enable
  cdc_synchroniser #(
    .G_BUS_WIDTH(32)
  ) tengbe_test_pkt_sim_enable (
    .IP_BUS(tengbe_test_pkt_sim_enable_out),
    .IP_BUS_VALID(tengbe_test_pkt_sim_enable_out_we),
    .IP_CLK(user_clk),
    .IP_RESET(user_rst),
    .OP_BUS(tengbe_test_pkt_sim_enable_user_data_out)
  );

  // sw_reg: pkt_sim/payload_len
  cdc_synchroniser #(
    .G_BUS_WIDTH(32)
  ) tengbe_test_pkt_sim_payload_len (
    .IP_BUS(tengbe_test_pkt_sim_payload_len_out),
    .IP_BUS_VALID(tengbe_test_pkt_sim_payload_len_out_we),
    .IP_CLK(user_clk),
    .IP_RESET(user_rst),
    .OP_BUS(tengbe_test_pkt_sim_payload_len_user_data_out)
  );

  // sw_reg: pkt_sim/period
  cdc_synchroniser #(
    .G_BUS_WIDTH(32)
  ) tengbe_test_pkt_sim_period (
    .IP_BUS(tengbe_test_pkt_sim_period_out),
    .IP_BUS_VALID(tengbe_test_pkt_sim_period_out_we),
    .IP_CLK(user_clk),
    .IP_RESET(user_rst),
    .OP_BUS(tengbe_test_pkt_sim_period_user_data_out)
  );

  // sw_reg: rst
  cdc_synchroniser #(
    .G_BUS_WIDTH(32)
  ) tengbe_test_rst (
    .IP_BUS(tengbe_test_rst_out),
    .IP_BUS_VALID(tengbe_test_rst_out_we),
    .IP_CLK(user_clk),
    .IP_RESET(user_rst),
    .OP_BUS(tengbe_test_rst_user_data_out)
  );

  // sw_reg: tx_snapshot/ss/ctrl
  cdc_synchroniser #(
    .G_BUS_WIDTH(32)
  ) tengbe_test_tx_snapshot_ss_ctrl (
    .IP_BUS(tengbe_test_tx_snapshot_ss_ctrl_out),
    .IP_BUS_VALID(tengbe_test_tx_snapshot_ss_ctrl_out_we),
    .IP_CLK(user_clk),
    .IP_RESET(user_rst),
    .OP_BUS(tengbe_test_tx_snapshot_ss_ctrl_user_data_out)
  );

  // sw_reg: tx_snapshot/ss/status
  cdc_synchroniser #(
    .G_BUS_WIDTH(32)
  ) tengbe_test_tx_snapshot_ss_status (
    .IP_BUS(tengbe_test_tx_snapshot_ss_status_user_data_in),
    .IP_BUS_VALID(1'b01),
    .IP_CLK(axil_clk),
    .IP_RESET(axil_rst),
    .OP_BUS(tengbe_test_tx_snapshot_ss_status_in)
  );

  // sys_block: xps:sys_block0
  axi4lite_ic_wrapper  axi4lite_interconnect (
    .axi4lite_aclk(axil_clk),
    .axi4lite_aresetn(axil_rst_n),
    .axi4lite_sw_reg_dest_ip_out(tengbe_test_dest_ip_out),
    .axi4lite_sw_reg_dest_ip_out_we(tengbe_test_dest_ip_out_we),
    .axi4lite_sw_reg_dest_port_out(tengbe_test_dest_port_out),
    .axi4lite_sw_reg_dest_port_out_we(tengbe_test_dest_port_out_we),
    .axi4lite_sw_reg_gbe0_linkup_in(tengbe_test_gbe0_linkup_in),
    .axi4lite_sw_reg_gbe0_linkup_in_we(tengbe_test_gbe0_linkup_in_we),
    .axi4lite_sw_reg_gbe0_rxbadctr_in(tengbe_test_gbe0_rxbadctr_in),
    .axi4lite_sw_reg_gbe0_rxbadctr_in_we(tengbe_test_gbe0_rxbadctr_in_we),
    .axi4lite_sw_reg_gbe0_rxctr_in(tengbe_test_gbe0_rxctr_in),
    .axi4lite_sw_reg_gbe0_rxctr_in_we(tengbe_test_gbe0_rxctr_in_we),
    .axi4lite_sw_reg_gbe0_rxeofctr_in(tengbe_test_gbe0_rxeofctr_in),
    .axi4lite_sw_reg_gbe0_rxeofctr_in_we(tengbe_test_gbe0_rxeofctr_in_we),
    .axi4lite_sw_reg_gbe0_rxofctr_in(tengbe_test_gbe0_rxofctr_in),
    .axi4lite_sw_reg_gbe0_rxofctr_in_we(tengbe_test_gbe0_rxofctr_in_we),
    .axi4lite_sw_reg_gbe0_rxvldctr_in(tengbe_test_gbe0_rxvldctr_in),
    .axi4lite_sw_reg_gbe0_rxvldctr_in_we(tengbe_test_gbe0_rxvldctr_in_we),
    .axi4lite_sw_reg_gbe0_tx_cnt_in(tengbe_test_gbe0_tx_cnt_in),
    .axi4lite_sw_reg_gbe0_tx_cnt_in_we(tengbe_test_gbe0_tx_cnt_in_we),
    .axi4lite_sw_reg_gbe0_txctr_in(tengbe_test_gbe0_txctr_in),
    .axi4lite_sw_reg_gbe0_txctr_in_we(tengbe_test_gbe0_txctr_in_we),
    .axi4lite_sw_reg_gbe0_txfullctr_in(tengbe_test_gbe0_txfullctr_in),
    .axi4lite_sw_reg_gbe0_txfullctr_in_we(tengbe_test_gbe0_txfullctr_in_we),
    .axi4lite_sw_reg_gbe0_txofctr_in(tengbe_test_gbe0_txofctr_in),
    .axi4lite_sw_reg_gbe0_txofctr_in_we(tengbe_test_gbe0_txofctr_in_we),
    .axi4lite_sw_reg_gbe0_txvldctr_in(tengbe_test_gbe0_txvldctr_in),
    .axi4lite_sw_reg_gbe0_txvldctr_in_we(tengbe_test_gbe0_txvldctr_in_we),
    .axi4lite_sw_reg_pkt_sim_enable_out(tengbe_test_pkt_sim_enable_out),
    .axi4lite_sw_reg_pkt_sim_enable_out_we(tengbe_test_pkt_sim_enable_out_we),
    .axi4lite_sw_reg_pkt_sim_payload_len_out(tengbe_test_pkt_sim_payload_len_out),
    .axi4lite_sw_reg_pkt_sim_payload_len_out_we(tengbe_test_pkt_sim_payload_len_out_we),
    .axi4lite_sw_reg_pkt_sim_period_out(tengbe_test_pkt_sim_period_out),
    .axi4lite_sw_reg_pkt_sim_period_out_we(tengbe_test_pkt_sim_period_out_we),
    .axi4lite_sw_reg_rst_out(tengbe_test_rst_out),
    .axi4lite_sw_reg_rst_out_we(tengbe_test_rst_out_we),
    .axi4lite_sw_reg_tx_snapshot_ss_ctrl_out(tengbe_test_tx_snapshot_ss_ctrl_out),
    .axi4lite_sw_reg_tx_snapshot_ss_ctrl_out_we(tengbe_test_tx_snapshot_ss_ctrl_out_we),
    .axi4lite_sw_reg_tx_snapshot_ss_status_in(tengbe_test_tx_snapshot_ss_status_in),
    .axi4lite_sw_reg_tx_snapshot_ss_status_in_we(tengbe_test_tx_snapshot_ss_status_in_we),
    .axi4lite_sys_block_sys_board_id_in(tengbe_test_sys_board_id_in),
    .axi4lite_sys_block_sys_board_id_in_we(tengbe_test_sys_board_id_in_we),
    .axi4lite_sys_block_sys_clkcounter_in(tengbe_test_sys_clkcounter_in),
    .axi4lite_sys_block_sys_clkcounter_in_we(tengbe_test_sys_clkcounter_in_we),
    .axi4lite_sys_block_sys_rev_in(tengbe_test_sys_rev_in),
    .axi4lite_sys_block_sys_rev_in_we(tengbe_test_sys_rev_in_we),
    .axi4lite_sys_block_sys_rev_rcs_in(tengbe_test_sys_rev_rcs_in),
    .axi4lite_sys_block_sys_rev_rcs_in_we(tengbe_test_sys_rev_rcs_in_we),
    .axi4lite_sys_block_sys_scratchpad_out(tengbe_test_sys_scratchpad_out),
    .axi4lite_sys_block_sys_scratchpad_out_we(tengbe_test_sys_scratchpad_out_we),
    .axi4lite_tx_snapshot_ss_bram_tx_snapshot_ss_bram_add(tengbe_test_tx_snapshot_ss_bram_addr),
    .axi4lite_tx_snapshot_ss_bram_tx_snapshot_ss_bram_clk(user_clk),
    .axi4lite_tx_snapshot_ss_bram_tx_snapshot_ss_bram_data_in(tengbe_test_tx_snapshot_ss_bram_data_in),
    .axi4lite_tx_snapshot_ss_bram_tx_snapshot_ss_bram_data_out(tengbe_test_tx_snapshot_ss_bram_data_out),
    .axi4lite_tx_snapshot_ss_bram_tx_snapshot_ss_bram_en(1'b1),
    .axi4lite_tx_snapshot_ss_bram_tx_snapshot_ss_bram_we(tengbe_test_tx_snapshot_ss_bram_we),
    .m_axi4lite_gbe0_araddr(m_axi4lite_gbe0_araddr),
    .m_axi4lite_gbe0_arready(m_axi4lite_gbe0_arready),
    .m_axi4lite_gbe0_arvalid(m_axi4lite_gbe0_arvalid),
    .m_axi4lite_gbe0_awaddr(m_axi4lite_gbe0_awaddr),
    .m_axi4lite_gbe0_awready(m_axi4lite_gbe0_awready),
    .m_axi4lite_gbe0_awvalid(m_axi4lite_gbe0_awvalid),
    .m_axi4lite_gbe0_bready(m_axi4lite_gbe0_bready),
    .m_axi4lite_gbe0_bresp(m_axi4lite_gbe0_bresp),
    .m_axi4lite_gbe0_bvalid(m_axi4lite_gbe0_bvalid),
    .m_axi4lite_gbe0_rdata(m_axi4lite_gbe0_rdata),
    .m_axi4lite_gbe0_rready(m_axi4lite_gbe0_rready),
    .m_axi4lite_gbe0_rresp(m_axi4lite_gbe0_rresp),
    .m_axi4lite_gbe0_rvalid(m_axi4lite_gbe0_rvalid),
    .m_axi4lite_gbe0_wdata(m_axi4lite_gbe0_wdata),
    .m_axi4lite_gbe0_wready(m_axi4lite_gbe0_wready),
    .m_axi4lite_gbe0_wstrb(m_axi4lite_gbe0_wstrb),
    .m_axi4lite_gbe0_wvalid(m_axi4lite_gbe0_wvalid),
    .s_axi4lite_araddr(M_AXI_araddr),
    .s_axi4lite_arready(M_AXI_arready),
    .s_axi4lite_arvalid(M_AXI_arvalid),
    .s_axi4lite_awaddr(M_AXI_awaddr),
    .s_axi4lite_awready(M_AXI_awready),
    .s_axi4lite_awvalid(M_AXI_awvalid),
    .s_axi4lite_bready(M_AXI_bready),
    .s_axi4lite_bresp(M_AXI_bresp),
    .s_axi4lite_bvalid(M_AXI_bvalid),
    .s_axi4lite_rdata(M_AXI_rdata),
    .s_axi4lite_rready(M_AXI_rready),
    .s_axi4lite_rresp(M_AXI_rresp),
    .s_axi4lite_rvalid(M_AXI_rvalid),
    .s_axi4lite_wdata(M_AXI_wdata),
    .s_axi4lite_wready(M_AXI_wready),
    .s_axi4lite_wstrb(M_AXI_wstrb),
    .s_axi4lite_wvalid(M_AXI_wvalid)
  );


  tengbe_test  tengbe_test_inst (
    .clk(user_clk),
    .tengbe_test_dest_ip_user_data_out(tengbe_test_dest_ip_user_data_out),
    .tengbe_test_dest_port_user_data_out(tengbe_test_dest_port_user_data_out),
    .tengbe_test_gbe0_led_rx(tengbe_test_gbe0_led_rx),
    .tengbe_test_gbe0_led_tx(tengbe_test_gbe0_led_tx),
    .tengbe_test_gbe0_led_up(tengbe_test_gbe0_led_up),
    .tengbe_test_gbe0_linkup_user_data_in(tengbe_test_gbe0_linkup_user_data_in),
    .tengbe_test_gbe0_rst(tengbe_test_gbe0_rst),
    .tengbe_test_gbe0_rx_ack(tengbe_test_gbe0_rx_ack),
    .tengbe_test_gbe0_rx_bad_frame(tengbe_test_gbe0_rx_bad_frame),
    .tengbe_test_gbe0_rx_data(tengbe_test_gbe0_rx_data),
    .tengbe_test_gbe0_rx_end_of_frame(tengbe_test_gbe0_rx_end_of_frame),
    .tengbe_test_gbe0_rx_overrun(tengbe_test_gbe0_rx_overrun),
    .tengbe_test_gbe0_rx_overrun_ack(tengbe_test_gbe0_rx_overrun_ack),
    .tengbe_test_gbe0_rx_source_ip(tengbe_test_gbe0_rx_source_ip),
    .tengbe_test_gbe0_rx_source_port(tengbe_test_gbe0_rx_source_port),
    .tengbe_test_gbe0_rx_valid(tengbe_test_gbe0_rx_valid),
    .tengbe_test_gbe0_rxbadctr_user_data_in(tengbe_test_gbe0_rxbadctr_user_data_in),
    .tengbe_test_gbe0_rxctr_user_data_in(tengbe_test_gbe0_rxctr_user_data_in),
    .tengbe_test_gbe0_rxeofctr_user_data_in(tengbe_test_gbe0_rxeofctr_user_data_in),
    .tengbe_test_gbe0_rxofctr_user_data_in(tengbe_test_gbe0_rxofctr_user_data_in),
    .tengbe_test_gbe0_rxvldctr_user_data_in(tengbe_test_gbe0_rxvldctr_user_data_in),
    .tengbe_test_gbe0_tx_afull(tengbe_test_gbe0_tx_afull),
    .tengbe_test_gbe0_tx_cnt_user_data_in(tengbe_test_gbe0_tx_cnt_user_data_in),
    .tengbe_test_gbe0_tx_data(tengbe_test_gbe0_tx_data),
    .tengbe_test_gbe0_tx_dest_ip(tengbe_test_gbe0_tx_dest_ip),
    .tengbe_test_gbe0_tx_dest_port(tengbe_test_gbe0_tx_dest_port),
    .tengbe_test_gbe0_tx_end_of_frame(tengbe_test_gbe0_tx_end_of_frame),
    .tengbe_test_gbe0_tx_overflow(tengbe_test_gbe0_tx_overflow),
    .tengbe_test_gbe0_tx_valid(tengbe_test_gbe0_tx_valid),
    .tengbe_test_gbe0_txctr_user_data_in(tengbe_test_gbe0_txctr_user_data_in),
    .tengbe_test_gbe0_txfullctr_user_data_in(tengbe_test_gbe0_txfullctr_user_data_in),
    .tengbe_test_gbe0_txofctr_user_data_in(tengbe_test_gbe0_txofctr_user_data_in),
    .tengbe_test_gbe0_txvldctr_user_data_in(tengbe_test_gbe0_txvldctr_user_data_in),
    .tengbe_test_led0_gbe0_pulse_tx_gateway(tengbe_test_led0_gbe0_pulse_tx_gateway),
    .tengbe_test_led1_gbe0_up_gateway(tengbe_test_led1_gbe0_up_gateway),
    .tengbe_test_pkt_sim_enable_user_data_out(tengbe_test_pkt_sim_enable_user_data_out),
    .tengbe_test_pkt_sim_payload_len_user_data_out(tengbe_test_pkt_sim_payload_len_user_data_out),
    .tengbe_test_pkt_sim_period_user_data_out(tengbe_test_pkt_sim_period_user_data_out),
    .tengbe_test_rst_user_data_out(tengbe_test_rst_user_data_out),
    .tengbe_test_tx_snapshot_ss_bram_addr(tengbe_test_tx_snapshot_ss_bram_addr),
    .tengbe_test_tx_snapshot_ss_bram_data_in(tengbe_test_tx_snapshot_ss_bram_data_in),
    .tengbe_test_tx_snapshot_ss_bram_data_out(tengbe_test_tx_snapshot_ss_bram_data_out),
    .tengbe_test_tx_snapshot_ss_bram_we(tengbe_test_tx_snapshot_ss_bram_we),
    .tengbe_test_tx_snapshot_ss_ctrl_user_data_out(tengbe_test_tx_snapshot_ss_ctrl_user_data_out),
    .tengbe_test_tx_snapshot_ss_status_user_data_in(tengbe_test_tx_snapshot_ss_status_user_data_in)
  );

  // ten_gbe: gbe0
  tengbaser_infrastructure_ultrascale  tengbaser_infra0_inst (
    .dclk(dclk0),
    .gt_refclk_n(ref_clk_n0),
    .gt_refclk_out(core_clk_156_0),
    .gt_refclk_p(ref_clk_p0),
    .gt_rx_reset_in_0(gt_reset_rx_done_out_0),
    .gt_rxusrclk2_0(rx_clk_out_0),
    .gt_tx_reset_in_0(gt_reset_tx_done_out_0),
    .gt_txusrclk2_0(tx_mii_clk_0),
    .gtwiz_reset_all_0(gt_reset_all_0),
    .gtwiz_reset_rx_datapath_out_0(gtwiz_reset_rx_datapath_out_0),
    .gtwiz_reset_tx_datapath_out_0(gtwiz_reset_tx_datapath_out_0),
    .qpll0lock(gtwiz_reset_qpll0lock_in),
    .qpll0outclk(qpll0clk_in),
    .qpll0outrefclk(qpll0refclk_in),
    .qpll0reset(gtwiz_reset_qpll0reset_out),
    .qpll1lock(gtwiz_reset_qpll1lock_in),
    .qpll1outclk(qpll1clk_in),
    .qpll1outrefclk(qpll1refclk_in),
    .qpll1reset(gtwiz_reset_qpll1reset_out),
    .rx_core_clk_0(rx_clk_out_0),
    .rx_core_reset_in_0(axil_rst),
    .rx_core_reset_out_0(rx_core_reset_out),
    .rx_serdes_reset_out_0(rx_serdes_reset_0),
    .sys_reset(axil_rst),
    .tx_core_reset_in_0(axil_rst),
    .tx_core_reset_out_0(tx_core_reset_out),
    .usr_rx_reset_0(),
    .usr_tx_reset_0()
  );


  tengbaser_phy_ultrascale  tengbaser_phy1 (
    .ctl_rx_data_pattern_select_0(1'b0),
    .ctl_rx_prbs31_test_pattern_enable_0(1'b0),
    .ctl_rx_test_pattern_0(1'b0),
    .ctl_rx_test_pattern_enable_0(1'b0),
    .ctl_tx_data_pattern_select_0(1'b0),
    .ctl_tx_prbs31_test_pattern_enable_0(1'b0),
    .ctl_tx_test_pattern_0(1'b0),
    .ctl_tx_test_pattern_enable_0(1'b0),
    .ctl_tx_test_pattern_seed_a_0(1'b0),
    .ctl_tx_test_pattern_seed_b_0(1'b0),
    .ctl_tx_test_pattern_select_0(1'b0),
    .dclk(dclk0),
    .gt_loopback_in_0(3'b000),
    .gt_reset_all_in_0(gt_reset_all_0),
    .gt_reset_rx_done_out_0(gt_reset_rx_done_out_0),
    .gt_reset_tx_done_out_0(gt_reset_tx_done_out_0),
    .gt_rx_reset_in_0(gtwiz_reset_rx_datapath_out_0),
    .gt_rxn_in_0(mgt_rx_n1),
    .gt_rxp_in_0(mgt_rx_p1),
    .gt_tx_reset_in_0(gtwiz_reset_tx_datapath_out_0),
    .gt_txn_out_0(mgt_tx_n1),
    .gt_txp_out_0(mgt_tx_p1),
    .gtpowergood_out_0(),
    .gtwiz_reset_qpll0lock_in(gtwiz_reset_qpll0lock_in),
    .gtwiz_reset_qpll0reset_out(gtwiz_reset_qpll0reset_out),
    .gtwiz_reset_qpll1lock_in(gtwiz_reset_qpll1lock_in),
    .gtwiz_reset_qpll1reset_out(gtwiz_reset_qpll1reset_out),
    .qpll0clk_in(qpll0clk_in),
    .qpll0refclk_in(qpll0refclk_in),
    .qpll1clk_in(qpll1clk_in),
    .qpll1refclk_in(qpll1refclk_in),
    .rx_clk_out_0(rx_clk_out_0),
    .rx_core_clk_0(rx_clk_out_0),
    .rx_mii_c_0(xgmii_rxc1),
    .rx_mii_d_0(xgmii_rxd1),
    .rx_reset_0(rx_core_reset_out),
    .rx_serdes_reset_0(rx_serdes_reset_0),
    .rxoutclksel_in_0(3'b101),
    .rxrecclkout_0(),
    .stat_rx_bad_code_0(),
    .stat_rx_bad_code_valid_0(),
    .stat_rx_block_lock_0(stat_rx_block_lock_0),
    .stat_rx_error_0(),
    .stat_rx_error_valid_0(),
    .stat_rx_fifo_error_0(),
    .stat_rx_framing_err_0(),
    .stat_rx_framing_err_valid_0(),
    .stat_rx_hi_ber_0(),
    .stat_rx_local_fault_0(),
    .stat_rx_status_0(),
    .stat_rx_valid_ctrl_code_0(),
    .stat_tx_local_fault_0(),
    .sys_reset(axil_rst),
    .tx_mii_c_0(xgmii_txc1),
    .tx_mii_clk_0(tx_mii_clk_0),
    .tx_mii_d_0(xgmii_txd1),
    .tx_reset_0(tx_core_reset_out),
    .txoutclksel_in_0(3'b101)
  );


  kat_ten_gb_eth #(
    .CPU_RX_ENABLE(1),
    .CPU_TX_ENABLE(1),
    .FABRIC_ENABLE(1),
    .FABRIC_GATEWAY(8'h1),
    .FABRIC_IP(32'hc0a80114),
    .FABRIC_MAC(48'h123456780000),
    .FABRIC_PORT(10000),
    .LARGE_PACKETS(1),
    .RX_DIST_RAM(0),
    .TTL(255)
  ) tengbe_test_gbe0 (
    .clk(user_clk),
    .led_rx(tengbe_test_gbe0_led_rx),
    .led_tx(tengbe_test_gbe0_led_tx),
    .led_up(tengbe_test_gbe0_led_up),
    .mgt_rxeqmix(mgt_rxeqmix1),
    .mgt_txdiffctrl(mgt_txdiffctrl1),
    .mgt_txpostemphasis(mgt_txpostemphasis1),
    .mgt_txpreemphasis(mgt_txpreemphasis1),
    .rst(tengbe_test_gbe0_rst),
    .rx_ack(tengbe_test_gbe0_rx_ack),
    .rx_bad_frame(tengbe_test_gbe0_rx_bad_frame),
    .rx_data(tengbe_test_gbe0_rx_data),
    .rx_end_of_frame(tengbe_test_gbe0_rx_end_of_frame),
    .rx_overrun(tengbe_test_gbe0_rx_overrun),
    .rx_overrun_ack(tengbe_test_gbe0_rx_overrun_ack),
    .rx_source_ip(tengbe_test_gbe0_rx_source_ip),
    .rx_source_port(tengbe_test_gbe0_rx_source_port),
    .rx_valid(tengbe_test_gbe0_rx_valid),
    .tx_afull(tengbe_test_gbe0_tx_afull),
    .tx_data(tengbe_test_gbe0_tx_data),
    .tx_dest_ip(tengbe_test_gbe0_tx_dest_ip),
    .tx_dest_port(tengbe_test_gbe0_tx_dest_port),
    .tx_end_of_frame(tengbe_test_gbe0_tx_end_of_frame),
    .tx_overflow(tengbe_test_gbe0_tx_overflow),
    .tx_valid(tengbe_test_gbe0_tx_valid),
    .wb_ack_o(tengbe_test_gbe0wb_ack),
    .wb_adr_i(tengbe_test_gbe0wb_adr),
    .wb_clk_i(axil_clk),
    .wb_cyc_i(tengbe_test_gbe0_wb_cyc),
    .wb_dat_i(tengbe_test_gbe0wb_dat_i),
    .wb_dat_o(tengbe_test_gbe0wb_dat_o),
    .wb_err_o(tengbe_test_gbe0wb_err),
    .wb_rst_i(tengbe_test_gbe0wb_rst),
    .wb_sel_i(tengbe_test_gbe0wb_sel),
    .wb_stb_i(tengbe_test_gbe0_wb_stb),
    .wb_we_i(tengbe_test_gbe0_wb_we),
    .xaui_clk(core_clk_156_0),
    .xaui_reset(axil_rst),
    .xaui_status({7'b0,stat_rx_block_lock_0}),
    .xgmii_rxc(xgmii_rxc1),
    .xgmii_rxd(xgmii_rxd1),
    .xgmii_txc(xgmii_txc1),
    .xgmii_txd(xgmii_txd1)
  );


  axi_slave_wishbone_classic_master #(
    .C_S_AXI_ADDR_WIDTH(32),
    .C_S_AXI_ARUSER_WIDTH(1),
    .C_S_AXI_AWUSER_WIDTH(1),
    .C_S_AXI_BUSER_WIDTH(1),
    .C_S_AXI_DATA_WIDTH(32),
    .C_S_AXI_ID_WIDTH(1),
    .C_S_AXI_RUSER_WIDTH(1),
    .C_S_AXI_WUSER_WIDTH(1)
  ) tengbe_test_gbe0_wb2axi4lite (
    .ACK_I(tengbe_test_gbe0wb_ack),
    .ADR_O(tengbe_test_gbe0wb_adr),
    .CYC_O(tengbe_test_gbe0_wb_cyc),
    .DAT_I(tengbe_test_gbe0wb_dat_o),
    .DAT_O(tengbe_test_gbe0wb_dat_i),
    .RST_O(tengbe_test_gbe0wb_rst),
    .SEL_O(tengbe_test_gbe0wb_sel),
    .STB_O(tengbe_test_gbe0_wb_stb),
    .S_AXI_ACLK(axil_clk),
    .S_AXI_ARADDR(m_axi4lite_gbe0_araddr),
    .S_AXI_ARBURST(2'b01),
    .S_AXI_ARCACHE(0),
    .S_AXI_ARESETN(axil_rst_n),
    .S_AXI_ARID(0),
    .S_AXI_ARLEN(0),
    .S_AXI_ARLOCK(0),
    .S_AXI_ARPROT(0),
    .S_AXI_ARQOS(0),
    .S_AXI_ARREADY(m_axi4lite_gbe0_arready),
    .S_AXI_ARREGION(0),
    .S_AXI_ARSIZE(3'b010),
    .S_AXI_ARUSER(0),
    .S_AXI_ARVALID(m_axi4lite_gbe0_arvalid),
    .S_AXI_AWADDR(m_axi4lite_gbe0_awaddr),
    .S_AXI_AWBURST(2'b01),
    .S_AXI_AWCACHE(0),
    .S_AXI_AWID(0),
    .S_AXI_AWLEN(0),
    .S_AXI_AWLOCK(0),
    .S_AXI_AWPROT(0),
    .S_AXI_AWQOS(0),
    .S_AXI_AWREADY(m_axi4lite_gbe0_awready),
    .S_AXI_AWREGION(0),
    .S_AXI_AWSIZE(3'b010),
    .S_AXI_AWUSER(0),
    .S_AXI_AWVALID(m_axi4lite_gbe0_awvalid),
    .S_AXI_BID(),
    .S_AXI_BREADY(m_axi4lite_gbe0_bready),
    .S_AXI_BRESP(m_axi4lite_gbe0_bresp),
    .S_AXI_BUSER(),
    .S_AXI_BVALID(m_axi4lite_gbe0_bvalid),
    .S_AXI_RDATA(m_axi4lite_gbe0_rdata),
    .S_AXI_RID(),
    .S_AXI_RLAST(),
    .S_AXI_RREADY(m_axi4lite_gbe0_rready),
    .S_AXI_RRESP(m_axi4lite_gbe0_rresp),
    .S_AXI_RUSER(),
    .S_AXI_RVALID(m_axi4lite_gbe0_rvalid),
    .S_AXI_WDATA(m_axi4lite_gbe0_wdata),
    .S_AXI_WLAST(1'b1),
    .S_AXI_WREADY(m_axi4lite_gbe0_wready),
    .S_AXI_WSTRB(m_axi4lite_gbe0_wstrb),
    .S_AXI_WUSER(0),
    .S_AXI_WVALID(m_axi4lite_gbe0_wvalid),
    .WE_O(tengbe_test_gbe0_wb_we)
  );

  // zcu111: ZCU111
  zcu111_infrastructure #(
    .DIVCLK(1),
    .DIVIDE(4.0),
    .MULTIPLY(8.0)
  ) zcu111_infr_inst (
    .clk_100_n(clk_100_n),
    .clk_100_p(clk_100_p),
    .clk_200(clk_200),
    .sys_clk(sys_clk),
    .sys_clk180(sys_clk180),
    .sys_clk270(sys_clk270),
    .sys_clk90(sys_clk90),
    .sys_clk_rst(sys_clk_rst)
  );


  zcu111  zcu111_inst (
    .M_AXI_RFDC_araddr(M_AXI_RFDC_araddr),
    .M_AXI_RFDC_arprot(M_AXI_RFDC_arprot),
    .M_AXI_RFDC_arready(M_AXI_RFDC_arready),
    .M_AXI_RFDC_arvalid(M_AXI_RFDC_arvalid),
    .M_AXI_RFDC_awaddr(M_AXI_RFDC_awaddr),
    .M_AXI_RFDC_awprot(M_AXI_RFDC_awprot),
    .M_AXI_RFDC_awready(M_AXI_RFDC_awready),
    .M_AXI_RFDC_awvalid(M_AXI_RFDC_awvalid),
    .M_AXI_RFDC_bready(M_AXI_RFDC_bready),
    .M_AXI_RFDC_bresp(M_AXI_RFDC_bresp),
    .M_AXI_RFDC_bvalid(M_AXI_RFDC_bvalid),
    .M_AXI_RFDC_rdata(M_AXI_RFDC_rdata),
    .M_AXI_RFDC_rready(M_AXI_RFDC_rready),
    .M_AXI_RFDC_rresp(M_AXI_RFDC_rresp),
    .M_AXI_RFDC_rvalid(M_AXI_RFDC_rvalid),
    .M_AXI_RFDC_wdata(M_AXI_RFDC_wdata),
    .M_AXI_RFDC_wready(M_AXI_RFDC_wready),
    .M_AXI_RFDC_wstrb(M_AXI_RFDC_wstrb),
    .M_AXI_RFDC_wvalid(M_AXI_RFDC_wvalid),
    .M_AXI_araddr(M_AXI_araddr),
    .M_AXI_arprot(M_AXI_arprot),
    .M_AXI_arready(M_AXI_arready),
    .M_AXI_arvalid(M_AXI_arvalid),
    .M_AXI_awaddr(M_AXI_awaddr),
    .M_AXI_awprot(M_AXI_awprot),
    .M_AXI_awready(M_AXI_awready),
    .M_AXI_awvalid(M_AXI_awvalid),
    .M_AXI_bready(M_AXI_bready),
    .M_AXI_bresp(M_AXI_bresp),
    .M_AXI_bvalid(M_AXI_bvalid),
    .M_AXI_rdata(M_AXI_rdata),
    .M_AXI_rready(M_AXI_rready),
    .M_AXI_rresp(M_AXI_rresp),
    .M_AXI_rvalid(M_AXI_rvalid),
    .M_AXI_wdata(M_AXI_wdata),
    .M_AXI_wready(M_AXI_wready),
    .M_AXI_wstrb(M_AXI_wstrb),
    .M_AXI_wvalid(M_AXI_wvalid),
    .axil_clk(axil_clk),
    .axil_rst(axil_rst),
    .axil_rst_n(axil_rst_n)
  );


/*
                   _                                  _       
     /\           (_)                                | |      
    /  \   ___ ___ _  __ _ _ __  _ __ ___   ___ _ __ | |_ ___ 
   / /\ \ / __/ __| |/ _` | '_ \| '_ ` _ \ / _ \ '_ \| __/ __|
  / ____ \\__ \__ \ | (_| | | | | | | | | |  __/ | | | |_\__ \ 
 /_/    \_\___/___/_|\__, |_| |_|_| |_| |_|\___|_| |_|\__|___/
                      __/ |                                   
                     |___/                                    
*/
  // xsg: ZCU111
  assign user_clk = sys_clk;
  assign user_clk180 = sys_clk180;
  assign user_clk270 = sys_clk270;
  assign user_clk90 = sys_clk90;


endmodule