////////////////////////////////////////////////////////////////////////////////
//   ____  ____ 
//  /   /\/   / 
// /___/  \  /    Vendor: Xilinx 
// \   \   \/     Version : 3.3
//  \   \         Application : 7 Series FPGAs Transceivers Wizard 
//  /   /         Filename : gtwizard_0_exdes.v
// /___/   /\     
// \   \  /  \ 
//  \___\/\___\ 
//
//
// Module gtwizard_0_exdes
// Generated by Xilinx 7 Series FPGAs Transceivers Wizard
// 
// 
// (c) Copyright 2010-2012 Xilinx, Inc. All rights reserved.
// 
// This file contains confidential and proprietary information
// of Xilinx, Inc. and is protected under U.S. and
// international copyright and other intellectual property
// laws.
// 
// DISCLAIMER
// This disclaimer is not a license and does not grant any
// rights to the materials distributed herewith. Except as
// otherwise provided in a valid license issued to you by
// Xilinx, and to the maximum extent permitted by applicable
// law: (1) THESE MATERIALS ARE MADE AVAILABLE "AS IS" AND
// WITH ALL FAULTS, AND XILINX HEREBY DISCLAIMS ALL WARRANTIES
// AND CONDITIONS, EXPRESS, IMPLIED, OR STATUTORY, INCLUDING
// BUT NOT LIMITED TO WARRANTIES OF MERCHANTABILITY, NON-
// INFRINGEMENT, OR FITNESS FOR ANY PARTICULAR PURPOSE; and
// (2) Xilinx shall not be liable (whether in contract or tort,
// including negligence, or under any other theory of
// liability) for any loss or damage of any kind or nature
// related to, arising under or in connection with these
// materials, including for any direct, or any indirect,
// special, incidental, or consequential loss or damage
// (including loss of data, profits, goodwill, or any type of
// loss or damage suffered as a result of any action brought
// by a third party) even if such damage or loss was
// reasonably foreseeable or Xilinx had been advised of the
// possibility of the same.
// 
// CRITICAL APPLICATIONS
// Xilinx products are not designed or intended to be fail-
// safe, or for use in any application requiring fail-safe
// performance, such as life-support or safety devices or
// systems, Class III medical devices, nuclear facilities,
// applications related to the deployment of airbags, or any
// other applications that could lead to death, personal
// injury, or severe property or environmental damage
// (individually and collectively, "Critical
// Applications"). Customer assumes the sole risk and
// liability of any use of Xilinx products in Critical
// Applications, subject only to applicable laws and
// regulations governing limitations on product liability.
// 
// THIS COPYRIGHT NOTICE AND DISCLAIMER MUST BE RETAINED AS
// PART OF THIS FILE AT ALL TIMES. 


`timescale 1ns / 1ps
`define DLY #1

(* DowngradeIPIdentifiedWarnings="yes" *)
//***********************************Entity Declaration************************
(* CORE_GENERATION_INFO = "gtwizard_0,gtwizard_v3_3,{protocol_file=Start_from_scratch}" *)
module gtwizard_0_exdes #
(
    parameter EXAMPLE_CONFIG_INDEPENDENT_LANES     =   0,//configuration for frame gen and check
    parameter EXAMPLE_LANE_WITH_START_CHAR         =   0,         // specifies lane with unique start frame char
    parameter EXAMPLE_WORDS_IN_BRAM                =   512,       // specifies amount of data in BRAM
    parameter EXAMPLE_SIM_GTRESET_SPEEDUP          =   "TRUE",    // simulation setting for GT SecureIP model
    parameter EXAMPLE_USE_CHIPSCOPE                =   0,         // Set to 1 to use Chipscope to drive resets
    parameter STABLE_CLOCK_PERIOD                  = 16,
    parameter COMPILE_FOR_SIM = 1,
	parameter WHICH_ADC = 1

)
(
input wire  Q8_CLK1_GTREFCLK_PAD_N_IN,
input wire  Q8_CLK1_GTREFCLK_PAD_P_IN,
//RR replaced the differential DRPCLK with an SE
//    input wire  DRP_CLK_IN_P,
//    input wire  DRP_CLK_IN_N,
input wire  DRP_CLK_IN,
//These seem to go nowhere
//    input wire  GTTX_RESET_IN,
//    input wire  GTRX_RESET_IN,
//    input wire  CPLL_RESET_IN,
//    input wire  QPLL_RESET_IN,
output wire TRACK_DATA_OUT,
input wire DONT_RESET_ON_DATA_ERROR,
input  wire [9:0]   RXN_IN,
input  wire [9:0]   RXP_IN,
output wire [9:0]   TXN_OUT,
output wire [9:0]   TXP_OUT,

//RR added these ports
input wire RX_MCOMMA_EN,
input wire RX_PCOMMA_EN,
input wire RESET,
input wire RX_8B10BEN,
input wire TX_8B10BEN,
input wire [2:0] RX_PRBSEL,
input wire [2:0] TX_PRBSEL,
input wire RX_CHBOND_EN,
input wire PRBSCTR_RESET,
output wire TX_USR_CLK,
output wire RX_USR_CLK,
    //RR added these PPM controller ports
input                 TX_PPM_EN,
input     [4:0]      TX_PPM_CTRL,
input                INV_TXOUT,
input                MODULATION_ON,
input                MODULATION_ALIGN,
input   [1:0]       MOD_SEL,

output [327:0] dout,

//and this one to control the sample interval
input [19:0] sample_interval,
//to inhibit the TENGMAC output
input inhibit_output,
//the channel DRP port, to read back the PRBS_ERR counter
input [8:0] chan_drp_addr,
input [15:0] chan_drp_datain,
input chan_drp_enable,
input chan_drp_we,
output reg [15:0] chan_drp_out,
//select one of the 10 channels to access
input [3:0] chan_drp_sel,
//all of the drp_ready signals
output [9:0] chan_drp_rdy,

//LEDS flashing to indicate two clocks are running
output FLASH1,
output FLASH2

);

    wire soft_reset_i;
    wire soft_reset_vio_i;

//************************** Register Declarations ****************************

    wire            gt0_txfsmresetdone_i;
    wire            gt0_rxfsmresetdone_i;
    (* ASYNC_REG = "TRUE" *)reg             gt0_txfsmresetdone_r;
    (* ASYNC_REG = "TRUE" *)reg             gt0_txfsmresetdone_r2;
    (* ASYNC_REG = "TRUE" *)reg             gt0_rxresetdone_r;
    (* ASYNC_REG = "TRUE" *)reg             gt0_rxresetdone_r2;
    (* ASYNC_REG = "TRUE" *)reg             gt0_rxresetdone_r3;

    wire            gt1_txfsmresetdone_i;
    wire            gt1_rxfsmresetdone_i;
    (* ASYNC_REG = "TRUE" *)reg             gt1_txfsmresetdone_r;
    (* ASYNC_REG = "TRUE" *)reg             gt1_txfsmresetdone_r2;
    (* ASYNC_REG = "TRUE" *)reg             gt1_rxresetdone_r;
    (* ASYNC_REG = "TRUE" *)reg             gt1_rxresetdone_r2;
    (* ASYNC_REG = "TRUE" *)reg             gt1_rxresetdone_r3;

    wire            gt2_txfsmresetdone_i;
    wire            gt2_rxfsmresetdone_i;
    (* ASYNC_REG = "TRUE" *)reg             gt2_txfsmresetdone_r;
    (* ASYNC_REG = "TRUE" *)reg             gt2_txfsmresetdone_r2;
    (* ASYNC_REG = "TRUE" *)reg             gt2_rxresetdone_r;
    (* ASYNC_REG = "TRUE" *)reg             gt2_rxresetdone_r2;
    (* ASYNC_REG = "TRUE" *)reg             gt2_rxresetdone_r3;

    wire            gt3_txfsmresetdone_i;
    wire            gt3_rxfsmresetdone_i;
    (* ASYNC_REG = "TRUE" *)reg             gt3_txfsmresetdone_r;
    (* ASYNC_REG = "TRUE" *)reg             gt3_txfsmresetdone_r2;
    (* ASYNC_REG = "TRUE" *)reg             gt3_rxresetdone_r;
    (* ASYNC_REG = "TRUE" *)reg             gt3_rxresetdone_r2;
    (* ASYNC_REG = "TRUE" *)reg             gt3_rxresetdone_r3;

    wire            gt4_txfsmresetdone_i;
    wire            gt4_rxfsmresetdone_i;
    (* ASYNC_REG = "TRUE" *)reg             gt4_txfsmresetdone_r;
    (* ASYNC_REG = "TRUE" *)reg             gt4_txfsmresetdone_r2;
    (* ASYNC_REG = "TRUE" *)reg             gt4_rxresetdone_r;
    (* ASYNC_REG = "TRUE" *)reg             gt4_rxresetdone_r2;
    (* ASYNC_REG = "TRUE" *)reg             gt4_rxresetdone_r3;

    wire            gt5_txfsmresetdone_i;
    wire            gt5_rxfsmresetdone_i;
    (* ASYNC_REG = "TRUE" *)reg             gt5_txfsmresetdone_r;
    (* ASYNC_REG = "TRUE" *)reg             gt5_txfsmresetdone_r2;
    (* ASYNC_REG = "TRUE" *)reg             gt5_rxresetdone_r;
    (* ASYNC_REG = "TRUE" *)reg             gt5_rxresetdone_r2;
    (* ASYNC_REG = "TRUE" *)reg             gt5_rxresetdone_r3;

    wire            gt6_txfsmresetdone_i;
    wire            gt6_rxfsmresetdone_i;
    (* ASYNC_REG = "TRUE" *)reg             gt6_txfsmresetdone_r;
    (* ASYNC_REG = "TRUE" *)reg             gt6_txfsmresetdone_r2;
    (* ASYNC_REG = "TRUE" *)reg             gt6_rxresetdone_r;
    (* ASYNC_REG = "TRUE" *)reg             gt6_rxresetdone_r2;
    (* ASYNC_REG = "TRUE" *)reg             gt6_rxresetdone_r3;

    wire            gt7_txfsmresetdone_i;
    wire            gt7_rxfsmresetdone_i;
    (* ASYNC_REG = "TRUE" *)reg             gt7_txfsmresetdone_r;
    (* ASYNC_REG = "TRUE" *)reg             gt7_txfsmresetdone_r2;
    (* ASYNC_REG = "TRUE" *)reg             gt7_rxresetdone_r;
    (* ASYNC_REG = "TRUE" *)reg             gt7_rxresetdone_r2;
    (* ASYNC_REG = "TRUE" *)reg             gt7_rxresetdone_r3;

    wire            gt8_txfsmresetdone_i;
    wire            gt8_rxfsmresetdone_i;
    (* ASYNC_REG = "TRUE" *)reg             gt8_txfsmresetdone_r;
    (* ASYNC_REG = "TRUE" *)reg             gt8_txfsmresetdone_r2;
    (* ASYNC_REG = "TRUE" *)reg             gt8_rxresetdone_r;
    (* ASYNC_REG = "TRUE" *)reg             gt8_rxresetdone_r2;
    (* ASYNC_REG = "TRUE" *)reg             gt8_rxresetdone_r3;

    wire            gt9_txfsmresetdone_i;
    wire            gt9_rxfsmresetdone_i;
    (* ASYNC_REG = "TRUE" *)reg             gt9_txfsmresetdone_r;
    (* ASYNC_REG = "TRUE" *)reg             gt9_txfsmresetdone_r2;
    (* ASYNC_REG = "TRUE" *)reg             gt9_rxresetdone_r;
    (* ASYNC_REG = "TRUE" *)reg             gt9_rxresetdone_r2;
    (* ASYNC_REG = "TRUE" *)reg             gt9_rxresetdone_r3;


//**************************** Wire Declarations ******************************//
//The 156.25MHz reference clock, from the ADC board
    //------------------------ GT Wrapper Wires ------------------------------
    //________________________________________________________________________
    //________________________________________________________________________
    //GT0  (X1Y28)
    //-------------------------- Channel - DRP Ports  --------------------------
    wire    [8:0]   gt0_drpaddr_i;
    wire    [15:0]  gt0_drpdi_i;
    wire    [15:0]  gt0_drpdo_i;
    wire            gt0_drpen_i;
    wire            gt0_drprdy_i;
    wire            gt0_drpwe_i;
    //------------------- RX Initialization and Reset Ports --------------------
    wire            gt0_eyescanreset_i;
    wire            gt0_rxuserrdy_i;
    //------------------------ RX Margin Analysis Ports ------------------------
    wire            gt0_eyescandataerror_i;
    wire            gt0_eyescantrigger_i;
    //----------------- Receive Ports - Digital Monitor Ports ------------------
    wire    [14:0]  gt0_dmonitorout_i;
    //---------------- Receive Ports - FPGA RX interface Ports -----------------
    wire    [31:0]  gt0_rxdata_i;
    //----------------- Receive Ports - Pattern Checker Ports ------------------
    (*KEEP = "TRUE"*)wire            gt0_rxprbserr_i;
    wire    [2:0]   gt0_rxprbssel_i;
    //----------------- Receive Ports - Pattern Checker ports ------------------
    wire            gt0_rxprbscntreset_i;
    //---------------- Receive Ports - RX 8B/10B Decoder Ports -----------------
    wire    [3:0]   gt0_rxdisperr_i;
    wire    [3:0]   gt0_rxnotintable_i;
    //---------------------- Receive Ports - RX AFE Ports ----------------------
    wire            gt0_gthrxn_i;
    //------------ Receive Ports - RX Byte and Word Alignment Ports ------------
    wire            gt0_rxmcommaalignen_i;
    wire            gt0_rxpcommaalignen_i;
    //---------------- Receive Ports - RX Channel Bonding Ports ----------------
    wire            gt0_rxchanbondseq_i;
    wire            gt0_rxchbonden_i;
    //--------------- Receive Ports - RX Channel Bonding Ports  ----------------
    wire            gt0_rxchanisaligned_i;
    wire            gt0_rxchanrealign_i;
    //------------------- Receive Ports - RX Equalizer Ports -------------------
    wire    [6:0]   gt0_rxmonitorout_i;
    wire    [1:0]   gt0_rxmonitorsel_i;
    //------------- Receive Ports - RX Fabric Output Control Ports -------------
    wire            gt0_rxoutclk_i;
    //----------- Receive Ports - RX Initialization and Reset Ports ------------
    wire            gt0_gtrxreset_i;
    //----------------- Receive Ports - RX8B/10B Decoder Ports -----------------
    wire    [3:0]   gt0_rxcharisk_i;
    //---------------------- Receive Ports -RX AFE Ports -----------------------
    wire            gt0_gthrxp_i;
    //------------ Receive Ports -RX Initialization and Reset Ports ------------
    wire            gt0_rxresetdone_i;
    //------------------- TX Initialization and Reset Ports --------------------
    wire            gt0_gttxreset_i;
    wire            gt0_txuserrdy_i;
    //-------------- Transmit Ports - 8b10b Encoder Control Ports --------------
    wire    [3:0]   gt0_txchardispmode_i;
    wire    [3:0]   gt0_txchardispval_i;
    //---------------- Transmit Ports - Pattern Generator Ports ----------------
    wire            gt0_txprbsforceerr_i;
    //---------------- Transmit Ports - TX Data Path interface -----------------
    wire    [31:0]  gt0_txdata_i;
    //-------------- Transmit Ports - TX Driver and OOB signaling --------------
    wire            gt0_gthtxn_i;
    wire            gt0_gthtxp_i;
    //--------- Transmit Ports - TX Fabric Clock Output Control Ports ----------
    wire            gt0_txoutclk_i;
    wire            gt0_txoutclkfabric_i;
    wire            gt0_txoutclkpcs_i;
    //----------- Transmit Ports - TX Initialization and Reset Ports -----------
    wire            gt0_txresetdone_i;
    //---------------- Transmit Ports - pattern Generator Ports ----------------
    wire    [2:0]   gt0_txprbssel_i;
    //--------- Transmit Transmit Ports - 8b10b Encoder Control Ports ----------
    wire    [3:0]   gt0_txcharisk_i;

    //________________________________________________________________________
    //________________________________________________________________________
    //GT1  (X1Y29)
    //-------------------------- Channel - DRP Ports  --------------------------
    wire    [8:0]   gt1_drpaddr_i;
    wire    [15:0]  gt1_drpdi_i;
    wire    [15:0]  gt1_drpdo_i;
    wire            gt1_drpen_i;
    wire            gt1_drprdy_i;
    wire            gt1_drpwe_i;
    //------------------- RX Initialization and Reset Ports --------------------
    wire            gt1_eyescanreset_i;
    wire            gt1_rxuserrdy_i;
    //------------------------ RX Margin Analysis Ports ------------------------
    wire            gt1_eyescandataerror_i;
    wire            gt1_eyescantrigger_i;
    //----------------- Receive Ports - Digital Monitor Ports ------------------
    wire    [14:0]  gt1_dmonitorout_i;
    //---------------- Receive Ports - FPGA RX interface Ports -----------------
    wire    [31:0]  gt1_rxdata_i;
    //----------------- Receive Ports - Pattern Checker Ports ------------------
    (*KEEP = "TRUE"*)wire            gt1_rxprbserr_i;
    wire    [2:0]   gt1_rxprbssel_i;
    //----------------- Receive Ports - Pattern Checker ports ------------------
    wire            gt1_rxprbscntreset_i;
    //---------------- Receive Ports - RX 8B/10B Decoder Ports -----------------
    wire    [3:0]   gt1_rxdisperr_i;
    wire    [3:0]   gt1_rxnotintable_i;
    //---------------------- Receive Ports - RX AFE Ports ----------------------
    wire            gt1_gthrxn_i;
    //------------ Receive Ports - RX Byte and Word Alignment Ports ------------
    wire            gt1_rxmcommaalignen_i;
    wire            gt1_rxpcommaalignen_i;
    //---------------- Receive Ports - RX Channel Bonding Ports ----------------
    wire            gt1_rxchanbondseq_i;
    wire            gt1_rxchbonden_i;
    //--------------- Receive Ports - RX Channel Bonding Ports  ----------------
    wire            gt1_rxchanisaligned_i;
    wire            gt1_rxchanrealign_i;
    //------------------- Receive Ports - RX Equalizer Ports -------------------
    wire    [6:0]   gt1_rxmonitorout_i;
    wire    [1:0]   gt1_rxmonitorsel_i;
    //------------- Receive Ports - RX Fabric Output Control Ports -------------
    wire            gt1_rxoutclk_i;
    //----------- Receive Ports - RX Initialization and Reset Ports ------------
    wire            gt1_gtrxreset_i;
    //----------------- Receive Ports - RX8B/10B Decoder Ports -----------------
    wire    [3:0]   gt1_rxcharisk_i;
    //---------------------- Receive Ports -RX AFE Ports -----------------------
    wire            gt1_gthrxp_i;
    //------------ Receive Ports -RX Initialization and Reset Ports ------------
    wire            gt1_rxresetdone_i;
    //------------------- TX Initialization and Reset Ports --------------------
    wire            gt1_gttxreset_i;
    wire            gt1_txuserrdy_i;
    //-------------- Transmit Ports - 8b10b Encoder Control Ports --------------
    wire    [3:0]   gt1_txchardispmode_i;
    wire    [3:0]   gt1_txchardispval_i;
    //---------------- Transmit Ports - Pattern Generator Ports ----------------
    wire            gt1_txprbsforceerr_i;
    //---------------- Transmit Ports - TX Data Path interface -----------------
    wire    [31:0]  gt1_txdata_i;
    //-------------- Transmit Ports - TX Driver and OOB signaling --------------
    wire            gt1_gthtxn_i;
    wire            gt1_gthtxp_i;
    //--------- Transmit Ports - TX Fabric Clock Output Control Ports ----------
    wire            gt1_txoutclk_i;
    wire            gt1_txoutclkfabric_i;
    wire            gt1_txoutclkpcs_i;
    //----------- Transmit Ports - TX Initialization and Reset Ports -----------
    wire            gt1_txresetdone_i;
    //---------------- Transmit Ports - pattern Generator Ports ----------------
    wire    [2:0]   gt1_txprbssel_i;
    //--------- Transmit Transmit Ports - 8b10b Encoder Control Ports ----------
    wire    [3:0]   gt1_txcharisk_i;

    //________________________________________________________________________
    //________________________________________________________________________
    //GT2  (X1Y32)
    //-------------------------- Channel - DRP Ports  --------------------------
    wire    [8:0]   gt2_drpaddr_i;
    wire    [15:0]  gt2_drpdi_i;
    wire    [15:0]  gt2_drpdo_i;
    wire            gt2_drpen_i;
    wire            gt2_drprdy_i;
    wire            gt2_drpwe_i;
    //------------------- RX Initialization and Reset Ports --------------------
    wire            gt2_eyescanreset_i;
    wire            gt2_rxuserrdy_i;
    //------------------------ RX Margin Analysis Ports ------------------------
    wire            gt2_eyescandataerror_i;
    wire            gt2_eyescantrigger_i;
    //----------------- Receive Ports - Digital Monitor Ports ------------------
    wire    [14:0]  gt2_dmonitorout_i;
    //---------------- Receive Ports - FPGA RX interface Ports -----------------
    wire    [31:0]  gt2_rxdata_i;
    //----------------- Receive Ports - Pattern Checker Ports ------------------
   wire            gt2_rxprbserr_i;
    wire    [2:0]   gt2_rxprbssel_i;
    //----------------- Receive Ports - Pattern Checker ports ------------------
    wire            gt2_rxprbscntreset_i;
    //---------------- Receive Ports - RX 8B/10B Decoder Ports -----------------
    wire    [3:0]   gt2_rxdisperr_i;
    wire    [3:0]   gt2_rxnotintable_i;
    //---------------------- Receive Ports - RX AFE Ports ----------------------
    wire            gt2_gthrxn_i;
    //------------ Receive Ports - RX Byte and Word Alignment Ports ------------
    wire            gt2_rxmcommaalignen_i;
    wire            gt2_rxpcommaalignen_i;
    //---------------- Receive Ports - RX Channel Bonding Ports ----------------
    wire            gt2_rxchanbondseq_i;
    wire            gt2_rxchbonden_i;
    //--------------- Receive Ports - RX Channel Bonding Ports  ----------------
    wire            gt2_rxchanisaligned_i;
    wire            gt2_rxchanrealign_i;
    //------------------- Receive Ports - RX Equalizer Ports -------------------
    wire    [6:0]   gt2_rxmonitorout_i;
    wire    [1:0]   gt2_rxmonitorsel_i;
    //------------- Receive Ports - RX Fabric Output Control Ports -------------
    wire            gt2_rxoutclk_i;
    //----------- Receive Ports - RX Initialization and Reset Ports ------------
    wire            gt2_gtrxreset_i;
    //----------------- Receive Ports - RX8B/10B Decoder Ports -----------------
    wire    [3:0]   gt2_rxcharisk_i;
    //---------------------- Receive Ports -RX AFE Ports -----------------------
    wire            gt2_gthrxp_i;
    //------------ Receive Ports -RX Initialization and Reset Ports ------------
    wire            gt2_rxresetdone_i;
    //------------------- TX Initialization and Reset Ports --------------------
    wire            gt2_gttxreset_i;
    wire            gt2_txuserrdy_i;
    //-------------- Transmit Ports - 8b10b Encoder Control Ports --------------
    wire    [3:0]   gt2_txchardispmode_i;
    wire    [3:0]   gt2_txchardispval_i;
    //---------------- Transmit Ports - Pattern Generator Ports ----------------
    wire            gt2_txprbsforceerr_i;
    //---------------- Transmit Ports - TX Data Path interface -----------------
    wire    [31:0]  gt2_txdata_i;
    //-------------- Transmit Ports - TX Driver and OOB signaling --------------
    wire            gt2_gthtxn_i;
    wire            gt2_gthtxp_i;
    //--------- Transmit Ports - TX Fabric Clock Output Control Ports ----------
    wire            gt2_txoutclk_i;
    wire            gt2_txoutclkfabric_i;
    wire            gt2_txoutclkpcs_i;
    //----------- Transmit Ports - TX Initialization and Reset Ports -----------
    wire            gt2_txresetdone_i;
    //---------------- Transmit Ports - pattern Generator Ports ----------------
    wire    [2:0]   gt2_txprbssel_i;
    //--------- Transmit Transmit Ports - 8b10b Encoder Control Ports ----------
    wire    [3:0]   gt2_txcharisk_i;

    //________________________________________________________________________
    //________________________________________________________________________
    //GT3  (X1Y33)
    //-------------------------- Channel - DRP Ports  --------------------------
    wire    [8:0]   gt3_drpaddr_i;
    wire    [15:0]  gt3_drpdi_i;
    wire    [15:0]  gt3_drpdo_i;
    wire            gt3_drpen_i;
    wire            gt3_drprdy_i;
    wire            gt3_drpwe_i;
    //------------------- RX Initialization and Reset Ports --------------------
    wire            gt3_eyescanreset_i;
    wire            gt3_rxuserrdy_i;
    //------------------------ RX Margin Analysis Ports ------------------------
    wire            gt3_eyescandataerror_i;
    wire            gt3_eyescantrigger_i;
    //----------------- Receive Ports - Digital Monitor Ports ------------------
    wire    [14:0]  gt3_dmonitorout_i;
    //---------------- Receive Ports - FPGA RX interface Ports -----------------
    wire    [31:0]  gt3_rxdata_i;
    //----------------- Receive Ports - Pattern Checker Ports ------------------
   wire            gt3_rxprbserr_i;
    wire    [2:0]   gt3_rxprbssel_i;
    //----------------- Receive Ports - Pattern Checker ports ------------------
    wire            gt3_rxprbscntreset_i;
    //---------------- Receive Ports - RX 8B/10B Decoder Ports -----------------
    wire    [3:0]   gt3_rxdisperr_i;
    wire    [3:0]   gt3_rxnotintable_i;
    //---------------------- Receive Ports - RX AFE Ports ----------------------
    wire            gt3_gthrxn_i;
    //------------ Receive Ports - RX Byte and Word Alignment Ports ------------
    wire            gt3_rxmcommaalignen_i;
    wire            gt3_rxpcommaalignen_i;
    //---------------- Receive Ports - RX Channel Bonding Ports ----------------
    wire            gt3_rxchanbondseq_i;
    wire            gt3_rxchbonden_i;
    //--------------- Receive Ports - RX Channel Bonding Ports  ----------------
    wire            gt3_rxchanisaligned_i;
    wire            gt3_rxchanrealign_i;
    //------------------- Receive Ports - RX Equalizer Ports -------------------
    wire    [6:0]   gt3_rxmonitorout_i;
    wire    [1:0]   gt3_rxmonitorsel_i;
    //------------- Receive Ports - RX Fabric Output Control Ports -------------
    wire            gt3_rxoutclk_i;
    //----------- Receive Ports - RX Initialization and Reset Ports ------------
    wire            gt3_gtrxreset_i;
    //----------------- Receive Ports - RX8B/10B Decoder Ports -----------------
    wire    [3:0]   gt3_rxcharisk_i;
    //---------------------- Receive Ports -RX AFE Ports -----------------------
    wire            gt3_gthrxp_i;
    //------------ Receive Ports -RX Initialization and Reset Ports ------------
    wire            gt3_rxresetdone_i;
    //------------------- TX Initialization and Reset Ports --------------------
    wire            gt3_gttxreset_i;
    wire            gt3_txuserrdy_i;
    //-------------- Transmit Ports - 8b10b Encoder Control Ports --------------
    wire    [3:0]   gt3_txchardispmode_i;
    wire    [3:0]   gt3_txchardispval_i;
    //---------------- Transmit Ports - Pattern Generator Ports ----------------
    wire            gt3_txprbsforceerr_i;
    //---------------- Transmit Ports - TX Data Path interface -----------------
    wire    [31:0]  gt3_txdata_i;
    //-------------- Transmit Ports - TX Driver and OOB signaling --------------
    wire            gt3_gthtxn_i;
    wire            gt3_gthtxp_i;
    //--------- Transmit Ports - TX Fabric Clock Output Control Ports ----------
    wire            gt3_txoutclk_i;
    wire            gt3_txoutclkfabric_i;
    wire            gt3_txoutclkpcs_i;
    //----------- Transmit Ports - TX Initialization and Reset Ports -----------
    wire            gt3_txresetdone_i;
    //---------------- Transmit Ports - pattern Generator Ports ----------------
    wire    [2:0]   gt3_txprbssel_i;
    //--------- Transmit Transmit Ports - 8b10b Encoder Control Ports ----------
    wire    [3:0]   gt3_txcharisk_i;

    //________________________________________________________________________
    //________________________________________________________________________
    //GT4  (X1Y34)
    //-------------------------- Channel - DRP Ports  --------------------------
    wire    [8:0]   gt4_drpaddr_i;
    wire    [15:0]  gt4_drpdi_i;
    wire    [15:0]  gt4_drpdo_i;
    wire            gt4_drpen_i;
    wire            gt4_drprdy_i;
    wire            gt4_drpwe_i;
    //------------------- RX Initialization and Reset Ports --------------------
    wire            gt4_eyescanreset_i;
    wire            gt4_rxuserrdy_i;
    //------------------------ RX Margin Analysis Ports ------------------------
    wire            gt4_eyescandataerror_i;
    wire            gt4_eyescantrigger_i;
    //----------------- Receive Ports - Digital Monitor Ports ------------------
    wire    [14:0]  gt4_dmonitorout_i;
    //---------------- Receive Ports - FPGA RX interface Ports -----------------
    wire    [31:0]  gt4_rxdata_i;
    //----------------- Receive Ports - Pattern Checker Ports ------------------
    wire            gt4_rxprbserr_i;
    wire    [2:0]   gt4_rxprbssel_i;
    //----------------- Receive Ports - Pattern Checker ports ------------------
    wire            gt4_rxprbscntreset_i;
    //---------------- Receive Ports - RX 8B/10B Decoder Ports -----------------
    wire    [3:0]   gt4_rxdisperr_i;
    wire    [3:0]   gt4_rxnotintable_i;
    //---------------------- Receive Ports - RX AFE Ports ----------------------
    wire            gt4_gthrxn_i;
    //------------ Receive Ports - RX Byte and Word Alignment Ports ------------
    wire            gt4_rxmcommaalignen_i;
    wire            gt4_rxpcommaalignen_i;
    //---------------- Receive Ports - RX Channel Bonding Ports ----------------
    wire            gt4_rxchanbondseq_i;
    wire            gt4_rxchbonden_i;
    //--------------- Receive Ports - RX Channel Bonding Ports  ----------------
    wire            gt4_rxchanisaligned_i;
    wire            gt4_rxchanrealign_i;
    //------------------- Receive Ports - RX Equalizer Ports -------------------
    wire    [6:0]   gt4_rxmonitorout_i;
    wire    [1:0]   gt4_rxmonitorsel_i;
    //------------- Receive Ports - RX Fabric Output Control Ports -------------
    wire            gt4_rxoutclk_i;
    //----------- Receive Ports - RX Initialization and Reset Ports ------------
    wire            gt4_gtrxreset_i;
    //----------------- Receive Ports - RX8B/10B Decoder Ports -----------------
    wire    [3:0]   gt4_rxcharisk_i;
    //---------------------- Receive Ports -RX AFE Ports -----------------------
    wire            gt4_gthrxp_i;
    //------------ Receive Ports -RX Initialization and Reset Ports ------------
    wire            gt4_rxresetdone_i;
    //------------------- TX Initialization and Reset Ports --------------------
    wire            gt4_gttxreset_i;
    wire            gt4_txuserrdy_i;
    //-------------- Transmit Ports - 8b10b Encoder Control Ports --------------
    wire    [3:0]   gt4_txchardispmode_i;
    wire    [3:0]   gt4_txchardispval_i;
    //---------------- Transmit Ports - Pattern Generator Ports ----------------
    wire            gt4_txprbsforceerr_i;
    //---------------- Transmit Ports - TX Data Path interface -----------------
    wire    [31:0]  gt4_txdata_i;
    //-------------- Transmit Ports - TX Driver and OOB signaling --------------
    wire            gt4_gthtxn_i;
    wire            gt4_gthtxp_i;
    //--------- Transmit Ports - TX Fabric Clock Output Control Ports ----------
    wire            gt4_txoutclk_i;
    wire            gt4_txoutclkfabric_i;
    wire            gt4_txoutclkpcs_i;
    //----------- Transmit Ports - TX Initialization and Reset Ports -----------
    wire            gt4_txresetdone_i;
    //---------------- Transmit Ports - pattern Generator Ports ----------------
    wire    [2:0]   gt4_txprbssel_i;
    //--------- Transmit Transmit Ports - 8b10b Encoder Control Ports ----------
    wire    [3:0]   gt4_txcharisk_i;

    //________________________________________________________________________
    //________________________________________________________________________
    //GT5  (X1Y35)
    //-------------------------- Channel - DRP Ports  --------------------------
    wire    [8:0]   gt5_drpaddr_i;
    wire    [15:0]  gt5_drpdi_i;
    wire    [15:0]  gt5_drpdo_i;
    wire            gt5_drpen_i;
    wire            gt5_drprdy_i;
    wire            gt5_drpwe_i;
    //------------------- RX Initialization and Reset Ports --------------------
    wire            gt5_eyescanreset_i;
    wire            gt5_rxuserrdy_i;
    //------------------------ RX Margin Analysis Ports ------------------------
    wire            gt5_eyescandataerror_i;
    wire            gt5_eyescantrigger_i;
    //----------------- Receive Ports - Digital Monitor Ports ------------------
    wire    [14:0]  gt5_dmonitorout_i;
    //---------------- Receive Ports - FPGA RX interface Ports -----------------
    wire    [31:0]  gt5_rxdata_i;
    //----------------- Receive Ports - Pattern Checker Ports ------------------
    wire            gt5_rxprbserr_i;
    wire    [2:0]   gt5_rxprbssel_i;
    //----------------- Receive Ports - Pattern Checker ports ------------------
    wire            gt5_rxprbscntreset_i;
    //---------------- Receive Ports - RX 8B/10B Decoder Ports -----------------
    wire    [3:0]   gt5_rxdisperr_i;
    wire    [3:0]   gt5_rxnotintable_i;
    //---------------------- Receive Ports - RX AFE Ports ----------------------
    wire            gt5_gthrxn_i;
    //------------ Receive Ports - RX Byte and Word Alignment Ports ------------
    wire            gt5_rxmcommaalignen_i;
    wire            gt5_rxpcommaalignen_i;
    //---------------- Receive Ports - RX Channel Bonding Ports ----------------
    wire            gt5_rxchanbondseq_i;
    wire            gt5_rxchbonden_i;
    //--------------- Receive Ports - RX Channel Bonding Ports  ----------------
    wire            gt5_rxchanisaligned_i;
    wire            gt5_rxchanrealign_i;
    //------------------- Receive Ports - RX Equalizer Ports -------------------
    wire    [6:0]   gt5_rxmonitorout_i;
    wire    [1:0]   gt5_rxmonitorsel_i;
    //------------- Receive Ports - RX Fabric Output Control Ports -------------
    wire            gt5_rxoutclk_i;
    //----------- Receive Ports - RX Initialization and Reset Ports ------------
    wire            gt5_gtrxreset_i;
    //----------------- Receive Ports - RX8B/10B Decoder Ports -----------------
    wire    [3:0]   gt5_rxcharisk_i;
    //---------------------- Receive Ports -RX AFE Ports -----------------------
    wire            gt5_gthrxp_i;
    //------------ Receive Ports -RX Initialization and Reset Ports ------------
    wire            gt5_rxresetdone_i;
    //------------------- TX Initialization and Reset Ports --------------------
    wire            gt5_gttxreset_i;
    wire            gt5_txuserrdy_i;
    //-------------- Transmit Ports - 8b10b Encoder Control Ports --------------
    wire    [3:0]   gt5_txchardispmode_i;
    wire    [3:0]   gt5_txchardispval_i;
    //---------------- Transmit Ports - Pattern Generator Ports ----------------
    wire            gt5_txprbsforceerr_i;
    //---------------- Transmit Ports - TX Data Path interface -----------------
    wire    [31:0]  gt5_txdata_i;
    //-------------- Transmit Ports - TX Driver and OOB signaling --------------
    wire            gt5_gthtxn_i;
    wire            gt5_gthtxp_i;
    //--------- Transmit Ports - TX Fabric Clock Output Control Ports ----------
    wire            gt5_txoutclk_i;
    wire            gt5_txoutclkfabric_i;
    wire            gt5_txoutclkpcs_i;
    //----------- Transmit Ports - TX Initialization and Reset Ports -----------
    wire            gt5_txresetdone_i;
    //---------------- Transmit Ports - pattern Generator Ports ----------------
    wire    [2:0]   gt5_txprbssel_i;
    //--------- Transmit Transmit Ports - 8b10b Encoder Control Ports ----------
    wire    [3:0]   gt5_txcharisk_i;

    //________________________________________________________________________
    //________________________________________________________________________
    //GT6  (X1Y36)
    //-------------------------- Channel - DRP Ports  --------------------------
    wire    [8:0]   gt6_drpaddr_i;
    wire    [15:0]  gt6_drpdi_i;
    wire    [15:0]  gt6_drpdo_i;
    wire            gt6_drpen_i;
    wire            gt6_drprdy_i;
    wire            gt6_drpwe_i;
    //------------------- RX Initialization and Reset Ports --------------------
    wire            gt6_eyescanreset_i;
    wire            gt6_rxuserrdy_i;
    //------------------------ RX Margin Analysis Ports ------------------------
    wire            gt6_eyescandataerror_i;
    wire            gt6_eyescantrigger_i;
    //----------------- Receive Ports - Digital Monitor Ports ------------------
    wire    [14:0]  gt6_dmonitorout_i;
    //---------------- Receive Ports - FPGA RX interface Ports -----------------
    wire    [31:0]  gt6_rxdata_i;
    //----------------- Receive Ports - Pattern Checker Ports ------------------
    wire            gt6_rxprbserr_i;
    wire    [2:0]   gt6_rxprbssel_i;
    //----------------- Receive Ports - Pattern Checker ports ------------------
    wire            gt6_rxprbscntreset_i;
    //---------------- Receive Ports - RX 8B/10B Decoder Ports -----------------
    wire    [3:0]   gt6_rxdisperr_i;
    wire    [3:0]   gt6_rxnotintable_i;
    //---------------------- Receive Ports - RX AFE Ports ----------------------
    wire            gt6_gthrxn_i;
    //------------ Receive Ports - RX Byte and Word Alignment Ports ------------
    wire            gt6_rxmcommaalignen_i;
    wire            gt6_rxpcommaalignen_i;
    //---------------- Receive Ports - RX Channel Bonding Ports ----------------
    wire            gt6_rxchanbondseq_i;
    wire            gt6_rxchbonden_i;
    //--------------- Receive Ports - RX Channel Bonding Ports  ----------------
    wire            gt6_rxchanisaligned_i;
    wire            gt6_rxchanrealign_i;
    //------------------- Receive Ports - RX Equalizer Ports -------------------
    wire    [6:0]   gt6_rxmonitorout_i;
    wire    [1:0]   gt6_rxmonitorsel_i;
    //------------- Receive Ports - RX Fabric Output Control Ports -------------
    wire            gt6_rxoutclk_i;
    //----------- Receive Ports - RX Initialization and Reset Ports ------------
    wire            gt6_gtrxreset_i;
    //----------------- Receive Ports - RX8B/10B Decoder Ports -----------------
    wire    [3:0]   gt6_rxcharisk_i;
    //---------------------- Receive Ports -RX AFE Ports -----------------------
    wire            gt6_gthrxp_i;
    //------------ Receive Ports -RX Initialization and Reset Ports ------------
    wire            gt6_rxresetdone_i;
    //------------------- TX Initialization and Reset Ports --------------------
    wire            gt6_gttxreset_i;
    wire            gt6_txuserrdy_i;
    //-------------- Transmit Ports - 8b10b Encoder Control Ports --------------
    wire    [3:0]   gt6_txchardispmode_i;
    wire    [3:0]   gt6_txchardispval_i;
    //---------------- Transmit Ports - Pattern Generator Ports ----------------
    wire            gt6_txprbsforceerr_i;
    //---------------- Transmit Ports - TX Data Path interface -----------------
    wire    [31:0]  gt6_txdata_i;
    //-------------- Transmit Ports - TX Driver and OOB signaling --------------
    wire            gt6_gthtxn_i;
    wire            gt6_gthtxp_i;
    //--------- Transmit Ports - TX Fabric Clock Output Control Ports ----------
    wire            gt6_txoutclk_i;
    wire            gt6_txoutclkfabric_i;
    wire            gt6_txoutclkpcs_i;
    //----------- Transmit Ports - TX Initialization and Reset Ports -----------
    wire            gt6_txresetdone_i;
    //---------------- Transmit Ports - pattern Generator Ports ----------------
    wire    [2:0]   gt6_txprbssel_i;
    //--------- Transmit Transmit Ports - 8b10b Encoder Control Ports ----------
    wire    [3:0]   gt6_txcharisk_i;

    //________________________________________________________________________
    //________________________________________________________________________
    //GT7  (X1Y37)
    //-------------------------- Channel - DRP Ports  --------------------------
    wire    [8:0]   gt7_drpaddr_i;
    wire    [15:0]  gt7_drpdi_i;
    wire    [15:0]  gt7_drpdo_i;
    wire            gt7_drpen_i;
    wire            gt7_drprdy_i;
    wire            gt7_drpwe_i;
    //------------------- RX Initialization and Reset Ports --------------------
    wire            gt7_eyescanreset_i;
    wire            gt7_rxuserrdy_i;
    //------------------------ RX Margin Analysis Ports ------------------------
    wire            gt7_eyescandataerror_i;
    wire            gt7_eyescantrigger_i;
    //----------------- Receive Ports - Digital Monitor Ports ------------------
    wire    [14:0]  gt7_dmonitorout_i;
    //---------------- Receive Ports - FPGA RX interface Ports -----------------
    wire    [31:0]  gt7_rxdata_i;
    //----------------- Receive Ports - Pattern Checker Ports ------------------
    wire            gt7_rxprbserr_i;
    wire    [2:0]   gt7_rxprbssel_i;
    //----------------- Receive Ports - Pattern Checker ports ------------------
    wire            gt7_rxprbscntreset_i;
    //---------------- Receive Ports - RX 8B/10B Decoder Ports -----------------
    wire    [3:0]   gt7_rxdisperr_i;
    wire    [3:0]   gt7_rxnotintable_i;
    //---------------------- Receive Ports - RX AFE Ports ----------------------
    wire            gt7_gthrxn_i;
    //------------ Receive Ports - RX Byte and Word Alignment Ports ------------
    wire            gt7_rxmcommaalignen_i;
    wire            gt7_rxpcommaalignen_i;
    //---------------- Receive Ports - RX Channel Bonding Ports ----------------
    wire            gt7_rxchanbondseq_i;
    wire            gt7_rxchbonden_i;
    //--------------- Receive Ports - RX Channel Bonding Ports  ----------------
    wire            gt7_rxchanisaligned_i;
    wire            gt7_rxchanrealign_i;
    //------------------- Receive Ports - RX Equalizer Ports -------------------
    wire    [6:0]   gt7_rxmonitorout_i;
    wire    [1:0]   gt7_rxmonitorsel_i;
    //------------- Receive Ports - RX Fabric Output Control Ports -------------
    wire            gt7_rxoutclk_i;
    //----------- Receive Ports - RX Initialization and Reset Ports ------------
    wire            gt7_gtrxreset_i;
    //----------------- Receive Ports - RX8B/10B Decoder Ports -----------------
    wire    [3:0]   gt7_rxcharisk_i;
    //---------------------- Receive Ports -RX AFE Ports -----------------------
    wire            gt7_gthrxp_i;
    //------------ Receive Ports -RX Initialization and Reset Ports ------------
    wire            gt7_rxresetdone_i;
    //------------------- TX Initialization and Reset Ports --------------------
    wire            gt7_gttxreset_i;
    wire            gt7_txuserrdy_i;
    //-------------- Transmit Ports - 8b10b Encoder Control Ports --------------
    wire    [3:0]   gt7_txchardispmode_i;
    wire    [3:0]   gt7_txchardispval_i;
    //---------------- Transmit Ports - Pattern Generator Ports ----------------
    wire            gt7_txprbsforceerr_i;
    //---------------- Transmit Ports - TX Data Path interface -----------------
    wire    [31:0]  gt7_txdata_i;
    //-------------- Transmit Ports - TX Driver and OOB signaling --------------
    wire            gt7_gthtxn_i;
    wire            gt7_gthtxp_i;
    //--------- Transmit Ports - TX Fabric Clock Output Control Ports ----------
    wire            gt7_txoutclk_i;
    wire            gt7_txoutclkfabric_i;
    wire            gt7_txoutclkpcs_i;
    //----------- Transmit Ports - TX Initialization and Reset Ports -----------
    wire            gt7_txresetdone_i;
    //---------------- Transmit Ports - pattern Generator Ports ----------------
    wire    [2:0]   gt7_txprbssel_i;
    //--------- Transmit Transmit Ports - 8b10b Encoder Control Ports ----------
    wire    [3:0]   gt7_txcharisk_i;

    //________________________________________________________________________
    //________________________________________________________________________
    //GT8  (X1Y38)
    //-------------------------- Channel - DRP Ports  --------------------------
    wire    [8:0]   gt8_drpaddr_i;
    wire    [15:0]  gt8_drpdi_i;
    wire    [15:0]  gt8_drpdo_i;
    wire            gt8_drpen_i;
    wire            gt8_drprdy_i;
    wire            gt8_drpwe_i;
    //------------------- RX Initialization and Reset Ports --------------------
    wire            gt8_eyescanreset_i;
    wire            gt8_rxuserrdy_i;
    //------------------------ RX Margin Analysis Ports ------------------------
    wire            gt8_eyescandataerror_i;
    wire            gt8_eyescantrigger_i;
    //----------------- Receive Ports - Digital Monitor Ports ------------------
    wire    [14:0]  gt8_dmonitorout_i;
    //---------------- Receive Ports - FPGA RX interface Ports -----------------
    wire    [31:0]  gt8_rxdata_i;
    //----------------- Receive Ports - Pattern Checker Ports ------------------
    wire            gt8_rxprbserr_i;
    wire    [2:0]   gt8_rxprbssel_i;
    //----------------- Receive Ports - Pattern Checker ports ------------------
    wire            gt8_rxprbscntreset_i;
    //---------------- Receive Ports - RX 8B/10B Decoder Ports -----------------
    wire    [3:0]   gt8_rxdisperr_i;
    wire    [3:0]   gt8_rxnotintable_i;
    //---------------------- Receive Ports - RX AFE Ports ----------------------
    wire            gt8_gthrxn_i;
    //------------ Receive Ports - RX Byte and Word Alignment Ports ------------
    wire            gt8_rxmcommaalignen_i;
    wire            gt8_rxpcommaalignen_i;
    //---------------- Receive Ports - RX Channel Bonding Ports ----------------
    wire            gt8_rxchanbondseq_i;
    wire            gt8_rxchbonden_i;
    //--------------- Receive Ports - RX Channel Bonding Ports  ----------------
    wire            gt8_rxchanisaligned_i;
    wire            gt8_rxchanrealign_i;
    //------------------- Receive Ports - RX Equalizer Ports -------------------
    wire    [6:0]   gt8_rxmonitorout_i;
    wire    [1:0]   gt8_rxmonitorsel_i;
    //------------- Receive Ports - RX Fabric Output Control Ports -------------
    wire            gt8_rxoutclk_i;
    //----------- Receive Ports - RX Initialization and Reset Ports ------------
    wire            gt8_gtrxreset_i;
    //----------------- Receive Ports - RX8B/10B Decoder Ports -----------------
    wire    [3:0]   gt8_rxcharisk_i;
    //---------------------- Receive Ports -RX AFE Ports -----------------------
    wire            gt8_gthrxp_i;
    //------------ Receive Ports -RX Initialization and Reset Ports ------------
    wire            gt8_rxresetdone_i;
    //------------------- TX Initialization and Reset Ports --------------------
    wire            gt8_gttxreset_i;
    wire            gt8_txuserrdy_i;
    //-------------- Transmit Ports - 8b10b Encoder Control Ports --------------
    wire    [3:0]   gt8_txchardispmode_i;
    wire    [3:0]   gt8_txchardispval_i;
    //---------------- Transmit Ports - Pattern Generator Ports ----------------
    wire            gt8_txprbsforceerr_i;
    //---------------- Transmit Ports - TX Data Path interface -----------------
    wire    [31:0]  gt8_txdata_i;
    //-------------- Transmit Ports - TX Driver and OOB signaling --------------
    wire            gt8_gthtxn_i;
    wire            gt8_gthtxp_i;
    //--------- Transmit Ports - TX Fabric Clock Output Control Ports ----------
    wire            gt8_txoutclk_i;
    wire            gt8_txoutclkfabric_i;
    wire            gt8_txoutclkpcs_i;
    //----------- Transmit Ports - TX Initialization and Reset Ports -----------
    wire            gt8_txresetdone_i;
    //---------------- Transmit Ports - pattern Generator Ports ----------------
    wire    [2:0]   gt8_txprbssel_i;
    //--------- Transmit Transmit Ports - 8b10b Encoder Control Ports ----------
    wire    [3:0]   gt8_txcharisk_i;

    //________________________________________________________________________
    //________________________________________________________________________
    //GT9  (X1Y39)
    //-------------------------- Channel - DRP Ports  --------------------------
    wire    [8:0]   gt9_drpaddr_i;
    wire    [15:0]  gt9_drpdi_i;
    wire    [15:0]  gt9_drpdo_i;
    wire            gt9_drpen_i;
    wire            gt9_drprdy_i;
    wire            gt9_drpwe_i;
    //------------------- RX Initialization and Reset Ports --------------------
    wire            gt9_eyescanreset_i;
    wire            gt9_rxuserrdy_i;
    //------------------------ RX Margin Analysis Ports ------------------------
    wire            gt9_eyescandataerror_i;
    wire            gt9_eyescantrigger_i;
    //----------------- Receive Ports - Digital Monitor Ports ------------------
    wire    [14:0]  gt9_dmonitorout_i;
    //---------------- Receive Ports - FPGA RX interface Ports -----------------
    wire    [31:0]  gt9_rxdata_i;
    //----------------- Receive Ports - Pattern Checker Ports ------------------
    wire            gt9_rxprbserr_i;
    wire    [2:0]   gt9_rxprbssel_i;
    //----------------- Receive Ports - Pattern Checker ports ------------------
    wire            gt9_rxprbscntreset_i;
    //---------------- Receive Ports - RX 8B/10B Decoder Ports -----------------
    wire    [3:0]   gt9_rxdisperr_i;
    wire    [3:0]   gt9_rxnotintable_i;
    //---------------------- Receive Ports - RX AFE Ports ----------------------
    wire            gt9_gthrxn_i;
    //------------ Receive Ports - RX Byte and Word Alignment Ports ------------
    wire            gt9_rxmcommaalignen_i;
    wire            gt9_rxpcommaalignen_i;
    //---------------- Receive Ports - RX Channel Bonding Ports ----------------
    wire            gt9_rxchanbondseq_i;
    wire            gt9_rxchbonden_i;
    //--------------- Receive Ports - RX Channel Bonding Ports  ----------------
    wire            gt9_rxchanisaligned_i;
    wire            gt9_rxchanrealign_i;
    //------------------- Receive Ports - RX Equalizer Ports -------------------
    wire    [6:0]   gt9_rxmonitorout_i;
    wire    [1:0]   gt9_rxmonitorsel_i;
    //------------- Receive Ports - RX Fabric Output Control Ports -------------
    wire            gt9_rxoutclk_i;
    //----------- Receive Ports - RX Initialization and Reset Ports ------------
    wire            gt9_gtrxreset_i;
    //----------------- Receive Ports - RX8B/10B Decoder Ports -----------------
    wire    [3:0]   gt9_rxcharisk_i;
    //---------------------- Receive Ports -RX AFE Ports -----------------------
    wire            gt9_gthrxp_i;
    //------------ Receive Ports -RX Initialization and Reset Ports ------------
    wire            gt9_rxresetdone_i;
    //------------------- TX Initialization and Reset Ports --------------------
    wire            gt9_gttxreset_i;
    wire            gt9_txuserrdy_i;
    //-------------- Transmit Ports - 8b10b Encoder Control Ports --------------
    wire    [3:0]   gt9_txchardispmode_i;
    wire    [3:0]   gt9_txchardispval_i;
    //---------------- Transmit Ports - Pattern Generator Ports ----------------
    wire            gt9_txprbsforceerr_i;
    //---------------- Transmit Ports - TX Data Path interface -----------------
    wire    [31:0]  gt9_txdata_i;
    //-------------- Transmit Ports - TX Driver and OOB signaling --------------
    wire            gt9_gthtxn_i;
    wire            gt9_gthtxp_i;
    //--------- Transmit Ports - TX Fabric Clock Output Control Ports ----------
    wire            gt9_txoutclk_i;
    wire            gt9_txoutclkfabric_i;
    wire            gt9_txoutclkpcs_i;
    //----------- Transmit Ports - TX Initialization and Reset Ports -----------
    wire            gt9_txresetdone_i;
    //---------------- Transmit Ports - pattern Generator Ports ----------------
    wire    [2:0]   gt9_txprbssel_i;
    //--------- Transmit Transmit Ports - 8b10b Encoder Control Ports ----------
    wire    [3:0]   gt9_txcharisk_i;

    //____________________________COMMON PORTS________________________________
    //----------------------- Common Block - QPLL Ports ------------------------
    wire            gt0_qplllock_i;
    wire            gt0_qpllrefclklost_i;
    wire            gt0_qpllreset_i;

    //____________________________COMMON PORTS________________________________
    //----------------------- Common Block - QPLL Ports ------------------------
    wire            gt1_qplllock_i;
    wire            gt1_qpllrefclklost_i;
    wire            gt1_qpllreset_i;

    //____________________________COMMON PORTS________________________________
    //----------------------- Common Block - QPLL Ports ------------------------
    wire            gt2_qplllock_i;
    wire            gt2_qpllrefclklost_i;
    wire            gt2_qpllreset_i;

    //------------------------ Channel Bonding Wires ---------------------------
    wire    [4:0]   gt0_rxchbondo_i;
    wire    [4:0]   gt1_rxchbondo_i;
    wire    [4:0]   gt2_rxchbondo_i;
    wire    [4:0]   gt3_rxchbondo_i;
    wire    [4:0]   gt4_rxchbondo_i;
    wire    [4:0]   gt5_rxchbondo_i;
    wire    [4:0]   gt6_rxchbondo_i;
    wire    [4:0]   gt7_rxchbondo_i;
    wire    [4:0]   gt8_rxchbondo_i;
    wire    [4:0]   gt9_rxchbondo_i;

    //----------------------------- Global Signals -----------------------------

    wire            drpclk_in_i;
    wire            gt0_tx_system_reset_c;
    wire            gt0_rx_system_reset_c;
    wire            gt1_tx_system_reset_c;
    wire            gt1_rx_system_reset_c;
    wire            gt2_tx_system_reset_c;
    wire            gt2_rx_system_reset_c;
    wire            gt3_tx_system_reset_c;
    wire            gt3_rx_system_reset_c;
    wire            gt4_tx_system_reset_c;
    wire            gt4_rx_system_reset_c;
    wire            gt5_tx_system_reset_c;
    wire            gt5_rx_system_reset_c;
    wire            gt6_tx_system_reset_c;
    wire            gt6_rx_system_reset_c;
    wire            gt7_tx_system_reset_c;
    wire            gt7_rx_system_reset_c;
    wire            gt8_tx_system_reset_c;
    wire            gt8_rx_system_reset_c;
    wire            gt9_tx_system_reset_c;
    wire            gt9_rx_system_reset_c;
    wire            tied_to_ground_i;
    wire    [63:0]  tied_to_ground_vec_i;
    wire            tied_to_vcc_i;
    wire    [7:0]   tied_to_vcc_vec_i;
    wire            GTTXRESET_IN;
    wire            GTRXRESET_IN;
    wire            QPLLRESET_IN;

     //--------------------------- User Clocks ---------------------------------
    (* keep = "TRUE" *) wire            gt0_txusrclk_i; 
    (* keep = "TRUE" *) wire            gt0_txusrclk2_i; 
    (* keep = "TRUE" *) wire            gt0_rxusrclk_i; 
    (* keep = "TRUE" *) wire            gt0_rxusrclk2_i; 
    (* keep = "TRUE" *) wire            gt1_txusrclk_i; 
    (* keep = "TRUE" *) wire            gt1_txusrclk2_i; 
    (* keep = "TRUE" *) wire            gt1_rxusrclk_i; 
    (* keep = "TRUE" *) wire            gt1_rxusrclk2_i; 
    (* keep = "TRUE" *) wire            gt2_txusrclk_i; 
    (* keep = "TRUE" *) wire            gt2_txusrclk2_i; 
    (* keep = "TRUE" *) wire            gt2_rxusrclk_i; 
    (* keep = "TRUE" *) wire            gt2_rxusrclk2_i; 
    (* keep = "TRUE" *) wire            gt3_txusrclk_i; 
    (* keep = "TRUE" *) wire            gt3_txusrclk2_i; 
    (* keep = "TRUE" *) wire            gt3_rxusrclk_i; 
    (* keep = "TRUE" *) wire            gt3_rxusrclk2_i; 
    (* keep = "TRUE" *) wire            gt4_txusrclk_i; 
    (* keep = "TRUE" *) wire            gt4_txusrclk2_i; 
    (* keep = "TRUE" *) wire            gt4_rxusrclk_i; 
    (* keep = "TRUE" *) wire            gt4_rxusrclk2_i; 
    (* keep = "TRUE" *) wire            gt5_txusrclk_i; 
    (* keep = "TRUE" *) wire            gt5_txusrclk2_i; 
    (* keep = "TRUE" *) wire            gt5_rxusrclk_i; 
    (* keep = "TRUE" *) wire            gt5_rxusrclk2_i; 
    (* keep = "TRUE" *) wire            gt6_txusrclk_i; 
    (* keep = "TRUE" *) wire            gt6_txusrclk2_i; 
    (* keep = "TRUE" *) wire            gt6_rxusrclk_i; 
    (* keep = "TRUE" *) wire            gt6_rxusrclk2_i; 
    (* keep = "TRUE" *) wire            gt7_txusrclk_i; 
    (* keep = "TRUE" *) wire            gt7_txusrclk2_i; 
    (* keep = "TRUE" *) wire            gt7_rxusrclk_i; 
    (* keep = "TRUE" *) wire            gt7_rxusrclk2_i; 
    (* keep = "TRUE" *) wire            gt8_txusrclk_i; 
    (* keep = "TRUE" *) wire            gt8_txusrclk2_i; 
    (* keep = "TRUE" *) wire            gt8_rxusrclk_i; 
    (* keep = "TRUE" *) wire            gt8_rxusrclk2_i; 
    (* keep = "TRUE" *) wire            gt9_txusrclk_i; 
    (* keep = "TRUE" *) wire            gt9_txusrclk2_i; 
    (* keep = "TRUE" *) wire            gt9_rxusrclk_i; 
    (* keep = "TRUE" *) wire            gt9_rxusrclk2_i; 
 
    //--------------------------- Reference Clocks ----------------------------
    wire            q8_clk1_refclk_i;

    //--------------------- Frame check/gen Module Signals --------------------
    wire            gt0_matchn_i;
    wire    [3:0]   gt0_txcharisk_float_i;
    wire    [15:0]  gt0_txdata_float16_i;
    wire    [31:0]  gt0_txdata_float_i;
    wire            gt0_block_sync_i;
    wire            gt0_track_data_i;
    wire    [7:0]   gt0_error_count_i;
    wire            gt0_frame_check_reset_i;
    wire            gt0_inc_in_i;
    wire            gt0_inc_out_i;
    wire    [31:0]  gt0_unscrambled_data_i;

    wire            gt1_matchn_i;
    wire    [3:0]   gt1_txcharisk_float_i;
    wire    [15:0]  gt1_txdata_float16_i;
    wire    [31:0]  gt1_txdata_float_i;
    wire            gt1_block_sync_i;
    wire            gt1_track_data_i;
    wire    [7:0]   gt1_error_count_i;
    wire            gt1_frame_check_reset_i;
    wire            gt1_inc_in_i;
    wire            gt1_inc_out_i;
    wire    [31:0]  gt1_unscrambled_data_i;

    wire            gt2_matchn_i;
    wire    [3:0]   gt2_txcharisk_float_i;
    wire    [15:0]  gt2_txdata_float16_i;
    wire    [31:0]  gt2_txdata_float_i;
    wire            gt2_block_sync_i;
    wire            gt2_track_data_i;
    wire    [7:0]   gt2_error_count_i;
    wire            gt2_frame_check_reset_i;
    wire            gt2_inc_in_i;
    wire            gt2_inc_out_i;
    wire    [31:0]  gt2_unscrambled_data_i;

    wire            gt3_matchn_i;
    wire    [3:0]   gt3_txcharisk_float_i;
    wire    [15:0]  gt3_txdata_float16_i;
    wire    [31:0]  gt3_txdata_float_i;
    wire            gt3_block_sync_i;
    wire            gt3_track_data_i;
    wire    [7:0]   gt3_error_count_i;
    wire            gt3_frame_check_reset_i;
    wire            gt3_inc_in_i;
    wire            gt3_inc_out_i;
    wire    [31:0]  gt3_unscrambled_data_i;

    wire            gt4_matchn_i;
    wire    [3:0]   gt4_txcharisk_float_i;
    wire    [15:0]  gt4_txdata_float16_i;
    wire    [31:0]  gt4_txdata_float_i;
    wire            gt4_block_sync_i;
    wire            gt4_track_data_i;
    wire    [7:0]   gt4_error_count_i;
    wire            gt4_frame_check_reset_i;
    wire            gt4_inc_in_i;
    wire            gt4_inc_out_i;
    wire    [31:0]  gt4_unscrambled_data_i;

    wire            gt5_matchn_i;
    wire    [3:0]   gt5_txcharisk_float_i;
    wire    [15:0]  gt5_txdata_float16_i;
    wire    [31:0]  gt5_txdata_float_i;
    wire            gt5_block_sync_i;
    wire            gt5_track_data_i;
    wire    [7:0]   gt5_error_count_i;
    wire            gt5_frame_check_reset_i;
    wire            gt5_inc_in_i;
    wire            gt5_inc_out_i;
    wire    [31:0]  gt5_unscrambled_data_i;

    wire            gt6_matchn_i;
    wire    [3:0]   gt6_txcharisk_float_i;
    wire    [15:0]  gt6_txdata_float16_i;
    wire    [31:0]  gt6_txdata_float_i;
    wire            gt6_block_sync_i;
    wire            gt6_track_data_i;
    wire    [7:0]   gt6_error_count_i;
    wire            gt6_frame_check_reset_i;
    wire            gt6_inc_in_i;
    wire            gt6_inc_out_i;
    wire    [31:0]  gt6_unscrambled_data_i;

    wire            gt7_matchn_i;
    wire    [3:0]   gt7_txcharisk_float_i;
    wire    [15:0]  gt7_txdata_float16_i;
    wire    [31:0]  gt7_txdata_float_i;
    wire            gt7_block_sync_i;
    wire            gt7_track_data_i;
    wire    [7:0]   gt7_error_count_i;
    wire            gt7_frame_check_reset_i;
    wire            gt7_inc_in_i;
    wire            gt7_inc_out_i;
    wire    [31:0]  gt7_unscrambled_data_i;

    wire            gt8_matchn_i;
    wire    [3:0]   gt8_txcharisk_float_i;
    wire    [15:0]  gt8_txdata_float16_i;
    wire    [31:0]  gt8_txdata_float_i;
    wire            gt8_block_sync_i;
    wire            gt8_track_data_i;
    wire    [7:0]   gt8_error_count_i;
    wire            gt8_frame_check_reset_i;
    wire            gt8_inc_in_i;
    wire            gt8_inc_out_i;
    wire    [31:0]  gt8_unscrambled_data_i;

    wire            gt9_matchn_i;
    wire    [3:0]   gt9_txcharisk_float_i;
    wire    [15:0]  gt9_txdata_float16_i;
    wire    [31:0]  gt9_txdata_float_i;
    wire            gt9_block_sync_i;
    wire            gt9_track_data_i;
    wire    [7:0]   gt9_error_count_i;
    wire            gt9_frame_check_reset_i;
    wire            gt9_inc_in_i;
    wire            gt9_inc_out_i;
    wire    [31:0]  gt9_unscrambled_data_i;

    wire            reset_on_data_error_i;
    wire            track_data_out_i;
    wire            common_tx_system_reset_n;
    wire            common_rx_system_reset_n;

    //--------------------- Chipscope Signals ---------------------------------

    wire    [35:0]  tx_data_vio_control_i;
    wire    [35:0]  rx_data_vio_control_i;
    wire    [35:0]  shared_vio_control_i;
    wire    [35:0]  ila_control_i;
    wire    [35:0]  channel_drp_vio_control_i;
    wire    [35:0]  common_drp_vio_control_i;
    wire    [31:0]  tx_data_vio_async_in_i;
    wire    [31:0]  tx_data_vio_sync_in_i;
    wire    [31:0]  tx_data_vio_async_out_i;
    wire    [31:0]  tx_data_vio_sync_out_i;
    wire    [31:0]  rx_data_vio_async_in_i;
    wire    [31:0]  rx_data_vio_sync_in_i;
    wire    [31:0]  rx_data_vio_async_out_i;
    wire    [31:0]  rx_data_vio_sync_out_i;
    wire    [31:0]  shared_vio_in_i;
    wire    [31:0]  shared_vio_out_i;
    wire    [163:0] ila_in_i;
    wire    [31:0]  channel_drp_vio_async_in_i;
    wire    [31:0]  channel_drp_vio_sync_in_i;
    wire    [31:0]  channel_drp_vio_async_out_i;
    wire    [31:0]  channel_drp_vio_sync_out_i;
    wire    [31:0]  common_drp_vio_async_in_i;
    wire    [31:0]  common_drp_vio_sync_in_i;
    wire    [31:0]  common_drp_vio_async_out_i;
    wire    [31:0]  common_drp_vio_sync_out_i;

    wire    [31:0]  gt0_tx_data_vio_async_in_i;
    wire    [31:0]  gt0_tx_data_vio_sync_in_i;
    wire    [31:0]  gt0_tx_data_vio_async_out_i;
    wire    [31:0]  gt0_tx_data_vio_sync_out_i;
    wire    [31:0]  gt0_rx_data_vio_async_in_i;
    wire    [31:0]  gt0_rx_data_vio_sync_in_i;
    wire    [31:0]  gt0_rx_data_vio_async_out_i;
    wire    [31:0]  gt0_rx_data_vio_sync_out_i;
    wire    [163:0] gt0_ila_in_i;
    wire    [31:0]  gt0_channel_drp_vio_async_in_i;
    wire    [31:0]  gt0_channel_drp_vio_sync_in_i;
    wire    [31:0]  gt0_channel_drp_vio_async_out_i;
    wire    [31:0]  gt0_channel_drp_vio_sync_out_i;
    wire    [31:0]  gt0_common_drp_vio_async_in_i;
    wire    [31:0]  gt0_common_drp_vio_sync_in_i;
    wire    [31:0]  gt0_common_drp_vio_async_out_i;
    wire    [31:0]  gt0_common_drp_vio_sync_out_i;

    wire    [31:0]  gt1_tx_data_vio_async_in_i;
    wire    [31:0]  gt1_tx_data_vio_sync_in_i;
    wire    [31:0]  gt1_tx_data_vio_async_out_i;
    wire    [31:0]  gt1_tx_data_vio_sync_out_i;
    wire    [31:0]  gt1_rx_data_vio_async_in_i;
    wire    [31:0]  gt1_rx_data_vio_sync_in_i;
    wire    [31:0]  gt1_rx_data_vio_async_out_i;
    wire    [31:0]  gt1_rx_data_vio_sync_out_i;
    wire    [163:0] gt1_ila_in_i;
    wire    [31:0]  gt1_channel_drp_vio_async_in_i;
    wire    [31:0]  gt1_channel_drp_vio_sync_in_i;
    wire    [31:0]  gt1_channel_drp_vio_async_out_i;
    wire    [31:0]  gt1_channel_drp_vio_sync_out_i;
    wire    [31:0]  gt1_common_drp_vio_async_in_i;
    wire    [31:0]  gt1_common_drp_vio_sync_in_i;
    wire    [31:0]  gt1_common_drp_vio_async_out_i;
    wire    [31:0]  gt1_common_drp_vio_sync_out_i;

    wire    [31:0]  gt2_tx_data_vio_async_in_i;
    wire    [31:0]  gt2_tx_data_vio_sync_in_i;
    wire    [31:0]  gt2_tx_data_vio_async_out_i;
    wire    [31:0]  gt2_tx_data_vio_sync_out_i;
    wire    [31:0]  gt2_rx_data_vio_async_in_i;
    wire    [31:0]  gt2_rx_data_vio_sync_in_i;
    wire    [31:0]  gt2_rx_data_vio_async_out_i;
    wire    [31:0]  gt2_rx_data_vio_sync_out_i;
    wire    [163:0] gt2_ila_in_i;
    wire    [31:0]  gt2_channel_drp_vio_async_in_i;
    wire    [31:0]  gt2_channel_drp_vio_sync_in_i;
    wire    [31:0]  gt2_channel_drp_vio_async_out_i;
    wire    [31:0]  gt2_channel_drp_vio_sync_out_i;
    wire    [31:0]  gt2_common_drp_vio_async_in_i;
    wire    [31:0]  gt2_common_drp_vio_sync_in_i;
    wire    [31:0]  gt2_common_drp_vio_async_out_i;
    wire    [31:0]  gt2_common_drp_vio_sync_out_i;

    wire    [31:0]  gt3_tx_data_vio_async_in_i;
    wire    [31:0]  gt3_tx_data_vio_sync_in_i;
    wire    [31:0]  gt3_tx_data_vio_async_out_i;
    wire    [31:0]  gt3_tx_data_vio_sync_out_i;
    wire    [31:0]  gt3_rx_data_vio_async_in_i;
    wire    [31:0]  gt3_rx_data_vio_sync_in_i;
    wire    [31:0]  gt3_rx_data_vio_async_out_i;
    wire    [31:0]  gt3_rx_data_vio_sync_out_i;
    wire    [163:0] gt3_ila_in_i;
    wire    [31:0]  gt3_channel_drp_vio_async_in_i;
    wire    [31:0]  gt3_channel_drp_vio_sync_in_i;
    wire    [31:0]  gt3_channel_drp_vio_async_out_i;
    wire    [31:0]  gt3_channel_drp_vio_sync_out_i;
    wire    [31:0]  gt3_common_drp_vio_async_in_i;
    wire    [31:0]  gt3_common_drp_vio_sync_in_i;
    wire    [31:0]  gt3_common_drp_vio_async_out_i;
    wire    [31:0]  gt3_common_drp_vio_sync_out_i;

    wire    [31:0]  gt4_tx_data_vio_async_in_i;
    wire    [31:0]  gt4_tx_data_vio_sync_in_i;
    wire    [31:0]  gt4_tx_data_vio_async_out_i;
    wire    [31:0]  gt4_tx_data_vio_sync_out_i;
    wire    [31:0]  gt4_rx_data_vio_async_in_i;
    wire    [31:0]  gt4_rx_data_vio_sync_in_i;
    wire    [31:0]  gt4_rx_data_vio_async_out_i;
    wire    [31:0]  gt4_rx_data_vio_sync_out_i;
    wire    [163:0] gt4_ila_in_i;
    wire    [31:0]  gt4_channel_drp_vio_async_in_i;
    wire    [31:0]  gt4_channel_drp_vio_sync_in_i;
    wire    [31:0]  gt4_channel_drp_vio_async_out_i;
    wire    [31:0]  gt4_channel_drp_vio_sync_out_i;
    wire    [31:0]  gt4_common_drp_vio_async_in_i;
    wire    [31:0]  gt4_common_drp_vio_sync_in_i;
    wire    [31:0]  gt4_common_drp_vio_async_out_i;
    wire    [31:0]  gt4_common_drp_vio_sync_out_i;

    wire    [31:0]  gt5_tx_data_vio_async_in_i;
    wire    [31:0]  gt5_tx_data_vio_sync_in_i;
    wire    [31:0]  gt5_tx_data_vio_async_out_i;
    wire    [31:0]  gt5_tx_data_vio_sync_out_i;
    wire    [31:0]  gt5_rx_data_vio_async_in_i;
    wire    [31:0]  gt5_rx_data_vio_sync_in_i;
    wire    [31:0]  gt5_rx_data_vio_async_out_i;
    wire    [31:0]  gt5_rx_data_vio_sync_out_i;
    wire    [163:0] gt5_ila_in_i;
    wire    [31:0]  gt5_channel_drp_vio_async_in_i;
    wire    [31:0]  gt5_channel_drp_vio_sync_in_i;
    wire    [31:0]  gt5_channel_drp_vio_async_out_i;
    wire    [31:0]  gt5_channel_drp_vio_sync_out_i;
    wire    [31:0]  gt5_common_drp_vio_async_in_i;
    wire    [31:0]  gt5_common_drp_vio_sync_in_i;
    wire    [31:0]  gt5_common_drp_vio_async_out_i;
    wire    [31:0]  gt5_common_drp_vio_sync_out_i;

    wire    [31:0]  gt6_tx_data_vio_async_in_i;
    wire    [31:0]  gt6_tx_data_vio_sync_in_i;
    wire    [31:0]  gt6_tx_data_vio_async_out_i;
    wire    [31:0]  gt6_tx_data_vio_sync_out_i;
    wire    [31:0]  gt6_rx_data_vio_async_in_i;
    wire    [31:0]  gt6_rx_data_vio_sync_in_i;
    wire    [31:0]  gt6_rx_data_vio_async_out_i;
    wire    [31:0]  gt6_rx_data_vio_sync_out_i;
    wire    [163:0] gt6_ila_in_i;
    wire    [31:0]  gt6_channel_drp_vio_async_in_i;
    wire    [31:0]  gt6_channel_drp_vio_sync_in_i;
    wire    [31:0]  gt6_channel_drp_vio_async_out_i;
    wire    [31:0]  gt6_channel_drp_vio_sync_out_i;
    wire    [31:0]  gt6_common_drp_vio_async_in_i;
    wire    [31:0]  gt6_common_drp_vio_sync_in_i;
    wire    [31:0]  gt6_common_drp_vio_async_out_i;
    wire    [31:0]  gt6_common_drp_vio_sync_out_i;

    wire    [31:0]  gt7_tx_data_vio_async_in_i;
    wire    [31:0]  gt7_tx_data_vio_sync_in_i;
    wire    [31:0]  gt7_tx_data_vio_async_out_i;
    wire    [31:0]  gt7_tx_data_vio_sync_out_i;
    wire    [31:0]  gt7_rx_data_vio_async_in_i;
    wire    [31:0]  gt7_rx_data_vio_sync_in_i;
    wire    [31:0]  gt7_rx_data_vio_async_out_i;
    wire    [31:0]  gt7_rx_data_vio_sync_out_i;
    wire    [163:0] gt7_ila_in_i;
    wire    [31:0]  gt7_channel_drp_vio_async_in_i;
    wire    [31:0]  gt7_channel_drp_vio_sync_in_i;
    wire    [31:0]  gt7_channel_drp_vio_async_out_i;
    wire    [31:0]  gt7_channel_drp_vio_sync_out_i;
    wire    [31:0]  gt7_common_drp_vio_async_in_i;
    wire    [31:0]  gt7_common_drp_vio_sync_in_i;
    wire    [31:0]  gt7_common_drp_vio_async_out_i;
    wire    [31:0]  gt7_common_drp_vio_sync_out_i;

    wire    [31:0]  gt8_tx_data_vio_async_in_i;
    wire    [31:0]  gt8_tx_data_vio_sync_in_i;
    wire    [31:0]  gt8_tx_data_vio_async_out_i;
    wire    [31:0]  gt8_tx_data_vio_sync_out_i;
    wire    [31:0]  gt8_rx_data_vio_async_in_i;
    wire    [31:0]  gt8_rx_data_vio_sync_in_i;
    wire    [31:0]  gt8_rx_data_vio_async_out_i;
    wire    [31:0]  gt8_rx_data_vio_sync_out_i;
    wire    [163:0] gt8_ila_in_i;
    wire    [31:0]  gt8_channel_drp_vio_async_in_i;
    wire    [31:0]  gt8_channel_drp_vio_sync_in_i;
    wire    [31:0]  gt8_channel_drp_vio_async_out_i;
    wire    [31:0]  gt8_channel_drp_vio_sync_out_i;
    wire    [31:0]  gt8_common_drp_vio_async_in_i;
    wire    [31:0]  gt8_common_drp_vio_sync_in_i;
    wire    [31:0]  gt8_common_drp_vio_async_out_i;
    wire    [31:0]  gt8_common_drp_vio_sync_out_i;

    wire    [31:0]  gt9_tx_data_vio_async_in_i;
    wire    [31:0]  gt9_tx_data_vio_sync_in_i;
    wire    [31:0]  gt9_tx_data_vio_async_out_i;
    wire    [31:0]  gt9_tx_data_vio_sync_out_i;
    wire    [31:0]  gt9_rx_data_vio_async_in_i;
    wire    [31:0]  gt9_rx_data_vio_sync_in_i;
    wire    [31:0]  gt9_rx_data_vio_async_out_i;
    wire    [31:0]  gt9_rx_data_vio_sync_out_i;
    wire    [163:0] gt9_ila_in_i;
    wire    [31:0]  gt9_channel_drp_vio_async_in_i;
    wire    [31:0]  gt9_channel_drp_vio_sync_in_i;
    wire    [31:0]  gt9_channel_drp_vio_async_out_i;
    wire    [31:0]  gt9_channel_drp_vio_sync_out_i;
    wire    [31:0]  gt9_common_drp_vio_async_in_i;
    wire    [31:0]  gt9_common_drp_vio_sync_in_i;
    wire    [31:0]  gt9_common_drp_vio_async_out_i;
    wire    [31:0]  gt9_common_drp_vio_sync_out_i;


    wire            gttxreset_i;
    wire            gtrxreset_i;
    wire    [3:0]   mux_sel_i;

    wire            user_tx_reset_i;
    wire            user_rx_reset_i;
    wire            tx_vio_clk_i;
    wire            tx_vio_clk_mux_out_i;    
    wire            rx_vio_ila_clk_i;
    wire            rx_vio_ila_clk_mux_out_i;

    wire            qpllreset_i;


  wire [(80 -32) -1:0] zero_vector_rx_80 ;
  wire [(8 -4) -1:0] zero_vector_rx_8 ;
  wire [79:0] gt0_rxdata_ila ;
  wire [1:0]  gt0_rxdatavalid_ila; 
  wire [7:0]  gt0_rxcharisk_ila ;
  wire gt0_txmmcm_lock_ila ;
  wire gt0_rxmmcm_lock_ila ;
  wire gt0_rxresetdone_ila ;
  wire gt0_txresetdone_ila ;
  wire [79:0] gt1_rxdata_ila ;
  wire [1:0]  gt1_rxdatavalid_ila; 
  wire [7:0]  gt1_rxcharisk_ila ;
  wire gt1_txmmcm_lock_ila ;
  wire gt1_rxmmcm_lock_ila ;
  wire gt1_rxresetdone_ila ;
  wire gt1_txresetdone_ila ;
  wire [79:0] gt2_rxdata_ila ;
  wire [1:0]  gt2_rxdatavalid_ila; 
  wire [7:0]  gt2_rxcharisk_ila ;
  wire gt2_txmmcm_lock_ila ;
  wire gt2_rxmmcm_lock_ila ;
  wire gt2_rxresetdone_ila ;
  wire gt2_txresetdone_ila ;
  wire [79:0] gt3_rxdata_ila ;
  wire [1:0]  gt3_rxdatavalid_ila; 
  wire [7:0]  gt3_rxcharisk_ila ;
  wire gt3_txmmcm_lock_ila ;
  wire gt3_rxmmcm_lock_ila ;
  wire gt3_rxresetdone_ila ;
  wire gt3_txresetdone_ila ;
  wire [79:0] gt4_rxdata_ila ;
  wire [1:0]  gt4_rxdatavalid_ila; 
  wire [7:0]  gt4_rxcharisk_ila ;
  wire gt4_txmmcm_lock_ila ;
  wire gt4_rxmmcm_lock_ila ;
  wire gt4_rxresetdone_ila ;
  wire gt4_txresetdone_ila ;
  wire [79:0] gt5_rxdata_ila ;
  wire [1:0]  gt5_rxdatavalid_ila; 
  wire [7:0]  gt5_rxcharisk_ila ;
  wire gt5_txmmcm_lock_ila ;
  wire gt5_rxmmcm_lock_ila ;
  wire gt5_rxresetdone_ila ;
  wire gt5_txresetdone_ila ;
  wire [79:0] gt6_rxdata_ila ;
  wire [1:0]  gt6_rxdatavalid_ila; 
  wire [7:0]  gt6_rxcharisk_ila ;
  wire gt6_txmmcm_lock_ila ;
  wire gt6_rxmmcm_lock_ila ;
  wire gt6_rxresetdone_ila ;
  wire gt6_txresetdone_ila ;
  wire [79:0] gt7_rxdata_ila ;
  wire [1:0]  gt7_rxdatavalid_ila; 
  wire [7:0]  gt7_rxcharisk_ila ;
  wire gt7_txmmcm_lock_ila ;
  wire gt7_rxmmcm_lock_ila ;
  wire gt7_rxresetdone_ila ;
  wire gt7_txresetdone_ila ;
  wire [79:0] gt8_rxdata_ila ;
  wire [1:0]  gt8_rxdatavalid_ila; 
  wire [7:0]  gt8_rxcharisk_ila ;
  wire gt8_txmmcm_lock_ila ;
  wire gt8_rxmmcm_lock_ila ;
  wire gt8_rxresetdone_ila ;
  wire gt8_txresetdone_ila ;
  wire [79:0] gt9_rxdata_ila ;
  wire [1:0]  gt9_rxdatavalid_ila; 
  wire [7:0]  gt9_rxcharisk_ila ;
  wire gt9_txmmcm_lock_ila ;
  wire gt9_rxmmcm_lock_ila ;
  wire gt9_rxresetdone_ila ;
  wire gt9_txresetdone_ila ;

//select one of the 10 channels to access
assign gt0_drpen_i = (chan_drp_sel == 4'd0) && chan_drp_enable;
assign gt1_drpen_i = (chan_drp_sel == 4'd1) && chan_drp_enable;
assign gt2_drpen_i = (chan_drp_sel == 4'd2) && chan_drp_enable;
assign gt3_drpen_i = (chan_drp_sel == 4'd3) && chan_drp_enable;
assign gt4_drpen_i = (chan_drp_sel == 4'd4) && chan_drp_enable;
assign gt5_drpen_i = (chan_drp_sel == 4'd5) && chan_drp_enable;
assign gt6_drpen_i = (chan_drp_sel == 4'd6) && chan_drp_enable;
assign gt7_drpen_i = (chan_drp_sel == 4'd7) && chan_drp_enable;
assign gt8_drpen_i = (chan_drp_sel == 4'd8) && chan_drp_enable;
assign gt9_drpen_i = (chan_drp_sel == 4'd9) && chan_drp_enable;

//A mux to select one of the 10 output busses
   always @*
      case (chan_drp_sel)
         4'd0 : chan_drp_out = gt0_drpdo_i;
         4'd1 : chan_drp_out = gt1_drpdo_i;
         4'd2 : chan_drp_out = gt2_drpdo_i;
         4'd3 : chan_drp_out = gt3_drpdo_i;
         4'd4 : chan_drp_out = gt4_drpdo_i;
         4'd5 : chan_drp_out = gt5_drpdo_i;
         4'd6 : chan_drp_out = gt6_drpdo_i;
         4'd7 : chan_drp_out = gt7_drpdo_i;
         4'd8 : chan_drp_out = gt8_drpdo_i;
         4'd9 : chan_drp_out = gt9_drpdo_i;
         default: chan_drp_out = 16'hxxxx;
      endcase
assign chan_drp_rdy[0] = gt0_drprdy_i;		
assign chan_drp_rdy[1] = gt1_drprdy_i;		
assign chan_drp_rdy[2] = gt2_drprdy_i;		
assign chan_drp_rdy[3] = gt3_drprdy_i;		
assign chan_drp_rdy[4] = gt4_drprdy_i;		
assign chan_drp_rdy[5] = gt5_drprdy_i;		
assign chan_drp_rdy[6] = gt6_drprdy_i;		
assign chan_drp_rdy[7] = gt7_drprdy_i;		
assign chan_drp_rdy[8] = gt8_drprdy_i;		
assign chan_drp_rdy[9] = gt9_drprdy_i;		
				

//**************************** Main Body of Code *******************************

    //  Static signal Assigments    
    assign tied_to_ground_i      = 1'b0;
    assign tied_to_ground_vec_i  = 64'h0000000000000000;
    assign tied_to_vcc_i         = 1'b1;
    assign tied_to_vcc_vec_i     = 8'hff;

    assign zero_vector_rx_80 = 0;
    assign zero_vector_rx_8 = 0;

    
assign  q8_clk1_refclk_i                     =  1'b0;

    //***********************************************************************//
    //                                                                       //
    //--------------------------- The GT Wrapper ----------------------------//
    //                                                                       //
    //***********************************************************************//
    
    // Use the instantiation template in the example directory to add the GT wrapper to your design.
    // In this example, the wrapper is wired up for basic operation with a frame generator and frame 
    // checker. The GTs will reset, then attempt to align and transmit data. If channel bonding is 
    // enabled, bonding should occur after alignment.
    
    gtwizard_0_support #
    (
        .EXAMPLE_SIM_GTRESET_SPEEDUP    (EXAMPLE_SIM_GTRESET_SPEEDUP),
        .STABLE_CLOCK_PERIOD            (STABLE_CLOCK_PERIOD)
    )
    gtwizard_0_support_i
    (
        //RR added these
        .rx8b10b_en(rx8b10b_en),
        .tx8b10b_en(tx8b10b_en),
        .TX_PPM_EN(TX_PPM_EN),
        .TX_PPM_CTRL(TX_PPM_CTRL),
        .INV_TXOUT(INV_TXOUT),
        .soft_reset_in                  (soft_reset_i),
        .dont_reset_on_data_error_in    (DONT_RESET_ON_DATA_ERROR),
        .q8_clk1_gtrefclk_pad_n_in  (Q8_CLK1_GTREFCLK_PAD_N_IN),
        .q8_clk1_gtrefclk_pad_p_in  (Q8_CLK1_GTREFCLK_PAD_P_IN),
        .refclk_out(),
        .gt0_tx_fsm_reset_done_out      (gt0_txfsmresetdone_i),
        .gt0_rx_fsm_reset_done_out      (gt0_rxfsmresetdone_i),
        .gt0_data_valid_in              (gt0_track_data_i),
        .gt1_tx_fsm_reset_done_out      (gt1_txfsmresetdone_i),
        .gt1_rx_fsm_reset_done_out      (gt1_rxfsmresetdone_i),
        .gt1_data_valid_in              (gt1_track_data_i),
        .gt2_tx_fsm_reset_done_out      (gt2_txfsmresetdone_i),
        .gt2_rx_fsm_reset_done_out      (gt2_rxfsmresetdone_i),
        .gt2_data_valid_in              (gt2_track_data_i),
        .gt3_tx_fsm_reset_done_out      (gt3_txfsmresetdone_i),
        .gt3_rx_fsm_reset_done_out      (gt3_rxfsmresetdone_i),
        .gt3_data_valid_in              (gt3_track_data_i),
        .gt4_tx_fsm_reset_done_out      (gt4_txfsmresetdone_i),
        .gt4_rx_fsm_reset_done_out      (gt4_rxfsmresetdone_i),
        .gt4_data_valid_in              (gt4_track_data_i),
        .gt5_tx_fsm_reset_done_out      (gt5_txfsmresetdone_i),
        .gt5_rx_fsm_reset_done_out      (gt5_rxfsmresetdone_i),
        .gt5_data_valid_in              (gt5_track_data_i),
        .gt6_tx_fsm_reset_done_out      (gt6_txfsmresetdone_i),
        .gt6_rx_fsm_reset_done_out      (gt6_rxfsmresetdone_i),
        .gt6_data_valid_in              (gt6_track_data_i),
        .gt7_tx_fsm_reset_done_out      (gt7_txfsmresetdone_i),
        .gt7_rx_fsm_reset_done_out      (gt7_rxfsmresetdone_i),
        .gt7_data_valid_in              (gt7_track_data_i),
        .gt8_tx_fsm_reset_done_out      (gt8_txfsmresetdone_i),
        .gt8_rx_fsm_reset_done_out      (gt8_rxfsmresetdone_i),
        .gt8_data_valid_in              (gt8_track_data_i),
        .gt9_tx_fsm_reset_done_out      (gt9_txfsmresetdone_i),
        .gt9_rx_fsm_reset_done_out      (gt9_rxfsmresetdone_i),
        .gt9_data_valid_in              (gt9_track_data_i),
 
    .gt0_txusrclk_out(gt0_txusrclk_i),
    .gt0_txusrclk2_out(gt0_txusrclk2_i),
    .gt0_rxusrclk_out(gt0_rxusrclk_i),
    .gt0_rxusrclk2_out(gt0_rxusrclk2_i),
 
    .gt1_txusrclk_out(gt1_txusrclk_i),
    .gt1_txusrclk2_out(gt1_txusrclk2_i),
    .gt1_rxusrclk_out(gt1_rxusrclk_i),
    .gt1_rxusrclk2_out(gt1_rxusrclk2_i),
 
    .gt2_txusrclk_out(gt2_txusrclk_i),
    .gt2_txusrclk2_out(gt2_txusrclk2_i),
    .gt2_rxusrclk_out(gt2_rxusrclk_i),
    .gt2_rxusrclk2_out(gt2_rxusrclk2_i),
 
    .gt3_txusrclk_out(gt3_txusrclk_i),
    .gt3_txusrclk2_out(gt3_txusrclk2_i),
    .gt3_rxusrclk_out(gt3_rxusrclk_i),
    .gt3_rxusrclk2_out(gt3_rxusrclk2_i),
 
    .gt4_txusrclk_out(gt4_txusrclk_i),
    .gt4_txusrclk2_out(gt4_txusrclk2_i),
    .gt4_rxusrclk_out(gt4_rxusrclk_i),
    .gt4_rxusrclk2_out(gt4_rxusrclk2_i),
 
    .gt5_txusrclk_out(gt5_txusrclk_i),
    .gt5_txusrclk2_out(gt5_txusrclk2_i),
    .gt5_rxusrclk_out(gt5_rxusrclk_i),
    .gt5_rxusrclk2_out(gt5_rxusrclk2_i),
 
    .gt6_txusrclk_out(gt6_txusrclk_i),
    .gt6_txusrclk2_out(gt6_txusrclk2_i),
    .gt6_rxusrclk_out(gt6_rxusrclk_i),
    .gt6_rxusrclk2_out(gt6_rxusrclk2_i),
 
    .gt7_txusrclk_out(gt7_txusrclk_i),
    .gt7_txusrclk2_out(gt7_txusrclk2_i),
    .gt7_rxusrclk_out(gt7_rxusrclk_i),
    .gt7_rxusrclk2_out(gt7_rxusrclk2_i),
 
    .gt8_txusrclk_out(gt8_txusrclk_i),
    .gt8_txusrclk2_out(gt8_txusrclk2_i),
    .gt8_rxusrclk_out(gt8_rxusrclk_i),
    .gt8_rxusrclk2_out(gt8_rxusrclk2_i),
 
    .gt9_txusrclk_out(gt9_txusrclk_i),
    .gt9_txusrclk2_out(gt9_txusrclk2_i),
    .gt9_rxusrclk_out(gt9_rxusrclk_i),
    .gt9_rxusrclk2_out(gt9_rxusrclk2_i),


        //_____________________________________________________________________
        //_____________________________________________________________________
        //GT0  (X1Y28)

        //-------------------------- Channel - DRP Ports  --------------------------
        .gt0_drpaddr_in                 (chan_drp_addr),
        .gt0_drpdi_in                   (chan_drp_datain),
        .gt0_drpdo_out                  (gt0_drpdo_i),
        .gt0_drpen_in                   (gt0_drpen_i),
        .gt0_drprdy_out                 (gt0_drprdy_i),
        .gt0_drpwe_in                   (chan_drp_we),
        //------------------- RX Initialization and Reset Ports --------------------
        .gt0_eyescanreset_in            (tied_to_ground_i),
        .gt0_rxuserrdy_in               (tied_to_ground_i),
        //------------------------ RX Margin Analysis Ports ------------------------
        .gt0_eyescandataerror_out       (gt0_eyescandataerror_i),
        .gt0_eyescantrigger_in          (tied_to_ground_i),
        //----------------- Receive Ports - Digital Monitor Ports ------------------
        .gt0_dmonitorout_out            (gt0_dmonitorout_i),
        //---------------- Receive Ports - FPGA RX interface Ports -----------------
        .gt0_rxdata_out                 (gt0_rxdata_i),
        //----------------- Receive Ports - Pattern Checker Ports ------------------
        .gt0_rxprbserr_out              (gt0_rxprbserr_i),
        .gt0_rxprbssel_in               (gt0_rxprbssel_i),
        //----------------- Receive Ports - Pattern Checker ports ------------------
        .gt0_rxprbscntreset_in          (gt0_rxprbscntreset_i),
        //---------------- Receive Ports - RX 8B/10B Decoder Ports -----------------
        .gt0_rxdisperr_out              (gt0_rxdisperr_i),
        .gt0_rxnotintable_out           (gt0_rxnotintable_i),
        //---------------------- Receive Ports - RX AFE Ports ----------------------
        .gt0_gthrxn_in                  (RXN_IN[0]),
        //------------ Receive Ports - RX Byte and Word Alignment Ports ------------
        .gt0_rxmcommaalignen_in         (gt0_rxmcommaalignen_i),
        .gt0_rxpcommaalignen_in         (gt0_rxpcommaalignen_i),
        //---------------- Receive Ports - RX Channel Bonding Ports ----------------
        .gt0_rxchanbondseq_out          (gt0_rxchanbondseq_i),
        .gt0_rxchbonden_in              (gt0_rxchbonden_i),
        .gt0_rxchbondlevel_in           (3'b001),
        .gt0_rxchbondmaster_in          (tied_to_ground_i),
        .gt0_rxchbondo_out              (gt0_rxchbondo_i),
        .gt0_rxchbondslave_in           (tied_to_vcc_i),
        //--------------- Receive Ports - RX Channel Bonding Ports  ----------------
        .gt0_rxchanisaligned_out        (gt0_rxchanisaligned_i),
        .gt0_rxchanrealign_out          (gt0_rxchanrealign_i),
        //------------------- Receive Ports - RX Equalizer Ports -------------------
        .gt0_rxmonitorout_out           (gt0_rxmonitorout_i),
        .gt0_rxmonitorsel_in            (2'b00),
        //----------- Receive Ports - RX Initialization and Reset Ports ------------
        .gt0_gtrxreset_in               (tied_to_ground_i),
        //----------------- Receive Ports - RX8B/10B Decoder Ports -----------------
        .gt0_rxcharisk_out              (gt0_rxcharisk_i),
        //---------------- Receive Ports - Rx Channel Bonding Ports ----------------
        .gt0_rxchbondi_in               (gt4_rxchbondo_i),
        //---------------------- Receive Ports -RX AFE Ports -----------------------
        .gt0_gthrxp_in                  (RXP_IN[0]),
        //------------ Receive Ports -RX Initialization and Reset Ports ------------
        .gt0_rxresetdone_out            (gt0_rxresetdone_i),
        //------------------- TX Initialization and Reset Ports --------------------
        .gt0_gttxreset_in               (tied_to_ground_i),
        .gt0_txuserrdy_in               (tied_to_ground_i),
        //-------------- Transmit Ports - 8b10b Encoder Control Ports --------------
        .gt0_txchardispmode_in          (gt0_txchardispmode_i),
        .gt0_txchardispval_in           (gt0_txchardispval_i),
        //---------------- Transmit Ports - Pattern Generator Ports ----------------
        .gt0_txprbsforceerr_in          (gt0_txprbsforceerr_i),
        //---------------- Transmit Ports - TX Data Path interface -----------------
        .gt0_txdata_in                  (gt0_txdata_i),
        //-------------- Transmit Ports - TX Driver and OOB signaling --------------
        .gt0_gthtxn_out                 (TXN_OUT[0]),
        .gt0_gthtxp_out                 (TXP_OUT[0]),
        //--------- Transmit Ports - TX Fabric Clock Output Control Ports ----------
        .gt0_txoutclkfabric_out         (gt0_txoutclkfabric_i),
        .gt0_txoutclkpcs_out            (gt0_txoutclkpcs_i),
        //----------- Transmit Ports - TX Initialization and Reset Ports -----------
        .gt0_txresetdone_out            (gt0_txresetdone_i),
        //---------------- Transmit Ports - pattern Generator Ports ----------------
        .gt0_txprbssel_in               (gt0_txprbssel_i),
        //--------- Transmit Transmit Ports - 8b10b Encoder Control Ports ----------
        .gt0_txcharisk_in               (gt0_txcharisk_i),


        //_____________________________________________________________________
        //_____________________________________________________________________
        //GT1  (X1Y29)

        //-------------------------- Channel - DRP Ports  --------------------------
        .gt1_drpaddr_in                 (chan_drp_addr),
        .gt1_drpdi_in                   (chan_drp_datain),
        .gt1_drpdo_out                  (gt1_drpdo_i),
        .gt1_drpen_in                   (gt1_drpen_i),
        .gt1_drprdy_out                 (gt1_drprdy_i),
        .gt1_drpwe_in                   (chan_drp_we),
        //------------------- RX Initialization and Reset Ports --------------------
        .gt1_eyescanreset_in            (tied_to_ground_i),
        .gt1_rxuserrdy_in               (tied_to_ground_i),
        //------------------------ RX Margin Analysis Ports ------------------------
        .gt1_eyescandataerror_out       (gt1_eyescandataerror_i),
        .gt1_eyescantrigger_in          (tied_to_ground_i),
        //----------------- Receive Ports - Digital Monitor Ports ------------------
        .gt1_dmonitorout_out            (gt1_dmonitorout_i),
        //---------------- Receive Ports - FPGA RX interface Ports -----------------
        .gt1_rxdata_out                 (gt1_rxdata_i),
        //----------------- Receive Ports - Pattern Checker Ports ------------------
        .gt1_rxprbserr_out              (gt1_rxprbserr_i),
        .gt1_rxprbssel_in               (gt1_rxprbssel_i),
        //----------------- Receive Ports - Pattern Checker ports ------------------
        .gt1_rxprbscntreset_in          (gt1_rxprbscntreset_i),
        //---------------- Receive Ports - RX 8B/10B Decoder Ports -----------------
        .gt1_rxdisperr_out              (gt1_rxdisperr_i),
        .gt1_rxnotintable_out           (gt1_rxnotintable_i),
        //---------------------- Receive Ports - RX AFE Ports ----------------------
        .gt1_gthrxn_in                  (RXN_IN[1]),
        //------------ Receive Ports - RX Byte and Word Alignment Ports ------------
        .gt1_rxmcommaalignen_in         (gt1_rxmcommaalignen_i),
        .gt1_rxpcommaalignen_in         (gt1_rxpcommaalignen_i),
        //---------------- Receive Ports - RX Channel Bonding Ports ----------------
        .gt1_rxchanbondseq_out          (gt1_rxchanbondseq_i),
        .gt1_rxchbonden_in              (gt1_rxchbonden_i),
        .gt1_rxchbondlevel_in           (3'b011),
        .gt1_rxchbondmaster_in          (tied_to_ground_i),
        .gt1_rxchbondo_out              (gt1_rxchbondo_i),
        .gt1_rxchbondslave_in           (tied_to_vcc_i),
        //--------------- Receive Ports - RX Channel Bonding Ports  ----------------
        .gt1_rxchanisaligned_out        (gt1_rxchanisaligned_i),
        .gt1_rxchanrealign_out          (gt1_rxchanrealign_i),
        //------------------- Receive Ports - RX Equalizer Ports -------------------
        .gt1_rxmonitorout_out           (gt1_rxmonitorout_i),
        .gt1_rxmonitorsel_in            (2'b00),
        //----------- Receive Ports - RX Initialization and Reset Ports ------------
        .gt1_gtrxreset_in               (tied_to_ground_i),
        //----------------- Receive Ports - RX8B/10B Decoder Ports -----------------
        .gt1_rxcharisk_out              (gt1_rxcharisk_i),
        //---------------- Receive Ports - Rx Channel Bonding Ports ----------------
        .gt1_rxchbondi_in               (gt5_rxchbondo_i),
        //---------------------- Receive Ports -RX AFE Ports -----------------------
        .gt1_gthrxp_in                  (RXP_IN[1]),
        //------------ Receive Ports -RX Initialization and Reset Ports ------------
        .gt1_rxresetdone_out            (gt1_rxresetdone_i),
        //------------------- TX Initialization and Reset Ports --------------------
        .gt1_gttxreset_in               (tied_to_ground_i),
        .gt1_txuserrdy_in               (tied_to_ground_i),
        //-------------- Transmit Ports - 8b10b Encoder Control Ports --------------
        .gt1_txchardispmode_in          (gt1_txchardispmode_i),
        .gt1_txchardispval_in           (gt1_txchardispval_i),
        //---------------- Transmit Ports - Pattern Generator Ports ----------------
        .gt1_txprbsforceerr_in          (gt1_txprbsforceerr_i),
        //---------------- Transmit Ports - TX Data Path interface -----------------
        .gt1_txdata_in                  (gt1_txdata_i),
        //-------------- Transmit Ports - TX Driver and OOB signaling --------------
        .gt1_gthtxn_out                 (TXN_OUT[1]),
        .gt1_gthtxp_out                 (TXP_OUT[1]),
        //--------- Transmit Ports - TX Fabric Clock Output Control Ports ----------
        .gt1_txoutclkfabric_out         (gt1_txoutclkfabric_i),
        .gt1_txoutclkpcs_out            (gt1_txoutclkpcs_i),
        //----------- Transmit Ports - TX Initialization and Reset Ports -----------
        .gt1_txresetdone_out            (gt1_txresetdone_i),
        //---------------- Transmit Ports - pattern Generator Ports ----------------
        .gt1_txprbssel_in               (gt1_txprbssel_i),
        //--------- Transmit Transmit Ports - 8b10b Encoder Control Ports ----------
        .gt1_txcharisk_in               (gt1_txcharisk_i),


        //_____________________________________________________________________
        //_____________________________________________________________________
        //GT2  (X1Y32)

        //-------------------------- Channel - DRP Ports  --------------------------
        .gt2_drpaddr_in                 (chan_drp_addr),
        .gt2_drpdi_in                   (chan_drp_datain),
        .gt2_drpdo_out                  (gt2_drpdo_i),
        .gt2_drpen_in                   (gt2_drpen_i),
        .gt2_drprdy_out                 (gt2_drprdy_i),
        .gt2_drpwe_in                   (chan_drp_we),
        //------------------- RX Initialization and Reset Ports --------------------
        .gt2_eyescanreset_in            (tied_to_ground_i),
        .gt2_rxuserrdy_in               (tied_to_ground_i),
        //------------------------ RX Margin Analysis Ports ------------------------
        .gt2_eyescandataerror_out       (gt2_eyescandataerror_i),
        .gt2_eyescantrigger_in          (tied_to_ground_i),
        //----------------- Receive Ports - Digital Monitor Ports ------------------
        .gt2_dmonitorout_out            (gt2_dmonitorout_i),
        //---------------- Receive Ports - FPGA RX interface Ports -----------------
        .gt2_rxdata_out                 (gt2_rxdata_i),
        //----------------- Receive Ports - Pattern Checker Ports ------------------
        .gt2_rxprbserr_out              (gt2_rxprbserr_i),
        .gt2_rxprbssel_in               (gt2_rxprbssel_i),
        //----------------- Receive Ports - Pattern Checker ports ------------------
        .gt2_rxprbscntreset_in          (gt2_rxprbscntreset_i),
        //---------------- Receive Ports - RX 8B/10B Decoder Ports -----------------
        .gt2_rxdisperr_out              (gt2_rxdisperr_i),
        .gt2_rxnotintable_out           (gt2_rxnotintable_i),
        //---------------------- Receive Ports - RX AFE Ports ----------------------
        .gt2_gthrxn_in                  (RXN_IN[2]),
        //------------ Receive Ports - RX Byte and Word Alignment Ports ------------
        .gt2_rxmcommaalignen_in         (gt2_rxmcommaalignen_i),
        .gt2_rxpcommaalignen_in         (gt2_rxpcommaalignen_i),
        //---------------- Receive Ports - RX Channel Bonding Ports ----------------
        .gt2_rxchanbondseq_out          (gt2_rxchanbondseq_i),
        .gt2_rxchbonden_in              (gt2_rxchbonden_i),
        .gt2_rxchbondlevel_in           (3'b000),
        .gt2_rxchbondmaster_in          (tied_to_ground_i),
        .gt2_rxchbondo_out              (gt2_rxchbondo_i),
        .gt2_rxchbondslave_in           (tied_to_vcc_i),
        //--------------- Receive Ports - RX Channel Bonding Ports  ----------------
        .gt2_rxchanisaligned_out        (gt2_rxchanisaligned_i),
        .gt2_rxchanrealign_out          (gt2_rxchanrealign_i),
        //------------------- Receive Ports - RX Equalizer Ports -------------------
        .gt2_rxmonitorout_out           (gt2_rxmonitorout_i),
        .gt2_rxmonitorsel_in            (2'b00),
        //----------- Receive Ports - RX Initialization and Reset Ports ------------
        .gt2_gtrxreset_in               (tied_to_ground_i),
        //----------------- Receive Ports - RX8B/10B Decoder Ports -----------------
        .gt2_rxcharisk_out              (gt2_rxcharisk_i),
        //---------------- Receive Ports - Rx Channel Bonding Ports ----------------
        .gt2_rxchbondi_in               (5'b00000),
        //---------------------- Receive Ports -RX AFE Ports -----------------------
        .gt2_gthrxp_in                  (RXP_IN[2]),
        //------------ Receive Ports -RX Initialization and Reset Ports ------------
        .gt2_rxresetdone_out            (gt2_rxresetdone_i),
        //------------------- TX Initialization and Reset Ports --------------------
        .gt2_gttxreset_in               (tied_to_ground_i),
        .gt2_txuserrdy_in               (tied_to_ground_i),
        //-------------- Transmit Ports - 8b10b Encoder Control Ports --------------
        .gt2_txchardispmode_in          (gt2_txchardispmode_i),
        .gt2_txchardispval_in           (gt2_txchardispval_i),
        //---------------- Transmit Ports - Pattern Generator Ports ----------------
        .gt2_txprbsforceerr_in          (gt2_txprbsforceerr_i),
        //---------------- Transmit Ports - TX Data Path interface -----------------
        .gt2_txdata_in                  (gt2_txdata_i),
        //-------------- Transmit Ports - TX Driver and OOB signaling --------------
        .gt2_gthtxn_out                 (TXN_OUT[2]),
        .gt2_gthtxp_out                 (TXP_OUT[2]),
        //--------- Transmit Ports - TX Fabric Clock Output Control Ports ----------
        .gt2_txoutclkfabric_out         (gt2_txoutclkfabric_i),
        .gt2_txoutclkpcs_out            (gt2_txoutclkpcs_i),
        //----------- Transmit Ports - TX Initialization and Reset Ports -----------
        .gt2_txresetdone_out            (gt2_txresetdone_i),
        //---------------- Transmit Ports - pattern Generator Ports ----------------
        .gt2_txprbssel_in               (gt2_txprbssel_i),
        //--------- Transmit Transmit Ports - 8b10b Encoder Control Ports ----------
        .gt2_txcharisk_in               (gt2_txcharisk_i),


        //_____________________________________________________________________
        //_____________________________________________________________________
        //GT3  (X1Y33)

        //-------------------------- Channel - DRP Ports  --------------------------
        .gt3_drpaddr_in                 (chan_drp_addr),
        .gt3_drpdi_in                   (chan_drp_datain),
        .gt3_drpdo_out                  (gt3_drpdo_i),
        .gt3_drpen_in                   (gt3_drpen_i),
        .gt3_drprdy_out                 (gt3_drprdy_i),
        .gt3_drpwe_in                   (chan_drp_we),
        //------------------- RX Initialization and Reset Ports --------------------
        .gt3_eyescanreset_in            (tied_to_ground_i),
        .gt3_rxuserrdy_in               (tied_to_ground_i),
        //------------------------ RX Margin Analysis Ports ------------------------
        .gt3_eyescandataerror_out       (gt3_eyescandataerror_i),
        .gt3_eyescantrigger_in          (tied_to_ground_i),
        //----------------- Receive Ports - Digital Monitor Ports ------------------
        .gt3_dmonitorout_out            (gt3_dmonitorout_i),
        //---------------- Receive Ports - FPGA RX interface Ports -----------------
        .gt3_rxdata_out                 (gt3_rxdata_i),
        //----------------- Receive Ports - Pattern Checker Ports ------------------
        .gt3_rxprbserr_out              (gt3_rxprbserr_i),
        .gt3_rxprbssel_in               (gt3_rxprbssel_i),
        //----------------- Receive Ports - Pattern Checker ports ------------------
        .gt3_rxprbscntreset_in          (gt3_rxprbscntreset_i),
        //---------------- Receive Ports - RX 8B/10B Decoder Ports -----------------
        .gt3_rxdisperr_out              (gt3_rxdisperr_i),
        .gt3_rxnotintable_out           (gt3_rxnotintable_i),
        //---------------------- Receive Ports - RX AFE Ports ----------------------
        .gt3_gthrxn_in                  (RXN_IN[3]),
        //------------ Receive Ports - RX Byte and Word Alignment Ports ------------
        .gt3_rxmcommaalignen_in         (gt3_rxmcommaalignen_i),
        .gt3_rxpcommaalignen_in         (gt3_rxpcommaalignen_i),
        //---------------- Receive Ports - RX Channel Bonding Ports ----------------
        .gt3_rxchanbondseq_out          (gt3_rxchanbondseq_i),
        .gt3_rxchbonden_in              (gt3_rxchbonden_i),
        .gt3_rxchbondlevel_in           (3'b010),
        .gt3_rxchbondmaster_in          (tied_to_ground_i),
        .gt3_rxchbondo_out              (gt3_rxchbondo_i),
        .gt3_rxchbondslave_in           (tied_to_vcc_i),
        //--------------- Receive Ports - RX Channel Bonding Ports  ----------------
        .gt3_rxchanisaligned_out        (gt3_rxchanisaligned_i),
        .gt3_rxchanrealign_out          (gt3_rxchanrealign_i),
        //------------------- Receive Ports - RX Equalizer Ports -------------------
        .gt3_rxmonitorout_out           (gt3_rxmonitorout_i),
        .gt3_rxmonitorsel_in            (2'b00),
        //----------- Receive Ports - RX Initialization and Reset Ports ------------
        .gt3_gtrxreset_in               (tied_to_ground_i),
        //----------------- Receive Ports - RX8B/10B Decoder Ports -----------------
        .gt3_rxcharisk_out              (gt3_rxcharisk_i),
        //---------------- Receive Ports - Rx Channel Bonding Ports ----------------
        .gt3_rxchbondi_in               (gt1_rxchbondo_i),
        //---------------------- Receive Ports -RX AFE Ports -----------------------
        .gt3_gthrxp_in                  (RXP_IN[3]),
        //------------ Receive Ports -RX Initialization and Reset Ports ------------
        .gt3_rxresetdone_out            (gt3_rxresetdone_i),
        //------------------- TX Initialization and Reset Ports --------------------
        .gt3_gttxreset_in               (tied_to_ground_i),
        .gt3_txuserrdy_in               (tied_to_ground_i),
        //-------------- Transmit Ports - 8b10b Encoder Control Ports --------------
        .gt3_txchardispmode_in          (gt3_txchardispmode_i),
        .gt3_txchardispval_in           (gt3_txchardispval_i),
        //---------------- Transmit Ports - Pattern Generator Ports ----------------
        .gt3_txprbsforceerr_in          (gt3_txprbsforceerr_i),
        //---------------- Transmit Ports - TX Data Path interface -----------------
        .gt3_txdata_in                  (gt3_txdata_i),
        //-------------- Transmit Ports - TX Driver and OOB signaling --------------
        .gt3_gthtxn_out                 (TXN_OUT[3]),
        .gt3_gthtxp_out                 (TXP_OUT[3]),
        //--------- Transmit Ports - TX Fabric Clock Output Control Ports ----------
        .gt3_txoutclkfabric_out         (gt3_txoutclkfabric_i),
        .gt3_txoutclkpcs_out            (gt3_txoutclkpcs_i),
        //----------- Transmit Ports - TX Initialization and Reset Ports -----------
        .gt3_txresetdone_out            (gt3_txresetdone_i),
        //---------------- Transmit Ports - pattern Generator Ports ----------------
        .gt3_txprbssel_in               (gt3_txprbssel_i),
        //--------- Transmit Transmit Ports - 8b10b Encoder Control Ports ----------
        .gt3_txcharisk_in               (gt3_txcharisk_i),


        //_____________________________________________________________________
        //_____________________________________________________________________
        //GT4  (X1Y34)

        //-------------------------- Channel - DRP Ports  --------------------------
        .gt4_drpaddr_in                 (chan_drp_addr),
        .gt4_drpdi_in                   (chan_drp_datain),
        .gt4_drpdo_out                  (gt4_drpdo_i),
        .gt4_drpen_in                   (gt4_drpen_i),
        .gt4_drprdy_out                 (gt4_drprdy_i),
        .gt4_drpwe_in                   (chan_drp_we),
        //------------------- RX Initialization and Reset Ports --------------------
        .gt4_eyescanreset_in            (tied_to_ground_i),
        .gt4_rxuserrdy_in               (tied_to_ground_i),
        //------------------------ RX Margin Analysis Ports ------------------------
        .gt4_eyescandataerror_out       (gt4_eyescandataerror_i),
        .gt4_eyescantrigger_in          (tied_to_ground_i),
        //----------------- Receive Ports - Digital Monitor Ports ------------------
        .gt4_dmonitorout_out            (gt4_dmonitorout_i),
        //---------------- Receive Ports - FPGA RX interface Ports -----------------
        .gt4_rxdata_out                 (gt4_rxdata_i),
        //----------------- Receive Ports - Pattern Checker Ports ------------------
        .gt4_rxprbserr_out              (gt4_rxprbserr_i),
        .gt4_rxprbssel_in               (gt4_rxprbssel_i),
        //----------------- Receive Ports - Pattern Checker ports ------------------
        .gt4_rxprbscntreset_in          (gt4_rxprbscntreset_i),
        //---------------- Receive Ports - RX 8B/10B Decoder Ports -----------------
        .gt4_rxdisperr_out              (gt4_rxdisperr_i),
        .gt4_rxnotintable_out           (gt4_rxnotintable_i),
        //---------------------- Receive Ports - RX AFE Ports ----------------------
        .gt4_gthrxn_in                  (RXN_IN[4]),
        //------------ Receive Ports - RX Byte and Word Alignment Ports ------------
        .gt4_rxmcommaalignen_in         (gt4_rxmcommaalignen_i),
        .gt4_rxpcommaalignen_in         (gt4_rxpcommaalignen_i),
        //---------------- Receive Ports - RX Channel Bonding Ports ----------------
        .gt4_rxchanbondseq_out          (gt4_rxchanbondseq_i),
        .gt4_rxchbonden_in              (gt4_rxchbonden_i),
        .gt4_rxchbondlevel_in           (3'b010),
        .gt4_rxchbondmaster_in          (tied_to_ground_i),
        .gt4_rxchbondo_out              (gt4_rxchbondo_i),
        .gt4_rxchbondslave_in           (tied_to_vcc_i),
        //--------------- Receive Ports - RX Channel Bonding Ports  ----------------
        .gt4_rxchanisaligned_out        (gt4_rxchanisaligned_i),
        .gt4_rxchanrealign_out          (gt4_rxchanrealign_i),
        //------------------- Receive Ports - RX Equalizer Ports -------------------
        .gt4_rxmonitorout_out           (gt4_rxmonitorout_i),
        .gt4_rxmonitorsel_in            (2'b00),
        //----------- Receive Ports - RX Initialization and Reset Ports ------------
        .gt4_gtrxreset_in               (tied_to_ground_i),
        //----------------- Receive Ports - RX8B/10B Decoder Ports -----------------
        .gt4_rxcharisk_out              (gt4_rxcharisk_i),
        //---------------- Receive Ports - Rx Channel Bonding Ports ----------------
        .gt4_rxchbondi_in               (gt9_rxchbondo_i),
        //---------------------- Receive Ports -RX AFE Ports -----------------------
        .gt4_gthrxp_in                  (RXP_IN[4]),
        //------------ Receive Ports -RX Initialization and Reset Ports ------------
        .gt4_rxresetdone_out            (gt4_rxresetdone_i),
        //------------------- TX Initialization and Reset Ports --------------------
        .gt4_gttxreset_in               (tied_to_ground_i),
        .gt4_txuserrdy_in               (tied_to_ground_i),
        //-------------- Transmit Ports - 8b10b Encoder Control Ports --------------
        .gt4_txchardispmode_in          (gt4_txchardispmode_i),
        .gt4_txchardispval_in           (gt4_txchardispval_i),
        //---------------- Transmit Ports - Pattern Generator Ports ----------------
        .gt4_txprbsforceerr_in          (gt4_txprbsforceerr_i),
        //---------------- Transmit Ports - TX Data Path interface -----------------
        .gt4_txdata_in                  (gt4_txdata_i),
        //-------------- Transmit Ports - TX Driver and OOB signaling --------------
        .gt4_gthtxn_out                 (TXN_OUT[4]),
        .gt4_gthtxp_out                 (TXP_OUT[4]),
        //--------- Transmit Ports - TX Fabric Clock Output Control Ports ----------
        .gt4_txoutclkfabric_out         (gt4_txoutclkfabric_i),
        .gt4_txoutclkpcs_out            (gt4_txoutclkpcs_i),
        //----------- Transmit Ports - TX Initialization and Reset Ports -----------
        .gt4_txresetdone_out            (gt4_txresetdone_i),
        //---------------- Transmit Ports - pattern Generator Ports ----------------
        .gt4_txprbssel_in               (gt4_txprbssel_i),
        //--------- Transmit Transmit Ports - 8b10b Encoder Control Ports ----------
        .gt4_txcharisk_in               (gt4_txcharisk_i),


        //_____________________________________________________________________
        //_____________________________________________________________________
        //GT5  (X1Y35)

        //-------------------------- Channel - DRP Ports  --------------------------
        .gt5_drpaddr_in                 (chan_drp_addr),
        .gt5_drpdi_in                   (chan_drp_datain),
        .gt5_drpdo_out                  (gt5_drpdo_i),
        .gt5_drpen_in                   (gt5_drpen_i),
        .gt5_drprdy_out                 (gt5_drprdy_i),
        .gt5_drpwe_in                   (chan_drp_we),
        //------------------- RX Initialization and Reset Ports --------------------
        .gt5_eyescanreset_in            (tied_to_ground_i),
        .gt5_rxuserrdy_in               (tied_to_ground_i),
        //------------------------ RX Margin Analysis Ports ------------------------
        .gt5_eyescandataerror_out       (gt5_eyescandataerror_i),
        .gt5_eyescantrigger_in          (tied_to_ground_i),
        //----------------- Receive Ports - Digital Monitor Ports ------------------
        .gt5_dmonitorout_out            (gt5_dmonitorout_i),
        //---------------- Receive Ports - FPGA RX interface Ports -----------------
        .gt5_rxdata_out                 (gt5_rxdata_i),
        //----------------- Receive Ports - Pattern Checker Ports ------------------
        .gt5_rxprbserr_out              (gt5_rxprbserr_i),
        .gt5_rxprbssel_in               (gt5_rxprbssel_i),
        //----------------- Receive Ports - Pattern Checker ports ------------------
        .gt5_rxprbscntreset_in          (gt5_rxprbscntreset_i),
        //---------------- Receive Ports - RX 8B/10B Decoder Ports -----------------
        .gt5_rxdisperr_out              (gt5_rxdisperr_i),
        .gt5_rxnotintable_out           (gt5_rxnotintable_i),
        //---------------------- Receive Ports - RX AFE Ports ----------------------
        .gt5_gthrxn_in                  (RXN_IN[5]),
        //------------ Receive Ports - RX Byte and Word Alignment Ports ------------
        .gt5_rxmcommaalignen_in         (gt5_rxmcommaalignen_i),
        .gt5_rxpcommaalignen_in         (gt5_rxpcommaalignen_i),
        //---------------- Receive Ports - RX Channel Bonding Ports ----------------
        .gt5_rxchanbondseq_out          (gt5_rxchanbondseq_i),
        .gt5_rxchbonden_in              (gt5_rxchbonden_i),
        .gt5_rxchbondlevel_in           (3'b100),
        .gt5_rxchbondmaster_in          (tied_to_vcc_i),
        .gt5_rxchbondo_out              (gt5_rxchbondo_i),
        .gt5_rxchbondslave_in           (tied_to_ground_i),
        //--------------- Receive Ports - RX Channel Bonding Ports  ----------------
        .gt5_rxchanisaligned_out        (gt5_rxchanisaligned_i),
        .gt5_rxchanrealign_out          (gt5_rxchanrealign_i),
        //------------------- Receive Ports - RX Equalizer Ports -------------------
        .gt5_rxmonitorout_out           (gt5_rxmonitorout_i),
        .gt5_rxmonitorsel_in            (2'b00),
        //----------- Receive Ports - RX Initialization and Reset Ports ------------
        .gt5_gtrxreset_in               (tied_to_ground_i),
        //----------------- Receive Ports - RX8B/10B Decoder Ports -----------------
        .gt5_rxcharisk_out              (gt5_rxcharisk_i),
        //---------------- Receive Ports - Rx Channel Bonding Ports ----------------
        .gt5_rxchbondi_in               (tied_to_ground_vec_i[4:0]),
        //---------------------- Receive Ports -RX AFE Ports -----------------------
        .gt5_gthrxp_in                  (RXP_IN[5]),
        //------------ Receive Ports -RX Initialization and Reset Ports ------------
        .gt5_rxresetdone_out            (gt5_rxresetdone_i),
        //------------------- TX Initialization and Reset Ports --------------------
        .gt5_gttxreset_in               (tied_to_ground_i),
        .gt5_txuserrdy_in               (tied_to_ground_i),
        //-------------- Transmit Ports - 8b10b Encoder Control Ports --------------
        .gt5_txchardispmode_in          (gt5_txchardispmode_i),
        .gt5_txchardispval_in           (gt5_txchardispval_i),
        //---------------- Transmit Ports - Pattern Generator Ports ----------------
        .gt5_txprbsforceerr_in          (gt5_txprbsforceerr_i),
        //---------------- Transmit Ports - TX Data Path interface -----------------
        .gt5_txdata_in                  (gt5_txdata_i),
        //-------------- Transmit Ports - TX Driver and OOB signaling --------------
        .gt5_gthtxn_out                 (TXN_OUT[5]),
        .gt5_gthtxp_out                 (TXP_OUT[5]),
        //--------- Transmit Ports - TX Fabric Clock Output Control Ports ----------
        .gt5_txoutclkfabric_out         (gt5_txoutclkfabric_i),
        .gt5_txoutclkpcs_out            (gt5_txoutclkpcs_i),
        //----------- Transmit Ports - TX Initialization and Reset Ports -----------
        .gt5_txresetdone_out            (gt5_txresetdone_i),
        //---------------- Transmit Ports - pattern Generator Ports ----------------
        .gt5_txprbssel_in               (gt5_txprbssel_i),
        //--------- Transmit Transmit Ports - 8b10b Encoder Control Ports ----------
        .gt5_txcharisk_in               (gt5_txcharisk_i),


        //_____________________________________________________________________
        //_____________________________________________________________________
        //GT6  (X1Y36)

        //-------------------------- Channel - DRP Ports  --------------------------
        .gt6_drpaddr_in                 (chan_drp_addr),
        .gt6_drpdi_in                   (chan_drp_datain),
        .gt6_drpdo_out                  (gt6_drpdo_i),
        .gt6_drpen_in                   (gt6_drpen_i),
        .gt6_drprdy_out                 (gt6_drprdy_i),
        .gt6_drpwe_in                   (chan_drp_we),
        //------------------- RX Initialization and Reset Ports --------------------
        .gt6_eyescanreset_in            (tied_to_ground_i),
        .gt6_rxuserrdy_in               (tied_to_ground_i),
        //------------------------ RX Margin Analysis Ports ------------------------
        .gt6_eyescandataerror_out       (gt6_eyescandataerror_i),
        .gt6_eyescantrigger_in          (tied_to_ground_i),
        //----------------- Receive Ports - Digital Monitor Ports ------------------
        .gt6_dmonitorout_out            (gt6_dmonitorout_i),
        //---------------- Receive Ports - FPGA RX interface Ports -----------------
        .gt6_rxdata_out                 (gt6_rxdata_i),
        //----------------- Receive Ports - Pattern Checker Ports ------------------
        .gt6_rxprbserr_out              (gt6_rxprbserr_i),
        .gt6_rxprbssel_in               (gt6_rxprbssel_i),
        //----------------- Receive Ports - Pattern Checker ports ------------------
        .gt6_rxprbscntreset_in          (gt6_rxprbscntreset_i),
        //---------------- Receive Ports - RX 8B/10B Decoder Ports -----------------
        .gt6_rxdisperr_out              (gt6_rxdisperr_i),
        .gt6_rxnotintable_out           (gt6_rxnotintable_i),
        //---------------------- Receive Ports - RX AFE Ports ----------------------
        .gt6_gthrxn_in                  (RXN_IN[6]),
        //------------ Receive Ports - RX Byte and Word Alignment Ports ------------
        .gt6_rxmcommaalignen_in         (gt6_rxmcommaalignen_i),
        .gt6_rxpcommaalignen_in         (gt6_rxpcommaalignen_i),
        //---------------- Receive Ports - RX Channel Bonding Ports ----------------
        .gt6_rxchanbondseq_out          (gt6_rxchanbondseq_i),
        .gt6_rxchbonden_in              (gt6_rxchbonden_i),
        .gt6_rxchbondlevel_in           (3'b000),
        .gt6_rxchbondmaster_in          (tied_to_ground_i),
        .gt6_rxchbondo_out              (gt6_rxchbondo_i),
        .gt6_rxchbondslave_in           (tied_to_vcc_i),
        //--------------- Receive Ports - RX Channel Bonding Ports  ----------------
        .gt6_rxchanisaligned_out        (gt6_rxchanisaligned_i),
        .gt6_rxchanrealign_out          (gt6_rxchanrealign_i),
        //------------------- Receive Ports - RX Equalizer Ports -------------------
        .gt6_rxmonitorout_out           (gt6_rxmonitorout_i),
        .gt6_rxmonitorsel_in            (2'b00),
        //----------- Receive Ports - RX Initialization and Reset Ports ------------
        .gt6_gtrxreset_in               (tied_to_ground_i),
        //----------------- Receive Ports - RX8B/10B Decoder Ports -----------------
        .gt6_rxcharisk_out              (gt6_rxcharisk_i),
        //---------------- Receive Ports - Rx Channel Bonding Ports ----------------
        .gt6_rxchbondi_in               (5'b00000),
        //---------------------- Receive Ports -RX AFE Ports -----------------------
        .gt6_gthrxp_in                  (RXP_IN[6]),
        //------------ Receive Ports -RX Initialization and Reset Ports ------------
        .gt6_rxresetdone_out            (gt6_rxresetdone_i),
        //------------------- TX Initialization and Reset Ports --------------------
        .gt6_gttxreset_in               (tied_to_ground_i),
        .gt6_txuserrdy_in               (tied_to_ground_i),
        //-------------- Transmit Ports - 8b10b Encoder Control Ports --------------
        .gt6_txchardispmode_in          (gt6_txchardispmode_i),
        .gt6_txchardispval_in           (gt6_txchardispval_i),
        //---------------- Transmit Ports - Pattern Generator Ports ----------------
        .gt6_txprbsforceerr_in          (gt6_txprbsforceerr_i),
        //---------------- Transmit Ports - TX Data Path interface -----------------
        .gt6_txdata_in                  (gt6_txdata_i),
        //-------------- Transmit Ports - TX Driver and OOB signaling --------------
        .gt6_gthtxn_out                 (TXN_OUT[6]),
        .gt6_gthtxp_out                 (TXP_OUT[6]),
        //--------- Transmit Ports - TX Fabric Clock Output Control Ports ----------
        .gt6_txoutclkfabric_out         (gt6_txoutclkfabric_i),
        .gt6_txoutclkpcs_out            (gt6_txoutclkpcs_i),
        //----------- Transmit Ports - TX Initialization and Reset Ports -----------
        .gt6_txresetdone_out            (gt6_txresetdone_i),
        //---------------- Transmit Ports - pattern Generator Ports ----------------
        .gt6_txprbssel_in               (gt6_txprbssel_i),
        //--------- Transmit Transmit Ports - 8b10b Encoder Control Ports ----------
        .gt6_txcharisk_in               (gt6_txcharisk_i),


        //_____________________________________________________________________
        //_____________________________________________________________________
        //GT7  (X1Y37)

        //-------------------------- Channel - DRP Ports  --------------------------
        .gt7_drpaddr_in                 (chan_drp_addr),
        .gt7_drpdi_in                   (chan_drp_datain),
        .gt7_drpdo_out                  (gt7_drpdo_i),
        .gt7_drpen_in                   (gt7_drpen_i),
        .gt7_drprdy_out                 (gt7_drprdy_i),
        .gt7_drpwe_in                   (chan_drp_we),
        //------------------- RX Initialization and Reset Ports --------------------
        .gt7_eyescanreset_in            (tied_to_ground_i),
        .gt7_rxuserrdy_in               (tied_to_ground_i),
        //------------------------ RX Margin Analysis Ports ------------------------
        .gt7_eyescandataerror_out       (gt7_eyescandataerror_i),
        .gt7_eyescantrigger_in          (tied_to_ground_i),
        //----------------- Receive Ports - Digital Monitor Ports ------------------
        .gt7_dmonitorout_out            (gt7_dmonitorout_i),
        //---------------- Receive Ports - FPGA RX interface Ports -----------------
        .gt7_rxdata_out                 (gt7_rxdata_i),
        //----------------- Receive Ports - Pattern Checker Ports ------------------
        .gt7_rxprbserr_out              (gt7_rxprbserr_i),
        .gt7_rxprbssel_in               (gt7_rxprbssel_i),
        //----------------- Receive Ports - Pattern Checker ports ------------------
        .gt7_rxprbscntreset_in          (gt7_rxprbscntreset_i),
        //---------------- Receive Ports - RX 8B/10B Decoder Ports -----------------
        .gt7_rxdisperr_out              (gt7_rxdisperr_i),
        .gt7_rxnotintable_out           (gt7_rxnotintable_i),
        //---------------------- Receive Ports - RX AFE Ports ----------------------
        .gt7_gthrxn_in                  (RXN_IN[7]),
        //------------ Receive Ports - RX Byte and Word Alignment Ports ------------
        .gt7_rxmcommaalignen_in         (gt7_rxmcommaalignen_i),
        .gt7_rxpcommaalignen_in         (gt7_rxpcommaalignen_i),
        //---------------- Receive Ports - RX Channel Bonding Ports ----------------
        .gt7_rxchanbondseq_out          (gt7_rxchanbondseq_i),
        .gt7_rxchbonden_in              (gt7_rxchbonden_i),
        .gt7_rxchbondlevel_in           (3'b001),
        .gt7_rxchbondmaster_in          (tied_to_ground_i),
        .gt7_rxchbondo_out              (gt7_rxchbondo_i),
        .gt7_rxchbondslave_in           (tied_to_vcc_i),
        //--------------- Receive Ports - RX Channel Bonding Ports  ----------------
        .gt7_rxchanisaligned_out        (gt7_rxchanisaligned_i),
        .gt7_rxchanrealign_out          (gt7_rxchanrealign_i),
        //------------------- Receive Ports - RX Equalizer Ports -------------------
        .gt7_rxmonitorout_out           (gt7_rxmonitorout_i),
        .gt7_rxmonitorsel_in            (2'b00),
        //----------- Receive Ports - RX Initialization and Reset Ports ------------
        .gt7_gtrxreset_in               (tied_to_ground_i),
        //----------------- Receive Ports - RX8B/10B Decoder Ports -----------------
        .gt7_rxcharisk_out              (gt7_rxcharisk_i),
        //---------------- Receive Ports - Rx Channel Bonding Ports ----------------
        .gt7_rxchbondi_in               (gt3_rxchbondo_i),
        //---------------------- Receive Ports -RX AFE Ports -----------------------
        .gt7_gthrxp_in                  (RXP_IN[7]),
        //------------ Receive Ports -RX Initialization and Reset Ports ------------
        .gt7_rxresetdone_out            (gt7_rxresetdone_i),
        //------------------- TX Initialization and Reset Ports --------------------
        .gt7_gttxreset_in               (tied_to_ground_i),
        .gt7_txuserrdy_in               (tied_to_ground_i),
        //-------------- Transmit Ports - 8b10b Encoder Control Ports --------------
        .gt7_txchardispmode_in          (gt7_txchardispmode_i),
        .gt7_txchardispval_in           (gt7_txchardispval_i),
        //---------------- Transmit Ports - Pattern Generator Ports ----------------
        .gt7_txprbsforceerr_in          (gt7_txprbsforceerr_i),
        //---------------- Transmit Ports - TX Data Path interface -----------------
        .gt7_txdata_in                  (gt7_txdata_i),
        //-------------- Transmit Ports - TX Driver and OOB signaling --------------
        .gt7_gthtxn_out                 (TXN_OUT[7]),
        .gt7_gthtxp_out                 (TXP_OUT[7]),
        //--------- Transmit Ports - TX Fabric Clock Output Control Ports ----------
        .gt7_txoutclkfabric_out         (gt7_txoutclkfabric_i),
        .gt7_txoutclkpcs_out            (gt7_txoutclkpcs_i),
        //----------- Transmit Ports - TX Initialization and Reset Ports -----------
        .gt7_txresetdone_out            (gt7_txresetdone_i),
        //---------------- Transmit Ports - pattern Generator Ports ----------------
        .gt7_txprbssel_in               (gt7_txprbssel_i),
        //--------- Transmit Transmit Ports - 8b10b Encoder Control Ports ----------
        .gt7_txcharisk_in               (gt7_txcharisk_i),


        //_____________________________________________________________________
        //_____________________________________________________________________
        //GT8  (X1Y38)

        //-------------------------- Channel - DRP Ports  --------------------------
        .gt8_drpaddr_in                 (chan_drp_addr),
        .gt8_drpdi_in                   (chan_drp_datain),
        .gt8_drpdo_out                  (gt8_drpdo_i),
        .gt8_drpen_in                   (gt8_drpen_i),
        .gt8_drprdy_out                 (gt8_drprdy_i),
        .gt8_drpwe_in                   (chan_drp_we),
        //------------------- RX Initialization and Reset Ports --------------------
        .gt8_eyescanreset_in            (tied_to_ground_i),
        .gt8_rxuserrdy_in               (tied_to_ground_i),
        //------------------------ RX Margin Analysis Ports ------------------------
        .gt8_eyescandataerror_out       (gt8_eyescandataerror_i),
        .gt8_eyescantrigger_in          (tied_to_ground_i),
        //----------------- Receive Ports - Digital Monitor Ports ------------------
        .gt8_dmonitorout_out            (gt8_dmonitorout_i),
        //---------------- Receive Ports - FPGA RX interface Ports -----------------
        .gt8_rxdata_out                 (gt8_rxdata_i),
        //----------------- Receive Ports - Pattern Checker Ports ------------------
        .gt8_rxprbserr_out              (gt8_rxprbserr_i),
        .gt8_rxprbssel_in               (gt8_rxprbssel_i),
        //----------------- Receive Ports - Pattern Checker ports ------------------
        .gt8_rxprbscntreset_in          (gt8_rxprbscntreset_i),
        //---------------- Receive Ports - RX 8B/10B Decoder Ports -----------------
        .gt8_rxdisperr_out              (gt8_rxdisperr_i),
        .gt8_rxnotintable_out           (gt8_rxnotintable_i),
        //---------------------- Receive Ports - RX AFE Ports ----------------------
        .gt8_gthrxn_in                  (RXN_IN[8]),
        //------------ Receive Ports - RX Byte and Word Alignment Ports ------------
        .gt8_rxmcommaalignen_in         (gt8_rxmcommaalignen_i),
        .gt8_rxpcommaalignen_in         (gt8_rxpcommaalignen_i),
        //---------------- Receive Ports - RX Channel Bonding Ports ----------------
        .gt8_rxchanbondseq_out          (gt8_rxchanbondseq_i),
        .gt8_rxchbonden_in              (gt8_rxchbonden_i),
        .gt8_rxchbondlevel_in           (3'b000),
        .gt8_rxchbondmaster_in          (tied_to_ground_i),
        .gt8_rxchbondo_out              (gt8_rxchbondo_i),
        .gt8_rxchbondslave_in           (tied_to_vcc_i),
        //--------------- Receive Ports - RX Channel Bonding Ports  ----------------
        .gt8_rxchanisaligned_out        (gt8_rxchanisaligned_i),
        .gt8_rxchanrealign_out          (gt8_rxchanrealign_i),
        //------------------- Receive Ports - RX Equalizer Ports -------------------
        .gt8_rxmonitorout_out           (gt8_rxmonitorout_i),
        .gt8_rxmonitorsel_in            (2'b00),
        //----------- Receive Ports - RX Initialization and Reset Ports ------------
        .gt8_gtrxreset_in               (tied_to_ground_i),
        //----------------- Receive Ports - RX8B/10B Decoder Ports -----------------
        .gt8_rxcharisk_out              (gt8_rxcharisk_i),
        //---------------- Receive Ports - Rx Channel Bonding Ports ----------------
        .gt8_rxchbondi_in               (gt0_rxchbondo_i),
        //---------------------- Receive Ports -RX AFE Ports -----------------------
        .gt8_gthrxp_in                  (RXP_IN[8]),
        //------------ Receive Ports -RX Initialization and Reset Ports ------------
        .gt8_rxresetdone_out            (gt8_rxresetdone_i),
        //------------------- TX Initialization and Reset Ports --------------------
        .gt8_gttxreset_in               (tied_to_ground_i),
        .gt8_txuserrdy_in               (tied_to_ground_i),
        //-------------- Transmit Ports - 8b10b Encoder Control Ports --------------
        .gt8_txchardispmode_in          (gt8_txchardispmode_i),
        .gt8_txchardispval_in           (gt8_txchardispval_i),
        //---------------- Transmit Ports - Pattern Generator Ports ----------------
        .gt8_txprbsforceerr_in          (gt8_txprbsforceerr_i),
        //---------------- Transmit Ports - TX Data Path interface -----------------
        .gt8_txdata_in                  (gt8_txdata_i),
        //-------------- Transmit Ports - TX Driver and OOB signaling --------------
        .gt8_gthtxn_out                 (TXN_OUT[8]),
        .gt8_gthtxp_out                 (TXP_OUT[8]),
        //--------- Transmit Ports - TX Fabric Clock Output Control Ports ----------
        .gt8_txoutclkfabric_out         (gt8_txoutclkfabric_i),
        .gt8_txoutclkpcs_out            (gt8_txoutclkpcs_i),
        //----------- Transmit Ports - TX Initialization and Reset Ports -----------
        .gt8_txresetdone_out            (gt8_txresetdone_i),
        //---------------- Transmit Ports - pattern Generator Ports ----------------
        .gt8_txprbssel_in               (gt8_txprbssel_i),
        //--------- Transmit Transmit Ports - 8b10b Encoder Control Ports ----------
        .gt8_txcharisk_in               (gt8_txcharisk_i),


        //_____________________________________________________________________
        //_____________________________________________________________________
        //GT9  (X1Y39)

        //-------------------------- Channel - DRP Ports  --------------------------
        .gt9_drpaddr_in                 (chan_drp_addr),
        .gt9_drpdi_in                   (chan_drp_datain),
        .gt9_drpdo_out                  (gt9_drpdo_i),
        .gt9_drpen_in                   (gt9_drpen_i),
        .gt9_drprdy_out                 (gt9_drprdy_i),
        .gt9_drpwe_in                   (chan_drp_we),
        //------------------- RX Initialization and Reset Ports --------------------
        .gt9_eyescanreset_in            (tied_to_ground_i),
        .gt9_rxuserrdy_in               (tied_to_ground_i),
        //------------------------ RX Margin Analysis Ports ------------------------
        .gt9_eyescandataerror_out       (gt9_eyescandataerror_i),
        .gt9_eyescantrigger_in          (tied_to_ground_i),
        //----------------- Receive Ports - Digital Monitor Ports ------------------
        .gt9_dmonitorout_out            (gt9_dmonitorout_i),
        //---------------- Receive Ports - FPGA RX interface Ports -----------------
        .gt9_rxdata_out                 (gt9_rxdata_i),
        //----------------- Receive Ports - Pattern Checker Ports ------------------
        .gt9_rxprbserr_out              (gt9_rxprbserr_i),
        .gt9_rxprbssel_in               (gt9_rxprbssel_i),
        //----------------- Receive Ports - Pattern Checker ports ------------------
        .gt9_rxprbscntreset_in          (gt9_rxprbscntreset_i),
        //---------------- Receive Ports - RX 8B/10B Decoder Ports -----------------
        .gt9_rxdisperr_out              (gt9_rxdisperr_i),
        .gt9_rxnotintable_out           (gt9_rxnotintable_i),
        //---------------------- Receive Ports - RX AFE Ports ----------------------
        .gt9_gthrxn_in                  (RXN_IN[9]),
        //------------ Receive Ports - RX Byte and Word Alignment Ports ------------
        .gt9_rxmcommaalignen_in         (gt9_rxmcommaalignen_i),
        .gt9_rxpcommaalignen_in         (gt9_rxpcommaalignen_i),
        //---------------- Receive Ports - RX Channel Bonding Ports ----------------
        .gt9_rxchanbondseq_out          (gt9_rxchanbondseq_i),
        .gt9_rxchbonden_in              (gt9_rxchbonden_i),
        .gt9_rxchbondlevel_in           (3'b011),
        .gt9_rxchbondmaster_in          (tied_to_ground_i),
        .gt9_rxchbondo_out              (gt9_rxchbondo_i),
        .gt9_rxchbondslave_in           (tied_to_vcc_i),
        //--------------- Receive Ports - RX Channel Bonding Ports  ----------------
        .gt9_rxchanisaligned_out        (gt9_rxchanisaligned_i),
        .gt9_rxchanrealign_out          (gt9_rxchanrealign_i),
        //------------------- Receive Ports - RX Equalizer Ports -------------------
        .gt9_rxmonitorout_out           (gt9_rxmonitorout_i),
        .gt9_rxmonitorsel_in            (2'b00),
        //----------- Receive Ports - RX Initialization and Reset Ports ------------
        .gt9_gtrxreset_in               (tied_to_ground_i),
        //----------------- Receive Ports - RX8B/10B Decoder Ports -----------------
        .gt9_rxcharisk_out              (gt9_rxcharisk_i),
        //---------------- Receive Ports - Rx Channel Bonding Ports ----------------
        .gt9_rxchbondi_in               (gt5_rxchbondo_i),
        //---------------------- Receive Ports -RX AFE Ports -----------------------
        .gt9_gthrxp_in                  (RXP_IN[9]),
        //------------ Receive Ports -RX Initialization and Reset Ports ------------
        .gt9_rxresetdone_out            (gt9_rxresetdone_i),
        //------------------- TX Initialization and Reset Ports --------------------
        .gt9_gttxreset_in               (tied_to_ground_i),
        .gt9_txuserrdy_in               (tied_to_ground_i),
        //-------------- Transmit Ports - 8b10b Encoder Control Ports --------------
        .gt9_txchardispmode_in          (gt9_txchardispmode_i),
        .gt9_txchardispval_in           (gt9_txchardispval_i),
        //---------------- Transmit Ports - Pattern Generator Ports ----------------
        .gt9_txprbsforceerr_in          (gt9_txprbsforceerr_i),
        //---------------- Transmit Ports - TX Data Path interface -----------------
        .gt9_txdata_in                  (gt9_txdata_i),
        //-------------- Transmit Ports - TX Driver and OOB signaling --------------
        .gt9_gthtxn_out                 (TXN_OUT[9]),
        .gt9_gthtxp_out                 (TXP_OUT[9]),
        //--------- Transmit Ports - TX Fabric Clock Output Control Ports ----------
        .gt9_txoutclkfabric_out         (gt9_txoutclkfabric_i),
        .gt9_txoutclkpcs_out            (gt9_txoutclkpcs_i),
        //----------- Transmit Ports - TX Initialization and Reset Ports -----------
        .gt9_txresetdone_out            (gt9_txresetdone_i),
        //---------------- Transmit Ports - pattern Generator Ports ----------------
        .gt9_txprbssel_in               (gt9_txprbssel_i),
        //--------- Transmit Transmit Ports - 8b10b Encoder Control Ports ----------
        .gt9_txcharisk_in               (gt9_txcharisk_i),


    //____________________________COMMON PORTS________________________________
    .gt0_qplllock_out(),
    .gt0_qpllrefclklost_out(),
    .gt0_qplloutclk_out(),
    .gt0_qplloutrefclk_out(),
    .gt1_qplllock_out(),
    .gt1_qpllrefclklost_out(),
    .gt1_qplloutclk_out(),
    .gt1_qplloutrefclk_out(),
    .gt2_qplllock_out(),
    .gt2_qpllrefclklost_out(),
    .gt2_qplloutclk_out(),
    .gt2_qplloutrefclk_out(),

    .DRP_CLK_O (drpclk_in_i),
//        .sysclk_in_p                    (DRP_CLK_IN_P),
//        .sysclk_in_n                    (DRP_CLK_IN_N)
        .sysclk_in                    (DRP_CLK_IN)
    );


    //***********************************************************************//
    //                                                                       //
    //--------------------------- User Module Resets-------------------------//
    //                                                                       //
    //***********************************************************************//
    // All the User Modules i.e. FRAME_GEN, FRAME_CHECK and the sync modules
    // are held in reset till the RESETDONE goes high. 
    // The RESETDONE is registered a couple of times on *USRCLK2 and connected 
    // to the reset of the modules
    
always @(posedge gt0_rxusrclk2_i or negedge gt0_rxresetdone_i)

    begin
        if (!gt0_rxresetdone_i)
        begin
            gt0_rxresetdone_r    <=   `DLY 1'b0;
            gt0_rxresetdone_r2   <=   `DLY 1'b0;
            gt0_rxresetdone_r3   <=   `DLY 1'b0;
        end
        else
        begin
            gt0_rxresetdone_r    <=   `DLY gt0_rxresetdone_i;
            gt0_rxresetdone_r2   <=   `DLY gt0_rxresetdone_r;
            gt0_rxresetdone_r3   <=   `DLY gt0_rxresetdone_r2;
        end
    end

always @(posedge  gt0_txusrclk2_i or negedge gt0_txfsmresetdone_i)
    begin
        if (!gt0_txfsmresetdone_i)
        begin
            gt0_txfsmresetdone_r    <=   `DLY 1'b0;
            gt0_txfsmresetdone_r2   <=   `DLY 1'b0;
        end
        else
        begin
            gt0_txfsmresetdone_r    <=   `DLY gt0_txfsmresetdone_i;
            gt0_txfsmresetdone_r2   <=   `DLY gt0_txfsmresetdone_r;
        end
    end

always @(posedge gt1_rxusrclk2_i or negedge gt1_rxresetdone_i)

    begin
        if (!gt1_rxresetdone_i)
        begin
            gt1_rxresetdone_r    <=   `DLY 1'b0;
            gt1_rxresetdone_r2   <=   `DLY 1'b0;
            gt1_rxresetdone_r3   <=   `DLY 1'b0;
        end
        else
        begin
            gt1_rxresetdone_r    <=   `DLY gt1_rxresetdone_i;
            gt1_rxresetdone_r2   <=   `DLY gt1_rxresetdone_r;
            gt1_rxresetdone_r3   <=   `DLY gt1_rxresetdone_r2;
        end
    end

always @(posedge  gt1_txusrclk2_i or negedge gt1_txfsmresetdone_i)
    begin
        if (!gt1_txfsmresetdone_i)
        begin
            gt1_txfsmresetdone_r    <=   `DLY 1'b0;
            gt1_txfsmresetdone_r2   <=   `DLY 1'b0;
        end
        else
        begin
            gt1_txfsmresetdone_r    <=   `DLY gt1_txfsmresetdone_i;
            gt1_txfsmresetdone_r2   <=   `DLY gt1_txfsmresetdone_r;
        end
    end

always @(posedge gt2_rxusrclk2_i or negedge gt2_rxresetdone_i)

    begin
        if (!gt2_rxresetdone_i)
        begin
            gt2_rxresetdone_r    <=   `DLY 1'b0;
            gt2_rxresetdone_r2   <=   `DLY 1'b0;
            gt2_rxresetdone_r3   <=   `DLY 1'b0;
        end
        else
        begin
            gt2_rxresetdone_r    <=   `DLY gt2_rxresetdone_i;
            gt2_rxresetdone_r2   <=   `DLY gt2_rxresetdone_r;
            gt2_rxresetdone_r3   <=   `DLY gt2_rxresetdone_r2;
        end
    end

always @(posedge  gt2_txusrclk2_i or negedge gt2_txfsmresetdone_i)
    begin
        if (!gt2_txfsmresetdone_i)
        begin
            gt2_txfsmresetdone_r    <=   `DLY 1'b0;
            gt2_txfsmresetdone_r2   <=   `DLY 1'b0;
        end
        else
        begin
            gt2_txfsmresetdone_r    <=   `DLY gt2_txfsmresetdone_i;
            gt2_txfsmresetdone_r2   <=   `DLY gt2_txfsmresetdone_r;
        end
    end

always @(posedge gt3_rxusrclk2_i or negedge gt3_rxresetdone_i)

    begin
        if (!gt3_rxresetdone_i)
        begin
            gt3_rxresetdone_r    <=   `DLY 1'b0;
            gt3_rxresetdone_r2   <=   `DLY 1'b0;
            gt3_rxresetdone_r3   <=   `DLY 1'b0;
        end
        else
        begin
            gt3_rxresetdone_r    <=   `DLY gt3_rxresetdone_i;
            gt3_rxresetdone_r2   <=   `DLY gt3_rxresetdone_r;
            gt3_rxresetdone_r3   <=   `DLY gt3_rxresetdone_r2;
        end
    end

always @(posedge  gt3_txusrclk2_i or negedge gt3_txfsmresetdone_i)
    begin
        if (!gt3_txfsmresetdone_i)
        begin
            gt3_txfsmresetdone_r    <=   `DLY 1'b0;
            gt3_txfsmresetdone_r2   <=   `DLY 1'b0;
        end
        else
        begin
            gt3_txfsmresetdone_r    <=   `DLY gt3_txfsmresetdone_i;
            gt3_txfsmresetdone_r2   <=   `DLY gt3_txfsmresetdone_r;
        end
    end

always @(posedge gt4_rxusrclk2_i or negedge gt4_rxresetdone_i)

    begin
        if (!gt4_rxresetdone_i)
        begin
            gt4_rxresetdone_r    <=   `DLY 1'b0;
            gt4_rxresetdone_r2   <=   `DLY 1'b0;
            gt4_rxresetdone_r3   <=   `DLY 1'b0;
        end
        else
        begin
            gt4_rxresetdone_r    <=   `DLY gt4_rxresetdone_i;
            gt4_rxresetdone_r2   <=   `DLY gt4_rxresetdone_r;
            gt4_rxresetdone_r3   <=   `DLY gt4_rxresetdone_r2;
        end
    end

always @(posedge  gt4_txusrclk2_i or negedge gt4_txfsmresetdone_i)
    begin
        if (!gt4_txfsmresetdone_i)
        begin
            gt4_txfsmresetdone_r    <=   `DLY 1'b0;
            gt4_txfsmresetdone_r2   <=   `DLY 1'b0;
        end
        else
        begin
            gt4_txfsmresetdone_r    <=   `DLY gt4_txfsmresetdone_i;
            gt4_txfsmresetdone_r2   <=   `DLY gt4_txfsmresetdone_r;
        end
    end

always @(posedge gt5_rxusrclk2_i or negedge gt5_rxresetdone_i)

    begin
        if (!gt5_rxresetdone_i)
        begin
            gt5_rxresetdone_r    <=   `DLY 1'b0;
            gt5_rxresetdone_r2   <=   `DLY 1'b0;
            gt5_rxresetdone_r3   <=   `DLY 1'b0;
        end
        else
        begin
            gt5_rxresetdone_r    <=   `DLY gt5_rxresetdone_i;
            gt5_rxresetdone_r2   <=   `DLY gt5_rxresetdone_r;
            gt5_rxresetdone_r3   <=   `DLY gt5_rxresetdone_r2;
        end
    end

always @(posedge  gt5_txusrclk2_i or negedge gt5_txfsmresetdone_i)
    begin
        if (!gt5_txfsmresetdone_i)
        begin
            gt5_txfsmresetdone_r    <=   `DLY 1'b0;
            gt5_txfsmresetdone_r2   <=   `DLY 1'b0;
        end
        else
        begin
            gt5_txfsmresetdone_r    <=   `DLY gt5_txfsmresetdone_i;
            gt5_txfsmresetdone_r2   <=   `DLY gt5_txfsmresetdone_r;
        end
    end

always @(posedge gt6_rxusrclk2_i or negedge gt6_rxresetdone_i)

    begin
        if (!gt6_rxresetdone_i)
        begin
            gt6_rxresetdone_r    <=   `DLY 1'b0;
            gt6_rxresetdone_r2   <=   `DLY 1'b0;
            gt6_rxresetdone_r3   <=   `DLY 1'b0;
        end
        else
        begin
            gt6_rxresetdone_r    <=   `DLY gt6_rxresetdone_i;
            gt6_rxresetdone_r2   <=   `DLY gt6_rxresetdone_r;
            gt6_rxresetdone_r3   <=   `DLY gt6_rxresetdone_r2;
        end
    end

always @(posedge  gt6_txusrclk2_i or negedge gt6_txfsmresetdone_i)
    begin
        if (!gt6_txfsmresetdone_i)
        begin
            gt6_txfsmresetdone_r    <=   `DLY 1'b0;
            gt6_txfsmresetdone_r2   <=   `DLY 1'b0;
        end
        else
        begin
            gt6_txfsmresetdone_r    <=   `DLY gt6_txfsmresetdone_i;
            gt6_txfsmresetdone_r2   <=   `DLY gt6_txfsmresetdone_r;
        end
    end

always @(posedge gt7_rxusrclk2_i or negedge gt7_rxresetdone_i)

    begin
        if (!gt7_rxresetdone_i)
        begin
            gt7_rxresetdone_r    <=   `DLY 1'b0;
            gt7_rxresetdone_r2   <=   `DLY 1'b0;
            gt7_rxresetdone_r3   <=   `DLY 1'b0;
        end
        else
        begin
            gt7_rxresetdone_r    <=   `DLY gt7_rxresetdone_i;
            gt7_rxresetdone_r2   <=   `DLY gt7_rxresetdone_r;
            gt7_rxresetdone_r3   <=   `DLY gt7_rxresetdone_r2;
        end
    end

always @(posedge  gt7_txusrclk2_i or negedge gt7_txfsmresetdone_i)
    begin
        if (!gt7_txfsmresetdone_i)
        begin
            gt7_txfsmresetdone_r    <=   `DLY 1'b0;
            gt7_txfsmresetdone_r2   <=   `DLY 1'b0;
        end
        else
        begin
            gt7_txfsmresetdone_r    <=   `DLY gt7_txfsmresetdone_i;
            gt7_txfsmresetdone_r2   <=   `DLY gt7_txfsmresetdone_r;
        end
    end

always @(posedge gt8_rxusrclk2_i or negedge gt8_rxresetdone_i)

    begin
        if (!gt8_rxresetdone_i)
        begin
            gt8_rxresetdone_r    <=   `DLY 1'b0;
            gt8_rxresetdone_r2   <=   `DLY 1'b0;
            gt8_rxresetdone_r3   <=   `DLY 1'b0;
        end
        else
        begin
            gt8_rxresetdone_r    <=   `DLY gt8_rxresetdone_i;
            gt8_rxresetdone_r2   <=   `DLY gt8_rxresetdone_r;
            gt8_rxresetdone_r3   <=   `DLY gt8_rxresetdone_r2;
        end
    end

always @(posedge  gt8_txusrclk2_i or negedge gt8_txfsmresetdone_i)
    begin
        if (!gt8_txfsmresetdone_i)
        begin
            gt8_txfsmresetdone_r    <=   `DLY 1'b0;
            gt8_txfsmresetdone_r2   <=   `DLY 1'b0;
        end
        else
        begin
            gt8_txfsmresetdone_r    <=   `DLY gt8_txfsmresetdone_i;
            gt8_txfsmresetdone_r2   <=   `DLY gt8_txfsmresetdone_r;
        end
    end

always @(posedge gt9_rxusrclk2_i or negedge gt9_rxresetdone_i)

    begin
        if (!gt9_rxresetdone_i)
        begin
            gt9_rxresetdone_r    <=   `DLY 1'b0;
            gt9_rxresetdone_r2   <=   `DLY 1'b0;
            gt9_rxresetdone_r3   <=   `DLY 1'b0;
        end
        else
        begin
            gt9_rxresetdone_r    <=   `DLY gt9_rxresetdone_i;
            gt9_rxresetdone_r2   <=   `DLY gt9_rxresetdone_r;
            gt9_rxresetdone_r3   <=   `DLY gt9_rxresetdone_r2;
        end
    end

always @(posedge  gt9_txusrclk2_i or negedge gt9_txfsmresetdone_i)
    begin
        if (!gt9_txfsmresetdone_i)
        begin
            gt9_txfsmresetdone_r    <=   `DLY 1'b0;
            gt9_txfsmresetdone_r2   <=   `DLY 1'b0;
        end
        else
        begin
            gt9_txfsmresetdone_r    <=   `DLY gt9_txfsmresetdone_i;
            gt9_txfsmresetdone_r2   <=   `DLY gt9_txfsmresetdone_r;
        end
    end



    //***********************************************************************//
    //                                                                       //
    //------------------------  Frame Generators  ---------------------------//
    //                                                                       //
    //***********************************************************************//
    // The example design uses Block RAM based frame generators to provide test
    // data to the GTs for transmission. By default the frame generators are 
    // loaded with an incrementing data sequence that includes commas/alignment
    // characters for alignment. If your protocol uses channel bonding, the 
    // frame generator will also be preloaded with a channel bonding sequence.
    
    // You can modify the data transmitted by changing the INIT values of the frame
    // generator in this file. Pay careful attention to bit order and the spacing
    // of your control and alignment characters.

    gtwizard_0_GT_FRAME_GEN #
    (
        .WORDS_IN_BRAM(EXAMPLE_WORDS_IN_BRAM)
    )
    gt0_frame_gen
    (
        // User Interface
//        .TX_DATA_OUT                    ({gt0_txdata_float_i,gt0_txdata_i,gt0_txdata_float16_i}),
//        .TX_DATA_OUT                    ({gt0_txdata_float_i, gt0_txchardispmode_i, gt0_txchardispval_i, gt0_txdata_i,gt0_txdata_float16_i}),
        .TX_DATA_OUT                    ({gt0_txchardispmode_i[3], gt0_txchardispval_i[3], gt0_txdata_i[31:24],
                                          gt0_txchardispmode_i[2], gt0_txchardispval_i[2], gt0_txdata_i[23:16],
                                          gt0_txchardispmode_i[1], gt0_txchardispval_i[1], gt0_txdata_i[15:8],
                                          gt0_txchardispmode_i[0], gt0_txchardispval_i[0], gt0_txdata_i[7:0]}),
//        .TXCTRL_OUT                     ({gt0_txcharisk_float_i,gt0_txcharisk_i}),
        .TXCTRL_OUT                     (gt0_txcharisk_i),

        // System Interface
        .USER_CLK                       (gt0_txusrclk2_i),
        .MOD_SEL                        (MOD_SEL),
        .SYSTEM_RESET                   (gt0_tx_system_reset_c)
    );

    gtwizard_0_GT_FRAME_GEN #
    (
        .WORDS_IN_BRAM(EXAMPLE_WORDS_IN_BRAM)
    )
    gt1_frame_gen
    (
        // User Interface
//        .TX_DATA_OUT                    ({gt1_txdata_float_i,gt1_txdata_i,gt1_txdata_float16_i}),
//        .TX_DATA_OUT                    ({gt1_txdata_float_i, gt1_txchardispmode_i, gt1_txchardispval_i, gt1_txdata_i,gt1_txdata_float16_i}),
//        .TXCTRL_OUT                     ({gt1_txcharisk_float_i,gt1_txcharisk_i}),
        .TX_DATA_OUT                    ({gt1_txchardispmode_i[3], gt1_txchardispval_i[3], gt1_txdata_i[31:24],
                                  gt1_txchardispmode_i[2], gt1_txchardispval_i[2], gt1_txdata_i[23:16],
                                  gt1_txchardispmode_i[1], gt1_txchardispval_i[1], gt1_txdata_i[15:8],
                                  gt1_txchardispmode_i[0], gt1_txchardispval_i[0], gt1_txdata_i[7:0]}),
//        .TXCTRL_OUT                     ({gt1_txcharisk_float_i,gt1_txcharisk_i}),
        .TXCTRL_OUT                     (gt1_txcharisk_i),

        // System Interface
        .USER_CLK                       (gt1_txusrclk2_i),
         .MOD_SEL                        (MOD_SEL),
       .SYSTEM_RESET                   (gt1_tx_system_reset_c)
    );

    gtwizard_0_GT_FRAME_GEN #
    (
        .WORDS_IN_BRAM(EXAMPLE_WORDS_IN_BRAM)
    )
    gt2_frame_gen
    (
        // User Interface
//        .TX_DATA_OUT                    ({gt2_txdata_float_i,gt2_txdata_i,gt2_txdata_float16_i}),
//        .TX_DATA_OUT                    ({gt2_txdata_float_i, gt2_txchardispmode_i, gt2_txchardispval_i, gt2_txdata_i,gt2_txdata_float16_i}),
//        .TXCTRL_OUT                     ({gt2_txcharisk_float_i,gt2_txcharisk_i}),
        .TX_DATA_OUT                    ({gt2_txchardispmode_i[3], gt2_txchardispval_i[3], gt2_txdata_i[31:24],
                                  gt2_txchardispmode_i[2], gt2_txchardispval_i[2], gt2_txdata_i[23:16],
                                  gt2_txchardispmode_i[1], gt2_txchardispval_i[1], gt2_txdata_i[15:8],
                                  gt2_txchardispmode_i[0], gt2_txchardispval_i[0], gt2_txdata_i[7:0]}),
//        .TXCTRL_OUT                     ({gt2_txcharisk_float_i,gt2_txcharisk_i}),
        .TXCTRL_OUT                     (gt2_txcharisk_i),

        // System Interface
        .USER_CLK                       (gt2_txusrclk2_i),
        .MOD_SEL                        (MOD_SEL),
        .SYSTEM_RESET                   (gt2_tx_system_reset_c)
    );

    gtwizard_0_GT_FRAME_GEN #
    (
        .WORDS_IN_BRAM(EXAMPLE_WORDS_IN_BRAM)
    )
    gt3_frame_gen
    (
        // User Interface
//        .TX_DATA_OUT                    ({gt3_txdata_float_i,gt3_txdata_i,gt3_txdata_float16_i}),
//        .TX_DATA_OUT                    ({gt3_txdata_float_i, gt3_txchardispmode_i, gt3_txchardispval_i, gt3_txdata_i,gt3_txdata_float16_i}),
//        .TXCTRL_OUT                     ({gt3_txcharisk_float_i,gt3_txcharisk_i}),
        .TX_DATA_OUT                    ({gt3_txchardispmode_i[3], gt3_txchardispval_i[3], gt3_txdata_i[31:24],
                                  gt3_txchardispmode_i[2], gt3_txchardispval_i[2], gt3_txdata_i[23:16],
                                  gt3_txchardispmode_i[1], gt3_txchardispval_i[1], gt3_txdata_i[15:8],
                                  gt3_txchardispmode_i[0], gt3_txchardispval_i[0], gt3_txdata_i[7:0]}),
//        .TXCTRL_OUT                     ({gt3_txcharisk_float_i,gt3_txcharisk_i}),
            .TXCTRL_OUT                     (gt3_txcharisk_i),

        // System Interface
        .USER_CLK                       (gt3_txusrclk2_i),
        .MOD_SEL                        (MOD_SEL),
        .SYSTEM_RESET                   (gt3_tx_system_reset_c)
    );

    gtwizard_0_GT_FRAME_GEN #
    (
        .WORDS_IN_BRAM(EXAMPLE_WORDS_IN_BRAM)
    )
    gt4_frame_gen
    (
        // User Interface
//        .TX_DATA_OUT                    ({gt4_txdata_float_i,gt4_txdata_i,gt4_txdata_float16_i}),
//        .TX_DATA_OUT                    ({gt4_txdata_float_i, gt4_txchardispmode_i, gt4_txchardispval_i, gt4_txdata_i,gt4_txdata_float16_i}),
        .TX_DATA_OUT                    ({gt4_txchardispmode_i[3], gt4_txchardispval_i[3], gt4_txdata_i[31:24],
                                  gt4_txchardispmode_i[2], gt4_txchardispval_i[2], gt4_txdata_i[23:16],
                                  gt4_txchardispmode_i[1], gt4_txchardispval_i[1], gt4_txdata_i[15:8],
                                  gt4_txchardispmode_i[0], gt4_txchardispval_i[0], gt4_txdata_i[7:0]}),
//        .TXCTRL_OUT                     ({gt0_txcharisk_float_i,gt0_txcharisk_i}),
            .TXCTRL_OUT                     (gt4_txcharisk_i),
//        .TXCTRL_OUT                     ({gt4_txcharisk_float_i,gt4_txcharisk_i}),

        // System Interface
        .USER_CLK                       (gt4_txusrclk2_i),
        .MOD_SEL                        (MOD_SEL),
        .SYSTEM_RESET                   (gt4_tx_system_reset_c)
    );

    gtwizard_0_GT_FRAME_GEN #
    (
        .WORDS_IN_BRAM(EXAMPLE_WORDS_IN_BRAM)
    )
    gt5_frame_gen
    (
        // User Interface
//        .TX_DATA_OUT                    ({gt5_txdata_float_i,gt5_txdata_i,gt5_txdata_float16_i}),
//        .TX_DATA_OUT                    ({gt5_txdata_float_i, gt5_txchardispmode_i, gt5_txchardispval_i, gt5_txdata_i,gt5_txdata_float16_i}),
        .TX_DATA_OUT                    ({gt5_txchardispmode_i[3], gt5_txchardispval_i[3], gt5_txdata_i[31:24],
                                  gt5_txchardispmode_i[2], gt5_txchardispval_i[2], gt5_txdata_i[23:16],
                                  gt5_txchardispmode_i[1], gt5_txchardispval_i[1], gt5_txdata_i[15:8],
                                  gt5_txchardispmode_i[0], gt5_txchardispval_i[0], gt5_txdata_i[7:0]}),
//        .TXCTRL_OUT                     ({gt5_txcharisk_float_i,gt5_txcharisk_i}),
            .TXCTRL_OUT                     (gt5_txcharisk_i),
//        .TXCTRL_OUT                     ({gt5_txcharisk_float_i,gt5_txcharisk_i}),

        // System Interface
        .USER_CLK                       (gt5_txusrclk2_i),
        .MOD_SEL                        (MOD_SEL),
        .SYSTEM_RESET                   (gt5_tx_system_reset_c)
    );

    gtwizard_0_GT_FRAME_GEN #
    (
        .WORDS_IN_BRAM(EXAMPLE_WORDS_IN_BRAM)
    )
    gt6_frame_gen
    (
        // User Interface
//        .TX_DATA_OUT                    ({gt6_txdata_float_i,gt6_txdata_i,gt6_txdata_float16_i}),
//        .TX_DATA_OUT                    ({gt6_txdata_float_i, gt6_txchardispmode_i, gt6_txchardispval_i, gt6_txdata_i,gt6_txdata_float16_i}),
        .TX_DATA_OUT                    ({gt6_txchardispmode_i[3], gt6_txchardispval_i[3], gt6_txdata_i[31:24],
                                  gt6_txchardispmode_i[2], gt6_txchardispval_i[2], gt6_txdata_i[23:16],
                                  gt6_txchardispmode_i[1], gt6_txchardispval_i[1], gt6_txdata_i[15:8],
                                  gt6_txchardispmode_i[0], gt6_txchardispval_i[0], gt6_txdata_i[7:0]}),
//        .TXCTRL_OUT                     ({gt6_txcharisk_float_i,gt6_txcharisk_i}),
        .TXCTRL_OUT                     (gt6_txcharisk_i),
//        .TXCTRL_OUT                     ({gt6_txcharisk_float_i,gt6_txcharisk_i}),

        // System Interface
        .USER_CLK                       (gt6_txusrclk2_i),
        .MOD_SEL                        (MOD_SEL),
        .SYSTEM_RESET                   (gt6_tx_system_reset_c)
    );

    gtwizard_0_GT_FRAME_GEN #
    (
        .WORDS_IN_BRAM(EXAMPLE_WORDS_IN_BRAM)
    )
    gt7_frame_gen
    (
        // User Interface
//        .TX_DATA_OUT                    ({gt7_txdata_float_i,gt7_txdata_i,gt7_txdata_float16_i}),
//        .TX_DATA_OUT                    ({gt7_txdata_float_i, gt7_txchardispmode_i, gt7_txchardispval_i, gt7_txdata_i,gt7_txdata_float16_i}),
        .TX_DATA_OUT                    ({gt7_txchardispmode_i[3], gt7_txchardispval_i[3], gt7_txdata_i[31:24],
                                  gt7_txchardispmode_i[2], gt7_txchardispval_i[2], gt7_txdata_i[23:16],
                                  gt7_txchardispmode_i[1], gt7_txchardispval_i[1], gt7_txdata_i[15:8],
                                  gt7_txchardispmode_i[0], gt7_txchardispval_i[0], gt7_txdata_i[7:0]}),
//        .TXCTRL_OUT                     ({gt7_txcharisk_float_i,gt7_txcharisk_i}),
        .TXCTRL_OUT                     (gt7_txcharisk_i),
//        .TXCTRL_OUT                     ({gt7_txcharisk_float_i,gt7_txcharisk_i}),

        // System Interface
        .USER_CLK                       (gt7_txusrclk2_i),
        .MOD_SEL                        (MOD_SEL),
        .SYSTEM_RESET                   (gt7_tx_system_reset_c)
    );

    gtwizard_0_GT_FRAME_GEN #
    (
        .WORDS_IN_BRAM(EXAMPLE_WORDS_IN_BRAM)
    )
    gt8_frame_gen
    (
        // User Interface
//        .TX_DATA_OUT                    ({gt8_txdata_float_i,gt8_txdata_i,gt8_txdata_float16_i}),
//        .TX_DATA_OUT                    ({gt8_txdata_float_i, gt8_txchardispmode_i, gt8_txchardispval_i, gt8_txdata_i,gt8_txdata_float16_i}),
//        .TXCTRL_OUT                     ({gt8_txcharisk_float_i,gt8_txcharisk_i}),
        .TX_DATA_OUT                    ({gt8_txchardispmode_i[3], gt8_txchardispval_i[3], gt8_txdata_i[31:24],
                                          gt8_txchardispmode_i[2], gt8_txchardispval_i[2], gt8_txdata_i[23:16],
                                          gt8_txchardispmode_i[1], gt8_txchardispval_i[1], gt8_txdata_i[15:8],
                                          gt8_txchardispmode_i[0], gt8_txchardispval_i[0], gt8_txdata_i[7:0]}),
//        .TXCTRL_OUT                     ({gt8_txcharisk_float_i,gt8_txcharisk_i}),
        .TXCTRL_OUT                     (gt8_txcharisk_i),

        // System Interface
        .USER_CLK                       (gt8_txusrclk2_i),
        .MOD_SEL                        (MOD_SEL),
        .SYSTEM_RESET                   (gt8_tx_system_reset_c)
    );

    gtwizard_0_GT_FRAME_GEN #
    (
        .WORDS_IN_BRAM(EXAMPLE_WORDS_IN_BRAM)
    )
    gt9_frame_gen
    (
        // User Interface
//        .TX_DATA_OUT                    ({gt9_txdata_float_i,gt9_txdata_i,gt9_txdata_float16_i}),
//        .TX_DATA_OUT                    ({gt9_txdata_float_i, gt9_txchardispmode_i, gt9_txchardispval_i, gt9_txdata_i,gt9_txdata_float16_i}),
        .TX_DATA_OUT                    ({gt9_txchardispmode_i[3], gt9_txchardispval_i[3], gt9_txdata_i[31:24],
                                  gt9_txchardispmode_i[2], gt9_txchardispval_i[2], gt9_txdata_i[23:16],
                                  gt9_txchardispmode_i[1], gt9_txchardispval_i[1], gt9_txdata_i[15:8],
                                  gt9_txchardispmode_i[0], gt9_txchardispval_i[0], gt9_txdata_i[7:0]}),
//        .TXCTRL_OUT                     ({gt9_txcharisk_float_i,gt9_txcharisk_i}),
            .TXCTRL_OUT                     (gt9_txcharisk_i),
//        .TXCTRL_OUT                     ({gt9_txcharisk_float_i,gt9_txcharisk_i}),

        // System Interface
        .USER_CLK                       (gt9_txusrclk2_i),
        .MOD_SEL                        (MOD_SEL),
        .SYSTEM_RESET                   (gt9_tx_system_reset_c)
    );

    //***********************************************************************//
    //                                                                       //
    //------------------------  Frame Checkers  -----------------------------//
    //                                                                       //
    //***********************************************************************//
    // The example design uses Block RAM based frame checkers to verify incoming  
    // data. By default the frame generators are loaded with a data sequence that 
    // matches the outgoing sequence of the frame generators for the TX ports.
    
    // You can modify the expected data sequence by changing the INIT values of the frame
    // checkers in this file. Pay careful attention to bit order and the spacing
    // of your control and alignment characters.
    
    // When the frame checker receives data, it attempts to synchronise to the 
    // incoming pattern by looking for the first sequence in the pattern. Once it 
    // finds the first sequence, it increments through the sequence, and indicates an 
    // error whenever the next value received does not match the expected value.


    assign gt0_frame_check_reset_i = (EXAMPLE_CONFIG_INDEPENDENT_LANES==0)?reset_on_data_error_i:gt0_matchn_i;

// gt0_frame_check0 is always connected to the lane with the start of char 
    // and this lane starts off the data checking on all the other lanes. The INC_IN port is tied off
    assign gt0_inc_in_i = 1'b0;

    gtwizard_0_GT_FRAME_CHECK #
    (
         .RX_DATA_WIDTH       (32),
         .RXCTRL_WIDTH        (4),
         .COMMA_DOUBLE        (16'h04bc),
         .CHANBOND_SEQ_LEN    (2),
        .WORDS_IN_BRAM(EXAMPLE_WORDS_IN_BRAM),
         .START_OF_PACKET_CHAR (32'h060504bc)
    )
    gt0_frame_check
    (
        // GT Interface
        .RX_DATA_IN                     (gt0_rxdata_i),
        .RXCTRL_IN                      (gt0_rxcharisk_i),
        .RXENMCOMMADET_OUT              (gt0_rxmcommaalignen_i),
        .RXENPCOMMADET_OUT              (gt0_rxpcommaalignen_i),
        .RX_ENCHAN_SYNC_OUT             (gt0_rxchbonden_i),
        .RX_CHANBOND_SEQ_IN             (gt0_rxchanbondseq_i),
        // Control Interface
        .INC_IN                         (gt0_inc_in_i),
        .INC_OUT                        (gt0_inc_out_i),
        .PATTERN_MATCHB_OUT             (gt0_matchn_i),
        .RESET_ON_ERROR_IN              (gt0_frame_check_reset_i),
        // System Interface
        .USER_CLK                       (gt0_rxusrclk2_i),
        .SYSTEM_RESET                   (gt0_rx_system_reset_c),
        .ERROR_COUNT_OUT                (gt0_error_count_i),
        .TRACK_DATA_OUT                 (gt0_track_data_i),
        //RR added
        .PCOMMA_EN_IN                   (RX_PCOMMA_EN),
        .MCOMMA_EN_IN                   (RX_MCOMMA_EN),
        .RXCHBOND_EN_IN                   (RX_CHBOND_EN)
    );


    assign gt1_frame_check_reset_i = (EXAMPLE_CONFIG_INDEPENDENT_LANES==0)?reset_on_data_error_i:gt1_matchn_i;

    // in the "independent lanes" configuration, each of the lanes looks for the unique start char and
    // in this case, the INC_IN port is tied off.
    // Else, the data checking is triggered by the "master" lane
    assign gt1_inc_in_i = (EXAMPLE_CONFIG_INDEPENDENT_LANES==0)?gt0_inc_out_i:1'b0;

    gtwizard_0_GT_FRAME_CHECK #
    (
         .RX_DATA_WIDTH       (32),
         .RXCTRL_WIDTH        (4),
         .COMMA_DOUBLE        (16'h04bc),
         .CHANBOND_SEQ_LEN    (2),
        .WORDS_IN_BRAM(EXAMPLE_WORDS_IN_BRAM),
         .START_OF_PACKET_CHAR (32'h060504bc)
    )
    gt1_frame_check
    (
        // GT Interface
        .RX_DATA_IN                     (gt1_rxdata_i),
        .RXCTRL_IN                      (gt1_rxcharisk_i),
        .RXENMCOMMADET_OUT              (gt1_rxmcommaalignen_i),
        .RXENPCOMMADET_OUT              (gt1_rxpcommaalignen_i),
        .RX_ENCHAN_SYNC_OUT             (gt1_rxchbonden_i),
        .RX_CHANBOND_SEQ_IN             (gt1_rxchanbondseq_i),
        // Control Interface
        .INC_IN                         (gt1_inc_in_i),
        .INC_OUT                        (gt1_inc_out_i),
        .PATTERN_MATCHB_OUT             (gt1_matchn_i),
        .RESET_ON_ERROR_IN              (gt1_frame_check_reset_i),
        // System Interface
        .USER_CLK                       (gt1_rxusrclk2_i),
        .SYSTEM_RESET                   (gt1_rx_system_reset_c),
        .ERROR_COUNT_OUT                (gt1_error_count_i),
        .TRACK_DATA_OUT                 (gt1_track_data_i),
        //RR added
        .PCOMMA_EN_IN                   (RX_PCOMMA_EN),
        .MCOMMA_EN_IN                   (RX_MCOMMA_EN),
        .RXCHBOND_EN_IN                   (RX_CHBOND_EN)
    );


    assign gt2_frame_check_reset_i = (EXAMPLE_CONFIG_INDEPENDENT_LANES==0)?reset_on_data_error_i:gt2_matchn_i;

    // in the "independent lanes" configuration, each of the lanes looks for the unique start char and
    // in this case, the INC_IN port is tied off.
    // Else, the data checking is triggered by the "master" lane
    assign gt2_inc_in_i = (EXAMPLE_CONFIG_INDEPENDENT_LANES==0)?gt0_inc_out_i:1'b0;

    gtwizard_0_GT_FRAME_CHECK #
    (
         .RX_DATA_WIDTH       (32),
         .RXCTRL_WIDTH        (4),
         .COMMA_DOUBLE        (16'h04bc),
         .CHANBOND_SEQ_LEN    (2),
        .WORDS_IN_BRAM(EXAMPLE_WORDS_IN_BRAM),
         .START_OF_PACKET_CHAR (32'h060504bc)
    )
    gt2_frame_check
    (
        // GT Interface
        .RX_DATA_IN                     (gt2_rxdata_i),
        .RXCTRL_IN                      (gt2_rxcharisk_i),
        .RXENMCOMMADET_OUT              (gt2_rxmcommaalignen_i),
        .RXENPCOMMADET_OUT              (gt2_rxpcommaalignen_i),
        .RX_ENCHAN_SYNC_OUT             (gt2_rxchbonden_i),
        .RX_CHANBOND_SEQ_IN             (gt2_rxchanbondseq_i),
        // Control Interface
        .INC_IN                         (gt2_inc_in_i),
        .INC_OUT                        (gt2_inc_out_i),
        .PATTERN_MATCHB_OUT             (gt2_matchn_i),
        .RESET_ON_ERROR_IN              (gt2_frame_check_reset_i),
        // System Interface
        .USER_CLK                       (gt2_rxusrclk2_i),
        .SYSTEM_RESET                   (gt2_rx_system_reset_c),
        .ERROR_COUNT_OUT                (gt2_error_count_i),
        .TRACK_DATA_OUT                 (gt2_track_data_i),
        //RR added
        .PCOMMA_EN_IN                   (RX_PCOMMA_EN),
        .MCOMMA_EN_IN                   (RX_MCOMMA_EN),
         .RXCHBOND_EN_IN                   (RX_CHBOND_EN)
    );


    assign gt3_frame_check_reset_i = (EXAMPLE_CONFIG_INDEPENDENT_LANES==0)?reset_on_data_error_i:gt3_matchn_i;

    // in the "independent lanes" configuration, each of the lanes looks for the unique start char and
    // in this case, the INC_IN port is tied off.
    // Else, the data checking is triggered by the "master" lane
    assign gt3_inc_in_i = (EXAMPLE_CONFIG_INDEPENDENT_LANES==0)?gt0_inc_out_i:1'b0;

    gtwizard_0_GT_FRAME_CHECK #
    (
         .RX_DATA_WIDTH       (32),
         .RXCTRL_WIDTH        (4),
         .COMMA_DOUBLE        (16'h04bc),
         .CHANBOND_SEQ_LEN    (2),
        .WORDS_IN_BRAM(EXAMPLE_WORDS_IN_BRAM),
         .START_OF_PACKET_CHAR (32'h060504bc)
    )
    gt3_frame_check
    (
        // GT Interface
        .RX_DATA_IN                     (gt3_rxdata_i),
        .RXCTRL_IN                      (gt3_rxcharisk_i),
        .RXENMCOMMADET_OUT              (gt3_rxmcommaalignen_i),
        .RXENPCOMMADET_OUT              (gt3_rxpcommaalignen_i),
        .RX_ENCHAN_SYNC_OUT             (gt3_rxchbonden_i),
        .RX_CHANBOND_SEQ_IN             (gt3_rxchanbondseq_i),
        // Control Interface
        .INC_IN                         (gt3_inc_in_i),
        .INC_OUT                        (gt3_inc_out_i),
        .PATTERN_MATCHB_OUT             (gt3_matchn_i),
        .RESET_ON_ERROR_IN              (gt3_frame_check_reset_i),
        // System Interface
        .USER_CLK                       (gt3_rxusrclk2_i),
        .SYSTEM_RESET                   (gt3_rx_system_reset_c),
        .ERROR_COUNT_OUT                (gt3_error_count_i),
        .TRACK_DATA_OUT                 (gt3_track_data_i),
        //RR added
        .PCOMMA_EN_IN                   (RX_PCOMMA_EN),
        .MCOMMA_EN_IN                   (RX_MCOMMA_EN),
         .RXCHBOND_EN_IN                   (RX_CHBOND_EN)
    );


    assign gt4_frame_check_reset_i = (EXAMPLE_CONFIG_INDEPENDENT_LANES==0)?reset_on_data_error_i:gt4_matchn_i;

    // in the "independent lanes" configuration, each of the lanes looks for the unique start char and
    // in this case, the INC_IN port is tied off.
    // Else, the data checking is triggered by the "master" lane
    assign gt4_inc_in_i = (EXAMPLE_CONFIG_INDEPENDENT_LANES==0)?gt0_inc_out_i:1'b0;

    gtwizard_0_GT_FRAME_CHECK #
    (
         .RX_DATA_WIDTH       (32),
         .RXCTRL_WIDTH        (4),
         .COMMA_DOUBLE        (16'h04bc),
         .CHANBOND_SEQ_LEN    (2),
        .WORDS_IN_BRAM(EXAMPLE_WORDS_IN_BRAM),
         .START_OF_PACKET_CHAR (32'h060504bc)
    )
    gt4_frame_check
    (
        // GT Interface
        .RX_DATA_IN                     (gt4_rxdata_i),
        .RXCTRL_IN                      (gt4_rxcharisk_i),
        .RXENMCOMMADET_OUT              (gt4_rxmcommaalignen_i),
        .RXENPCOMMADET_OUT              (gt4_rxpcommaalignen_i),
        .RX_ENCHAN_SYNC_OUT             (gt4_rxchbonden_i),
        .RX_CHANBOND_SEQ_IN             (gt4_rxchanbondseq_i),
        // Control Interface
        .INC_IN                         (gt4_inc_in_i),
        .INC_OUT                        (gt4_inc_out_i),
        .PATTERN_MATCHB_OUT             (gt4_matchn_i),
        .RESET_ON_ERROR_IN              (gt4_frame_check_reset_i),
        // System Interface
        .USER_CLK                       (gt4_rxusrclk2_i),
        .SYSTEM_RESET                   (gt4_rx_system_reset_c),
        .ERROR_COUNT_OUT                (gt4_error_count_i),
        .TRACK_DATA_OUT                 (gt4_track_data_i),
        //RR added
        .PCOMMA_EN_IN                   (RX_PCOMMA_EN),
        .MCOMMA_EN_IN                   (RX_MCOMMA_EN),
         .RXCHBOND_EN_IN                   (RX_CHBOND_EN)
    );


    assign gt5_frame_check_reset_i = (EXAMPLE_CONFIG_INDEPENDENT_LANES==0)?reset_on_data_error_i:gt5_matchn_i;

    // in the "independent lanes" configuration, each of the lanes looks for the unique start char and
    // in this case, the INC_IN port is tied off.
    // Else, the data checking is triggered by the "master" lane
    assign gt5_inc_in_i = (EXAMPLE_CONFIG_INDEPENDENT_LANES==0)?gt0_inc_out_i:1'b0;

    gtwizard_0_GT_FRAME_CHECK #
    (
         .RX_DATA_WIDTH       (32),
         .RXCTRL_WIDTH        (4),
         .COMMA_DOUBLE        (16'h04bc),
         .CHANBOND_SEQ_LEN    (2),
        .WORDS_IN_BRAM(EXAMPLE_WORDS_IN_BRAM),
         .START_OF_PACKET_CHAR (32'h060504bc)
    )
    gt5_frame_check
    (
        // GT Interface
        .RX_DATA_IN                     (gt5_rxdata_i),
        .RXCTRL_IN                      (gt5_rxcharisk_i),
        .RXENMCOMMADET_OUT              (gt5_rxmcommaalignen_i),
        .RXENPCOMMADET_OUT              (gt5_rxpcommaalignen_i),
        .RX_ENCHAN_SYNC_OUT             (gt5_rxchbonden_i),
        .RX_CHANBOND_SEQ_IN             (gt5_rxchanbondseq_i),
        // Control Interface
        .INC_IN                         (gt5_inc_in_i),
        .INC_OUT                        (gt5_inc_out_i),
        .PATTERN_MATCHB_OUT             (gt5_matchn_i),
        .RESET_ON_ERROR_IN              (gt5_frame_check_reset_i),
        // System Interface
        .USER_CLK                       (gt5_rxusrclk2_i),
        .SYSTEM_RESET                   (gt5_rx_system_reset_c),
        .ERROR_COUNT_OUT                (gt5_error_count_i),
        .TRACK_DATA_OUT                 (gt5_track_data_i),
        //RR added
        .PCOMMA_EN_IN                   (RX_PCOMMA_EN),
        .MCOMMA_EN_IN                   (RX_MCOMMA_EN),
         .RXCHBOND_EN_IN                   (RX_CHBOND_EN)
    );


    assign gt6_frame_check_reset_i = (EXAMPLE_CONFIG_INDEPENDENT_LANES==0)?reset_on_data_error_i:gt6_matchn_i;

    // in the "independent lanes" configuration, each of the lanes looks for the unique start char and
    // in this case, the INC_IN port is tied off.
    // Else, the data checking is triggered by the "master" lane
    assign gt6_inc_in_i = (EXAMPLE_CONFIG_INDEPENDENT_LANES==0)?gt0_inc_out_i:1'b0;

    gtwizard_0_GT_FRAME_CHECK #
    (
         .RX_DATA_WIDTH       (32),
         .RXCTRL_WIDTH        (4),
         .COMMA_DOUBLE        (16'h04bc),
         .CHANBOND_SEQ_LEN    (2),
        .WORDS_IN_BRAM(EXAMPLE_WORDS_IN_BRAM),
         .START_OF_PACKET_CHAR (32'h060504bc)
    )
    gt6_frame_check
    (
        // GT Interface
        .RX_DATA_IN                     (gt6_rxdata_i),
        .RXCTRL_IN                      (gt6_rxcharisk_i),
        .RXENMCOMMADET_OUT              (gt6_rxmcommaalignen_i),
        .RXENPCOMMADET_OUT              (gt6_rxpcommaalignen_i),
        .RX_ENCHAN_SYNC_OUT             (gt6_rxchbonden_i),
        .RX_CHANBOND_SEQ_IN             (gt6_rxchanbondseq_i),
        // Control Interface
        .INC_IN                         (gt6_inc_in_i),
        .INC_OUT                        (gt6_inc_out_i),
        .PATTERN_MATCHB_OUT             (gt6_matchn_i),
        .RESET_ON_ERROR_IN              (gt6_frame_check_reset_i),
        // System Interface
        .USER_CLK                       (gt6_rxusrclk2_i),
        .SYSTEM_RESET                   (gt6_rx_system_reset_c),
        .ERROR_COUNT_OUT                (gt6_error_count_i),
        .TRACK_DATA_OUT                 (gt6_track_data_i),
        //RR added
        .PCOMMA_EN_IN                   (RX_PCOMMA_EN),
        .MCOMMA_EN_IN                   (RX_MCOMMA_EN),
        .RXCHBOND_EN_IN                   (RX_CHBOND_EN)
    );


    assign gt7_frame_check_reset_i = (EXAMPLE_CONFIG_INDEPENDENT_LANES==0)?reset_on_data_error_i:gt7_matchn_i;

    // in the "independent lanes" configuration, each of the lanes looks for the unique start char and
    // in this case, the INC_IN port is tied off.
    // Else, the data checking is triggered by the "master" lane
    assign gt7_inc_in_i = (EXAMPLE_CONFIG_INDEPENDENT_LANES==0)?gt0_inc_out_i:1'b0;

    gtwizard_0_GT_FRAME_CHECK #
    (
         .RX_DATA_WIDTH       (32),
         .RXCTRL_WIDTH        (4),
         .COMMA_DOUBLE        (16'h04bc),
         .CHANBOND_SEQ_LEN    (2),
        .WORDS_IN_BRAM(EXAMPLE_WORDS_IN_BRAM),
         .START_OF_PACKET_CHAR (32'h060504bc)
    )
    gt7_frame_check
    (
        // GT Interface
        .RX_DATA_IN                     (gt7_rxdata_i),
        .RXCTRL_IN                      (gt7_rxcharisk_i),
        .RXENMCOMMADET_OUT              (gt7_rxmcommaalignen_i),
        .RXENPCOMMADET_OUT              (gt7_rxpcommaalignen_i),
        .RX_ENCHAN_SYNC_OUT             (gt7_rxchbonden_i),
        .RX_CHANBOND_SEQ_IN             (gt7_rxchanbondseq_i),
        // Control Interface
        .INC_IN                         (gt7_inc_in_i),
        .INC_OUT                        (gt7_inc_out_i),
        .PATTERN_MATCHB_OUT             (gt7_matchn_i),
        .RESET_ON_ERROR_IN              (gt7_frame_check_reset_i),
        // System Interface
        .USER_CLK                       (gt7_rxusrclk2_i),
        .SYSTEM_RESET                   (gt7_rx_system_reset_c),
        .ERROR_COUNT_OUT                (gt7_error_count_i),
        .TRACK_DATA_OUT                 (gt7_track_data_i),
        //RR added
        .PCOMMA_EN_IN                   (RX_PCOMMA_EN),
        .MCOMMA_EN_IN                   (RX_MCOMMA_EN),
         .RXCHBOND_EN_IN                   (RX_CHBOND_EN)
    );


    assign gt8_frame_check_reset_i = (EXAMPLE_CONFIG_INDEPENDENT_LANES==0)?reset_on_data_error_i:gt8_matchn_i;

    // in the "independent lanes" configuration, each of the lanes looks for the unique start char and
    // in this case, the INC_IN port is tied off.
    // Else, the data checking is triggered by the "master" lane
    assign gt8_inc_in_i = (EXAMPLE_CONFIG_INDEPENDENT_LANES==0)?gt0_inc_out_i:1'b0;

    gtwizard_0_GT_FRAME_CHECK #
    (
         .RX_DATA_WIDTH       (32),
         .RXCTRL_WIDTH        (4),
         .COMMA_DOUBLE        (16'h04bc),
         .CHANBOND_SEQ_LEN    (2),
        .WORDS_IN_BRAM(EXAMPLE_WORDS_IN_BRAM),
         .START_OF_PACKET_CHAR (32'h060504bc)
    )
    gt8_frame_check
    (
        // GT Interface
        .RX_DATA_IN                     (gt8_rxdata_i),
        .RXCTRL_IN                      (gt8_rxcharisk_i),
        .RXENMCOMMADET_OUT              (gt8_rxmcommaalignen_i),
        .RXENPCOMMADET_OUT              (gt8_rxpcommaalignen_i),
        .RX_ENCHAN_SYNC_OUT             (gt8_rxchbonden_i),
        .RX_CHANBOND_SEQ_IN             (gt8_rxchanbondseq_i),
        // Control Interface
        .INC_IN                         (gt8_inc_in_i),
        .INC_OUT                        (gt8_inc_out_i),
        .PATTERN_MATCHB_OUT             (gt8_matchn_i),
        .RESET_ON_ERROR_IN              (gt8_frame_check_reset_i),
        // System Interface
        .USER_CLK                       (gt8_rxusrclk2_i),
        .SYSTEM_RESET                   (gt8_rx_system_reset_c),
        .ERROR_COUNT_OUT                (gt8_error_count_i),
        .TRACK_DATA_OUT                 (gt8_track_data_i),
        //RR added
        .PCOMMA_EN_IN                   (RX_PCOMMA_EN),
        .MCOMMA_EN_IN                   (RX_MCOMMA_EN),
        .RXCHBOND_EN_IN                   (RX_CHBOND_EN)
    );


    assign gt9_frame_check_reset_i = (EXAMPLE_CONFIG_INDEPENDENT_LANES==0)?reset_on_data_error_i:gt9_matchn_i;

    // in the "independent lanes" configuration, each of the lanes looks for the unique start char and
    // in this case, the INC_IN port is tied off.
    // Else, the data checking is triggered by the "master" lane
    assign gt9_inc_in_i = (EXAMPLE_CONFIG_INDEPENDENT_LANES==0)?gt0_inc_out_i:1'b0;

    gtwizard_0_GT_FRAME_CHECK #
    (
         .RX_DATA_WIDTH       (32),
         .RXCTRL_WIDTH        (4),
         .COMMA_DOUBLE        (16'h04bc),
         .CHANBOND_SEQ_LEN    (2),
        .WORDS_IN_BRAM(EXAMPLE_WORDS_IN_BRAM),
         .START_OF_PACKET_CHAR (32'h060504bc)
    )
    gt9_frame_check
    (
        // GT Interface
        .RX_DATA_IN                     (gt9_rxdata_i),
        .RXCTRL_IN                      (gt9_rxcharisk_i),
        .RXENMCOMMADET_OUT              (gt9_rxmcommaalignen_i),
        .RXENPCOMMADET_OUT              (gt9_rxpcommaalignen_i),
        .RX_ENCHAN_SYNC_OUT             (gt9_rxchbonden_i),
        .RX_CHANBOND_SEQ_IN             (gt9_rxchanbondseq_i),
        // Control Interface
        .INC_IN                         (gt9_inc_in_i),
        .INC_OUT                        (gt9_inc_out_i),
        .PATTERN_MATCHB_OUT             (gt9_matchn_i),
        .RESET_ON_ERROR_IN              (gt9_frame_check_reset_i),
        // System Interface
        .USER_CLK                       (gt9_rxusrclk2_i),
        .SYSTEM_RESET                   (gt9_rx_system_reset_c),
        .ERROR_COUNT_OUT                (gt9_error_count_i),
        .TRACK_DATA_OUT                 (gt9_track_data_i),
        //RR added
        .PCOMMA_EN_IN                   (RX_PCOMMA_EN),
        .MCOMMA_EN_IN                   (RX_MCOMMA_EN),
        .RXCHBOND_EN_IN                   (RX_CHBOND_EN)
    );



    assign TRACK_DATA_OUT = track_data_out_i;

    assign track_data_out_i = 
                                gt0_track_data_i &
                                gt1_track_data_i &
                                gt2_track_data_i &
                                gt3_track_data_i &
                                gt4_track_data_i &
                                gt5_track_data_i &
                                gt6_track_data_i &
                                gt7_track_data_i &
                                gt8_track_data_i &
                                gt9_track_data_i ;


    // To support channel bonding, the pattern_match_n ports of each frame_check module
    // are ORed together. Each frame checker has a parameter called CONFIG_INDEPENDANT_LANES
    // which, when set to 0, causes the frame generators to use the ORed match signals. This 
    // causes the lanes to synchronize and check a combined sequence across multiple blocks. If
    // CONFIG_INDEPENDANT_LANES is 1, each the lane will self-syncronize and check for errors
    // seperately from the other frame checkers.

    assign reset_on_data_error_i = gt0_matchn_i |
                                         gt1_matchn_i |
                                         gt2_matchn_i |
                                         gt3_matchn_i |
                                         gt4_matchn_i |
                                         gt5_matchn_i |
                                         gt6_matchn_i |
                                         gt7_matchn_i |
                                         gt8_matchn_i |
                                         gt9_matchn_i ;
























//-------------------------------------------------------------------------------------
//-------------------------Debug Signals assignment--------------------

//------------ optional Ports assignments --------------
//assign  gt0_rxprbscntreset_i                 =  tied_to_ground_i;
//assign  gt0_rxprbssel_i                      =  0;
//assign  gt0_txchardispmode_i                 =  0;
//assign  gt0_txchardispval_i                  =  0;
assign  gt0_txprbsforceerr_i                 =  tied_to_ground_i;
//assign  gt0_txprbssel_i                      =  0;
//assign  gt1_rxprbscntreset_i                 =  tied_to_ground_i;
//assign  gt1_rxprbssel_i                      =  0;
//assign  gt1_txchardispmode_i                 =  0;
//assign  gt1_txchardispval_i                  =  0;
assign  gt1_txprbsforceerr_i                 =  tied_to_ground_i;
//assign  gt1_txprbssel_i                      =  0;
//assign  gt2_rxprbscntreset_i                 =  tied_to_ground_i;
//assign  gt2_rxprbssel_i                      =  0;
//assign  gt2_txchardispmode_i                 =  0;
//assign  gt2_txchardispval_i                  =  0;
assign  gt2_txprbsforceerr_i                 =  tied_to_ground_i;
////assign  gt2_txprbssel_i                      =  0;
//assign  gt3_rxprbscntreset_i                 =  tied_to_ground_i;
//assign  gt3_rxprbssel_i                      =  0;
//assign  gt3_txchardispmode_i                 =  0;
//assign  gt3_txchardispval_i                  =  0;
assign  gt3_txprbsforceerr_i                 =  tied_to_ground_i;
//assign  gt3_txprbssel_i                      =  0;
//assign  gt4_rxprbscntreset_i                 =  tied_to_ground_i;
//assign  gt4_rxprbssel_i                      =  0;
//assign  gt4_txchardispmode_i                 =  0;
//assign  gt4_txchardispval_i                  =  0;
assign  gt4_txprbsforceerr_i                 =  tied_to_ground_i;
//assign  gt4_txprbssel_i                      =  0;
//assign  gt5_rxprbscntreset_i                 =  tied_to_ground_i;
//assign  gt5_rxprbssel_i                      =  0;
//assign  gt5_txchardispmode_i                 =  0;
//assign  gt5_txchardispval_i                  =  0;
assign  gt5_txprbsforceerr_i                 =  tied_to_ground_i;
//assign  gt5_txprbssel_i                      =  0;
//assign  gt6_rxprbscntreset_i                 =  tied_to_ground_i;
//assign  gt6_rxprbssel_i                      =  0;
//assign  gt6_txchardispmode_i                 =  0;
//assign  gt6_txchardispval_i                  =  0;
assign  gt6_txprbsforceerr_i                 =  tied_to_ground_i;
//assign  gt6_txprbssel_i                      =  0;
//assign  gt7_rxprbscntreset_i                 =  tied_to_ground_i;
//assign  gt7_rxprbssel_i                      =  0;
//assign  gt7_txchardispmode_i                 =  0;
//assign  gt7_txchardispval_i                  =  0;
assign  gt7_txprbsforceerr_i                 =  tied_to_ground_i;
//assign  gt7_txprbssel_i                      =  0;
//assign  gt8_rxprbscntreset_i                 =  tied_to_ground_i;
//assign  gt8_rxprbssel_i                      =  0;
//assign  gt8_txchardispmode_i                 =  0;
//assign  gt8_txchardispval_i                  =  0;
assign  gt8_txprbsforceerr_i                 =  tied_to_ground_i;
//assign  gt8_txprbssel_i                      =  0;
//assign  gt9_rxprbscntreset_i                 =  tied_to_ground_i;
//assign  gt9_rxprbssel_i                      =  0;
//assign  gt9_txchardispmode_i                 =  0;
//assign  gt9_txchardispval_i                  =  0;
assign  gt9_txprbsforceerr_i                 =  tied_to_ground_i;
//assign  gt9_txprbssel_i                      =  0;
//------------------------------------------------------



    // assign resets for frame_gen modules
    assign common_tx_system_reset_n = gt0_txfsmresetdone_r2 
                         & gt1_txfsmresetdone_r2
                         & gt2_txfsmresetdone_r2
                         & gt3_txfsmresetdone_r2
                         & gt4_txfsmresetdone_r2
                         & gt5_txfsmresetdone_r2
                         & gt6_txfsmresetdone_r2
                         & gt7_txfsmresetdone_r2
                         & gt8_txfsmresetdone_r2
                         & gt9_txfsmresetdone_r2
                         ;
    assign  gt0_tx_system_reset_c = !common_tx_system_reset_n;
    assign  gt1_tx_system_reset_c = !common_tx_system_reset_n;
    assign  gt2_tx_system_reset_c = !common_tx_system_reset_n;
    assign  gt3_tx_system_reset_c = !common_tx_system_reset_n;
    assign  gt4_tx_system_reset_c = !common_tx_system_reset_n;
    assign  gt5_tx_system_reset_c = !common_tx_system_reset_n;
    assign  gt6_tx_system_reset_c = !common_tx_system_reset_n;
    assign  gt7_tx_system_reset_c = !common_tx_system_reset_n;
    assign  gt8_tx_system_reset_c = !common_tx_system_reset_n;
    assign  gt9_tx_system_reset_c = !common_tx_system_reset_n;

    // assign resets for frame_check modules
    assign common_rx_system_reset_n = gt0_rxresetdone_r3 
                         & gt1_rxresetdone_r3
                         & gt2_rxresetdone_r3
                         & gt3_rxresetdone_r3
                         & gt4_rxresetdone_r3
                         & gt5_rxresetdone_r3
                         & gt6_rxresetdone_r3
                         & gt7_rxresetdone_r3
                         & gt8_rxresetdone_r3
                         & gt9_rxresetdone_r3
                         ;
    assign  gt0_rx_system_reset_c = !common_rx_system_reset_n;
    assign  gt1_rx_system_reset_c = !common_rx_system_reset_n;
    assign  gt2_rx_system_reset_c = !common_rx_system_reset_n;
    assign  gt3_rx_system_reset_c = !common_rx_system_reset_n;
    assign  gt4_rx_system_reset_c = !common_rx_system_reset_n;
    assign  gt5_rx_system_reset_c = !common_rx_system_reset_n;
    assign  gt6_rx_system_reset_c = !common_rx_system_reset_n;
    assign  gt7_rx_system_reset_c = !common_rx_system_reset_n;
    assign  gt8_rx_system_reset_c = !common_rx_system_reset_n;
    assign  gt9_rx_system_reset_c = !common_rx_system_reset_n;

//-------------------------------------------------------------

//assign gt0_drpaddr_i = 9'd0;
//assign gt0_drpdi_i = 16'd0;
//assign gt0_drpen_i = 1'b0;
//assign gt0_drpwe_i = 1'b0;
//assign gt1_drpaddr_i = 9'd0;
//assign gt1_drpdi_i = 16'd0;
//assign gt1_drpen_i = 1'b0;
//assign gt1_drpwe_i = 1'b0;
//assign gt2_drpaddr_i = 9'd0;
//assign gt2_drpdi_i = 16'd0;
//assign gt2_drpen_i = 1'b0;
//assign gt2_drpwe_i = 1'b0;
//assign gt3_drpaddr_i = 9'd0;
//assign gt3_drpdi_i = 16'd0;
//assign gt3_drpen_i = 1'b0;
//assign gt3_drpwe_i = 1'b0;
//assign gt4_drpaddr_i = 9'd0;
//assign gt4_drpdi_i = 16'd0;
//assign gt4_drpen_i = 1'b0;
//assign gt4_drpwe_i = 1'b0;
//assign gt5_drpaddr_i = 9'd0;
//assign gt5_drpdi_i = 16'd0;
//assign gt5_drpen_i = 1'b0;
//assign gt5_drpwe_i = 1'b0;
//assign gt6_drpaddr_i = 9'd0;
//assign gt6_drpdi_i = 16'd0;
//assign gt6_drpen_i = 1'b0;
//assign gt6_drpwe_i = 1'b0;
//assign gt7_drpaddr_i = 9'd0;
//assign gt7_drpdi_i = 16'd0;
//assign gt7_drpen_i = 1'b0;
//assign gt7_drpwe_i = 1'b0;
//assign gt8_drpaddr_i = 9'd0;
//assign gt8_drpdi_i = 16'd0;
//assign gt8_drpen_i = 1'b0;
//assign gt8_drpwe_i = 1'b0;
//assign gt9_drpaddr_i = 9'd0;
//assign gt9_drpdi_i = 16'd0;
//assign gt9_drpen_i = 1'b0;
//assign gt9_drpwe_i = 1'b0;


assign gt0_txprbssel_i = TX_PRBSEL;
assign gt1_txprbssel_i = TX_PRBSEL;
assign gt2_txprbssel_i = TX_PRBSEL;
assign gt3_txprbssel_i = TX_PRBSEL;
assign gt4_txprbssel_i = TX_PRBSEL;
assign gt5_txprbssel_i = TX_PRBSEL;
assign gt6_txprbssel_i = TX_PRBSEL;
assign gt7_txprbssel_i = TX_PRBSEL;
assign gt8_txprbssel_i = TX_PRBSEL;
assign gt9_txprbssel_i = TX_PRBSEL;

assign gt0_rxprbssel_i = RX_PRBSEL;
assign gt1_rxprbssel_i = RX_PRBSEL;
assign gt2_rxprbssel_i = RX_PRBSEL;
assign gt3_rxprbssel_i = RX_PRBSEL;
assign gt4_rxprbssel_i = RX_PRBSEL;
assign gt5_rxprbssel_i = RX_PRBSEL;
assign gt6_rxprbssel_i = RX_PRBSEL;
assign gt7_rxprbssel_i = RX_PRBSEL;
assign gt8_rxprbssel_i = RX_PRBSEL;
assign gt9_rxprbssel_i = RX_PRBSEL;

assign soft_reset_i = RESET;

assign gt0_rxprbscntreset_i = PRBSCTR_RESET;
assign gt1_rxprbscntreset_i = PRBSCTR_RESET;
assign gt2_rxprbscntreset_i = PRBSCTR_RESET;
assign gt3_rxprbscntreset_i = PRBSCTR_RESET;
assign gt4_rxprbscntreset_i = PRBSCTR_RESET;
assign gt5_rxprbscntreset_i = PRBSCTR_RESET;
assign gt6_rxprbscntreset_i = PRBSCTR_RESET;
assign gt7_rxprbscntreset_i = PRBSCTR_RESET;
assign gt8_rxprbscntreset_i = PRBSCTR_RESET;
assign gt9_rxprbscntreset_i = PRBSCTR_RESET;

assign gt0_txprbsforceerr_i = 0;
assign gt1_txprbsforceerr_i = 0;
assign gt2_txprbsforceerr_i = 0;
assign gt3_txprbsforceerr_i = 0;
assign gt4_txprbsforceerr_i = 0;
assign gt5_txprbsforceerr_i = 0;
assign gt6_txprbsforceerr_i = 0;
assign gt7_txprbsforceerr_i = 0;
assign gt8_txprbsforceerr_i = 0;
assign gt9_txprbsforceerr_i = 0;

assign rx8b10b_en = RX_8B10BEN;
assign tx8b10b_en = TX_8B10BEN;

assign TX_USR_CLK = gt0_txusrclk2_i;

//(*KEEP = "TRUE"*) wire debug_adc_clock;

//   BUFG ADC_BUFG (
//      .O(debug_adc_clock), // 1-bit output: Clock output
//      .I(gt0_rxusrclk2_i)  // 1-bit input: Clock input
//   );
//assign RX_USR_CLK = debug_adc_clock;
assign RX_USR_CLK = gt0_txusrclk2_i;
//////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////
//Implement the Tengbe interface
//Make a 240-bit-wide bus containing all of the rxdata
//v2.0 320 bits wide for all eight bits
//Name the busses according to the ADC function
wire [39:0] rxdataX0_full;
wire [39:0] rxdataX1_full;
wire [39:0] rxdataX2_full;
wire [39:0] rxdataXV_full;

wire [39:0] rxdataY0_full;
wire [39:0] rxdataY1_full;
wire [39:0] rxdataY2_full;
wire [39:0] rxdataYV_full;

wire [7:0] all_prbs_flags;
if (WHICH_ADC == 1) begin
//Must assign the GTH receivers according to the pinout of the ADC channel, to make the
//   PLL clock distribution and the channel bonding work.  Use ADC-channel-specific pinout in the ucf file
//   (would be good to pass the parameter to the ucf file, but I don't know how to do that) 
assign rxdataX0_full = {gt3_rxdisperr_i[3],gt3_rxcharisk_i[3],gt3_rxdata_i[31:24],
                        gt3_rxdisperr_i[2],gt3_rxcharisk_i[2],gt3_rxdata_i[23:16],
                        gt3_rxdisperr_i[1],gt3_rxcharisk_i[1],gt3_rxdata_i[15:8],
                        gt3_rxdisperr_i[0],gt3_rxcharisk_i[0],gt3_rxdata_i[7:0]};
					
assign rxdataX1_full = {gt5_rxdisperr_i[3],gt5_rxcharisk_i[3],gt5_rxdata_i[31:24],
                        gt5_rxdisperr_i[2],gt5_rxcharisk_i[2],gt5_rxdata_i[23:16],
                        gt5_rxdisperr_i[1],gt5_rxcharisk_i[1],gt5_rxdata_i[15:8],
                        gt5_rxdisperr_i[0],gt5_rxcharisk_i[0],gt5_rxdata_i[7:0]};
                                            
assign rxdataX2_full = {gt0_rxdisperr_i[3],gt0_rxcharisk_i[3],gt0_rxdata_i[31:24],
                        gt0_rxdisperr_i[2],gt0_rxcharisk_i[2],gt0_rxdata_i[23:16],
                        gt0_rxdisperr_i[1],gt0_rxcharisk_i[1],gt0_rxdata_i[15:8],
                        gt0_rxdisperr_i[0],gt0_rxcharisk_i[0],gt0_rxdata_i[7:0]};
                                                
assign rxdataXV_full = {gt7_rxdisperr_i[3],gt7_rxcharisk_i[3],gt7_rxdata_i[31:24],
                        gt7_rxdisperr_i[2],gt7_rxcharisk_i[2],gt7_rxdata_i[23:16],
                        gt7_rxdisperr_i[1],gt7_rxcharisk_i[1],gt7_rxdata_i[15:8],
                        gt7_rxdisperr_i[0],gt7_rxcharisk_i[0],gt7_rxdata_i[7:0]};
                                                                    
assign rxdataY0_full = {gt4_rxdisperr_i[3],gt4_rxcharisk_i[3],gt4_rxdata_i[31:24],
                        gt4_rxdisperr_i[2],gt4_rxcharisk_i[2],gt4_rxdata_i[23:16],
                        gt4_rxdisperr_i[1],gt4_rxcharisk_i[1],gt4_rxdata_i[15:8],
                        gt4_rxdisperr_i[0],gt4_rxcharisk_i[0],gt4_rxdata_i[7:0]};
                                                                                            
assign rxdataY1_full = {gt9_rxdisperr_i[3],gt9_rxcharisk_i[3],gt9_rxdata_i[31:24],
                        gt9_rxdisperr_i[2],gt9_rxcharisk_i[2],gt9_rxdata_i[23:16],
                        gt9_rxdisperr_i[1],gt9_rxcharisk_i[1],gt9_rxdata_i[15:8],
                        gt9_rxdisperr_i[0],gt9_rxcharisk_i[0],gt9_rxdata_i[7:0]};
                                                                                                                    
assign rxdataY2_full = {gt8_rxdisperr_i[3],gt8_rxcharisk_i[3],gt8_rxdata_i[31:24],
                        gt8_rxdisperr_i[2],gt8_rxcharisk_i[2],gt8_rxdata_i[23:16],
                        gt8_rxdisperr_i[1],gt8_rxcharisk_i[1],gt8_rxdata_i[15:8],
                        gt8_rxdisperr_i[0],gt8_rxcharisk_i[0],gt8_rxdata_i[7:0]};
                        
assign rxdataYV_full = {gt1_rxdisperr_i[3],gt1_rxcharisk_i[3],gt1_rxdata_i[31:24],
                        gt1_rxdisperr_i[2],gt1_rxcharisk_i[2],gt1_rxdata_i[23:16],
                        gt1_rxdisperr_i[1],gt1_rxcharisk_i[1],gt1_rxdata_i[15:8],
                        gt1_rxdisperr_i[0],gt1_rxcharisk_i[0],gt1_rxdata_i[7:0]};
assign all_prbs_flags = {gt1_rxprbserr_i,gt8_rxprbserr_i,gt9_rxprbserr_i,gt4_rxprbserr_i,gt7_rxprbserr_i,gt0_rxprbserr_i,gt5_rxprbserr_i,gt3_rxprbserr_i};
end
else begin
//(WHICH_ADC = 2)
assign rxdataX0_full = {gt1_rxdisperr_i[3],gt1_rxcharisk_i[3],gt1_rxdata_i[31:24],
                        gt1_rxdisperr_i[2],gt1_rxcharisk_i[2],gt1_rxdata_i[23:16],
                        gt1_rxdisperr_i[1],gt1_rxcharisk_i[1],gt1_rxdata_i[15:8],
                        gt1_rxdisperr_i[0],gt1_rxcharisk_i[0],gt1_rxdata_i[7:0]};
					
assign rxdataX1_full = {gt5_rxdisperr_i[3],gt5_rxcharisk_i[3],gt5_rxdata_i[31:24],
                        gt5_rxdisperr_i[2],gt5_rxcharisk_i[2],gt5_rxdata_i[23:16],
                        gt5_rxdisperr_i[1],gt5_rxcharisk_i[1],gt5_rxdata_i[15:8],
                        gt5_rxdisperr_i[0],gt5_rxcharisk_i[0],gt5_rxdata_i[7:0]};
                                            
assign rxdataX2_full = {gt9_rxdisperr_i[3],gt9_rxcharisk_i[3],gt9_rxdata_i[31:24],
                        gt9_rxdisperr_i[2],gt9_rxcharisk_i[2],gt9_rxdata_i[23:16],
                        gt9_rxdisperr_i[1],gt9_rxcharisk_i[1],gt9_rxdata_i[15:8],
                        gt9_rxdisperr_i[0],gt9_rxcharisk_i[0],gt9_rxdata_i[7:0]};
                                                
assign rxdataXV_full = {gt7_rxdisperr_i[3],gt7_rxcharisk_i[3],gt7_rxdata_i[31:24],
                        gt7_rxdisperr_i[2],gt7_rxcharisk_i[2],gt7_rxdata_i[23:16],
                        gt7_rxdisperr_i[1],gt7_rxcharisk_i[1],gt7_rxdata_i[15:8],
                        gt7_rxdisperr_i[0],gt7_rxcharisk_i[0],gt7_rxdata_i[7:0]};
                                                                    
assign rxdataY0_full = {gt4_rxdisperr_i[3],gt4_rxcharisk_i[3],gt4_rxdata_i[31:24],
                        gt4_rxdisperr_i[2],gt4_rxcharisk_i[2],gt4_rxdata_i[23:16],
                        gt4_rxdisperr_i[1],gt4_rxcharisk_i[1],gt4_rxdata_i[15:8],
                        gt4_rxdisperr_i[0],gt4_rxcharisk_i[0],gt4_rxdata_i[7:0]};
                                                                                            
assign rxdataY1_full = {gt0_rxdisperr_i[3],gt0_rxcharisk_i[3],gt0_rxdata_i[31:24],
                        gt0_rxdisperr_i[2],gt0_rxcharisk_i[2],gt0_rxdata_i[23:16],
                        gt0_rxdisperr_i[1],gt0_rxcharisk_i[1],gt0_rxdata_i[15:8],
                        gt0_rxdisperr_i[0],gt0_rxcharisk_i[0],gt0_rxdata_i[7:0]};
                                                                                                                    
assign rxdataY2_full = {gt8_rxdisperr_i[3],gt8_rxcharisk_i[3],gt8_rxdata_i[31:24],
                        gt8_rxdisperr_i[2],gt8_rxcharisk_i[2],gt8_rxdata_i[23:16],
                        gt8_rxdisperr_i[1],gt8_rxcharisk_i[1],gt8_rxdata_i[15:8],
                        gt8_rxdisperr_i[0],gt8_rxcharisk_i[0],gt8_rxdata_i[7:0]};
                        
assign rxdataYV_full = {gt3_rxdisperr_i[3],gt3_rxcharisk_i[3],gt3_rxdata_i[31:24],
                        gt3_rxdisperr_i[2],gt3_rxcharisk_i[2],gt3_rxdata_i[23:16],
                        gt3_rxdisperr_i[1],gt3_rxcharisk_i[1],gt3_rxdata_i[15:8],
                        gt3_rxdisperr_i[0],gt3_rxcharisk_i[0],gt3_rxdata_i[7:0]};
assign all_prbs_flags = {gt3_rxprbserr_i,gt8_rxprbserr_i,gt0_rxprbserr_i,gt4_rxprbserr_i,gt7_rxprbserr_i,gt9_rxprbserr_i,gt5_rxprbserr_i,gt1_rxprbserr_i};

end
//The modulation synchronization module.  Turn this on to align the 40-bit modulation word with the
//  data coming from gt0
(*DONT_TOUCH = "TRUE"*)wire [39:0] modulation;
modulation_gen MG(
    .clk(RX_USR_CLK),
    .data_in(rxdataX2_full),
    .modulation_out(modulation),
    .MOD_SEL(MOD_SEL),
    .enable(MODULATION_ALIGN)
    );
wire [39:0] rxdataX0_demod = MODULATION_ON ? modulation ^ rxdataX0_full : rxdataX0_full;
wire [39:0] rxdataX1_demod = MODULATION_ON ? modulation ^ rxdataX1_full : rxdataX1_full;
wire [39:0] rxdataX2_demod = MODULATION_ON ? modulation ^ rxdataX2_full : rxdataX2_full;
wire [39:0] rxdataXV_demod = MODULATION_ON ? modulation ^ rxdataXV_full : rxdataXV_full;
wire [39:0] rxdataY0_demod = MODULATION_ON ? modulation ^ rxdataY0_full : rxdataY0_full;
wire [39:0] rxdataY1_demod = MODULATION_ON ? modulation ^ rxdataY1_full : rxdataY1_full;
wire [39:0] rxdataY2_demod = MODULATION_ON ? modulation ^ rxdataY2_full : rxdataY2_full;
wire [39:0] rxdataYV_demod = MODULATION_ON ? modulation ^ rxdataYV_full : rxdataYV_full;

//wire [245:0] all_rxdata = {gt8_rxprbserr_i,gt9_rxprbserr_i,gt4_rxprbserr_i,gt0_rxprbserr_i,gt5_rxprbserr_i,gt3_rxprbserr_i,
//                                rxdataY2_demod, rxdataY1_demod, rxdataY0_demod, rxdataX2_demod, rxdataX1_demod, rxdataX0_demod};
//v2.0
//wire [327:0] all_rxdata = {gt1_rxprbserr_i,gt8_rxprbserr_i,gt9_rxprbserr_i,gt4_rxprbserr_i,gt7_rxprbserr_i,gt0_rxprbserr_i,gt5_rxprbserr_i,gt3_rxprbserr_i,
//                           rxdataYV_demod, rxdataY2_demod, rxdataY1_demod, rxdataY0_demod, rxdataXV_demod, rxdataX2_demod, rxdataX1_demod, rxdataX0_demod};
wire [327:0] all_rxdata = {all_prbs_flags, rxdataYV_demod, rxdataY2_demod, rxdataY1_demod, rxdataY0_demod, rxdataXV_demod, rxdataX2_demod, rxdataX1_demod, rxdataX0_demod};

assign dout = all_rxdata;

//Implement two low-rate LED flashers to indicate clocks are going
//RX_USR_CLK is at 250MHz; refclk is at 156.25MHz.  divide each by 2^^26
reg [12:0] flash_count1 = 0;
reg [12:0] flash_count2 = 0;
reg [12:0] flash_count3 = 0;
reg [12:0] flash_count4 = 0;
always @ (posedge RX_USR_CLK) begin
    flash_count1 <= flash_count1 + 1;
    if (&flash_count1) flash_count2 <= flash_count2 + 1;
end

assign FLASH1 = flash_count2[12];
assign FLASH2 = flash_count2[12];

endmodule
    
